
Final_Project.elf:     file format elf32-littlenios2
Final_Project.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x10000230

Program Header:
    LOAD off    0x00001000 vaddr 0x10000000 paddr 0x10000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x10000020 paddr 0x10000020 align 2**12
         filesz 0x0001cdb4 memsz 0x0001cdb4 flags r-x
    LOAD off    0x0001ddd4 vaddr 0x1001cdd4 paddr 0x1001e8cc align 2**12
         filesz 0x00001af8 memsz 0x00001af8 flags rw-
    LOAD off    0x000203c4 vaddr 0x100203c4 paddr 0x100203c4 align 2**12
         filesz 0x00000000 memsz 0x00000180 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  10000000  10000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000210  10000020  10000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0001bcd8  10000230  10000230  00001230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000ecc  1001bf08  1001bf08  0001cf08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001af8  1001cdd4  1001e8cc  0001ddd4  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000180  100203c4  100203c4  000203c4  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00000000  00000000  0001f8cc  2**0
                  CONTENTS
  7 .sdram        00000000  10020544  10020544  0001f8cc  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  0001f8cc  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 000013e0  00000000  00000000  0001f8f0  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   000340d3  00000000  00000000  00020cd0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 0000cd2b  00000000  00000000  00054da3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   000112a4  00000000  00000000  00061ace  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00003048  00000000  00000000  00072d74  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    000048b3  00000000  00000000  00075dbc  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    000250ab  00000000  00000000  0007a66f  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000040  00000000  00000000  0009f71c  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00002170  00000000  00000000  0009f760  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  000a58b2  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000c  00000000  00000000  000a58b5  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  000a58c1  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  000a58c2  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  000a58c3  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  000a58c7  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  000a58cb  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   0000000b  00000000  00000000  000a58cf  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    0000000b  00000000  00000000  000a58da  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   0000000b  00000000  00000000  000a58e5  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 00000008  00000000  00000000  000a58f0  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 0000001e  00000000  00000000  000a58f8  2**0
                  CONTENTS, READONLY
 30 .jdi          00005256  00000000  00000000  000a5916  2**0
                  CONTENTS, READONLY
 31 .sopcinfo     0012366e  00000000  00000000  000aab6c  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
10000000 l    d  .entry	00000000 .entry
10000020 l    d  .exceptions	00000000 .exceptions
10000230 l    d  .text	00000000 .text
1001bf08 l    d  .rodata	00000000 .rodata
1001cdd4 l    d  .rwdata	00000000 .rwdata
100203c4 l    d  .bss	00000000 .bss
00000000 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
10020544 l    d  .sdram	00000000 .sdram
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../Final_Project_bsp//obj/HAL/src/crt0.o
10000268 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 io_handler.c
00000000 l    df *ABS*	00000000 main.c
100203c4 l     O .bss	00000002 ctl_reg.3717
100203c6 l     O .bss	00000002 no_device.3718
00000000 l    df *ABS*	00000000 usb.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 scanf.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
1001c6ce l     O .rodata	00000010 zeroes.4404
100062c0 l     F .text	000000bc __sbprintf
1001c6de l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 vfscanf.c
1001c6f6 l     O .rodata	00000022 basefix.4359
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 ctype_.c
1001c819 l     O .rodata	00000180 _ctype_b
00000000 l    df *ABS*	00000000 dtoa.c
10007f2c l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
10009a84 l     F .text	00000008 __fp_unlock
10009a98 l     F .text	0000019c __sinit.part.1
10009c34 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 fread.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
1001d1dc l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 iswspace.c
00000000 l    df *ABS*	00000000 locale.c
1001d620 l     O .rwdata	00000020 lc_ctype_charset
1001d600 l     O .rwdata	00000020 lc_message_charset
1001d640 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mbrtowc.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
1001c9bc l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 refill.c
1000cc48 l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sccl.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strtod.c
1000d260 l     F .text	00000064 sulp
1001caf0 l     O .rodata	00000014 fpinan.2773
1001cb04 l     O .rodata	00000014 fpi.2737
1001cb18 l     O .rodata	00000028 tinytens
00000000 l    df *ABS*	00000000 strtol.c
00000000 l    df *ABS*	00000000 strtoll_r.c
00000000 l    df *ABS*	00000000 strtoul.c
00000000 l    df *ABS*	00000000 strtoull_r.c
00000000 l    df *ABS*	00000000 vfprintf.c
1001cb40 l     O .rodata	00000010 zeroes.4389
1001cb50 l     O .rodata	00000010 blanks.4388
00000000 l    df *ABS*	00000000 ungetc.c
00000000 l    df *ABS*	00000000 vfprintf.c
10011a28 l     F .text	000000fc __sprint_r.part.0
1001cb60 l     O .rodata	00000010 zeroes.4349
10013064 l     F .text	000000bc __sbprintf
1001cb70 l     O .rodata	00000010 blanks.4348
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
10013770 l     F .text	00000100 rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
1001cc80 l     O .rodata	00000010 zeroes.4333
1001cc90 l     O .rodata	00000010 blanks.4332
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 eqsf2.c
00000000 l    df *ABS*	00000000 gesf2.c
00000000 l    df *ABS*	00000000 lesf2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
100195e0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
100196f4 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
10019720 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
10019814 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
100198fc l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
100199e8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
10019bc4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
1001e8bc l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
10019e68 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
10019fa4 l     F .text	00000034 alt_dev_reg
1001d820 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
1001a294 l     F .text	0000020c altera_avalon_jtag_uart_irq
1001a4a0 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
1001aad8 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
1001ae70 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
1001b2d0 l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
1001b430 l     F .text	0000003c alt_get_errno
1001b46c l     F .text	000000ec alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
100203fc g     O .bss	00000004 alt_instruction_exception_handler
10000744 g     F .text	0000002c hasLeftDoor
10003d08 g     F .text	00000018 putchar
1000c404 g     F .text	00000074 _mprec_log10
10000690 g     F .text	0000005c rear
1000c4f0 g     F .text	0000008c __any_on
1001431c g     F .text	00000054 _isatty_r
1001c9c8 g     O .rodata	00000028 __mprec_tinytens
10019b00 g     F .text	0000007c alt_main
10003d20 g     F .text	000000c0 _puts_r
10020444 g     O .bss	00000100 alt_irq
10014370 g     F .text	00000060 _lseek_r
1001e8cc g       *ABS*	00000000 __flash_rwdata_start
10017e10 g     F .text	00000088 .hidden __eqdf2
10000c9c g     F .text	00000040 checkRightOOB
10020544 g       *ABS*	00000000 __alt_heap_start
10003cc4 g     F .text	0000003c printf
10015a70 g     F .text	0000009c _wcrtomb_r
1000d120 g     F .text	0000005c __sseek
10009de4 g     F .text	00000010 __sinit
10013120 g     F .text	00000140 __swbuf_r
100006ec g     F .text	0000002c hasTopDoor
1000ab58 g     F .text	0000007c _setlocale_r
10009c3c g     F .text	00000078 __sfmoreglue
10011a10 g     F .text	00000018 ungetc
10019ba0 g     F .text	00000024 __malloc_unlock
1000d2c4 g     F .text	000015e4 _strtod_r
10003184 g     F .text	00000080 UsbGetRetryCnt
1000b240 g     F .text	0000015c memmove
1000026c g     F .text	00000088 IO_init
10009dcc g     F .text	00000018 _cleanup
10000cdc g     F .text	0000059c generateDungeon
1000b4c4 g     F .text	000000a8 _Balloc
10017e98 g     F .text	000000dc .hidden __gtdf2
1001b858 g     F .text	00000024 altera_nios2_gen2_irq_init
10000000 g     F .entry	0000000c __reset
10000020 g       *ABS*	00000000 __flash_exceptions_start
10013714 g     F .text	0000005c _fstat_r
100203d4 g     O .bss	00000004 errno
10007d70 g     F .text	0000001c __svfscanf
1000d09c g     F .text	00000008 __seofread
100146d0 g     F .text	000013a0 ___svfiprintf_internal_r
100203e8 g     O .bss	00000004 alt_argv
10026880 g       *ABS*	00000000 _gp
10019e38 g     F .text	00000030 usleep
1001d6a0 g     O .rwdata	00000180 alt_fd_list
10003d00 g     F .text	00000008 _putchar_r
1001b87c g     F .text	00000090 alt_find_dev
1000b0f8 g     F .text	00000148 memcpy
100140c0 g     F .text	0000025c __hexnan
10009a8c g     F .text	0000000c _cleanup_r
10019250 g     F .text	000000dc .hidden __floatsidf
1001b3b4 g     F .text	0000007c alt_io_redirect
10017f74 g     F .text	000000f4 .hidden __ltdf2
1001bf08 g       *ABS*	00000000 __DTOR_END__
10003de0 g     F .text	00000014 puts
1001bad8 g     F .text	0000009c alt_exception_cause_generated_bad_addr
1000ae9c g     F .text	000000d8 mbrtowc
1000ce38 g     F .text	00000074 __fpclassifyd
10007d8c g     F .text	0000004c _vfscanf_r
1000c360 g     F .text	000000a4 __ratio
10013048 g     F .text	0000001c __vfiprintf_internal
1001a698 g     F .text	0000021c altera_avalon_jtag_uart_read
10003460 g     F .text	00000014 malloc
10003c94 g     F .text	00000030 _printf_r
00000000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
1000337c g     F .text	00000064 .hidden __udivsi3
10019850 g     F .text	000000ac isatty
1000ab28 g     F .text	00000030 iswspace
1001ca18 g     O .rodata	000000c8 __mprec_tens
1000abd4 g     F .text	0000000c __locale_charset
10016acc g     F .text	000000c8 .hidden __lesf2
10015d64 g     F .text	00000074 .hidden __fixunsdfsi
100203d0 g     O .bss	00000004 __malloc_top_pad
10002810 g     F .text	00000268 UsbGetConfigDesc2
1000f1b0 g     F .text	0000001c strtoul
1001e898 g     O .rwdata	00000004 __mb_cur_max
1000ac04 g     F .text	0000000c _localeconv_r
1000f1cc g     F .text	00000320 _strtoull_r
10000478 g     F .text	0000003c isFull
1000b8f8 g     F .text	0000003c __i2b
1000a4d8 g     F .text	000004c8 __sfvwrite_r
10003e70 g     F .text	00000054 _sbrk_r
100143d0 g     F .text	00000060 _read_r
1001e8b4 g     O .rwdata	00000004 alt_max_fd
10013408 g     F .text	000000f0 _fclose_r
10009a54 g     F .text	00000030 fflush
100203cc g     O .bss	00000004 __malloc_max_sbrked_mem
10020428 g     O .bss	00000019 rooms
10016b94 g     F .text	000008ac .hidden __adddf3
10016998 g     F .text	00000078 .hidden __nesf2
1000c108 g     F .text	0000010c __b2d
100163d4 g     F .text	000005c4 .hidden __umoddi3
10019a24 g     F .text	000000dc lseek
1001e890 g     O .rwdata	00000004 _global_impure_ptr
1000c6e4 g     F .text	00000564 _realloc_r
10020544 g       *ABS*	00000000 __bss_end
1001b1e0 g     F .text	000000f0 alt_iic_isr_register
1001b750 g     F .text	00000108 alt_tick
1001cb80 g     O .rodata	00000100 __hexdig
10015dd8 g     F .text	000005fc .hidden __udivdi3
10013670 g     F .text	00000024 _fputwc_r
1001c9f0 g     O .rodata	00000028 __mprec_bigtens
1000b6dc g     F .text	00000104 __s2b
1001932c g     F .text	000000a8 .hidden __floatunsidf
1000be48 g     F .text	00000060 __mcmp
10002260 g     F .text	00000100 UsbSetAddress
10009e04 g     F .text	00000018 __fp_lock_all
1001b194 g     F .text	0000004c alt_ic_irq_enabled
1001b6b4 g     F .text	0000009c alt_alarm_stop
10000c60 g     F .text	0000003c checkLeftOOB
1000ec18 g     F .text	0000001c strtol
100203f0 g     O .bss	00000004 alt_irq_active
100000fc g     F .exceptions	000000d4 alt_irq_handler
1001d678 g     O .rwdata	00000028 alt_dev_null
10000634 g     F .text	0000005c front
10000be4 g     F .text	0000003c checkTopOOB
1001ae50 g     F .text	00000020 alt_dcache_flush_all
1000b7e0 g     F .text	00000068 __hi0bits
10000370 g     F .text	00000074 IO_read
100191d0 g     F .text	00000080 .hidden __fixdfsi
1000e8a8 g     F .text	00000018 strtod
1001e8cc g       *ABS*	00000000 __ram_rwdata_end
1001e8ac g     O .rwdata	00000008 alt_dev_list
10019ea4 g     F .text	00000100 write
1000c57c g     F .text	000000a0 _putc_r
10016a10 g     F .text	000000bc .hidden __gtsf2
1001cdd4 g       *ABS*	00000000 __ram_rodata_end
1001975c g     F .text	000000b8 fstat
10017f74 g     F .text	000000f4 .hidden __ledf2
10003204 g     F .text	00000080 UsbPrintMem
1000bbc0 g     F .text	00000140 __pow5mult
10011b3c g     F .text	0000150c ___vfiprintf_internal_r
100203e0 g     O .bss	00000004 __nlocale_changed
100033e0 g     F .text	00000058 .hidden __umodsi3
10003f00 g     F .text	00000030 _scanf_r
10020544 g       *ABS*	00000000 end
1001a1d4 g     F .text	000000c0 altera_avalon_jtag_uart_init
100001d0 g     F .exceptions	00000060 alt_instruction_exception_entry
1001bf08 g       *ABS*	00000000 __CTOR_LIST__
18000000 g       *ABS*	00000000 __alt_stack_pointer
1001ab50 g     F .text	0000007c alt_avalon_timer_sc_init
1001957c g     F .text	00000064 .hidden __clzsi2
1001a8b4 g     F .text	00000224 altera_avalon_jtag_uart_write
10009df4 g     F .text	00000004 __sfp_lock_acquire
1000b014 g     F .text	000000e4 memchr
10003fc8 g     F .text	000022dc ___vfprintf_internal_r
1000cf84 g     F .text	00000058 _sprintf_r
10002b78 g     F .text	00000100 UsbClassRequest
1000a1c8 g     F .text	00000310 _free_r
100003e4 g     F .text	00000094 createQueue
1000abe0 g     F .text	00000010 __locale_mb_cur_max
1001e880 g     O .rwdata	00000001 numOfRooms
1001bd54 g     F .text	00000180 __call_exitprocs
100203dc g     O .bss	00000004 __mlocale_changed
1001e884 g     O .rwdata	00000004 __malloc_sbrk_base
10000230 g     F .text	0000003c _start
100203f4 g     O .bss	00000004 _alt_tick_rate
1000ec34 g     F .text	00000304 _strtoll_r
10003e0c g     F .text	00000064 rand
1000bd00 g     F .text	00000148 __lshift
100203f8 g     O .bss	00000004 _alt_nticks
10019c00 g     F .text	00000104 read
1001a010 g     F .text	00000060 alt_sys_init
10014500 g     F .text	000001d0 __ssprint_r
1001bc3c g     F .text	00000118 __register_exitproc
10014430 g     F .text	000000d0 strncmp
1000b934 g     F .text	0000028c __multiply
1001a540 g     F .text	00000068 altera_avalon_jtag_uart_close
10003438 g     F .text	00000028 .hidden __mulsi3
1001cdd4 g       *ABS*	00000000 __ram_rwdata_start
1001bf08 g       *ABS*	00000000 __ram_rodata_start
10020400 g     O .bss	00000028 __malloc_current_mallinfo
10016998 g     F .text	00000078 .hidden __eqsf2
1000c214 g     F .text	0000014c __d2b
10002360 g     F .text	00000148 UsbGetDeviceDesc1
1001a070 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
1000ef38 g     F .text	00000278 _strtoul_r
1001ba14 g     F .text	000000c4 alt_get_fd
1001acf8 g     F .text	00000158 alt_busy_sleep
100132d8 g     F .text	00000054 _close_r
1001bbc0 g     F .text	0000007c memcmp
1001a130 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
10020544 g       *ABS*	00000000 __alt_stack_base
1001a180 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
10007dd8 g     F .text	00000154 __swsetup_r
10017440 g     F .text	000009d0 .hidden __divdf3
10009cb4 g     F .text	00000118 __sfp
1000c478 g     F .text	00000078 __copybits
1001cdd4 g     O .rwdata	00000408 __malloc_av_
10009e00 g     F .text	00000004 __sinit_lock_release
10018068 g     F .text	0000086c .hidden __muldf3
1000d048 g     F .text	00000054 __sread
1000a070 g     F .text	00000034 fread
10003100 g     F .text	00000084 UsbWaitTDListDone
1001b90c g     F .text	00000108 alt_find_file
1001aeac g     F .text	000000a4 alt_dev_llist_insert
10019b7c g     F .text	00000024 __malloc_lock
10019d88 g     F .text	000000b0 sbrk
1000f4ec g     F .text	000022bc ___svfprintf_internal_r
100099f8 g     F .text	0000005c _fflush_r
1001332c g     F .text	000000dc _calloc_r
100203c4 g       *ABS*	00000000 __bss_start
1000b39c g     F .text	00000128 memset
10001278 g     F .text	00000e98 main
100203ec g     O .bss	00000004 alt_envp
100203c8 g     O .bss	00000004 __malloc_max_total_mem
1001a0d0 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
10002a78 g     F .text	00000100 UsbSetConfig
10013260 g     F .text	00000018 __swbuf
10003df4 g     F .text	00000018 srand
10016acc g     F .text	000000c8 .hidden __ltsf2
10009e34 g     F .text	0000023c _fread_r
1000d17c g     F .text	00000008 __sclose
18000000 g       *ABS*	00000000 __alt_heap_limit
100134f8 g     F .text	00000014 fclose
1000e9c0 g     F .text	00000258 _strtol_r
100193d4 g     F .text	000001a8 .hidden __truncdfsf2
10008154 g     F .text	00001688 _dtoa_r
10003488 g     F .text	0000080c _malloc_r
10015bcc g     F .text	00000030 __ascii_wctomb
1001e8b8 g     O .rwdata	00000004 alt_errno
100117a8 g     F .text	000000d4 __submore
1000a9a0 g     F .text	000000c4 _fwalk
1000afb8 g     F .text	0000005c _mbtowc_r
1000c61c g     F .text	000000c8 putc
10003284 g     F .text	00000084 .hidden __divsi3
1000a0a4 g     F .text	00000124 _malloc_trim_r
10002c78 g     F .text	00000148 UsbGetHidDesc
1001bf08 g       *ABS*	00000000 __CTOR_END__
1000d184 g     F .text	000000dc strcmp
1001bf08 g       *ABS*	00000000 __flash_rodata_start
1001bf08 g       *ABS*	00000000 __DTOR_LIST__
10017e10 g     F .text	00000088 .hidden __nedf2
10002168 g     F .text	00000044 UsbRead
10019fd8 g     F .text	00000038 alt_irq_init
10019d04 g     F .text	00000084 alt_release_fd
1000cfdc g     F .text	0000006c sprintf
1001cca0 g     O .rodata	00000100 .hidden __clz_tab
100203d8 g     O .bss	00000004 _PathLocale
1000e8c0 g     F .text	00000100 strtof
1001bb74 g     F .text	00000014 atexit
10016a10 g     F .text	000000bc .hidden __gesf2
10013278 g     F .text	00000060 _write_r
1000ac10 g     F .text	00000018 setlocale
10003ec4 g     F .text	0000003c scanf
1000cf7c g     F .text	00000008 nanf
1001e894 g     O .rwdata	00000004 _impure_ptr
100203e4 g     O .bss	00000004 alt_argc
100097dc g     F .text	0000021c __sflush_r
1000adf0 g     F .text	000000ac _mbrtowc_r
1001afb0 g     F .text	00000060 _do_dtors
1000abfc g     F .text	00000008 __locale_cjk_lang
10000718 g     F .text	0000002c hasBottomDoor
1000cc64 g     F .text	000001d4 __srefill_r
10000020 g       .exceptions	00000000 alt_irq_entry
1000af74 g     F .text	00000044 __ascii_mbtowc
1000c0a4 g     F .text	00000064 __ulp
10009e1c g     F .text	00000018 __fp_unlock_all
1001e8a4 g     O .rwdata	00000008 alt_fs_list
100004e4 g     F .text	000000a8 enqueue
10002dc0 g     F .text	00000340 UsbGetReportDesc
10000020 g       *ABS*	00000000 __ram_exceptions_start
1000ac28 g     F .text	0000000c localeconv
10000770 g     F .text	0000002c hasRightDoor
1001b030 g     F .text	00000050 alt_ic_isr_register
1000058c g     F .text	000000a8 dequeue
1001e8cc g       *ABS*	00000000 _edata
10020544 g       *ABS*	00000000 _end
10002110 g     F .text	00000058 UsbWrite
1001350c g     F .text	00000164 __fputwc
10000230 g       *ABS*	00000000 __ram_exceptions_end
10007d08 g     F .text	00000068 vfscanf
1001a5a8 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
1001b108 g     F .text	0000008c alt_ic_irq_disable
1000d0a4 g     F .text	0000007c __swrite
1001e888 g     O .rwdata	00000004 __malloc_trim_threshold
1000abf0 g     F .text	0000000c __locale_msgcharset
1001bb88 g     F .text	00000038 exit
1000aa64 g     F .text	000000c4 _fwalk_reent
1000bea8 g     F .text	000001fc __mdiff
10000c20 g     F .text	00000040 checkBottomOOB
10003308 g     F .text	00000074 .hidden __modsi3
1001e88c g     O .rwdata	00000004 __ctype_ptr__
18000000 g       *ABS*	00000000 __alt_data_end
10000020 g     F .exceptions	00000000 alt_exception
10009df8 g     F .text	00000004 __sfp_lock_release
10000000 g       *ABS*	00000000 __alt_mem_sdram
1000ceac g     F .text	000000d0 __sccl
100002f4 g     F .text	0000007c IO_write
1001c718 g     O .rodata	00000101 _ctype_
1001e89c g     O .rwdata	00000004 __mbtowc
1001bed4 g     F .text	00000034 _exit
1001abcc g     F .text	0000012c alt_alarm_start
10015c58 g     F .text	0000010c .hidden __muldi3
1000ac34 g     F .text	000001bc __smakebuf_r
10003f30 g     F .text	00000098 strlen
100004b4 g     F .text	00000030 isEmpty
1001b558 g     F .text	0000015c open
10017e98 g     F .text	000000dc .hidden __gedf2
10013870 g     F .text	00000850 __gethex
1001e8a0 g     O .rwdata	00000004 __wctomb
10011b24 g     F .text	00000018 __sprint_r
1001b010 g     F .text	00000020 alt_icache_flush_all
1001e8c0 g     O .rwdata	00000004 alt_priority_mask
1001b080 g     F .text	00000088 alt_ic_irq_enable
100062a4 g     F .text	0000001c __vfprintf_internal
10015bfc g     F .text	0000005c _wctomb_r
1000079c g     F .text	00000448 printRoom
100188d4 g     F .text	000008fc .hidden __subdf3
1000b848 g     F .text	000000b0 __lo0bits
10002680 g     F .text	00000190 UsbGetConfigDesc1
1000637c g     F .text	0000198c __svfscanf_r
1001e8c4 g     O .rwdata	00000008 alt_alarm_list
1001187c g     F .text	00000194 _ungetc_r
1001af50 g     F .text	00000060 _do_ctors
100021ac g     F .text	000000b4 UsbSoftReset
10015b0c g     F .text	000000c0 wcrtomb
1001961c g     F .text	000000d8 close
100024a8 g     F .text	000001d8 UsbGetDeviceDesc2
10019964 g     F .text	00000084 alt_load
10013694 g     F .text	00000080 fputwc
10003474 g     F .text	00000014 free
10009dfc g     F .text	00000004 __sinit_lock_acquire
1000b594 g     F .text	00000148 __multadd
1000b56c g     F .text	00000028 _Bfree



Disassembly of section .entry:

10000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
10000000:	00440034 	movhi	at,4096
    ori r1, r1, %lo(_start)
10000004:	08408c14 	ori	at,at,560
    jmp r1
10000008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

10000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
10000020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
10000024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
10000028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
1000002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
10000030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
10000034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
10000038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
1000003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
10000040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
10000044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
10000048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
1000004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
10000050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
10000054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
10000058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
1000005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
10000060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
10000064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
10000068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
1000006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
10000070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
10000074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
10000078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
1000007c:	10000326 	beq	r2,zero,1000008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
10000080:	20000226 	beq	r4,zero,1000008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
10000084:	00000fc0 	call	100000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
10000088:	00000706 	br	100000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
1000008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
10000090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
10000094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
10000098:	00001d00 	call	100001d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
1000009c:	1000021e 	bne	r2,zero,100000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
100000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
100000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
100000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
100000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
100000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
100000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
100000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
100000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
100000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
100000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
100000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
100000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
100000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
100000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
100000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
100000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
100000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
100000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
100000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
100000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
100000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
100000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
100000f8:	ef80083a 	eret

100000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
100000fc:	defff904 	addi	sp,sp,-28
10000100:	dfc00615 	stw	ra,24(sp)
10000104:	df000515 	stw	fp,20(sp)
10000108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
1000010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
10000110:	0005313a 	rdctl	r2,ipending
10000114:	e0bffe15 	stw	r2,-8(fp)

  return active;
10000118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
1000011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
10000120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
10000124:	00800044 	movi	r2,1
10000128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
1000012c:	e0fffb17 	ldw	r3,-20(fp)
10000130:	e0bffc17 	ldw	r2,-16(fp)
10000134:	1884703a 	and	r2,r3,r2
10000138:	10001426 	beq	r2,zero,1000018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
1000013c:	008400b4 	movhi	r2,4098
10000140:	10811104 	addi	r2,r2,1092
10000144:	e0fffd17 	ldw	r3,-12(fp)
10000148:	180690fa 	slli	r3,r3,3
1000014c:	10c5883a 	add	r2,r2,r3
10000150:	10c00017 	ldw	r3,0(r2)
10000154:	008400b4 	movhi	r2,4098
10000158:	10811104 	addi	r2,r2,1092
1000015c:	e13ffd17 	ldw	r4,-12(fp)
10000160:	200890fa 	slli	r4,r4,3
10000164:	1105883a 	add	r2,r2,r4
10000168:	10800104 	addi	r2,r2,4
1000016c:	10800017 	ldw	r2,0(r2)
10000170:	1009883a 	mov	r4,r2
10000174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
10000178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
1000017c:	0005313a 	rdctl	r2,ipending
10000180:	e0bfff15 	stw	r2,-4(fp)

  return active;
10000184:	e0bfff17 	ldw	r2,-4(fp)
10000188:	00000706 	br	100001a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
1000018c:	e0bffc17 	ldw	r2,-16(fp)
10000190:	1085883a 	add	r2,r2,r2
10000194:	e0bffc15 	stw	r2,-16(fp)
      i++;
10000198:	e0bffd17 	ldw	r2,-12(fp)
1000019c:	10800044 	addi	r2,r2,1
100001a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
100001a4:	003fe106 	br	1000012c <__alt_data_end+0xf800012c>

    active = alt_irq_pending ();
100001a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
100001ac:	e0bffb17 	ldw	r2,-20(fp)
100001b0:	103fdb1e 	bne	r2,zero,10000120 <__alt_data_end+0xf8000120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
100001b4:	0001883a 	nop
}
100001b8:	0001883a 	nop
100001bc:	e037883a 	mov	sp,fp
100001c0:	dfc00117 	ldw	ra,4(sp)
100001c4:	df000017 	ldw	fp,0(sp)
100001c8:	dec00204 	addi	sp,sp,8
100001cc:	f800283a 	ret

100001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
100001d0:	defffb04 	addi	sp,sp,-20
100001d4:	dfc00415 	stw	ra,16(sp)
100001d8:	df000315 	stw	fp,12(sp)
100001dc:	df000304 	addi	fp,sp,12
100001e0:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
100001e4:	00bfffc4 	movi	r2,-1
100001e8:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
100001ec:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
100001f0:	d0a6df17 	ldw	r2,-25732(gp)
100001f4:	10000726 	beq	r2,zero,10000214 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
100001f8:	d0a6df17 	ldw	r2,-25732(gp)
100001fc:	e0fffd17 	ldw	r3,-12(fp)
10000200:	e1bffe17 	ldw	r6,-8(fp)
10000204:	e17fff17 	ldw	r5,-4(fp)
10000208:	1809883a 	mov	r4,r3
1000020c:	103ee83a 	callr	r2
10000210:	00000206 	br	1000021c <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
10000214:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
10000218:	0005883a 	mov	r2,zero
}
1000021c:	e037883a 	mov	sp,fp
10000220:	dfc00117 	ldw	ra,4(sp)
10000224:	df000017 	ldw	fp,0(sp)
10000228:	dec00204 	addi	sp,sp,8
1000022c:	f800283a 	ret

Disassembly of section .text:

10000230 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
10000230:	06c60034 	movhi	sp,6144
    ori sp, sp, %lo(__alt_stack_pointer)
10000234:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
10000238:	068400b4 	movhi	gp,4098
    ori gp, gp, %lo(_gp)
1000023c:	d69a2014 	ori	gp,gp,26752
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
10000240:	008400b4 	movhi	r2,4098
    ori r2, r2, %lo(__bss_start)
10000244:	1080f114 	ori	r2,r2,964

    movhi r3, %hi(__bss_end)
10000248:	00c400b4 	movhi	r3,4098
    ori r3, r3, %lo(__bss_end)
1000024c:	18c15114 	ori	r3,r3,1348

    beq r2, r3, 1f
10000250:	10c00326 	beq	r2,r3,10000260 <_start+0x30>

0:
    stw zero, (r2)
10000254:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
10000258:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
1000025c:	10fffd36 	bltu	r2,r3,10000254 <__alt_data_end+0xf8000254>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
10000260:	00199640 	call	10019964 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
10000264:	0019b000 	call	10019b00 <alt_main>

10000268 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
10000268:	003fff06 	br	10000268 <__alt_data_end+0xf8000268>

1000026c <IO_init>:
//io_handler.c
#include "io_handler.h"
#include <stdio.h>

void IO_init(void)
{
1000026c:	deffff04 	addi	sp,sp,-4
10000270:	df000015 	stw	fp,0(sp)
10000274:	d839883a 	mov	fp,sp
	*otg_hpi_reset = 1;
10000278:	00800c04 	movi	r2,48
1000027c:	00c00044 	movi	r3,1
10000280:	10c00005 	stb	r3,0(r2)
	*otg_hpi_cs = 1;
10000284:	00801004 	movi	r2,64
10000288:	00c00044 	movi	r3,1
1000028c:	10c00005 	stb	r3,0(r2)
	*otg_hpi_r = 1;
10000290:	00801804 	movi	r2,96
10000294:	00c00044 	movi	r3,1
10000298:	10c00005 	stb	r3,0(r2)
	*otg_hpi_w = 1;
1000029c:	00801404 	movi	r2,80
100002a0:	00c00044 	movi	r3,1
100002a4:	10c00005 	stb	r3,0(r2)
	*otg_hpi_address = 0;
100002a8:	00802004 	movi	r2,128
100002ac:	10000015 	stw	zero,0(r2)
	*otg_hpi_data = 0;
100002b0:	00801c04 	movi	r2,112
100002b4:	10000015 	stw	zero,0(r2)
	// Reset OTG chip
	*otg_hpi_cs = 0;
100002b8:	00801004 	movi	r2,64
100002bc:	10000005 	stb	zero,0(r2)
	*otg_hpi_reset = 0;
100002c0:	00800c04 	movi	r2,48
100002c4:	10000005 	stb	zero,0(r2)
	*otg_hpi_reset = 1;
100002c8:	00800c04 	movi	r2,48
100002cc:	00c00044 	movi	r3,1
100002d0:	10c00005 	stb	r3,0(r2)
	*otg_hpi_cs = 1;
100002d4:	00801004 	movi	r2,64
100002d8:	00c00044 	movi	r3,1
100002dc:	10c00005 	stb	r3,0(r2)
}
100002e0:	0001883a 	nop
100002e4:	e037883a 	mov	sp,fp
100002e8:	df000017 	ldw	fp,0(sp)
100002ec:	dec00104 	addi	sp,sp,4
100002f0:	f800283a 	ret

100002f4 <IO_write>:

void IO_write(alt_u8 Address, alt_u16 Data)
{
100002f4:	defffd04 	addi	sp,sp,-12
100002f8:	df000215 	stw	fp,8(sp)
100002fc:	df000204 	addi	fp,sp,8
10000300:	2007883a 	mov	r3,r4
10000304:	2805883a 	mov	r2,r5
10000308:	e0fffe05 	stb	r3,-8(fp)
1000030c:	e0bfff0d 	sth	r2,-4(fp)
	*otg_hpi_r = 1;
10000310:	00801804 	movi	r2,96
10000314:	00c00044 	movi	r3,1
10000318:	10c00005 	stb	r3,0(r2)
	*otg_hpi_address = Address;
1000031c:	00802004 	movi	r2,128
10000320:	e0fffe03 	ldbu	r3,-8(fp)
10000324:	10c00015 	stw	r3,0(r2)
	*otg_hpi_cs = 0;
10000328:	00801004 	movi	r2,64
1000032c:	10000005 	stb	zero,0(r2)
	*otg_hpi_w = 0;
10000330:	00801404 	movi	r2,80
10000334:	10000005 	stb	zero,0(r2)
	*otg_hpi_data = Data;
10000338:	00801c04 	movi	r2,112
1000033c:	e0ffff0b 	ldhu	r3,-4(fp)
10000340:	10c00015 	stw	r3,0(r2)
	*otg_hpi_w = 1;
10000344:	00801404 	movi	r2,80
10000348:	00c00044 	movi	r3,1
1000034c:	10c00005 	stb	r3,0(r2)
	*otg_hpi_cs = 1;
10000350:	00801004 	movi	r2,64
10000354:	00c00044 	movi	r3,1
10000358:	10c00005 	stb	r3,0(r2)
}
1000035c:	0001883a 	nop
10000360:	e037883a 	mov	sp,fp
10000364:	df000017 	ldw	fp,0(sp)
10000368:	dec00104 	addi	sp,sp,4
1000036c:	f800283a 	ret

10000370 <IO_read>:

alt_u16 IO_read(alt_u8 Address)
{
10000370:	defffd04 	addi	sp,sp,-12
10000374:	df000215 	stw	fp,8(sp)
10000378:	df000204 	addi	fp,sp,8
1000037c:	2005883a 	mov	r2,r4
10000380:	e0bfff05 	stb	r2,-4(fp)
	alt_u16 temp;
	*otg_hpi_w = 1;
10000384:	00801404 	movi	r2,80
10000388:	00c00044 	movi	r3,1
1000038c:	10c00005 	stb	r3,0(r2)
	*otg_hpi_address = Address;
10000390:	00802004 	movi	r2,128
10000394:	e0ffff03 	ldbu	r3,-4(fp)
10000398:	10c00015 	stw	r3,0(r2)
	*otg_hpi_cs = 0;
1000039c:	00801004 	movi	r2,64
100003a0:	10000005 	stb	zero,0(r2)
	*otg_hpi_r = 0;
100003a4:	00801804 	movi	r2,96
100003a8:	10000005 	stb	zero,0(r2)
	temp = *otg_hpi_data;
100003ac:	00801c04 	movi	r2,112
100003b0:	10800017 	ldw	r2,0(r2)
100003b4:	e0bffe0d 	sth	r2,-8(fp)
	*otg_hpi_r = 1;
100003b8:	00801804 	movi	r2,96
100003bc:	00c00044 	movi	r3,1
100003c0:	10c00005 	stb	r3,0(r2)
	*otg_hpi_cs = 1;
100003c4:	00801004 	movi	r2,64
100003c8:	00c00044 	movi	r3,1
100003cc:	10c00005 	stb	r3,0(r2)
	//printf("%x\n",temp);
	return temp;
100003d0:	e0bffe0b 	ldhu	r2,-8(fp)
}
100003d4:	e037883a 	mov	sp,fp
100003d8:	df000017 	ldw	fp,0(sp)
100003dc:	dec00104 	addi	sp,sp,4
100003e0:	f800283a 	ret

100003e4 <createQueue>:
}; 
  
// function to create a queue of given capacity.  
// It initializes size of queue as 0 
struct Queue* createQueue(unsigned capacity) 
{ 
100003e4:	defffc04 	addi	sp,sp,-16
100003e8:	dfc00315 	stw	ra,12(sp)
100003ec:	df000215 	stw	fp,8(sp)
100003f0:	df000204 	addi	fp,sp,8
100003f4:	e13fff15 	stw	r4,-4(fp)
    struct Queue* queue = (struct Queue*) malloc(sizeof(struct Queue)); 
100003f8:	01000504 	movi	r4,20
100003fc:	00034600 	call	10003460 <malloc>
10000400:	e0bffe15 	stw	r2,-8(fp)
    queue->capacity = capacity; 
10000404:	e0bffe17 	ldw	r2,-8(fp)
10000408:	e0ffff17 	ldw	r3,-4(fp)
1000040c:	10c00315 	stw	r3,12(r2)
    queue->front = queue->size = 0;  
10000410:	e0bffe17 	ldw	r2,-8(fp)
10000414:	10000215 	stw	zero,8(r2)
10000418:	e0bffe17 	ldw	r2,-8(fp)
1000041c:	10c00217 	ldw	r3,8(r2)
10000420:	e0bffe17 	ldw	r2,-8(fp)
10000424:	10c00015 	stw	r3,0(r2)
    queue->rear = capacity - 1;  // This is important, see the enqueue 
10000428:	e0bfff17 	ldw	r2,-4(fp)
1000042c:	10bfffc4 	addi	r2,r2,-1
10000430:	1007883a 	mov	r3,r2
10000434:	e0bffe17 	ldw	r2,-8(fp)
10000438:	10c00115 	stw	r3,4(r2)
    queue->array = (int*) malloc(queue->capacity * sizeof(int)); 
1000043c:	e0bffe17 	ldw	r2,-8(fp)
10000440:	10800317 	ldw	r2,12(r2)
10000444:	1085883a 	add	r2,r2,r2
10000448:	1085883a 	add	r2,r2,r2
1000044c:	1009883a 	mov	r4,r2
10000450:	00034600 	call	10003460 <malloc>
10000454:	1007883a 	mov	r3,r2
10000458:	e0bffe17 	ldw	r2,-8(fp)
1000045c:	10c00415 	stw	r3,16(r2)
    return queue; 
10000460:	e0bffe17 	ldw	r2,-8(fp)
} 
10000464:	e037883a 	mov	sp,fp
10000468:	dfc00117 	ldw	ra,4(sp)
1000046c:	df000017 	ldw	fp,0(sp)
10000470:	dec00204 	addi	sp,sp,8
10000474:	f800283a 	ret

10000478 <isFull>:
  
// Queue is full when size becomes equal to the capacity  
int isFull(struct Queue* queue) 
{  return (queue->size == queue->capacity);  } 
10000478:	defffe04 	addi	sp,sp,-8
1000047c:	df000115 	stw	fp,4(sp)
10000480:	df000104 	addi	fp,sp,4
10000484:	e13fff15 	stw	r4,-4(fp)
10000488:	e0bfff17 	ldw	r2,-4(fp)
1000048c:	10800217 	ldw	r2,8(r2)
10000490:	1007883a 	mov	r3,r2
10000494:	e0bfff17 	ldw	r2,-4(fp)
10000498:	10800317 	ldw	r2,12(r2)
1000049c:	1885003a 	cmpeq	r2,r3,r2
100004a0:	10803fcc 	andi	r2,r2,255
100004a4:	e037883a 	mov	sp,fp
100004a8:	df000017 	ldw	fp,0(sp)
100004ac:	dec00104 	addi	sp,sp,4
100004b0:	f800283a 	ret

100004b4 <isEmpty>:
  
// Queue is empty when size is 0 
int isEmpty(struct Queue* queue) 
{  return (queue->size == 0); } 
100004b4:	defffe04 	addi	sp,sp,-8
100004b8:	df000115 	stw	fp,4(sp)
100004bc:	df000104 	addi	fp,sp,4
100004c0:	e13fff15 	stw	r4,-4(fp)
100004c4:	e0bfff17 	ldw	r2,-4(fp)
100004c8:	10800217 	ldw	r2,8(r2)
100004cc:	1005003a 	cmpeq	r2,r2,zero
100004d0:	10803fcc 	andi	r2,r2,255
100004d4:	e037883a 	mov	sp,fp
100004d8:	df000017 	ldw	fp,0(sp)
100004dc:	dec00104 	addi	sp,sp,4
100004e0:	f800283a 	ret

100004e4 <enqueue>:
  
// Function to add an item to the queue.   
// It changes rear and size 
void enqueue(struct Queue* queue, int item) 
{ 
100004e4:	defffc04 	addi	sp,sp,-16
100004e8:	dfc00315 	stw	ra,12(sp)
100004ec:	df000215 	stw	fp,8(sp)
100004f0:	df000204 	addi	fp,sp,8
100004f4:	e13ffe15 	stw	r4,-8(fp)
100004f8:	e17fff15 	stw	r5,-4(fp)
    if (isFull(queue)) 
100004fc:	e13ffe17 	ldw	r4,-8(fp)
10000500:	00004780 	call	10000478 <isFull>
10000504:	10001b1e 	bne	r2,zero,10000574 <enqueue+0x90>
        return; 
    queue->rear = (queue->rear + 1)%queue->capacity; 
10000508:	e0bffe17 	ldw	r2,-8(fp)
1000050c:	10800117 	ldw	r2,4(r2)
10000510:	10800044 	addi	r2,r2,1
10000514:	1007883a 	mov	r3,r2
10000518:	e0bffe17 	ldw	r2,-8(fp)
1000051c:	10800317 	ldw	r2,12(r2)
10000520:	100b883a 	mov	r5,r2
10000524:	1809883a 	mov	r4,r3
10000528:	00033e00 	call	100033e0 <__umodsi3>
1000052c:	1007883a 	mov	r3,r2
10000530:	e0bffe17 	ldw	r2,-8(fp)
10000534:	10c00115 	stw	r3,4(r2)
    queue->array[queue->rear] = item; 
10000538:	e0bffe17 	ldw	r2,-8(fp)
1000053c:	10c00417 	ldw	r3,16(r2)
10000540:	e0bffe17 	ldw	r2,-8(fp)
10000544:	10800117 	ldw	r2,4(r2)
10000548:	1085883a 	add	r2,r2,r2
1000054c:	1085883a 	add	r2,r2,r2
10000550:	1885883a 	add	r2,r3,r2
10000554:	e0ffff17 	ldw	r3,-4(fp)
10000558:	10c00015 	stw	r3,0(r2)
    queue->size = queue->size + 1; 
1000055c:	e0bffe17 	ldw	r2,-8(fp)
10000560:	10800217 	ldw	r2,8(r2)
10000564:	10c00044 	addi	r3,r2,1
10000568:	e0bffe17 	ldw	r2,-8(fp)
1000056c:	10c00215 	stw	r3,8(r2)
10000570:	00000106 	br	10000578 <enqueue+0x94>
// Function to add an item to the queue.   
// It changes rear and size 
void enqueue(struct Queue* queue, int item) 
{ 
    if (isFull(queue)) 
        return; 
10000574:	0001883a 	nop
    queue->rear = (queue->rear + 1)%queue->capacity; 
    queue->array[queue->rear] = item; 
    queue->size = queue->size + 1; 
    //printf("%x enqueued to queue\n", item); 
} 
10000578:	e037883a 	mov	sp,fp
1000057c:	dfc00117 	ldw	ra,4(sp)
10000580:	df000017 	ldw	fp,0(sp)
10000584:	dec00204 	addi	sp,sp,8
10000588:	f800283a 	ret

1000058c <dequeue>:
  
// Function to remove an item from queue.  
// It changes front and size 
int dequeue(struct Queue* queue) 
{ 
1000058c:	defffc04 	addi	sp,sp,-16
10000590:	dfc00315 	stw	ra,12(sp)
10000594:	df000215 	stw	fp,8(sp)
10000598:	df000204 	addi	fp,sp,8
1000059c:	e13fff15 	stw	r4,-4(fp)
    if (isEmpty(queue)) 
100005a0:	e13fff17 	ldw	r4,-4(fp)
100005a4:	00004b40 	call	100004b4 <isEmpty>
100005a8:	10000226 	beq	r2,zero,100005b4 <dequeue+0x28>
        return INT_MIN; 
100005ac:	00a00034 	movhi	r2,32768
100005b0:	00001b06 	br	10000620 <dequeue+0x94>
    int item = queue->array[queue->front]; 
100005b4:	e0bfff17 	ldw	r2,-4(fp)
100005b8:	10c00417 	ldw	r3,16(r2)
100005bc:	e0bfff17 	ldw	r2,-4(fp)
100005c0:	10800017 	ldw	r2,0(r2)
100005c4:	1085883a 	add	r2,r2,r2
100005c8:	1085883a 	add	r2,r2,r2
100005cc:	1885883a 	add	r2,r3,r2
100005d0:	10800017 	ldw	r2,0(r2)
100005d4:	e0bffe15 	stw	r2,-8(fp)
    queue->front = (queue->front + 1)%queue->capacity; 
100005d8:	e0bfff17 	ldw	r2,-4(fp)
100005dc:	10800017 	ldw	r2,0(r2)
100005e0:	10800044 	addi	r2,r2,1
100005e4:	1007883a 	mov	r3,r2
100005e8:	e0bfff17 	ldw	r2,-4(fp)
100005ec:	10800317 	ldw	r2,12(r2)
100005f0:	100b883a 	mov	r5,r2
100005f4:	1809883a 	mov	r4,r3
100005f8:	00033e00 	call	100033e0 <__umodsi3>
100005fc:	1007883a 	mov	r3,r2
10000600:	e0bfff17 	ldw	r2,-4(fp)
10000604:	10c00015 	stw	r3,0(r2)
    queue->size = queue->size - 1; 
10000608:	e0bfff17 	ldw	r2,-4(fp)
1000060c:	10800217 	ldw	r2,8(r2)
10000610:	10ffffc4 	addi	r3,r2,-1
10000614:	e0bfff17 	ldw	r2,-4(fp)
10000618:	10c00215 	stw	r3,8(r2)
    return item; 
1000061c:	e0bffe17 	ldw	r2,-8(fp)
}
10000620:	e037883a 	mov	sp,fp
10000624:	dfc00117 	ldw	ra,4(sp)
10000628:	df000017 	ldw	fp,0(sp)
1000062c:	dec00204 	addi	sp,sp,8
10000630:	f800283a 	ret

10000634 <front>:
  
// Function to get front of queue 
int front(struct Queue* queue) 
{ 
10000634:	defffd04 	addi	sp,sp,-12
10000638:	dfc00215 	stw	ra,8(sp)
1000063c:	df000115 	stw	fp,4(sp)
10000640:	df000104 	addi	fp,sp,4
10000644:	e13fff15 	stw	r4,-4(fp)
    if (isEmpty(queue)) 
10000648:	e13fff17 	ldw	r4,-4(fp)
1000064c:	00004b40 	call	100004b4 <isEmpty>
10000650:	10000226 	beq	r2,zero,1000065c <front+0x28>
        return INT_MIN; 
10000654:	00a00034 	movhi	r2,32768
10000658:	00000806 	br	1000067c <front+0x48>
    return queue->array[queue->front]; 
1000065c:	e0bfff17 	ldw	r2,-4(fp)
10000660:	10c00417 	ldw	r3,16(r2)
10000664:	e0bfff17 	ldw	r2,-4(fp)
10000668:	10800017 	ldw	r2,0(r2)
1000066c:	1085883a 	add	r2,r2,r2
10000670:	1085883a 	add	r2,r2,r2
10000674:	1885883a 	add	r2,r3,r2
10000678:	10800017 	ldw	r2,0(r2)
} 
1000067c:	e037883a 	mov	sp,fp
10000680:	dfc00117 	ldw	ra,4(sp)
10000684:	df000017 	ldw	fp,0(sp)
10000688:	dec00204 	addi	sp,sp,8
1000068c:	f800283a 	ret

10000690 <rear>:
  
// Function to get rear of queue 
int rear(struct Queue* queue) 
{ 
10000690:	defffd04 	addi	sp,sp,-12
10000694:	dfc00215 	stw	ra,8(sp)
10000698:	df000115 	stw	fp,4(sp)
1000069c:	df000104 	addi	fp,sp,4
100006a0:	e13fff15 	stw	r4,-4(fp)
    if (isEmpty(queue)) 
100006a4:	e13fff17 	ldw	r4,-4(fp)
100006a8:	00004b40 	call	100004b4 <isEmpty>
100006ac:	10000226 	beq	r2,zero,100006b8 <rear+0x28>
        return INT_MIN; 
100006b0:	00a00034 	movhi	r2,32768
100006b4:	00000806 	br	100006d8 <rear+0x48>
    return queue->array[queue->rear]; 
100006b8:	e0bfff17 	ldw	r2,-4(fp)
100006bc:	10c00417 	ldw	r3,16(r2)
100006c0:	e0bfff17 	ldw	r2,-4(fp)
100006c4:	10800117 	ldw	r2,4(r2)
100006c8:	1085883a 	add	r2,r2,r2
100006cc:	1085883a 	add	r2,r2,r2
100006d0:	1885883a 	add	r2,r3,r2
100006d4:	10800017 	ldw	r2,0(r2)
100006d8:	e037883a 	mov	sp,fp
100006dc:	dfc00117 	ldw	ra,4(sp)
100006e0:	df000017 	ldw	fp,0(sp)
100006e4:	dec00204 	addi	sp,sp,8
100006e8:	f800283a 	ret

100006ec <hasTopDoor>:

unsigned char rooms[ROOM_HEIGHT][ROOM_WIDTH];
unsigned char numOfRooms = 1;

// Room -> top,bottom,left,right
int hasTopDoor(unsigned char room){
100006ec:	defffe04 	addi	sp,sp,-8
100006f0:	df000115 	stw	fp,4(sp)
100006f4:	df000104 	addi	fp,sp,4
100006f8:	2005883a 	mov	r2,r4
100006fc:	e0bfff05 	stb	r2,-4(fp)
    return room & 0b1000;
10000700:	e0bfff03 	ldbu	r2,-4(fp)
10000704:	1080020c 	andi	r2,r2,8
}
10000708:	e037883a 	mov	sp,fp
1000070c:	df000017 	ldw	fp,0(sp)
10000710:	dec00104 	addi	sp,sp,4
10000714:	f800283a 	ret

10000718 <hasBottomDoor>:

int hasBottomDoor(unsigned char room){
10000718:	defffe04 	addi	sp,sp,-8
1000071c:	df000115 	stw	fp,4(sp)
10000720:	df000104 	addi	fp,sp,4
10000724:	2005883a 	mov	r2,r4
10000728:	e0bfff05 	stb	r2,-4(fp)
    return room & 0b0100;
1000072c:	e0bfff03 	ldbu	r2,-4(fp)
10000730:	1080010c 	andi	r2,r2,4
}
10000734:	e037883a 	mov	sp,fp
10000738:	df000017 	ldw	fp,0(sp)
1000073c:	dec00104 	addi	sp,sp,4
10000740:	f800283a 	ret

10000744 <hasLeftDoor>:

int hasLeftDoor(unsigned char room){
10000744:	defffe04 	addi	sp,sp,-8
10000748:	df000115 	stw	fp,4(sp)
1000074c:	df000104 	addi	fp,sp,4
10000750:	2005883a 	mov	r2,r4
10000754:	e0bfff05 	stb	r2,-4(fp)
    return room & 0b0010;
10000758:	e0bfff03 	ldbu	r2,-4(fp)
1000075c:	1080008c 	andi	r2,r2,2
}
10000760:	e037883a 	mov	sp,fp
10000764:	df000017 	ldw	fp,0(sp)
10000768:	dec00104 	addi	sp,sp,4
1000076c:	f800283a 	ret

10000770 <hasRightDoor>:

int hasRightDoor(unsigned char room){
10000770:	defffe04 	addi	sp,sp,-8
10000774:	df000115 	stw	fp,4(sp)
10000778:	df000104 	addi	fp,sp,4
1000077c:	2005883a 	mov	r2,r4
10000780:	e0bfff05 	stb	r2,-4(fp)
    return room & 0b0001;
10000784:	e0bfff03 	ldbu	r2,-4(fp)
10000788:	1080004c 	andi	r2,r2,1
}
1000078c:	e037883a 	mov	sp,fp
10000790:	df000017 	ldw	fp,0(sp)
10000794:	dec00104 	addi	sp,sp,4
10000798:	f800283a 	ret

1000079c <printRoom>:

void printRoom(){
1000079c:	deffc204 	addi	sp,sp,-248
100007a0:	dfc03d15 	stw	ra,244(sp)
100007a4:	df003c15 	stw	fp,240(sp)
100007a8:	dc003b15 	stw	r16,236(sp)
100007ac:	df003c04 	addi	fp,sp,240
    int i,j;
    char printArray[ROOM_HEIGHT*3][ROOM_WIDTH*3];
    for(j = 0; j < ROOM_HEIGHT*3; j++){
100007b0:	e03fc515 	stw	zero,-236(fp)
100007b4:	00001606 	br	10000810 <printRoom+0x74>
        for(i = 0; i < ROOM_WIDTH*3; i++){
100007b8:	e03fc415 	stw	zero,-240(fp)
100007bc:	00000e06 	br	100007f8 <printRoom+0x5c>
            printArray[j][i] = ' ';
100007c0:	e0bfc517 	ldw	r2,-236(fp)
100007c4:	014003c4 	movi	r5,15
100007c8:	1009883a 	mov	r4,r2
100007cc:	00034380 	call	10003438 <__mulsi3>
100007d0:	e13fc404 	addi	r4,fp,-240
100007d4:	2087883a 	add	r3,r4,r2
100007d8:	e0bfc417 	ldw	r2,-240(fp)
100007dc:	1885883a 	add	r2,r3,r2
100007e0:	10800244 	addi	r2,r2,9
100007e4:	00c00804 	movi	r3,32
100007e8:	10c00005 	stb	r3,0(r2)

void printRoom(){
    int i,j;
    char printArray[ROOM_HEIGHT*3][ROOM_WIDTH*3];
    for(j = 0; j < ROOM_HEIGHT*3; j++){
        for(i = 0; i < ROOM_WIDTH*3; i++){
100007ec:	e0bfc417 	ldw	r2,-240(fp)
100007f0:	10800044 	addi	r2,r2,1
100007f4:	e0bfc415 	stw	r2,-240(fp)
100007f8:	e0bfc417 	ldw	r2,-240(fp)
100007fc:	108003d0 	cmplti	r2,r2,15
10000800:	103fef1e 	bne	r2,zero,100007c0 <__alt_data_end+0xf80007c0>
}

void printRoom(){
    int i,j;
    char printArray[ROOM_HEIGHT*3][ROOM_WIDTH*3];
    for(j = 0; j < ROOM_HEIGHT*3; j++){
10000804:	e0bfc517 	ldw	r2,-236(fp)
10000808:	10800044 	addi	r2,r2,1
1000080c:	e0bfc515 	stw	r2,-236(fp)
10000810:	e0bfc517 	ldw	r2,-236(fp)
10000814:	108003d0 	cmplti	r2,r2,15
10000818:	103fe71e 	bne	r2,zero,100007b8 <__alt_data_end+0xf80007b8>
        for(i = 0; i < ROOM_WIDTH*3; i++){
            printArray[j][i] = ' ';
        }
    }
    for(j = 0; j < ROOM_HEIGHT; j++){
1000081c:	e03fc515 	stw	zero,-236(fp)
10000820:	0000b406 	br	10000af4 <printRoom+0x358>
        for(i = 0; i < ROOM_WIDTH; i++){
10000824:	e03fc415 	stw	zero,-240(fp)
10000828:	0000ac06 	br	10000adc <printRoom+0x340>
            unsigned char curRoom = rooms[j][i];
1000082c:	040400b4 	movhi	r16,4098
10000830:	84010a04 	addi	r16,r16,1064
10000834:	e0bfc517 	ldw	r2,-236(fp)
10000838:	01400144 	movi	r5,5
1000083c:	1009883a 	mov	r4,r2
10000840:	00034380 	call	10003438 <__mulsi3>
10000844:	8087883a 	add	r3,r16,r2
10000848:	e0bfc417 	ldw	r2,-240(fp)
1000084c:	1885883a 	add	r2,r3,r2
10000850:	10800003 	ldbu	r2,0(r2)
10000854:	e0bfc605 	stb	r2,-232(fp)
            if(curRoom == 0)
10000858:	e0bfc603 	ldbu	r2,-232(fp)
1000085c:	10009b26 	beq	r2,zero,10000acc <printRoom+0x330>
                continue;
                
            if(!hasTopDoor(curRoom))
10000860:	e0bfc603 	ldbu	r2,-232(fp)
10000864:	1009883a 	mov	r4,r2
10000868:	00006ec0 	call	100006ec <hasTopDoor>
1000086c:	1000111e 	bne	r2,zero,100008b4 <printRoom+0x118>
                printArray[j*3][i*3+1] = '#';
10000870:	e0ffc517 	ldw	r3,-236(fp)
10000874:	1805883a 	mov	r2,r3
10000878:	1085883a 	add	r2,r2,r2
1000087c:	10c9883a 	add	r4,r2,r3
10000880:	e0ffc417 	ldw	r3,-240(fp)
10000884:	1805883a 	mov	r2,r3
10000888:	1085883a 	add	r2,r2,r2
1000088c:	10c5883a 	add	r2,r2,r3
10000890:	14000044 	addi	r16,r2,1
10000894:	014003c4 	movi	r5,15
10000898:	00034380 	call	10003438 <__mulsi3>
1000089c:	e0ffc404 	addi	r3,fp,-240
100008a0:	1885883a 	add	r2,r3,r2
100008a4:	1405883a 	add	r2,r2,r16
100008a8:	10800244 	addi	r2,r2,9
100008ac:	00c008c4 	movi	r3,35
100008b0:	10c00005 	stb	r3,0(r2)
            if(!hasBottomDoor(curRoom))
100008b4:	e0bfc603 	ldbu	r2,-232(fp)
100008b8:	1009883a 	mov	r4,r2
100008bc:	00007180 	call	10000718 <hasBottomDoor>
100008c0:	1000121e 	bne	r2,zero,1000090c <printRoom+0x170>
                printArray[j*3+2][i*3+1] = '#';
100008c4:	e0ffc517 	ldw	r3,-236(fp)
100008c8:	1805883a 	mov	r2,r3
100008cc:	1085883a 	add	r2,r2,r2
100008d0:	10c5883a 	add	r2,r2,r3
100008d4:	11000084 	addi	r4,r2,2
100008d8:	e0ffc417 	ldw	r3,-240(fp)
100008dc:	1805883a 	mov	r2,r3
100008e0:	1085883a 	add	r2,r2,r2
100008e4:	10c5883a 	add	r2,r2,r3
100008e8:	14000044 	addi	r16,r2,1
100008ec:	014003c4 	movi	r5,15
100008f0:	00034380 	call	10003438 <__mulsi3>
100008f4:	e13fc404 	addi	r4,fp,-240
100008f8:	2085883a 	add	r2,r4,r2
100008fc:	1405883a 	add	r2,r2,r16
10000900:	10800244 	addi	r2,r2,9
10000904:	00c008c4 	movi	r3,35
10000908:	10c00005 	stb	r3,0(r2)
            if(!hasLeftDoor(curRoom))
1000090c:	e0bfc603 	ldbu	r2,-232(fp)
10000910:	1009883a 	mov	r4,r2
10000914:	00007440 	call	10000744 <hasLeftDoor>
10000918:	1000111e 	bne	r2,zero,10000960 <printRoom+0x1c4>
                printArray[j*3+1][i*3] = '#';
1000091c:	e0ffc517 	ldw	r3,-236(fp)
10000920:	1805883a 	mov	r2,r3
10000924:	1085883a 	add	r2,r2,r2
10000928:	10c5883a 	add	r2,r2,r3
1000092c:	11000044 	addi	r4,r2,1
10000930:	e0ffc417 	ldw	r3,-240(fp)
10000934:	1805883a 	mov	r2,r3
10000938:	1085883a 	add	r2,r2,r2
1000093c:	10e1883a 	add	r16,r2,r3
10000940:	014003c4 	movi	r5,15
10000944:	00034380 	call	10003438 <__mulsi3>
10000948:	e0ffc404 	addi	r3,fp,-240
1000094c:	1885883a 	add	r2,r3,r2
10000950:	1405883a 	add	r2,r2,r16
10000954:	10800244 	addi	r2,r2,9
10000958:	00c008c4 	movi	r3,35
1000095c:	10c00005 	stb	r3,0(r2)
            if(!hasRightDoor(curRoom))
10000960:	e0bfc603 	ldbu	r2,-232(fp)
10000964:	1009883a 	mov	r4,r2
10000968:	00007700 	call	10000770 <hasRightDoor>
1000096c:	1000121e 	bne	r2,zero,100009b8 <printRoom+0x21c>
                printArray[j*3+1][i*3+2] = '#';
10000970:	e0ffc517 	ldw	r3,-236(fp)
10000974:	1805883a 	mov	r2,r3
10000978:	1085883a 	add	r2,r2,r2
1000097c:	10c5883a 	add	r2,r2,r3
10000980:	11000044 	addi	r4,r2,1
10000984:	e0ffc417 	ldw	r3,-240(fp)
10000988:	1805883a 	mov	r2,r3
1000098c:	1085883a 	add	r2,r2,r2
10000990:	10c5883a 	add	r2,r2,r3
10000994:	14000084 	addi	r16,r2,2
10000998:	014003c4 	movi	r5,15
1000099c:	00034380 	call	10003438 <__mulsi3>
100009a0:	e13fc404 	addi	r4,fp,-240
100009a4:	2085883a 	add	r2,r4,r2
100009a8:	1405883a 	add	r2,r2,r16
100009ac:	10800244 	addi	r2,r2,9
100009b0:	00c008c4 	movi	r3,35
100009b4:	10c00005 	stb	r3,0(r2)
            
            printArray[j*3][i*3] = '#';
100009b8:	e0ffc517 	ldw	r3,-236(fp)
100009bc:	1805883a 	mov	r2,r3
100009c0:	1085883a 	add	r2,r2,r2
100009c4:	10c9883a 	add	r4,r2,r3
100009c8:	e0ffc417 	ldw	r3,-240(fp)
100009cc:	1805883a 	mov	r2,r3
100009d0:	1085883a 	add	r2,r2,r2
100009d4:	10e1883a 	add	r16,r2,r3
100009d8:	014003c4 	movi	r5,15
100009dc:	00034380 	call	10003438 <__mulsi3>
100009e0:	e0ffc404 	addi	r3,fp,-240
100009e4:	1885883a 	add	r2,r3,r2
100009e8:	1405883a 	add	r2,r2,r16
100009ec:	10800244 	addi	r2,r2,9
100009f0:	00c008c4 	movi	r3,35
100009f4:	10c00005 	stb	r3,0(r2)
            printArray[j*3][i*3+2] = '#';
100009f8:	e0ffc517 	ldw	r3,-236(fp)
100009fc:	1805883a 	mov	r2,r3
10000a00:	1085883a 	add	r2,r2,r2
10000a04:	10c9883a 	add	r4,r2,r3
10000a08:	e0ffc417 	ldw	r3,-240(fp)
10000a0c:	1805883a 	mov	r2,r3
10000a10:	1085883a 	add	r2,r2,r2
10000a14:	10c5883a 	add	r2,r2,r3
10000a18:	14000084 	addi	r16,r2,2
10000a1c:	014003c4 	movi	r5,15
10000a20:	00034380 	call	10003438 <__mulsi3>
10000a24:	e13fc404 	addi	r4,fp,-240
10000a28:	2085883a 	add	r2,r4,r2
10000a2c:	1405883a 	add	r2,r2,r16
10000a30:	10800244 	addi	r2,r2,9
10000a34:	00c008c4 	movi	r3,35
10000a38:	10c00005 	stb	r3,0(r2)
            printArray[j*3+2][i*3] = '#';
10000a3c:	e0ffc517 	ldw	r3,-236(fp)
10000a40:	1805883a 	mov	r2,r3
10000a44:	1085883a 	add	r2,r2,r2
10000a48:	10c5883a 	add	r2,r2,r3
10000a4c:	11000084 	addi	r4,r2,2
10000a50:	e0ffc417 	ldw	r3,-240(fp)
10000a54:	1805883a 	mov	r2,r3
10000a58:	1085883a 	add	r2,r2,r2
10000a5c:	10e1883a 	add	r16,r2,r3
10000a60:	014003c4 	movi	r5,15
10000a64:	00034380 	call	10003438 <__mulsi3>
10000a68:	e0ffc404 	addi	r3,fp,-240
10000a6c:	1885883a 	add	r2,r3,r2
10000a70:	1405883a 	add	r2,r2,r16
10000a74:	10800244 	addi	r2,r2,9
10000a78:	00c008c4 	movi	r3,35
10000a7c:	10c00005 	stb	r3,0(r2)
            printArray[j*3+2][i*3+2] = '#';
10000a80:	e0ffc517 	ldw	r3,-236(fp)
10000a84:	1805883a 	mov	r2,r3
10000a88:	1085883a 	add	r2,r2,r2
10000a8c:	10c5883a 	add	r2,r2,r3
10000a90:	11000084 	addi	r4,r2,2
10000a94:	e0ffc417 	ldw	r3,-240(fp)
10000a98:	1805883a 	mov	r2,r3
10000a9c:	1085883a 	add	r2,r2,r2
10000aa0:	10c5883a 	add	r2,r2,r3
10000aa4:	14000084 	addi	r16,r2,2
10000aa8:	014003c4 	movi	r5,15
10000aac:	00034380 	call	10003438 <__mulsi3>
10000ab0:	e13fc404 	addi	r4,fp,-240
10000ab4:	2085883a 	add	r2,r4,r2
10000ab8:	1405883a 	add	r2,r2,r16
10000abc:	10800244 	addi	r2,r2,9
10000ac0:	00c008c4 	movi	r3,35
10000ac4:	10c00005 	stb	r3,0(r2)
10000ac8:	00000106 	br	10000ad0 <printRoom+0x334>
    }
    for(j = 0; j < ROOM_HEIGHT; j++){
        for(i = 0; i < ROOM_WIDTH; i++){
            unsigned char curRoom = rooms[j][i];
            if(curRoom == 0)
                continue;
10000acc:	0001883a 	nop
        for(i = 0; i < ROOM_WIDTH*3; i++){
            printArray[j][i] = ' ';
        }
    }
    for(j = 0; j < ROOM_HEIGHT; j++){
        for(i = 0; i < ROOM_WIDTH; i++){
10000ad0:	e0bfc417 	ldw	r2,-240(fp)
10000ad4:	10800044 	addi	r2,r2,1
10000ad8:	e0bfc415 	stw	r2,-240(fp)
10000adc:	e0bfc417 	ldw	r2,-240(fp)
10000ae0:	10800150 	cmplti	r2,r2,5
10000ae4:	103f511e 	bne	r2,zero,1000082c <__alt_data_end+0xf800082c>
    for(j = 0; j < ROOM_HEIGHT*3; j++){
        for(i = 0; i < ROOM_WIDTH*3; i++){
            printArray[j][i] = ' ';
        }
    }
    for(j = 0; j < ROOM_HEIGHT; j++){
10000ae8:	e0bfc517 	ldw	r2,-236(fp)
10000aec:	10800044 	addi	r2,r2,1
10000af0:	e0bfc515 	stw	r2,-236(fp)
10000af4:	e0bfc517 	ldw	r2,-236(fp)
10000af8:	10800150 	cmplti	r2,r2,5
10000afc:	103f491e 	bne	r2,zero,10000824 <__alt_data_end+0xf8000824>
            printArray[j*3+2][i*3] = '#';
            printArray[j*3+2][i*3+2] = '#';
        }
    }
    
    for(j = 0; j < ROOM_HEIGHT*3; j++){
10000b00:	e03fc515 	stw	zero,-236(fp)
10000b04:	00002d06 	br	10000bbc <printRoom+0x420>
        for(i = 0; i < ROOM_WIDTH*3; i++){
10000b08:	e03fc415 	stw	zero,-240(fp)
10000b0c:	00001b06 	br	10000b7c <printRoom+0x3e0>
            printf("%c",printArray[j][i]);
10000b10:	e0bfc517 	ldw	r2,-236(fp)
10000b14:	014003c4 	movi	r5,15
10000b18:	1009883a 	mov	r4,r2
10000b1c:	00034380 	call	10003438 <__mulsi3>
10000b20:	e13fc404 	addi	r4,fp,-240
10000b24:	2087883a 	add	r3,r4,r2
10000b28:	e0bfc417 	ldw	r2,-240(fp)
10000b2c:	1885883a 	add	r2,r3,r2
10000b30:	10800244 	addi	r2,r2,9
10000b34:	10800003 	ldbu	r2,0(r2)
10000b38:	10803fcc 	andi	r2,r2,255
10000b3c:	1080201c 	xori	r2,r2,128
10000b40:	10bfe004 	addi	r2,r2,-128
10000b44:	1009883a 	mov	r4,r2
10000b48:	0003d080 	call	10003d08 <putchar>
            if((i+1)%3 == 0){
10000b4c:	e0bfc417 	ldw	r2,-240(fp)
10000b50:	10800044 	addi	r2,r2,1
10000b54:	014000c4 	movi	r5,3
10000b58:	1009883a 	mov	r4,r2
10000b5c:	00033080 	call	10003308 <__modsi3>
10000b60:	1000031e 	bne	r2,zero,10000b70 <printRoom+0x3d4>
                printf("   ");
10000b64:	010400b4 	movhi	r4,4098
10000b68:	212fc204 	addi	r4,r4,-16632
10000b6c:	0003cc40 	call	10003cc4 <printf>
            printArray[j*3+2][i*3+2] = '#';
        }
    }
    
    for(j = 0; j < ROOM_HEIGHT*3; j++){
        for(i = 0; i < ROOM_WIDTH*3; i++){
10000b70:	e0bfc417 	ldw	r2,-240(fp)
10000b74:	10800044 	addi	r2,r2,1
10000b78:	e0bfc415 	stw	r2,-240(fp)
10000b7c:	e0bfc417 	ldw	r2,-240(fp)
10000b80:	108003d0 	cmplti	r2,r2,15
10000b84:	103fe21e 	bne	r2,zero,10000b10 <__alt_data_end+0xf8000b10>
            printf("%c",printArray[j][i]);
            if((i+1)%3 == 0){
                printf("   ");
            }
        }
        printf("\n");
10000b88:	01000284 	movi	r4,10
10000b8c:	0003d080 	call	10003d08 <putchar>
        if((j+1)%3 == 0){
10000b90:	e0bfc517 	ldw	r2,-236(fp)
10000b94:	10800044 	addi	r2,r2,1
10000b98:	014000c4 	movi	r5,3
10000b9c:	1009883a 	mov	r4,r2
10000ba0:	00033080 	call	10003308 <__modsi3>
10000ba4:	1000021e 	bne	r2,zero,10000bb0 <printRoom+0x414>
            printf("\n");
10000ba8:	01000284 	movi	r4,10
10000bac:	0003d080 	call	10003d08 <putchar>
            printArray[j*3+2][i*3] = '#';
            printArray[j*3+2][i*3+2] = '#';
        }
    }
    
    for(j = 0; j < ROOM_HEIGHT*3; j++){
10000bb0:	e0bfc517 	ldw	r2,-236(fp)
10000bb4:	10800044 	addi	r2,r2,1
10000bb8:	e0bfc515 	stw	r2,-236(fp)
10000bbc:	e0bfc517 	ldw	r2,-236(fp)
10000bc0:	108003d0 	cmplti	r2,r2,15
10000bc4:	103fd01e 	bne	r2,zero,10000b08 <__alt_data_end+0xf8000b08>
        if((j+1)%3 == 0){
            printf("\n");
        }
    }
    
}
10000bc8:	0001883a 	nop
10000bcc:	e6ffff04 	addi	sp,fp,-4
10000bd0:	dfc00217 	ldw	ra,8(sp)
10000bd4:	df000117 	ldw	fp,4(sp)
10000bd8:	dc000017 	ldw	r16,0(sp)
10000bdc:	dec00304 	addi	sp,sp,12
10000be0:	f800283a 	ret

10000be4 <checkTopOOB>:

int checkTopOOB(int x, int y){
10000be4:	defffd04 	addi	sp,sp,-12
10000be8:	df000215 	stw	fp,8(sp)
10000bec:	df000204 	addi	fp,sp,8
10000bf0:	e13ffe15 	stw	r4,-8(fp)
10000bf4:	e17fff15 	stw	r5,-4(fp)
    if(y-1>=0)
10000bf8:	e0bfff17 	ldw	r2,-4(fp)
10000bfc:	10bfffc4 	addi	r2,r2,-1
10000c00:	10000216 	blt	r2,zero,10000c0c <checkTopOOB+0x28>
        return 1;
10000c04:	00800044 	movi	r2,1
10000c08:	00000106 	br	10000c10 <checkTopOOB+0x2c>
    return 0;
10000c0c:	0005883a 	mov	r2,zero
}
10000c10:	e037883a 	mov	sp,fp
10000c14:	df000017 	ldw	fp,0(sp)
10000c18:	dec00104 	addi	sp,sp,4
10000c1c:	f800283a 	ret

10000c20 <checkBottomOOB>:

int checkBottomOOB(int x, int y){
10000c20:	defffd04 	addi	sp,sp,-12
10000c24:	df000215 	stw	fp,8(sp)
10000c28:	df000204 	addi	fp,sp,8
10000c2c:	e13ffe15 	stw	r4,-8(fp)
10000c30:	e17fff15 	stw	r5,-4(fp)
    if(y+1<ROOM_HEIGHT)
10000c34:	e0bfff17 	ldw	r2,-4(fp)
10000c38:	10800044 	addi	r2,r2,1
10000c3c:	10800148 	cmpgei	r2,r2,5
10000c40:	1000021e 	bne	r2,zero,10000c4c <checkBottomOOB+0x2c>
        return 1;
10000c44:	00800044 	movi	r2,1
10000c48:	00000106 	br	10000c50 <checkBottomOOB+0x30>
    return 0;
10000c4c:	0005883a 	mov	r2,zero
}
10000c50:	e037883a 	mov	sp,fp
10000c54:	df000017 	ldw	fp,0(sp)
10000c58:	dec00104 	addi	sp,sp,4
10000c5c:	f800283a 	ret

10000c60 <checkLeftOOB>:

int checkLeftOOB(int x, int y){
10000c60:	defffd04 	addi	sp,sp,-12
10000c64:	df000215 	stw	fp,8(sp)
10000c68:	df000204 	addi	fp,sp,8
10000c6c:	e13ffe15 	stw	r4,-8(fp)
10000c70:	e17fff15 	stw	r5,-4(fp)
    if(x-1>=0)
10000c74:	e0bffe17 	ldw	r2,-8(fp)
10000c78:	10bfffc4 	addi	r2,r2,-1
10000c7c:	10000216 	blt	r2,zero,10000c88 <checkLeftOOB+0x28>
        return 1;
10000c80:	00800044 	movi	r2,1
10000c84:	00000106 	br	10000c8c <checkLeftOOB+0x2c>
    return 0;
10000c88:	0005883a 	mov	r2,zero
}
10000c8c:	e037883a 	mov	sp,fp
10000c90:	df000017 	ldw	fp,0(sp)
10000c94:	dec00104 	addi	sp,sp,4
10000c98:	f800283a 	ret

10000c9c <checkRightOOB>:

int checkRightOOB(int x, int y){
10000c9c:	defffd04 	addi	sp,sp,-12
10000ca0:	df000215 	stw	fp,8(sp)
10000ca4:	df000204 	addi	fp,sp,8
10000ca8:	e13ffe15 	stw	r4,-8(fp)
10000cac:	e17fff15 	stw	r5,-4(fp)
    if(x+1<ROOM_WIDTH)
10000cb0:	e0bffe17 	ldw	r2,-8(fp)
10000cb4:	10800044 	addi	r2,r2,1
10000cb8:	10800148 	cmpgei	r2,r2,5
10000cbc:	1000021e 	bne	r2,zero,10000cc8 <checkRightOOB+0x2c>
        return 1;
10000cc0:	00800044 	movi	r2,1
10000cc4:	00000106 	br	10000ccc <checkRightOOB+0x30>
    return 0;
10000cc8:	0005883a 	mov	r2,zero
}
10000ccc:	e037883a 	mov	sp,fp
10000cd0:	df000017 	ldw	fp,0(sp)
10000cd4:	dec00104 	addi	sp,sp,4
10000cd8:	f800283a 	ret

10000cdc <generateDungeon>:



void generateDungeon(){
10000cdc:	deffd404 	addi	sp,sp,-176
10000ce0:	dfc02b15 	stw	ra,172(sp)
10000ce4:	df002a15 	stw	fp,168(sp)
10000ce8:	dc402915 	stw	r17,164(sp)
10000cec:	dc002815 	stw	r16,160(sp)
10000cf0:	df002a04 	addi	fp,sp,168
//    srand(time(0));
    //printf("%d",time(0));
    
    int visited[ROOM_HEIGHT][ROOM_WIDTH];
    for(int j = 0; j < ROOM_HEIGHT; j++){
10000cf4:	e03fd615 	stw	zero,-168(fp)
10000cf8:	00002206 	br	10000d84 <generateDungeon+0xa8>
        for(int i = 0; i < ROOM_WIDTH; i++){
10000cfc:	e03fd715 	stw	zero,-164(fp)
10000d00:	00001a06 	br	10000d6c <generateDungeon+0x90>
            rooms[j][i] = 0;
10000d04:	040400b4 	movhi	r16,4098
10000d08:	84010a04 	addi	r16,r16,1064
10000d0c:	e0bfd617 	ldw	r2,-168(fp)
10000d10:	01400144 	movi	r5,5
10000d14:	1009883a 	mov	r4,r2
10000d18:	00034380 	call	10003438 <__mulsi3>
10000d1c:	8087883a 	add	r3,r16,r2
10000d20:	e0bfd717 	ldw	r2,-164(fp)
10000d24:	1885883a 	add	r2,r3,r2
10000d28:	10000005 	stb	zero,0(r2)
            visited[j][i] = 0;
10000d2c:	e0bfd617 	ldw	r2,-168(fp)
10000d30:	01400144 	movi	r5,5
10000d34:	1009883a 	mov	r4,r2
10000d38:	00034380 	call	10003438 <__mulsi3>
10000d3c:	1007883a 	mov	r3,r2
10000d40:	e0bfd717 	ldw	r2,-164(fp)
10000d44:	1885883a 	add	r2,r3,r2
10000d48:	1085883a 	add	r2,r2,r2
10000d4c:	1085883a 	add	r2,r2,r2
10000d50:	e0ffd604 	addi	r3,fp,-168
10000d54:	1885883a 	add	r2,r3,r2
10000d58:	10800f04 	addi	r2,r2,60
10000d5c:	10000015 	stw	zero,0(r2)
//    srand(time(0));
    //printf("%d",time(0));
    
    int visited[ROOM_HEIGHT][ROOM_WIDTH];
    for(int j = 0; j < ROOM_HEIGHT; j++){
        for(int i = 0; i < ROOM_WIDTH; i++){
10000d60:	e0bfd717 	ldw	r2,-164(fp)
10000d64:	10800044 	addi	r2,r2,1
10000d68:	e0bfd715 	stw	r2,-164(fp)
10000d6c:	e0bfd717 	ldw	r2,-164(fp)
10000d70:	10800150 	cmplti	r2,r2,5
10000d74:	103fe31e 	bne	r2,zero,10000d04 <__alt_data_end+0xf8000d04>
void generateDungeon(){
//    srand(time(0));
    //printf("%d",time(0));
    
    int visited[ROOM_HEIGHT][ROOM_WIDTH];
    for(int j = 0; j < ROOM_HEIGHT; j++){
10000d78:	e0bfd617 	ldw	r2,-168(fp)
10000d7c:	10800044 	addi	r2,r2,1
10000d80:	e0bfd615 	stw	r2,-168(fp)
10000d84:	e0bfd617 	ldw	r2,-168(fp)
10000d88:	10800150 	cmplti	r2,r2,5
10000d8c:	103fdb1e 	bne	r2,zero,10000cfc <__alt_data_end+0xf8000cfc>
            rooms[j][i] = 0;
            visited[j][i] = 0;
        }
    }
    
    struct Queue* xQueue = createQueue(121);
10000d90:	01001e44 	movi	r4,121
10000d94:	00003e40 	call	100003e4 <createQueue>
10000d98:	e0bfd915 	stw	r2,-156(fp)
    struct Queue* yQueue = createQueue(121);
10000d9c:	01001e44 	movi	r4,121
10000da0:	00003e40 	call	100003e4 <createQueue>
10000da4:	e0bfda15 	stw	r2,-152(fp)
    
    rooms[ROOM_MIDDLE_Y][ROOM_MIDDLE_X] = top|bottom|left|right;
10000da8:	008400b4 	movhi	r2,4098
10000dac:	10810a04 	addi	r2,r2,1064
10000db0:	00c003c4 	movi	r3,15
10000db4:	10c00305 	stb	r3,12(r2)
    
    visited[ROOM_MIDDLE_Y][ROOM_MIDDLE_X] = 1;
10000db8:	00800044 	movi	r2,1
10000dbc:	e0bff115 	stw	r2,-60(fp)
    
    enqueue(xQueue, ROOM_MIDDLE_X+1);
10000dc0:	014000c4 	movi	r5,3
10000dc4:	e13fd917 	ldw	r4,-156(fp)
10000dc8:	00004e40 	call	100004e4 <enqueue>
    enqueue(yQueue, ROOM_MIDDLE_Y);
10000dcc:	01400084 	movi	r5,2
10000dd0:	e13fda17 	ldw	r4,-152(fp)
10000dd4:	00004e40 	call	100004e4 <enqueue>
    
    enqueue(xQueue, ROOM_MIDDLE_X-1);
10000dd8:	01400044 	movi	r5,1
10000ddc:	e13fd917 	ldw	r4,-156(fp)
10000de0:	00004e40 	call	100004e4 <enqueue>
    enqueue(yQueue, ROOM_MIDDLE_Y);
10000de4:	01400084 	movi	r5,2
10000de8:	e13fda17 	ldw	r4,-152(fp)
10000dec:	00004e40 	call	100004e4 <enqueue>
    
    enqueue(xQueue, ROOM_MIDDLE_X);
10000df0:	01400084 	movi	r5,2
10000df4:	e13fd917 	ldw	r4,-156(fp)
10000df8:	00004e40 	call	100004e4 <enqueue>
    enqueue(yQueue, ROOM_MIDDLE_Y+1);
10000dfc:	014000c4 	movi	r5,3
10000e00:	e13fda17 	ldw	r4,-152(fp)
10000e04:	00004e40 	call	100004e4 <enqueue>
    
    enqueue(xQueue, ROOM_MIDDLE_X);
10000e08:	01400084 	movi	r5,2
10000e0c:	e13fd917 	ldw	r4,-156(fp)
10000e10:	00004e40 	call	100004e4 <enqueue>
    enqueue(yQueue, ROOM_MIDDLE_Y-1);
10000e14:	01400044 	movi	r5,1
10000e18:	e13fda17 	ldw	r4,-152(fp)
10000e1c:	00004e40 	call	100004e4 <enqueue>
    

    while(!isEmpty(xQueue)){
10000e20:	00010a06 	br	1000124c <generateDungeon+0x570>
        int curX = dequeue(xQueue);
10000e24:	e13fd917 	ldw	r4,-156(fp)
10000e28:	000058c0 	call	1000058c <dequeue>
10000e2c:	e0bfdb15 	stw	r2,-148(fp)
        int curY = dequeue(yQueue);
10000e30:	e13fda17 	ldw	r4,-152(fp)
10000e34:	000058c0 	call	1000058c <dequeue>
10000e38:	e0bfdc15 	stw	r2,-144(fp)
        if(visited[curY][curX])
10000e3c:	e0bfdc17 	ldw	r2,-144(fp)
10000e40:	01400144 	movi	r5,5
10000e44:	1009883a 	mov	r4,r2
10000e48:	00034380 	call	10003438 <__mulsi3>
10000e4c:	1007883a 	mov	r3,r2
10000e50:	e0bfdb17 	ldw	r2,-148(fp)
10000e54:	1885883a 	add	r2,r3,r2
10000e58:	1085883a 	add	r2,r2,r2
10000e5c:	1085883a 	add	r2,r2,r2
10000e60:	e0ffd604 	addi	r3,fp,-168
10000e64:	1885883a 	add	r2,r3,r2
10000e68:	10800f04 	addi	r2,r2,60
10000e6c:	10800017 	ldw	r2,0(r2)
10000e70:	10000126 	beq	r2,zero,10000e78 <generateDungeon+0x19c>
            continue;
10000e74:	0000f506 	br	1000124c <generateDungeon+0x570>
        unsigned char curRoom = 0;
10000e78:	e03fd805 	stb	zero,-160(fp)
        visited[curY][curX] = 1;
10000e7c:	e0bfdc17 	ldw	r2,-144(fp)
10000e80:	01400144 	movi	r5,5
10000e84:	1009883a 	mov	r4,r2
10000e88:	00034380 	call	10003438 <__mulsi3>
10000e8c:	1007883a 	mov	r3,r2
10000e90:	e0bfdb17 	ldw	r2,-148(fp)
10000e94:	1885883a 	add	r2,r3,r2
10000e98:	1085883a 	add	r2,r2,r2
10000e9c:	1085883a 	add	r2,r2,r2
10000ea0:	e0ffd604 	addi	r3,fp,-168
10000ea4:	1885883a 	add	r2,r3,r2
10000ea8:	10800f04 	addi	r2,r2,60
10000eac:	00c00044 	movi	r3,1
10000eb0:	10c00015 	stw	r3,0(r2)
        numOfRooms++;
10000eb4:	d0a00003 	ldbu	r2,-32768(gp)
10000eb8:	10800044 	addi	r2,r2,1
10000ebc:	d0a00005 	stb	r2,-32768(gp)
        
        if(checkTopOOB(curX,curY)){
10000ec0:	e17fdc17 	ldw	r5,-144(fp)
10000ec4:	e13fdb17 	ldw	r4,-148(fp)
10000ec8:	0000be40 	call	10000be4 <checkTopOOB>
10000ecc:	10003326 	beq	r2,zero,10000f9c <generateDungeon+0x2c0>
            int topRoomVisited = visited[curY-1][curX];
10000ed0:	e0bfdc17 	ldw	r2,-144(fp)
10000ed4:	10bfffc4 	addi	r2,r2,-1
10000ed8:	01400144 	movi	r5,5
10000edc:	1009883a 	mov	r4,r2
10000ee0:	00034380 	call	10003438 <__mulsi3>
10000ee4:	1007883a 	mov	r3,r2
10000ee8:	e0bfdb17 	ldw	r2,-148(fp)
10000eec:	1885883a 	add	r2,r3,r2
10000ef0:	1085883a 	add	r2,r2,r2
10000ef4:	1085883a 	add	r2,r2,r2
10000ef8:	e0ffd604 	addi	r3,fp,-168
10000efc:	1885883a 	add	r2,r3,r2
10000f00:	10800f04 	addi	r2,r2,60
10000f04:	10800017 	ldw	r2,0(r2)
10000f08:	e0bfdd15 	stw	r2,-140(fp)
            if(!topRoomVisited){
10000f0c:	e0bfdd17 	ldw	r2,-140(fp)
10000f10:	10000f1e 	bne	r2,zero,10000f50 <generateDungeon+0x274>
                if(rand()%2){
10000f14:	0003e0c0 	call	10003e0c <rand>
10000f18:	1080004c 	andi	r2,r2,1
10000f1c:	10001f26 	beq	r2,zero,10000f9c <generateDungeon+0x2c0>
                    curRoom|=top;
10000f20:	e0bfd803 	ldbu	r2,-160(fp)
10000f24:	10800214 	ori	r2,r2,8
10000f28:	e0bfd805 	stb	r2,-160(fp)
                    enqueue(xQueue, curX);
10000f2c:	e17fdb17 	ldw	r5,-148(fp)
10000f30:	e13fd917 	ldw	r4,-156(fp)
10000f34:	00004e40 	call	100004e4 <enqueue>
                    enqueue(yQueue, curY-1);
10000f38:	e0bfdc17 	ldw	r2,-144(fp)
10000f3c:	10bfffc4 	addi	r2,r2,-1
10000f40:	100b883a 	mov	r5,r2
10000f44:	e13fda17 	ldw	r4,-152(fp)
10000f48:	00004e40 	call	100004e4 <enqueue>
10000f4c:	00001306 	br	10000f9c <generateDungeon+0x2c0>
                }
            }
            else{
                unsigned char topRoom = rooms[curY-1][curX];
10000f50:	e0bfdc17 	ldw	r2,-144(fp)
10000f54:	10bfffc4 	addi	r2,r2,-1
10000f58:	040400b4 	movhi	r16,4098
10000f5c:	84010a04 	addi	r16,r16,1064
10000f60:	01400144 	movi	r5,5
10000f64:	1009883a 	mov	r4,r2
10000f68:	00034380 	call	10003438 <__mulsi3>
10000f6c:	8087883a 	add	r3,r16,r2
10000f70:	e0bfdb17 	ldw	r2,-148(fp)
10000f74:	1885883a 	add	r2,r3,r2
10000f78:	10800003 	ldbu	r2,0(r2)
10000f7c:	e0bfde05 	stb	r2,-136(fp)
                if(hasBottomDoor(topRoom))
10000f80:	e0bfde03 	ldbu	r2,-136(fp)
10000f84:	1009883a 	mov	r4,r2
10000f88:	00007180 	call	10000718 <hasBottomDoor>
10000f8c:	10000326 	beq	r2,zero,10000f9c <generateDungeon+0x2c0>
                    curRoom|=top;
10000f90:	e0bfd803 	ldbu	r2,-160(fp)
10000f94:	10800214 	ori	r2,r2,8
10000f98:	e0bfd805 	stb	r2,-160(fp)
            }
        }
        
        if(checkBottomOOB(curX,curY)){
10000f9c:	e17fdc17 	ldw	r5,-144(fp)
10000fa0:	e13fdb17 	ldw	r4,-148(fp)
10000fa4:	0000c200 	call	10000c20 <checkBottomOOB>
10000fa8:	10003326 	beq	r2,zero,10001078 <generateDungeon+0x39c>
            int bottomRoomVisited = visited[curY+1][curX];
10000fac:	e0bfdc17 	ldw	r2,-144(fp)
10000fb0:	10800044 	addi	r2,r2,1
10000fb4:	01400144 	movi	r5,5
10000fb8:	1009883a 	mov	r4,r2
10000fbc:	00034380 	call	10003438 <__mulsi3>
10000fc0:	1007883a 	mov	r3,r2
10000fc4:	e0bfdb17 	ldw	r2,-148(fp)
10000fc8:	1885883a 	add	r2,r3,r2
10000fcc:	1085883a 	add	r2,r2,r2
10000fd0:	1085883a 	add	r2,r2,r2
10000fd4:	e0ffd604 	addi	r3,fp,-168
10000fd8:	1885883a 	add	r2,r3,r2
10000fdc:	10800f04 	addi	r2,r2,60
10000fe0:	10800017 	ldw	r2,0(r2)
10000fe4:	e0bfdf15 	stw	r2,-132(fp)
            if(!bottomRoomVisited){
10000fe8:	e0bfdf17 	ldw	r2,-132(fp)
10000fec:	10000f1e 	bne	r2,zero,1000102c <generateDungeon+0x350>
                if(rand()%2){
10000ff0:	0003e0c0 	call	10003e0c <rand>
10000ff4:	1080004c 	andi	r2,r2,1
10000ff8:	10001f26 	beq	r2,zero,10001078 <generateDungeon+0x39c>
                    curRoom|=bottom;
10000ffc:	e0bfd803 	ldbu	r2,-160(fp)
10001000:	10800114 	ori	r2,r2,4
10001004:	e0bfd805 	stb	r2,-160(fp)
                    enqueue(xQueue, curX);
10001008:	e17fdb17 	ldw	r5,-148(fp)
1000100c:	e13fd917 	ldw	r4,-156(fp)
10001010:	00004e40 	call	100004e4 <enqueue>
                    enqueue(yQueue, curY+1);
10001014:	e0bfdc17 	ldw	r2,-144(fp)
10001018:	10800044 	addi	r2,r2,1
1000101c:	100b883a 	mov	r5,r2
10001020:	e13fda17 	ldw	r4,-152(fp)
10001024:	00004e40 	call	100004e4 <enqueue>
10001028:	00001306 	br	10001078 <generateDungeon+0x39c>
                }
            }
            else{
                unsigned char bottomRoom = rooms[curY+1][curX];
1000102c:	e0bfdc17 	ldw	r2,-144(fp)
10001030:	10800044 	addi	r2,r2,1
10001034:	040400b4 	movhi	r16,4098
10001038:	84010a04 	addi	r16,r16,1064
1000103c:	01400144 	movi	r5,5
10001040:	1009883a 	mov	r4,r2
10001044:	00034380 	call	10003438 <__mulsi3>
10001048:	8087883a 	add	r3,r16,r2
1000104c:	e0bfdb17 	ldw	r2,-148(fp)
10001050:	1885883a 	add	r2,r3,r2
10001054:	10800003 	ldbu	r2,0(r2)
10001058:	e0bfe005 	stb	r2,-128(fp)
                if(hasTopDoor(bottomRoom))
1000105c:	e0bfe003 	ldbu	r2,-128(fp)
10001060:	1009883a 	mov	r4,r2
10001064:	00006ec0 	call	100006ec <hasTopDoor>
10001068:	10000326 	beq	r2,zero,10001078 <generateDungeon+0x39c>
                    curRoom|=bottom;
1000106c:	e0bfd803 	ldbu	r2,-160(fp)
10001070:	10800114 	ori	r2,r2,4
10001074:	e0bfd805 	stb	r2,-160(fp)
            }
        }
        
        if(checkLeftOOB(curX,curY)){
10001078:	e17fdc17 	ldw	r5,-144(fp)
1000107c:	e13fdb17 	ldw	r4,-148(fp)
10001080:	0000c600 	call	10000c60 <checkLeftOOB>
10001084:	10003126 	beq	r2,zero,1000114c <generateDungeon+0x470>
            int leftRoomVisited = visited[curY][curX-1];
10001088:	e0bfdb17 	ldw	r2,-148(fp)
1000108c:	143fffc4 	addi	r16,r2,-1
10001090:	e0bfdc17 	ldw	r2,-144(fp)
10001094:	01400144 	movi	r5,5
10001098:	1009883a 	mov	r4,r2
1000109c:	00034380 	call	10003438 <__mulsi3>
100010a0:	1405883a 	add	r2,r2,r16
100010a4:	1085883a 	add	r2,r2,r2
100010a8:	1085883a 	add	r2,r2,r2
100010ac:	e0ffd604 	addi	r3,fp,-168
100010b0:	1885883a 	add	r2,r3,r2
100010b4:	10800f04 	addi	r2,r2,60
100010b8:	10800017 	ldw	r2,0(r2)
100010bc:	e0bfe115 	stw	r2,-124(fp)
            if(!leftRoomVisited){
100010c0:	e0bfe117 	ldw	r2,-124(fp)
100010c4:	10000f1e 	bne	r2,zero,10001104 <generateDungeon+0x428>
                if(rand()%2){
100010c8:	0003e0c0 	call	10003e0c <rand>
100010cc:	1080004c 	andi	r2,r2,1
100010d0:	10001e26 	beq	r2,zero,1000114c <generateDungeon+0x470>
                    curRoom|=left;
100010d4:	e0bfd803 	ldbu	r2,-160(fp)
100010d8:	10800094 	ori	r2,r2,2
100010dc:	e0bfd805 	stb	r2,-160(fp)
                    enqueue(xQueue, curX-1);
100010e0:	e0bfdb17 	ldw	r2,-148(fp)
100010e4:	10bfffc4 	addi	r2,r2,-1
100010e8:	100b883a 	mov	r5,r2
100010ec:	e13fd917 	ldw	r4,-156(fp)
100010f0:	00004e40 	call	100004e4 <enqueue>
                    enqueue(yQueue, curY);
100010f4:	e17fdc17 	ldw	r5,-144(fp)
100010f8:	e13fda17 	ldw	r4,-152(fp)
100010fc:	00004e40 	call	100004e4 <enqueue>
10001100:	00001206 	br	1000114c <generateDungeon+0x470>
                }
            }
            else{
                unsigned char leftRoom = rooms[curY][curX-1];
10001104:	e0bfdb17 	ldw	r2,-148(fp)
10001108:	147fffc4 	addi	r17,r2,-1
1000110c:	040400b4 	movhi	r16,4098
10001110:	84010a04 	addi	r16,r16,1064
10001114:	e0bfdc17 	ldw	r2,-144(fp)
10001118:	01400144 	movi	r5,5
1000111c:	1009883a 	mov	r4,r2
10001120:	00034380 	call	10003438 <__mulsi3>
10001124:	8085883a 	add	r2,r16,r2
10001128:	1445883a 	add	r2,r2,r17
1000112c:	10800003 	ldbu	r2,0(r2)
10001130:	e0bfe205 	stb	r2,-120(fp)
                if(leftRoom & right)
10001134:	e0bfe203 	ldbu	r2,-120(fp)
10001138:	1080004c 	andi	r2,r2,1
1000113c:	10000326 	beq	r2,zero,1000114c <generateDungeon+0x470>
                    curRoom|=left;
10001140:	e0bfd803 	ldbu	r2,-160(fp)
10001144:	10800094 	ori	r2,r2,2
10001148:	e0bfd805 	stb	r2,-160(fp)
            }
        }
        
        if(checkRightOOB(curX,curY)){
1000114c:	e17fdc17 	ldw	r5,-144(fp)
10001150:	e13fdb17 	ldw	r4,-148(fp)
10001154:	0000c9c0 	call	10000c9c <checkRightOOB>
10001158:	10003126 	beq	r2,zero,10001220 <generateDungeon+0x544>
            int rightRoomVisited = visited[curY][curX+1];
1000115c:	e0bfdb17 	ldw	r2,-148(fp)
10001160:	14000044 	addi	r16,r2,1
10001164:	e0bfdc17 	ldw	r2,-144(fp)
10001168:	01400144 	movi	r5,5
1000116c:	1009883a 	mov	r4,r2
10001170:	00034380 	call	10003438 <__mulsi3>
10001174:	1405883a 	add	r2,r2,r16
10001178:	1085883a 	add	r2,r2,r2
1000117c:	1085883a 	add	r2,r2,r2
10001180:	e0ffd604 	addi	r3,fp,-168
10001184:	1885883a 	add	r2,r3,r2
10001188:	10800f04 	addi	r2,r2,60
1000118c:	10800017 	ldw	r2,0(r2)
10001190:	e0bfe315 	stw	r2,-116(fp)
            if(!rightRoomVisited){
10001194:	e0bfe317 	ldw	r2,-116(fp)
10001198:	10000f1e 	bne	r2,zero,100011d8 <generateDungeon+0x4fc>
                if(rand()%2){
1000119c:	0003e0c0 	call	10003e0c <rand>
100011a0:	1080004c 	andi	r2,r2,1
100011a4:	10001e26 	beq	r2,zero,10001220 <generateDungeon+0x544>
                    curRoom|=right;
100011a8:	e0bfd803 	ldbu	r2,-160(fp)
100011ac:	10800054 	ori	r2,r2,1
100011b0:	e0bfd805 	stb	r2,-160(fp)
                    enqueue(xQueue, curX+1);
100011b4:	e0bfdb17 	ldw	r2,-148(fp)
100011b8:	10800044 	addi	r2,r2,1
100011bc:	100b883a 	mov	r5,r2
100011c0:	e13fd917 	ldw	r4,-156(fp)
100011c4:	00004e40 	call	100004e4 <enqueue>
                    enqueue(yQueue, curY);
100011c8:	e17fdc17 	ldw	r5,-144(fp)
100011cc:	e13fda17 	ldw	r4,-152(fp)
100011d0:	00004e40 	call	100004e4 <enqueue>
100011d4:	00001206 	br	10001220 <generateDungeon+0x544>
                }
            }
            else{
                unsigned char rightRoom = rooms[curY][curX+1];
100011d8:	e0bfdb17 	ldw	r2,-148(fp)
100011dc:	14400044 	addi	r17,r2,1
100011e0:	040400b4 	movhi	r16,4098
100011e4:	84010a04 	addi	r16,r16,1064
100011e8:	e0bfdc17 	ldw	r2,-144(fp)
100011ec:	01400144 	movi	r5,5
100011f0:	1009883a 	mov	r4,r2
100011f4:	00034380 	call	10003438 <__mulsi3>
100011f8:	8085883a 	add	r2,r16,r2
100011fc:	1445883a 	add	r2,r2,r17
10001200:	10800003 	ldbu	r2,0(r2)
10001204:	e0bfe405 	stb	r2,-112(fp)
                if(rightRoom & left)
10001208:	e0bfe403 	ldbu	r2,-112(fp)
1000120c:	1080008c 	andi	r2,r2,2
10001210:	10000326 	beq	r2,zero,10001220 <generateDungeon+0x544>
                    curRoom|=right;
10001214:	e0bfd803 	ldbu	r2,-160(fp)
10001218:	10800054 	ori	r2,r2,1
1000121c:	e0bfd805 	stb	r2,-160(fp)
            }
        }
        
        rooms[curY][curX] = curRoom;
10001220:	040400b4 	movhi	r16,4098
10001224:	84010a04 	addi	r16,r16,1064
10001228:	e0bfdc17 	ldw	r2,-144(fp)
1000122c:	01400144 	movi	r5,5
10001230:	1009883a 	mov	r4,r2
10001234:	00034380 	call	10003438 <__mulsi3>
10001238:	8087883a 	add	r3,r16,r2
1000123c:	e0bfdb17 	ldw	r2,-148(fp)
10001240:	1885883a 	add	r2,r3,r2
10001244:	e0ffd803 	ldbu	r3,-160(fp)
10001248:	10c00005 	stb	r3,0(r2)
    
    enqueue(xQueue, ROOM_MIDDLE_X);
    enqueue(yQueue, ROOM_MIDDLE_Y-1);
    

    while(!isEmpty(xQueue)){
1000124c:	e13fd917 	ldw	r4,-156(fp)
10001250:	00004b40 	call	100004b4 <isEmpty>
10001254:	103ef326 	beq	r2,zero,10000e24 <__alt_data_end+0xf8000e24>
            }
        }
        
        rooms[curY][curX] = curRoom;
    }
}
10001258:	0001883a 	nop
1000125c:	e6fffe04 	addi	sp,fp,-8
10001260:	dfc00317 	ldw	ra,12(sp)
10001264:	df000217 	ldw	fp,8(sp)
10001268:	dc400117 	ldw	r17,4(sp)
1000126c:	dc000017 	ldw	r16,0(sp)
10001270:	dec00404 	addi	sp,sp,16
10001274:	f800283a 	ret

10001278 <main>:
//
//                                Main function
//
//----------------------------------------------------------------------------------------//
int main(void)
{
10001278:	deffed04 	addi	sp,sp,-76
1000127c:	dfc01215 	stw	ra,72(sp)
10001280:	df001115 	stw	fp,68(sp)
10001284:	dc001015 	stw	r16,64(sp)
10001288:	df001104 	addi	fp,sp,68
	char seed[20];
	scanf("%s", seed);
1000128c:	e0bffa04 	addi	r2,fp,-24
10001290:	100b883a 	mov	r5,r2
10001294:	010400b4 	movhi	r4,4098
10001298:	212fc304 	addi	r4,r4,-16628
1000129c:	0003ec40 	call	10003ec4 <scanf>
	srand(seed);
100012a0:	e0bffa04 	addi	r2,fp,-24
100012a4:	1009883a 	mov	r4,r2
100012a8:	0003df40 	call	10003df4 <srand>
	generateDungeon();
100012ac:	0000cdc0 	call	10000cdc <generateDungeon>

	volatile unsigned char * roomPtr = (unsigned char *) 0x200;
100012b0:	00808004 	movi	r2,512
100012b4:	e0bff215 	stw	r2,-56(fp)
	volatile unsigned char * roomNumber = (unsigned char *) 0x120;
100012b8:	00804804 	movi	r2,288
100012bc:	e0bff315 	stw	r2,-52(fp)

	*roomNumber = numOfRooms;
100012c0:	d0e00003 	ldbu	r3,-32768(gp)
100012c4:	e0bff317 	ldw	r2,-52(fp)
100012c8:	10c00005 	stb	r3,0(r2)

	for(int j = 0; j < ROOM_HEIGHT; j++){
100012cc:	e03fef15 	stw	zero,-68(fp)
100012d0:	00002006 	br	10001354 <main+0xdc>
		for(int i = 0; i < ROOM_WIDTH; i++){
100012d4:	e03ff015 	stw	zero,-64(fp)
100012d8:	00001806 	br	1000133c <main+0xc4>
			roomPtr = (unsigned char *) (0x200 + 0x10*((j*ROOM_WIDTH)+i) );
100012dc:	01400144 	movi	r5,5
100012e0:	e13fef17 	ldw	r4,-68(fp)
100012e4:	00034380 	call	10003438 <__mulsi3>
100012e8:	1007883a 	mov	r3,r2
100012ec:	e0bff017 	ldw	r2,-64(fp)
100012f0:	1885883a 	add	r2,r3,r2
100012f4:	10800804 	addi	r2,r2,32
100012f8:	1004913a 	slli	r2,r2,4
100012fc:	e0bff215 	stw	r2,-56(fp)
			*roomPtr = rooms[j][i];
10001300:	040400b4 	movhi	r16,4098
10001304:	84010a04 	addi	r16,r16,1064
10001308:	e0bfef17 	ldw	r2,-68(fp)
1000130c:	01400144 	movi	r5,5
10001310:	1009883a 	mov	r4,r2
10001314:	00034380 	call	10003438 <__mulsi3>
10001318:	8087883a 	add	r3,r16,r2
1000131c:	e0bff017 	ldw	r2,-64(fp)
10001320:	1885883a 	add	r2,r3,r2
10001324:	10c00003 	ldbu	r3,0(r2)
10001328:	e0bff217 	ldw	r2,-56(fp)
1000132c:	10c00005 	stb	r3,0(r2)
	volatile unsigned char * roomNumber = (unsigned char *) 0x120;

	*roomNumber = numOfRooms;

	for(int j = 0; j < ROOM_HEIGHT; j++){
		for(int i = 0; i < ROOM_WIDTH; i++){
10001330:	e0bff017 	ldw	r2,-64(fp)
10001334:	10800044 	addi	r2,r2,1
10001338:	e0bff015 	stw	r2,-64(fp)
1000133c:	e0bff017 	ldw	r2,-64(fp)
10001340:	10800150 	cmplti	r2,r2,5
10001344:	103fe51e 	bne	r2,zero,100012dc <__alt_data_end+0xf80012dc>
	volatile unsigned char * roomPtr = (unsigned char *) 0x200;
	volatile unsigned char * roomNumber = (unsigned char *) 0x120;

	*roomNumber = numOfRooms;

	for(int j = 0; j < ROOM_HEIGHT; j++){
10001348:	e0bfef17 	ldw	r2,-68(fp)
1000134c:	10800044 	addi	r2,r2,1
10001350:	e0bfef15 	stw	r2,-68(fp)
10001354:	e0bfef17 	ldw	r2,-68(fp)
10001358:	10800150 	cmplti	r2,r2,5
1000135c:	103fdd1e 	bne	r2,zero,100012d4 <__alt_data_end+0xf80012d4>
			roomPtr = (unsigned char *) (0x200 + 0x10*((j*ROOM_WIDTH)+i) );
			*roomPtr = rooms[j][i];
		}
	}

	printRoom();
10001360:	000079c0 	call	1000079c <printRoom>


	IO_init();
10001364:	000026c0 	call	1000026c <IO_init>

	alt_u16 intStat;
	alt_u16 usb_ctl_val;
	static alt_u16 ctl_reg = 0;
	static alt_u16 no_device = 0;
	alt_u16 fs_device = 0;
10001368:	e03ff40d 	sth	zero,-48(fp)
	int keycode = 0;
1000136c:	e03ff515 	stw	zero,-44(fp)
	alt_u8 toggle = 0;
10001370:	e03ff185 	stb	zero,-58(fp)
	alt_u8 data_size;
	alt_u8 hot_plug_count;
	alt_u16 code;

	printf("USB keyboard setup...\n\n");
10001374:	010400b4 	movhi	r4,4098
10001378:	212fc404 	addi	r4,r4,-16624
1000137c:	0003de00 	call	10003de0 <puts>

	//----------------------------------------SIE1 initial---------------------------------------------------//
	USB_HOT_PLUG:
	UsbSoftReset();
10001380:	00021ac0 	call	100021ac <UsbSoftReset>

	// STEP 1a:
	UsbWrite (HPI_SIE1_MSG_ADR, 0);
10001384:	000b883a 	mov	r5,zero
10001388:	01005104 	movi	r4,324
1000138c:	00021100 	call	10002110 <UsbWrite>
	UsbWrite (HOST1_STAT_REG, 0xFFFF);
10001390:	017fffd4 	movui	r5,65535
10001394:	01302414 	movui	r4,49296
10001398:	00021100 	call	10002110 <UsbWrite>

	/* Set HUSB_pEOT time */
	UsbWrite(HUSB_pEOT, 600); // adjust the according to your USB device speed
1000139c:	01409604 	movi	r5,600
100013a0:	01006d04 	movi	r4,436
100013a4:	00021100 	call	10002110 <UsbWrite>

	usb_ctl_val = SOFEOP1_TO_CPU_EN | RESUME1_TO_HPI_EN;// | SOFEOP1_TO_HPI_EN;
100013a8:	00811004 	movi	r2,1088
100013ac:	e0bff10d 	sth	r2,-60(fp)
	UsbWrite(HPI_IRQ_ROUTING_REG, usb_ctl_val);
100013b0:	e0bff10b 	ldhu	r2,-60(fp)
100013b4:	100b883a 	mov	r5,r2
100013b8:	01005084 	movi	r4,322
100013bc:	00021100 	call	10002110 <UsbWrite>

	intStat = A_CHG_IRQ_EN | SOF_EOP_IRQ_EN ;
100013c0:	00808404 	movi	r2,528
100013c4:	e0bff60d 	sth	r2,-40(fp)
	UsbWrite(HOST1_IRQ_EN_REG, intStat);
100013c8:	e0bff60b 	ldhu	r2,-40(fp)
100013cc:	100b883a 	mov	r5,r2
100013d0:	01302314 	movui	r4,49292
100013d4:	00021100 	call	10002110 <UsbWrite>
	// STEP 1a end

	// STEP 1b begin
	UsbWrite(COMM_R0,0x0000);//reset time
100013d8:	000b883a 	mov	r5,zero
100013dc:	01007104 	movi	r4,452
100013e0:	00021100 	call	10002110 <UsbWrite>
	UsbWrite(COMM_R1,0x0000);  //port number
100013e4:	000b883a 	mov	r5,zero
100013e8:	01007184 	movi	r4,454
100013ec:	00021100 	call	10002110 <UsbWrite>
	UsbWrite(COMM_R2,0x0000);  //r1
100013f0:	000b883a 	mov	r5,zero
100013f4:	01007204 	movi	r4,456
100013f8:	00021100 	call	10002110 <UsbWrite>
	UsbWrite(COMM_R3,0x0000);  //r1
100013fc:	000b883a 	mov	r5,zero
10001400:	01007284 	movi	r4,458
10001404:	00021100 	call	10002110 <UsbWrite>
	UsbWrite(COMM_R4,0x0000);  //r1
10001408:	000b883a 	mov	r5,zero
1000140c:	01007304 	movi	r4,460
10001410:	00021100 	call	10002110 <UsbWrite>
	UsbWrite(COMM_R5,0x0000);  //r1
10001414:	000b883a 	mov	r5,zero
10001418:	01007384 	movi	r4,462
1000141c:	00021100 	call	10002110 <UsbWrite>
	UsbWrite(COMM_R6,0x0000);  //r1
10001420:	000b883a 	mov	r5,zero
10001424:	01007404 	movi	r4,464
10001428:	00021100 	call	10002110 <UsbWrite>
	UsbWrite(COMM_R7,0x0000);  //r1
1000142c:	000b883a 	mov	r5,zero
10001430:	01007484 	movi	r4,466
10001434:	00021100 	call	10002110 <UsbWrite>
	UsbWrite(COMM_R8,0x0000);  //r1
10001438:	000b883a 	mov	r5,zero
1000143c:	01007504 	movi	r4,468
10001440:	00021100 	call	10002110 <UsbWrite>
	UsbWrite(COMM_R9,0x0000);  //r1
10001444:	000b883a 	mov	r5,zero
10001448:	01007584 	movi	r4,470
1000144c:	00021100 	call	10002110 <UsbWrite>
	UsbWrite(COMM_R10,0x0000);  //r1
10001450:	000b883a 	mov	r5,zero
10001454:	01007604 	movi	r4,472
10001458:	00021100 	call	10002110 <UsbWrite>
	UsbWrite(COMM_R11,0x0000);  //r1
1000145c:	000b883a 	mov	r5,zero
10001460:	01007684 	movi	r4,474
10001464:	00021100 	call	10002110 <UsbWrite>
	UsbWrite(COMM_R12,0x0000);  //r1
10001468:	000b883a 	mov	r5,zero
1000146c:	01007704 	movi	r4,476
10001470:	00021100 	call	10002110 <UsbWrite>
	UsbWrite(COMM_R13,0x0000);  //r1
10001474:	000b883a 	mov	r5,zero
10001478:	01007784 	movi	r4,478
1000147c:	00021100 	call	10002110 <UsbWrite>
	UsbWrite(COMM_INT_NUM,HUSB_SIE1_INIT_INT); //HUSB_SIE1_INIT_INT
10001480:	01401c84 	movi	r5,114
10001484:	01007084 	movi	r4,450
10001488:	00021100 	call	10002110 <UsbWrite>
	IO_write(HPI_MAILBOX,COMM_EXEC_INT);
1000148c:	01738054 	movui	r5,52737
10001490:	01000044 	movi	r4,1
10001494:	00002f40 	call	100002f4 <IO_write>

	while (!(IO_read(HPI_STATUS) & 0xFFFF) )  //read sie1 msg register
10001498:	0001883a 	nop
1000149c:	010000c4 	movi	r4,3
100014a0:	00003700 	call	10000370 <IO_read>
100014a4:	10bfffcc 	andi	r2,r2,65535
100014a8:	103ffc26 	beq	r2,zero,1000149c <__alt_data_end+0xf800149c>
	{
	}
	while (IO_read(HPI_MAILBOX) != COMM_ACK)
100014ac:	00000806 	br	100014d0 <main+0x258>
	{
		printf("[ERROR]:routine mailbox data is %x\n",IO_read(HPI_MAILBOX));
100014b0:	01000044 	movi	r4,1
100014b4:	00003700 	call	10000370 <IO_read>
100014b8:	10bfffcc 	andi	r2,r2,65535
100014bc:	100b883a 	mov	r5,r2
100014c0:	010400b4 	movhi	r4,4098
100014c4:	212fca04 	addi	r4,r4,-16600
100014c8:	0003cc40 	call	10003cc4 <printf>
		goto USB_HOT_PLUG;
100014cc:	003fac06 	br	10001380 <__alt_data_end+0xf8001380>
	IO_write(HPI_MAILBOX,COMM_EXEC_INT);

	while (!(IO_read(HPI_STATUS) & 0xFFFF) )  //read sie1 msg register
	{
	}
	while (IO_read(HPI_MAILBOX) != COMM_ACK)
100014d0:	01000044 	movi	r4,1
100014d4:	00003700 	call	10000370 <IO_read>
100014d8:	10bfffcc 	andi	r2,r2,65535
100014dc:	1083fb58 	cmpnei	r2,r2,4077
100014e0:	103ff31e 	bne	r2,zero,100014b0 <__alt_data_end+0xf80014b0>
		printf("[ERROR]:routine mailbox data is %x\n",IO_read(HPI_MAILBOX));
		goto USB_HOT_PLUG;
	}
	// STEP 1b end

	printf("STEP 1 Complete");
100014e4:	010400b4 	movhi	r4,4098
100014e8:	212fd304 	addi	r4,r4,-16564
100014ec:	0003cc40 	call	10003cc4 <printf>
	// STEP 2 begin
	UsbWrite(COMM_INT_NUM,HUSB_RESET_INT); //husb reset
100014f0:	01401d04 	movi	r5,116
100014f4:	01007084 	movi	r4,450
100014f8:	00021100 	call	10002110 <UsbWrite>
	UsbWrite(COMM_R0,0x003c);//reset time
100014fc:	01400f04 	movi	r5,60
10001500:	01007104 	movi	r4,452
10001504:	00021100 	call	10002110 <UsbWrite>
	UsbWrite(COMM_R1,0x0000);  //port number
10001508:	000b883a 	mov	r5,zero
1000150c:	01007184 	movi	r4,454
10001510:	00021100 	call	10002110 <UsbWrite>
	UsbWrite(COMM_R2,0x0000);  //r1
10001514:	000b883a 	mov	r5,zero
10001518:	01007204 	movi	r4,456
1000151c:	00021100 	call	10002110 <UsbWrite>
	UsbWrite(COMM_R3,0x0000);  //r1
10001520:	000b883a 	mov	r5,zero
10001524:	01007284 	movi	r4,458
10001528:	00021100 	call	10002110 <UsbWrite>
	UsbWrite(COMM_R4,0x0000);  //r1
1000152c:	000b883a 	mov	r5,zero
10001530:	01007304 	movi	r4,460
10001534:	00021100 	call	10002110 <UsbWrite>
	UsbWrite(COMM_R5,0x0000);  //r1
10001538:	000b883a 	mov	r5,zero
1000153c:	01007384 	movi	r4,462
10001540:	00021100 	call	10002110 <UsbWrite>
	UsbWrite(COMM_R6,0x0000);  //r1
10001544:	000b883a 	mov	r5,zero
10001548:	01007404 	movi	r4,464
1000154c:	00021100 	call	10002110 <UsbWrite>
	UsbWrite(COMM_R7,0x0000);  //r1
10001550:	000b883a 	mov	r5,zero
10001554:	01007484 	movi	r4,466
10001558:	00021100 	call	10002110 <UsbWrite>
	UsbWrite(COMM_R8,0x0000);  //r1
1000155c:	000b883a 	mov	r5,zero
10001560:	01007504 	movi	r4,468
10001564:	00021100 	call	10002110 <UsbWrite>
	UsbWrite(COMM_R9,0x0000);  //r1
10001568:	000b883a 	mov	r5,zero
1000156c:	01007584 	movi	r4,470
10001570:	00021100 	call	10002110 <UsbWrite>
	UsbWrite(COMM_R10,0x0000);  //r1
10001574:	000b883a 	mov	r5,zero
10001578:	01007604 	movi	r4,472
1000157c:	00021100 	call	10002110 <UsbWrite>
	UsbWrite(COMM_R11,0x0000);  //r1
10001580:	000b883a 	mov	r5,zero
10001584:	01007684 	movi	r4,474
10001588:	00021100 	call	10002110 <UsbWrite>
	UsbWrite(COMM_R12,0x0000);  //r1
1000158c:	000b883a 	mov	r5,zero
10001590:	01007704 	movi	r4,476
10001594:	00021100 	call	10002110 <UsbWrite>
	UsbWrite(COMM_R13,0x0000);  //r1
10001598:	000b883a 	mov	r5,zero
1000159c:	01007784 	movi	r4,478
100015a0:	00021100 	call	10002110 <UsbWrite>

	IO_write(HPI_MAILBOX,COMM_EXEC_INT);
100015a4:	01738054 	movui	r5,52737
100015a8:	01000044 	movi	r4,1
100015ac:	00002f40 	call	100002f4 <IO_write>

	while (IO_read(HPI_MAILBOX) != COMM_ACK)
100015b0:	0001883a 	nop
100015b4:	01000044 	movi	r4,1
100015b8:	00003700 	call	10000370 <IO_read>
100015bc:	10bfffcc 	andi	r2,r2,65535
100015c0:	1083fb58 	cmpnei	r2,r2,4077
100015c4:	10000826 	beq	r2,zero,100015e8 <main+0x370>
	{
		printf("[ERROR]:routine mailbox data is %x\n",IO_read(HPI_MAILBOX));
100015c8:	01000044 	movi	r4,1
100015cc:	00003700 	call	10000370 <IO_read>
100015d0:	10bfffcc 	andi	r2,r2,65535
100015d4:	100b883a 	mov	r5,r2
100015d8:	010400b4 	movhi	r4,4098
100015dc:	212fca04 	addi	r4,r4,-16600
100015e0:	0003cc40 	call	10003cc4 <printf>
		goto USB_HOT_PLUG;
100015e4:	003f6606 	br	10001380 <__alt_data_end+0xf8001380>
	}
	// STEP 2 end

	ctl_reg = USB1_CTL_REG;
100015e8:	00b02284 	movi	r2,-16246
100015ec:	d0a6d10d 	sth	r2,-25788(gp)
	no_device = (A_DP_STAT | A_DM_STAT);
100015f0:	008c0004 	movi	r2,12288
100015f4:	d0a6d18d 	sth	r2,-25786(gp)
	fs_device = A_DP_STAT;
100015f8:	00880004 	movi	r2,8192
100015fc:	e0bff40d 	sth	r2,-48(fp)
	usb_ctl_val = UsbRead(ctl_reg);
10001600:	d0a6d10b 	ldhu	r2,-25788(gp)
10001604:	10bfffcc 	andi	r2,r2,65535
10001608:	1009883a 	mov	r4,r2
1000160c:	00021680 	call	10002168 <UsbRead>
10001610:	e0bff10d 	sth	r2,-60(fp)

	if (!(usb_ctl_val & no_device))
10001614:	d0a6d18b 	ldhu	r2,-25786(gp)
10001618:	e0fff10b 	ldhu	r3,-60(fp)
1000161c:	1884703a 	and	r2,r3,r2
10001620:	10bfffcc 	andi	r2,r2,65535
10001624:	1000351e 	bne	r2,zero,100016fc <main+0x484>
	{
		for(hot_plug_count = 0 ; hot_plug_count < 5 ; hot_plug_count++)
10001628:	e03ff1c5 	stb	zero,-57(fp)
1000162c:	00000f06 	br	1000166c <main+0x3f4>
		{
			usleep(5*1000);
10001630:	0104e204 	movi	r4,5000
10001634:	0019e380 	call	10019e38 <usleep>
			usb_ctl_val = UsbRead(ctl_reg);
10001638:	d0a6d10b 	ldhu	r2,-25788(gp)
1000163c:	10bfffcc 	andi	r2,r2,65535
10001640:	1009883a 	mov	r4,r2
10001644:	00021680 	call	10002168 <UsbRead>
10001648:	e0bff10d 	sth	r2,-60(fp)
			if(usb_ctl_val & no_device) break;
1000164c:	d0a6d18b 	ldhu	r2,-25786(gp)
10001650:	e0fff10b 	ldhu	r3,-60(fp)
10001654:	1884703a 	and	r2,r3,r2
10001658:	10bfffcc 	andi	r2,r2,65535
1000165c:	1000071e 	bne	r2,zero,1000167c <main+0x404>
	fs_device = A_DP_STAT;
	usb_ctl_val = UsbRead(ctl_reg);

	if (!(usb_ctl_val & no_device))
	{
		for(hot_plug_count = 0 ; hot_plug_count < 5 ; hot_plug_count++)
10001660:	e0bff1c3 	ldbu	r2,-57(fp)
10001664:	10800044 	addi	r2,r2,1
10001668:	e0bff1c5 	stb	r2,-57(fp)
1000166c:	e0bff1c3 	ldbu	r2,-57(fp)
10001670:	10800170 	cmpltui	r2,r2,5
10001674:	103fee1e 	bne	r2,zero,10001630 <__alt_data_end+0xf8001630>
10001678:	00000106 	br	10001680 <main+0x408>
		{
			usleep(5*1000);
			usb_ctl_val = UsbRead(ctl_reg);
			if(usb_ctl_val & no_device) break;
1000167c:	0001883a 	nop
		}
		if(!(usb_ctl_val & no_device))
10001680:	d0a6d18b 	ldhu	r2,-25786(gp)
10001684:	e0fff10b 	ldhu	r3,-60(fp)
10001688:	1884703a 	and	r2,r3,r2
1000168c:	10bfffcc 	andi	r2,r2,65535
10001690:	1000261e 	bne	r2,zero,1000172c <main+0x4b4>
		{
			printf("\n[INFO]: no device is present in SIE1!\n");
10001694:	010400b4 	movhi	r4,4098
10001698:	212fd704 	addi	r4,r4,-16548
1000169c:	0003de00 	call	10003de0 <puts>
			printf("[INFO]: please insert a USB keyboard in SIE1!\n");
100016a0:	010400b4 	movhi	r4,4098
100016a4:	212fe104 	addi	r4,r4,-16508
100016a8:	0003de00 	call	10003de0 <puts>
			while (!(usb_ctl_val & no_device))
100016ac:	00000d06 	br	100016e4 <main+0x46c>
			{
				usb_ctl_val = UsbRead(ctl_reg);
100016b0:	d0a6d10b 	ldhu	r2,-25788(gp)
100016b4:	10bfffcc 	andi	r2,r2,65535
100016b8:	1009883a 	mov	r4,r2
100016bc:	00021680 	call	10002168 <UsbRead>
100016c0:	e0bff10d 	sth	r2,-60(fp)
				if(usb_ctl_val & no_device)
100016c4:	d0a6d18b 	ldhu	r2,-25786(gp)
100016c8:	e0fff10b 	ldhu	r3,-60(fp)
100016cc:	1884703a 	and	r2,r3,r2
100016d0:	10bfffcc 	andi	r2,r2,65535
100016d4:	10000126 	beq	r2,zero,100016dc <main+0x464>
					goto USB_HOT_PLUG;
100016d8:	003f2906 	br	10001380 <__alt_data_end+0xf8001380>

				usleep(2000);
100016dc:	0101f404 	movi	r4,2000
100016e0:	0019e380 	call	10019e38 <usleep>
		}
		if(!(usb_ctl_val & no_device))
		{
			printf("\n[INFO]: no device is present in SIE1!\n");
			printf("[INFO]: please insert a USB keyboard in SIE1!\n");
			while (!(usb_ctl_val & no_device))
100016e4:	d0a6d18b 	ldhu	r2,-25786(gp)
100016e8:	e0fff10b 	ldhu	r3,-60(fp)
100016ec:	1884703a 	and	r2,r3,r2
100016f0:	10bfffcc 	andi	r2,r2,65535
100016f4:	103fee26 	beq	r2,zero,100016b0 <__alt_data_end+0xf80016b0>
100016f8:	00000c06 	br	1000172c <main+0x4b4>
		}
	}
	else
	{
		/* check for low speed or full speed by reading D+ and D- lines */
		if (usb_ctl_val & fs_device)
100016fc:	e0fff10b 	ldhu	r3,-60(fp)
10001700:	e0bff40b 	ldhu	r2,-48(fp)
10001704:	1884703a 	and	r2,r3,r2
10001708:	10bfffcc 	andi	r2,r2,65535
1000170c:	10000426 	beq	r2,zero,10001720 <main+0x4a8>
		{
			printf("[INFO]: full speed device\n");
10001710:	010400b4 	movhi	r4,4098
10001714:	212fed04 	addi	r4,r4,-16460
10001718:	0003de00 	call	10003de0 <puts>
1000171c:	00000306 	br	1000172c <main+0x4b4>
		}
		else
		{
			printf("[INFO]: low speed device\n");
10001720:	010400b4 	movhi	r4,4098
10001724:	212ff404 	addi	r4,r4,-16432
10001728:	0003de00 	call	10003de0 <puts>



	// STEP 3 begin
	//------------------------------------------------------set address -----------------------------------------------------------------
	UsbSetAddress();
1000172c:	00022600 	call	10002260 <UsbSetAddress>

	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10001730:	00000306 	br	10001740 <main+0x4c8>
	{
		UsbSetAddress();
10001734:	00022600 	call	10002260 <UsbSetAddress>
		usleep(10*1000);
10001738:	0109c404 	movi	r4,10000
1000173c:	0019e380 	call	10019e38 <usleep>

	// STEP 3 begin
	//------------------------------------------------------set address -----------------------------------------------------------------
	UsbSetAddress();

	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10001740:	010000c4 	movi	r4,3
10001744:	00003700 	call	10000370 <IO_read>
10001748:	10bfffcc 	andi	r2,r2,65535
1000174c:	1080040c 	andi	r2,r2,16
10001750:	103ff826 	beq	r2,zero,10001734 <__alt_data_end+0xf8001734>
	{
		UsbSetAddress();
		usleep(10*1000);
	}

	UsbWaitTDListDone();
10001754:	00031000 	call	10003100 <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506); // i
10001758:	01414184 	movi	r5,1286
1000175c:	01000084 	movi	r4,2
10001760:	00002f40 	call	100002f4 <IO_write>
	printf("[ENUM PROCESS]:step 3 TD Status Byte is %x\n",IO_read(HPI_DATA));
10001764:	0009883a 	mov	r4,zero
10001768:	00003700 	call	10000370 <IO_read>
1000176c:	10bfffcc 	andi	r2,r2,65535
10001770:	100b883a 	mov	r5,r2
10001774:	010400b4 	movhi	r4,4098
10001778:	212ffb04 	addi	r4,r4,-16404
1000177c:	0003cc40 	call	10003cc4 <printf>

	IO_write(HPI_ADDR,0x0508); // n
10001780:	01414204 	movi	r5,1288
10001784:	01000084 	movi	r4,2
10001788:	00002f40 	call	100002f4 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
1000178c:	0009883a 	mov	r4,zero
10001790:	00003700 	call	10000370 <IO_read>
10001794:	e0bff10d 	sth	r2,-60(fp)
	printf("[ENUM PROCESS]:step 3 TD Control Byte is %x\n",usb_ctl_val);
10001798:	e0bff10b 	ldhu	r2,-60(fp)
1000179c:	100b883a 	mov	r5,r2
100017a0:	010400b4 	movhi	r4,4098
100017a4:	21300604 	addi	r4,r4,-16360
100017a8:	0003cc40 	call	10003cc4 <printf>
	while (usb_ctl_val != 0x03) // retries occurred
100017ac:	e0bff10b 	ldhu	r2,-60(fp)
100017b0:	108000e0 	cmpeqi	r2,r2,3
100017b4:	1000031e 	bne	r2,zero,100017c4 <main+0x54c>
	{
		usb_ctl_val = UsbGetRetryCnt();
100017b8:	00031840 	call	10003184 <UsbGetRetryCnt>
100017bc:	e0bff10d 	sth	r2,-60(fp)

		goto USB_HOT_PLUG;
100017c0:	003eef06 	br	10001380 <__alt_data_end+0xf8001380>
	}

	printf("------------[ENUM PROCESS]:set address done!---------------\n");
100017c4:	010400b4 	movhi	r4,4098
100017c8:	21301204 	addi	r4,r4,-16312
100017cc:	0003de00 	call	10003de0 <puts>

	// STEP 4 begin
	//-------------------------------get device descriptor-1 -----------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbGetDeviceDesc1(); 	// Get Device Descriptor -1
100017d0:	00023600 	call	10002360 <UsbGetDeviceDesc1>

	//usleep(10*1000);
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
100017d4:	00000306 	br	100017e4 <main+0x56c>
	{
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetDeviceDesc1();
100017d8:	00023600 	call	10002360 <UsbGetDeviceDesc1>
		usleep(10*1000);
100017dc:	0109c404 	movi	r4,10000
100017e0:	0019e380 	call	10019e38 <usleep>
	//-------------------------------get device descriptor-1 -----------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbGetDeviceDesc1(); 	// Get Device Descriptor -1

	//usleep(10*1000);
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
100017e4:	010000c4 	movi	r4,3
100017e8:	00003700 	call	10000370 <IO_read>
100017ec:	10bfffcc 	andi	r2,r2,65535
100017f0:	1080040c 	andi	r2,r2,16
100017f4:	103ff826 	beq	r2,zero,100017d8 <__alt_data_end+0xf80017d8>
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetDeviceDesc1();
		usleep(10*1000);
	}

	UsbWaitTDListDone();
100017f8:	00031000 	call	10003100 <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
100017fc:	01414184 	movi	r5,1286
10001800:	01000084 	movi	r4,2
10001804:	00002f40 	call	100002f4 <IO_write>
	printf("[ENUM PROCESS]:step 4 TD Status Byte is %x\n",IO_read(HPI_DATA));
10001808:	0009883a 	mov	r4,zero
1000180c:	00003700 	call	10000370 <IO_read>
10001810:	10bfffcc 	andi	r2,r2,65535
10001814:	100b883a 	mov	r5,r2
10001818:	010400b4 	movhi	r4,4098
1000181c:	21302104 	addi	r4,r4,-16252
10001820:	0003cc40 	call	10003cc4 <printf>

	IO_write(HPI_ADDR,0x0508);
10001824:	01414204 	movi	r5,1288
10001828:	01000084 	movi	r4,2
1000182c:	00002f40 	call	100002f4 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
10001830:	0009883a 	mov	r4,zero
10001834:	00003700 	call	10000370 <IO_read>
10001838:	e0bff10d 	sth	r2,-60(fp)
	printf("[ENUM PROCESS]:step 4 TD Control Byte is %x\n",usb_ctl_val);
1000183c:	e0bff10b 	ldhu	r2,-60(fp)
10001840:	100b883a 	mov	r5,r2
10001844:	010400b4 	movhi	r4,4098
10001848:	21302c04 	addi	r4,r4,-16208
1000184c:	0003cc40 	call	10003cc4 <printf>
	while (usb_ctl_val != 0x03)
10001850:	e0bff10b 	ldhu	r2,-60(fp)
10001854:	108000e0 	cmpeqi	r2,r2,3
10001858:	1000061e 	bne	r2,zero,10001874 <main+0x5fc>
	{
		usb_ctl_val = UsbGetRetryCnt();
1000185c:	00031840 	call	10003184 <UsbGetRetryCnt>
10001860:	e0bff10d 	sth	r2,-60(fp)

		// Fatal problem; try again
		printf ("Encountered Fatal Error, restarting\n");
10001864:	010400b4 	movhi	r4,4098
10001868:	21303804 	addi	r4,r4,-16160
1000186c:	0003de00 	call	10003de0 <puts>
		goto USB_HOT_PLUG;
10001870:	003ec306 	br	10001380 <__alt_data_end+0xf8001380>
	}

	printf("---------------[ENUM PROCESS]:get device descriptor-1 done!-----------------\n");
10001874:	010400b4 	movhi	r4,4098
10001878:	21304104 	addi	r4,r4,-16124
1000187c:	0003de00 	call	10003de0 <puts>


	//--------------------------------get device descriptor-2---------------------------------------------//
	//get device descriptor
	// TASK: Call the appropriate function for this step.
	UsbGetDeviceDesc2(); 	// Get Device Descriptor -2
10001880:	00024a80 	call	100024a8 <UsbGetDeviceDesc2>

	//if no message
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10001884:	00000306 	br	10001894 <main+0x61c>
	{
		//resend the get device descriptor
		//get device descriptor
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetDeviceDesc2();
10001888:	00024a80 	call	100024a8 <UsbGetDeviceDesc2>
		usleep(10*1000);
1000188c:	0109c404 	movi	r4,10000
10001890:	0019e380 	call	10019e38 <usleep>
	//get device descriptor
	// TASK: Call the appropriate function for this step.
	UsbGetDeviceDesc2(); 	// Get Device Descriptor -2

	//if no message
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10001894:	010000c4 	movi	r4,3
10001898:	00003700 	call	10000370 <IO_read>
1000189c:	10bfffcc 	andi	r2,r2,65535
100018a0:	1080040c 	andi	r2,r2,16
100018a4:	103ff826 	beq	r2,zero,10001888 <__alt_data_end+0xf8001888>
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetDeviceDesc2();
		usleep(10*1000);
	}

	UsbWaitTDListDone();
100018a8:	00031000 	call	10003100 <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
100018ac:	01414184 	movi	r5,1286
100018b0:	01000084 	movi	r4,2
100018b4:	00002f40 	call	100002f4 <IO_write>
	printf("[ENUM PROCESS]:step 4 TD Status Byte is %x\n",IO_read(HPI_DATA));
100018b8:	0009883a 	mov	r4,zero
100018bc:	00003700 	call	10000370 <IO_read>
100018c0:	10bfffcc 	andi	r2,r2,65535
100018c4:	100b883a 	mov	r5,r2
100018c8:	010400b4 	movhi	r4,4098
100018cc:	21302104 	addi	r4,r4,-16252
100018d0:	0003cc40 	call	10003cc4 <printf>

	IO_write(HPI_ADDR,0x0508);
100018d4:	01414204 	movi	r5,1288
100018d8:	01000084 	movi	r4,2
100018dc:	00002f40 	call	100002f4 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
100018e0:	0009883a 	mov	r4,zero
100018e4:	00003700 	call	10000370 <IO_read>
100018e8:	e0bff10d 	sth	r2,-60(fp)
	printf("[ENUM PROCESS]:step 4 TD Control Byte is %x\n",usb_ctl_val);
100018ec:	e0bff10b 	ldhu	r2,-60(fp)
100018f0:	100b883a 	mov	r5,r2
100018f4:	010400b4 	movhi	r4,4098
100018f8:	21302c04 	addi	r4,r4,-16208
100018fc:	0003cc40 	call	10003cc4 <printf>
	while (usb_ctl_val != 0x03)
10001900:	e0bff10b 	ldhu	r2,-60(fp)
10001904:	108000e0 	cmpeqi	r2,r2,3
10001908:	1000061e 	bne	r2,zero,10001924 <main+0x6ac>
	{
		usb_ctl_val = UsbGetRetryCnt();
1000190c:	00031840 	call	10003184 <UsbGetRetryCnt>
10001910:	e0bff10d 	sth	r2,-60(fp)

		// Fatal problem; try again
		printf ("Encountered Fatal Error, restarting\n");
10001914:	010400b4 	movhi	r4,4098
10001918:	21303804 	addi	r4,r4,-16160
1000191c:	0003de00 	call	10003de0 <puts>
		goto USB_HOT_PLUG;
10001920:	003e9706 	br	10001380 <__alt_data_end+0xf8001380>
	}

	printf("------------[ENUM PROCESS]:get device descriptor-2 done!--------------\n");
10001924:	010400b4 	movhi	r4,4098
10001928:	21305504 	addi	r4,r4,-16044
1000192c:	0003de00 	call	10003de0 <puts>


	// STEP 5 begin
	//-----------------------------------get configuration descriptor -1 ----------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbGetConfigDesc1(); 	// Get Configuration Descriptor -1
10001930:	00026800 	call	10002680 <UsbGetConfigDesc1>

	//if no message
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10001934:	00000306 	br	10001944 <main+0x6cc>
	{
		//resend the get device descriptor
		//get device descriptor

		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetConfigDesc1();
10001938:	00026800 	call	10002680 <UsbGetConfigDesc1>
		usleep(10*1000);
1000193c:	0109c404 	movi	r4,10000
10001940:	0019e380 	call	10019e38 <usleep>
	//-----------------------------------get configuration descriptor -1 ----------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbGetConfigDesc1(); 	// Get Configuration Descriptor -1

	//if no message
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10001944:	010000c4 	movi	r4,3
10001948:	00003700 	call	10000370 <IO_read>
1000194c:	10bfffcc 	andi	r2,r2,65535
10001950:	1080040c 	andi	r2,r2,16
10001954:	103ff826 	beq	r2,zero,10001938 <__alt_data_end+0xf8001938>
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetConfigDesc1();
		usleep(10*1000);
	}

	UsbWaitTDListDone();
10001958:	00031000 	call	10003100 <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
1000195c:	01414184 	movi	r5,1286
10001960:	01000084 	movi	r4,2
10001964:	00002f40 	call	100002f4 <IO_write>
	printf("[ENUM PROCESS]:step 5 TD Status Byte is %x\n",IO_read(HPI_DATA));
10001968:	0009883a 	mov	r4,zero
1000196c:	00003700 	call	10000370 <IO_read>
10001970:	10bfffcc 	andi	r2,r2,65535
10001974:	100b883a 	mov	r5,r2
10001978:	010400b4 	movhi	r4,4098
1000197c:	21306704 	addi	r4,r4,-15972
10001980:	0003cc40 	call	10003cc4 <printf>

	IO_write(HPI_ADDR,0x0508);
10001984:	01414204 	movi	r5,1288
10001988:	01000084 	movi	r4,2
1000198c:	00002f40 	call	100002f4 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
10001990:	0009883a 	mov	r4,zero
10001994:	00003700 	call	10000370 <IO_read>
10001998:	e0bff10d 	sth	r2,-60(fp)
	printf("[ENUM PROCESS]:step 5 TD Control Byte is %x\n",usb_ctl_val);
1000199c:	e0bff10b 	ldhu	r2,-60(fp)
100019a0:	100b883a 	mov	r5,r2
100019a4:	010400b4 	movhi	r4,4098
100019a8:	21307204 	addi	r4,r4,-15928
100019ac:	0003cc40 	call	10003cc4 <printf>
	while (usb_ctl_val != 0x03)
100019b0:	e0bff10b 	ldhu	r2,-60(fp)
100019b4:	108000e0 	cmpeqi	r2,r2,3
100019b8:	1000061e 	bne	r2,zero,100019d4 <main+0x75c>
	{
		usb_ctl_val = UsbGetRetryCnt();
100019bc:	00031840 	call	10003184 <UsbGetRetryCnt>
100019c0:	e0bff10d 	sth	r2,-60(fp)

		// Fatal problem; try again
		printf ("Encountered Fatal Error, restarting\n");
100019c4:	010400b4 	movhi	r4,4098
100019c8:	21303804 	addi	r4,r4,-16160
100019cc:	0003de00 	call	10003de0 <puts>
		goto USB_HOT_PLUG;
100019d0:	003e6b06 	br	10001380 <__alt_data_end+0xf8001380>
	}
	printf("------------[ENUM PROCESS]:get configuration descriptor-1 pass------------\n");
100019d4:	010400b4 	movhi	r4,4098
100019d8:	21307e04 	addi	r4,r4,-15880
100019dc:	0003de00 	call	10003de0 <puts>

	// STEP 6 begin
	//-----------------------------------get configuration descriptor-2------------------------------------//
	//get device descriptor
	// TASK: Call the appropriate function for this step.
	UsbGetConfigDesc2(); 	// Get Configuration Descriptor -2
100019e0:	00028100 	call	10002810 <UsbGetConfigDesc2>

	usleep(100*1000);
100019e4:	010000b4 	movhi	r4,2
100019e8:	2121a804 	addi	r4,r4,-31072
100019ec:	0019e380 	call	10019e38 <usleep>
	//if no message
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
100019f0:	00000306 	br	10001a00 <main+0x788>
	{
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetConfigDesc2();
100019f4:	00028100 	call	10002810 <UsbGetConfigDesc2>
		usleep(10*1000);
100019f8:	0109c404 	movi	r4,10000
100019fc:	0019e380 	call	10019e38 <usleep>
	// TASK: Call the appropriate function for this step.
	UsbGetConfigDesc2(); 	// Get Configuration Descriptor -2

	usleep(100*1000);
	//if no message
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10001a00:	010000c4 	movi	r4,3
10001a04:	00003700 	call	10000370 <IO_read>
10001a08:	10bfffcc 	andi	r2,r2,65535
10001a0c:	1080040c 	andi	r2,r2,16
10001a10:	103ff826 	beq	r2,zero,100019f4 <__alt_data_end+0xf80019f4>
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetConfigDesc2();
		usleep(10*1000);
	}

	UsbWaitTDListDone();
10001a14:	00031000 	call	10003100 <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
10001a18:	01414184 	movi	r5,1286
10001a1c:	01000084 	movi	r4,2
10001a20:	00002f40 	call	100002f4 <IO_write>
	printf("[ENUM PROCESS]:step 6 TD Status Byte is %x\n",IO_read(HPI_DATA));
10001a24:	0009883a 	mov	r4,zero
10001a28:	00003700 	call	10000370 <IO_read>
10001a2c:	10bfffcc 	andi	r2,r2,65535
10001a30:	100b883a 	mov	r5,r2
10001a34:	010400b4 	movhi	r4,4098
10001a38:	21309104 	addi	r4,r4,-15804
10001a3c:	0003cc40 	call	10003cc4 <printf>

	IO_write(HPI_ADDR,0x0508);
10001a40:	01414204 	movi	r5,1288
10001a44:	01000084 	movi	r4,2
10001a48:	00002f40 	call	100002f4 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
10001a4c:	0009883a 	mov	r4,zero
10001a50:	00003700 	call	10000370 <IO_read>
10001a54:	e0bff10d 	sth	r2,-60(fp)
	printf("[ENUM PROCESS]:step 6 TD Control Byte is %x\n",usb_ctl_val);
10001a58:	e0bff10b 	ldhu	r2,-60(fp)
10001a5c:	100b883a 	mov	r5,r2
10001a60:	010400b4 	movhi	r4,4098
10001a64:	21309c04 	addi	r4,r4,-15760
10001a68:	0003cc40 	call	10003cc4 <printf>
	while (usb_ctl_val != 0x03)
10001a6c:	e0bff10b 	ldhu	r2,-60(fp)
10001a70:	108000e0 	cmpeqi	r2,r2,3
10001a74:	1000061e 	bne	r2,zero,10001a90 <main+0x818>
	{
		usb_ctl_val = UsbGetRetryCnt();
10001a78:	00031840 	call	10003184 <UsbGetRetryCnt>
10001a7c:	e0bff10d 	sth	r2,-60(fp)

		// Fatal problem; try again
		printf ("Encountered Fatal Error, restarting\n");
10001a80:	010400b4 	movhi	r4,4098
10001a84:	21303804 	addi	r4,r4,-16160
10001a88:	0003de00 	call	10003de0 <puts>
		goto USB_HOT_PLUG;
10001a8c:	003e3c06 	br	10001380 <__alt_data_end+0xf8001380>
	}


	printf("-----------[ENUM PROCESS]:get configuration descriptor-2 done!------------\n");
10001a90:	010400b4 	movhi	r4,4098
10001a94:	2130a804 	addi	r4,r4,-15712
10001a98:	0003de00 	call	10003de0 <puts>


	// ---------------------------------get device info---------------------------------------------//

	// TASK: Write the address to read from the memory for byte 7 of the interface descriptor to HPI_ADDR.
	IO_write(HPI_ADDR,0x056c);
10001a9c:	01415b04 	movi	r5,1388
10001aa0:	01000084 	movi	r4,2
10001aa4:	00002f40 	call	100002f4 <IO_write>
	code = IO_read(HPI_DATA);
10001aa8:	0009883a 	mov	r4,zero
10001aac:	00003700 	call	10000370 <IO_read>
10001ab0:	e0bff68d 	sth	r2,-38(fp)
	code = code & 0x003;
10001ab4:	e0bff68b 	ldhu	r2,-38(fp)
10001ab8:	108000cc 	andi	r2,r2,3
10001abc:	e0bff68d 	sth	r2,-38(fp)
	printf("\ncode = %x\n", code);
10001ac0:	e0bff68b 	ldhu	r2,-38(fp)
10001ac4:	100b883a 	mov	r5,r2
10001ac8:	010400b4 	movhi	r4,4098
10001acc:	2130bb04 	addi	r4,r4,-15636
10001ad0:	0003cc40 	call	10003cc4 <printf>

	if (code == 0x01)
10001ad4:	e0bff68b 	ldhu	r2,-38(fp)
10001ad8:	10800058 	cmpnei	r2,r2,1
10001adc:	1000041e 	bne	r2,zero,10001af0 <main+0x878>
	{
		printf("\n[INFO]:check TD rec data7 \n[INFO]:Keyboard Detected!!!\n\n");
10001ae0:	010400b4 	movhi	r4,4098
10001ae4:	2130be04 	addi	r4,r4,-15624
10001ae8:	0003de00 	call	10003de0 <puts>
10001aec:	00000306 	br	10001afc <main+0x884>
	}
	else
	{
		printf("\n[INFO]:Keyboard Not Detected!!! \n\n");
10001af0:	010400b4 	movhi	r4,4098
10001af4:	2130cd04 	addi	r4,r4,-15564
10001af8:	0003de00 	call	10003de0 <puts>
	}

	// TASK: Write the address to read from the memory for the endpoint descriptor to HPI_ADDR.

	IO_write(HPI_ADDR,0x0576);
10001afc:	01415d84 	movi	r5,1398
10001b00:	01000084 	movi	r4,2
10001b04:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x073F);
10001b08:	0141cfc4 	movi	r5,1855
10001b0c:	0009883a 	mov	r4,zero
10001b10:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x8105);
10001b14:	01604154 	movui	r5,33029
10001b18:	0009883a 	mov	r4,zero
10001b1c:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0003);
10001b20:	014000c4 	movi	r5,3
10001b24:	0009883a 	mov	r4,zero
10001b28:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0008);
10001b2c:	01400204 	movi	r5,8
10001b30:	0009883a 	mov	r4,zero
10001b34:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0xAC0A);
10001b38:	016b0294 	movui	r5,44042
10001b3c:	0009883a 	mov	r4,zero
10001b40:	00002f40 	call	100002f4 <IO_write>
	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0576); //HUSB_SIE1_pCurrentTDPtr
10001b44:	01415d84 	movi	r5,1398
10001b48:	01006c04 	movi	r4,432
10001b4c:	00021100 	call	10002110 <UsbWrite>

	//data_size = (IO_read(HPI_DATA)>>8)&0x0ff;
	//data_size = 0x08;//(IO_read(HPI_DATA))&0x0ff;
	//UsbPrintMem();
	IO_write(HPI_ADDR,0x057c);
10001b50:	01415f04 	movi	r5,1404
10001b54:	01000084 	movi	r4,2
10001b58:	00002f40 	call	100002f4 <IO_write>
	data_size = (IO_read(HPI_DATA))&0x0ff;
10001b5c:	0009883a 	mov	r4,zero
10001b60:	00003700 	call	10000370 <IO_read>
10001b64:	e0bff705 	stb	r2,-36(fp)
	printf("[ENUM PROCESS]:data packet size is %d\n",data_size);
10001b68:	e0bff703 	ldbu	r2,-36(fp)
10001b6c:	100b883a 	mov	r5,r2
10001b70:	010400b4 	movhi	r4,4098
10001b74:	2130d604 	addi	r4,r4,-15528
10001b78:	0003cc40 	call	10003cc4 <printf>
	// STEP 7 begin
	//------------------------------------set configuration -----------------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbSetConfig();		// Set Configuration
10001b7c:	0002a780 	call	10002a78 <UsbSetConfig>

	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10001b80:	00000306 	br	10001b90 <main+0x918>
	{
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbSetConfig();		// Set Configuration
10001b84:	0002a780 	call	10002a78 <UsbSetConfig>
		usleep(10*1000);
10001b88:	0109c404 	movi	r4,10000
10001b8c:	0019e380 	call	10019e38 <usleep>
	// STEP 7 begin
	//------------------------------------set configuration -----------------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbSetConfig();		// Set Configuration

	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10001b90:	010000c4 	movi	r4,3
10001b94:	00003700 	call	10000370 <IO_read>
10001b98:	10bfffcc 	andi	r2,r2,65535
10001b9c:	1080040c 	andi	r2,r2,16
10001ba0:	103ff826 	beq	r2,zero,10001b84 <__alt_data_end+0xf8001b84>
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbSetConfig();		// Set Configuration
		usleep(10*1000);
	}

	UsbWaitTDListDone();
10001ba4:	00031000 	call	10003100 <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
10001ba8:	01414184 	movi	r5,1286
10001bac:	01000084 	movi	r4,2
10001bb0:	00002f40 	call	100002f4 <IO_write>
	printf("[ENUM PROCESS]:step 7 TD Status Byte is %x\n",IO_read(HPI_DATA));
10001bb4:	0009883a 	mov	r4,zero
10001bb8:	00003700 	call	10000370 <IO_read>
10001bbc:	10bfffcc 	andi	r2,r2,65535
10001bc0:	100b883a 	mov	r5,r2
10001bc4:	010400b4 	movhi	r4,4098
10001bc8:	2130e004 	addi	r4,r4,-15488
10001bcc:	0003cc40 	call	10003cc4 <printf>

	IO_write(HPI_ADDR,0x0508);
10001bd0:	01414204 	movi	r5,1288
10001bd4:	01000084 	movi	r4,2
10001bd8:	00002f40 	call	100002f4 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
10001bdc:	0009883a 	mov	r4,zero
10001be0:	00003700 	call	10000370 <IO_read>
10001be4:	e0bff10d 	sth	r2,-60(fp)
	printf("[ENUM PROCESS]:step 7 TD Control Byte is %x\n",usb_ctl_val);
10001be8:	e0bff10b 	ldhu	r2,-60(fp)
10001bec:	100b883a 	mov	r5,r2
10001bf0:	010400b4 	movhi	r4,4098
10001bf4:	2130eb04 	addi	r4,r4,-15444
10001bf8:	0003cc40 	call	10003cc4 <printf>
	while (usb_ctl_val != 0x03)
10001bfc:	e0bff10b 	ldhu	r2,-60(fp)
10001c00:	108000e0 	cmpeqi	r2,r2,3
10001c04:	1000061e 	bne	r2,zero,10001c20 <main+0x9a8>
	{
		usb_ctl_val = UsbGetRetryCnt();
10001c08:	00031840 	call	10003184 <UsbGetRetryCnt>
10001c0c:	e0bff10d 	sth	r2,-60(fp)

		// Fatal problem; try again
		printf ("Encountered Fatal Error, restarting\n");
10001c10:	010400b4 	movhi	r4,4098
10001c14:	21303804 	addi	r4,r4,-16160
10001c18:	0003de00 	call	10003de0 <puts>
		goto USB_HOT_PLUG;
10001c1c:	003dd806 	br	10001380 <__alt_data_end+0xf8001380>
	}

	printf("------------[ENUM PROCESS]:set configuration done!-------------------\n");
10001c20:	010400b4 	movhi	r4,4098
10001c24:	2130f704 	addi	r4,r4,-15396
10001c28:	0003de00 	call	10003de0 <puts>

	//----------------------------------------------class request out ------------------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbClassRequest();
10001c2c:	0002b780 	call	10002b78 <UsbClassRequest>

	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10001c30:	00000306 	br	10001c40 <main+0x9c8>
	{
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbClassRequest();
10001c34:	0002b780 	call	10002b78 <UsbClassRequest>
		usleep(10*1000);
10001c38:	0109c404 	movi	r4,10000
10001c3c:	0019e380 	call	10019e38 <usleep>

	//----------------------------------------------class request out ------------------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbClassRequest();

	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10001c40:	010000c4 	movi	r4,3
10001c44:	00003700 	call	10000370 <IO_read>
10001c48:	10bfffcc 	andi	r2,r2,65535
10001c4c:	1080040c 	andi	r2,r2,16
10001c50:	103ff826 	beq	r2,zero,10001c34 <__alt_data_end+0xf8001c34>
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbClassRequest();
		usleep(10*1000);
	}

	UsbWaitTDListDone();
10001c54:	00031000 	call	10003100 <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
10001c58:	01414184 	movi	r5,1286
10001c5c:	01000084 	movi	r4,2
10001c60:	00002f40 	call	100002f4 <IO_write>
	printf("[ENUM PROCESS]:step 8 TD Status Byte is %x\n",IO_read(HPI_DATA));
10001c64:	0009883a 	mov	r4,zero
10001c68:	00003700 	call	10000370 <IO_read>
10001c6c:	10bfffcc 	andi	r2,r2,65535
10001c70:	100b883a 	mov	r5,r2
10001c74:	010400b4 	movhi	r4,4098
10001c78:	21310904 	addi	r4,r4,-15324
10001c7c:	0003cc40 	call	10003cc4 <printf>

	IO_write(HPI_ADDR,0x0508);
10001c80:	01414204 	movi	r5,1288
10001c84:	01000084 	movi	r4,2
10001c88:	00002f40 	call	100002f4 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
10001c8c:	0009883a 	mov	r4,zero
10001c90:	00003700 	call	10000370 <IO_read>
10001c94:	e0bff10d 	sth	r2,-60(fp)
	printf("[ENUM PROCESS]:step 8 TD Control Byte is %x\n",usb_ctl_val);
10001c98:	e0bff10b 	ldhu	r2,-60(fp)
10001c9c:	100b883a 	mov	r5,r2
10001ca0:	010400b4 	movhi	r4,4098
10001ca4:	21311404 	addi	r4,r4,-15280
10001ca8:	0003cc40 	call	10003cc4 <printf>
	while (usb_ctl_val != 0x03)
10001cac:	e0bff10b 	ldhu	r2,-60(fp)
10001cb0:	108000e0 	cmpeqi	r2,r2,3
10001cb4:	1000061e 	bne	r2,zero,10001cd0 <main+0xa58>
	{
		usb_ctl_val = UsbGetRetryCnt();
10001cb8:	00031840 	call	10003184 <UsbGetRetryCnt>
10001cbc:	e0bff10d 	sth	r2,-60(fp)

		// Fatal problem; try again
		printf ("Encountered Fatal Error, restarting\n");
10001cc0:	010400b4 	movhi	r4,4098
10001cc4:	21303804 	addi	r4,r4,-16160
10001cc8:	0003de00 	call	10003de0 <puts>
		goto USB_HOT_PLUG;
10001ccc:	003dac06 	br	10001380 <__alt_data_end+0xf8001380>
	}


	printf("------------[ENUM PROCESS]:class request out done!-------------------\n");
10001cd0:	010400b4 	movhi	r4,4098
10001cd4:	21312004 	addi	r4,r4,-15232
10001cd8:	0003de00 	call	10003de0 <puts>

	// STEP 8 begin
	//----------------------------------get descriptor(class 0x21 = HID) request out --------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbGetHidDesc();
10001cdc:	0002c780 	call	10002c78 <UsbGetHidDesc>

	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10001ce0:	00000306 	br	10001cf0 <main+0xa78>
	{
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetHidDesc();
10001ce4:	0002c780 	call	10002c78 <UsbGetHidDesc>
		usleep(10*1000);
10001ce8:	0109c404 	movi	r4,10000
10001cec:	0019e380 	call	10019e38 <usleep>
	// STEP 8 begin
	//----------------------------------get descriptor(class 0x21 = HID) request out --------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbGetHidDesc();

	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10001cf0:	010000c4 	movi	r4,3
10001cf4:	00003700 	call	10000370 <IO_read>
10001cf8:	10bfffcc 	andi	r2,r2,65535
10001cfc:	1080040c 	andi	r2,r2,16
10001d00:	103ff826 	beq	r2,zero,10001ce4 <__alt_data_end+0xf8001ce4>
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetHidDesc();
		usleep(10*1000);
	}

	UsbWaitTDListDone();
10001d04:	00031000 	call	10003100 <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
10001d08:	01414184 	movi	r5,1286
10001d0c:	01000084 	movi	r4,2
10001d10:	00002f40 	call	100002f4 <IO_write>
	printf("[ENUM PROCESS]:step 8 TD Status Byte is %x\n",IO_read(HPI_DATA));
10001d14:	0009883a 	mov	r4,zero
10001d18:	00003700 	call	10000370 <IO_read>
10001d1c:	10bfffcc 	andi	r2,r2,65535
10001d20:	100b883a 	mov	r5,r2
10001d24:	010400b4 	movhi	r4,4098
10001d28:	21310904 	addi	r4,r4,-15324
10001d2c:	0003cc40 	call	10003cc4 <printf>

	IO_write(HPI_ADDR,0x0508);
10001d30:	01414204 	movi	r5,1288
10001d34:	01000084 	movi	r4,2
10001d38:	00002f40 	call	100002f4 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
10001d3c:	0009883a 	mov	r4,zero
10001d40:	00003700 	call	10000370 <IO_read>
10001d44:	e0bff10d 	sth	r2,-60(fp)
	printf("[ENUM PROCESS]:step 8 TD Control Byte is %x\n",usb_ctl_val);
10001d48:	e0bff10b 	ldhu	r2,-60(fp)
10001d4c:	100b883a 	mov	r5,r2
10001d50:	010400b4 	movhi	r4,4098
10001d54:	21311404 	addi	r4,r4,-15280
10001d58:	0003cc40 	call	10003cc4 <printf>
	while (usb_ctl_val != 0x03)
10001d5c:	e0bff10b 	ldhu	r2,-60(fp)
10001d60:	108000e0 	cmpeqi	r2,r2,3
10001d64:	1000061e 	bne	r2,zero,10001d80 <main+0xb08>
	{
		usb_ctl_val = UsbGetRetryCnt();
10001d68:	00031840 	call	10003184 <UsbGetRetryCnt>
10001d6c:	e0bff10d 	sth	r2,-60(fp)

		// Fatal problem; try again
		printf ("Encountered Fatal Error, restarting\n");
10001d70:	010400b4 	movhi	r4,4098
10001d74:	21303804 	addi	r4,r4,-16160
10001d78:	0003de00 	call	10003de0 <puts>
		goto USB_HOT_PLUG;
10001d7c:	003d8006 	br	10001380 <__alt_data_end+0xf8001380>
	}

	printf("------------[ENUM PROCESS]:get descriptor (class 0x21) done!-------------------\n");
10001d80:	010400b4 	movhi	r4,4098
10001d84:	21313204 	addi	r4,r4,-15160
10001d88:	0003de00 	call	10003de0 <puts>

	// STEP 9 begin
	//-------------------------------get descriptor (class 0x22 = report)-------------------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbGetReportDesc();
10001d8c:	0002dc00 	call	10002dc0 <UsbGetReportDesc>
	//if no message
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10001d90:	00000306 	br	10001da0 <main+0xb28>
	{
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetReportDesc();
10001d94:	0002dc00 	call	10002dc0 <UsbGetReportDesc>
		usleep(10*1000);
10001d98:	0109c404 	movi	r4,10000
10001d9c:	0019e380 	call	10019e38 <usleep>
	// STEP 9 begin
	//-------------------------------get descriptor (class 0x22 = report)-------------------------------------------//
	// TASK: Call the appropriate function for this step.
	UsbGetReportDesc();
	//if no message
	while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10001da0:	010000c4 	movi	r4,3
10001da4:	00003700 	call	10000370 <IO_read>
10001da8:	10bfffcc 	andi	r2,r2,65535
10001dac:	1080040c 	andi	r2,r2,16
10001db0:	103ff826 	beq	r2,zero,10001d94 <__alt_data_end+0xf8001d94>
		// TASK: Call the appropriate function again if it wasn't processed successfully.
		UsbGetReportDesc();
		usleep(10*1000);
	}

	UsbWaitTDListDone();
10001db4:	00031000 	call	10003100 <UsbWaitTDListDone>

	IO_write(HPI_ADDR,0x0506);
10001db8:	01414184 	movi	r5,1286
10001dbc:	01000084 	movi	r4,2
10001dc0:	00002f40 	call	100002f4 <IO_write>
	printf("[ENUM PROCESS]: step 9 TD Status Byte is %x\n",IO_read(HPI_DATA));
10001dc4:	0009883a 	mov	r4,zero
10001dc8:	00003700 	call	10000370 <IO_read>
10001dcc:	10bfffcc 	andi	r2,r2,65535
10001dd0:	100b883a 	mov	r5,r2
10001dd4:	010400b4 	movhi	r4,4098
10001dd8:	21314604 	addi	r4,r4,-15080
10001ddc:	0003cc40 	call	10003cc4 <printf>

	IO_write(HPI_ADDR,0x0508);
10001de0:	01414204 	movi	r5,1288
10001de4:	01000084 	movi	r4,2
10001de8:	00002f40 	call	100002f4 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
10001dec:	0009883a 	mov	r4,zero
10001df0:	00003700 	call	10000370 <IO_read>
10001df4:	e0bff10d 	sth	r2,-60(fp)
	printf("[ENUM PROCESS]: step 9 TD Control Byte is %x\n",usb_ctl_val);
10001df8:	e0bff10b 	ldhu	r2,-60(fp)
10001dfc:	100b883a 	mov	r5,r2
10001e00:	010400b4 	movhi	r4,4098
10001e04:	21315204 	addi	r4,r4,-15032
10001e08:	0003cc40 	call	10003cc4 <printf>
	while (usb_ctl_val != 0x03)
10001e0c:	e0bff10b 	ldhu	r2,-60(fp)
10001e10:	108000e0 	cmpeqi	r2,r2,3
10001e14:	1000061e 	bne	r2,zero,10001e30 <main+0xbb8>
	{
		usb_ctl_val = UsbGetRetryCnt();
10001e18:	00031840 	call	10003184 <UsbGetRetryCnt>
10001e1c:	e0bff10d 	sth	r2,-60(fp)

		// Fatal problem; try again
		printf ("Encountered Fatal Error, restarting\n");
10001e20:	010400b4 	movhi	r4,4098
10001e24:	21303804 	addi	r4,r4,-16160
10001e28:	0003de00 	call	10003de0 <puts>
		goto USB_HOT_PLUG;
10001e2c:	003d5406 	br	10001380 <__alt_data_end+0xf8001380>
	}

	printf("---------------[ENUM PROCESS]:get descriptor (class 0x22) done!----------------\n");
10001e30:	010400b4 	movhi	r4,4098
10001e34:	21315e04 	addi	r4,r4,-14984
10001e38:	0003de00 	call	10003de0 <puts>



	//-----------------------------------get keycode value------------------------------------------------//
	usleep(10000);
10001e3c:	0109c404 	movi	r4,10000
10001e40:	0019e380 	call	10019e38 <usleep>
	while(1)
	{
		toggle++;
10001e44:	e0bff183 	ldbu	r2,-58(fp)
10001e48:	10800044 	addi	r2,r2,1
10001e4c:	e0bff185 	stb	r2,-58(fp)
		IO_write(HPI_ADDR,0x0500); //the start address
10001e50:	01414004 	movi	r5,1280
10001e54:	01000084 	movi	r4,2
10001e58:	00002f40 	call	100002f4 <IO_write>
		//data phase IN-1
		IO_write(HPI_DATA,0x051c); //500
10001e5c:	01414704 	movi	r5,1308
10001e60:	0009883a 	mov	r4,zero
10001e64:	00002f40 	call	100002f4 <IO_write>

		IO_write(HPI_DATA,0x000f & data_size);//2 data length
10001e68:	e0bff703 	ldbu	r2,-36(fp)
10001e6c:	108003cc 	andi	r2,r2,15
10001e70:	100b883a 	mov	r5,r2
10001e74:	0009883a 	mov	r4,zero
10001e78:	00002f40 	call	100002f4 <IO_write>

		IO_write(HPI_DATA,0x0291);//4 //endpoint 1
10001e7c:	0140a444 	movi	r5,657
10001e80:	0009883a 	mov	r4,zero
10001e84:	00002f40 	call	100002f4 <IO_write>
		if(toggle%2)
10001e88:	e0bff183 	ldbu	r2,-58(fp)
10001e8c:	1080004c 	andi	r2,r2,1
10001e90:	10803fcc 	andi	r2,r2,255
10001e94:	10000426 	beq	r2,zero,10001ea8 <main+0xc30>
		{
			IO_write(HPI_DATA,0x0001);//6 //data 1
10001e98:	01400044 	movi	r5,1
10001e9c:	0009883a 	mov	r4,zero
10001ea0:	00002f40 	call	100002f4 <IO_write>
10001ea4:	00000306 	br	10001eb4 <main+0xc3c>
		}
		else
		{
			IO_write(HPI_DATA,0x0041);//6 //data 1
10001ea8:	01401044 	movi	r5,65
10001eac:	0009883a 	mov	r4,zero
10001eb0:	00002f40 	call	100002f4 <IO_write>
		}
		IO_write(HPI_DATA,0x0013);//8
10001eb4:	014004c4 	movi	r5,19
10001eb8:	0009883a 	mov	r4,zero
10001ebc:	00002f40 	call	100002f4 <IO_write>
		IO_write(HPI_DATA,0x0000);//a
10001ec0:	000b883a 	mov	r5,zero
10001ec4:	0009883a 	mov	r4,zero
10001ec8:	00002f40 	call	100002f4 <IO_write>
		UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
10001ecc:	01414004 	movi	r5,1280
10001ed0:	01006c04 	movi	r4,432
10001ed4:	00021100 	call	10002110 <UsbWrite>
		
		while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10001ed8:	00002406 	br	10001f6c <main+0xcf4>
		{
			IO_write(HPI_ADDR,0x0500); //the start address
10001edc:	01414004 	movi	r5,1280
10001ee0:	01000084 	movi	r4,2
10001ee4:	00002f40 	call	100002f4 <IO_write>
			//data phase IN-1
			IO_write(HPI_DATA,0x051c); //500
10001ee8:	01414704 	movi	r5,1308
10001eec:	0009883a 	mov	r4,zero
10001ef0:	00002f40 	call	100002f4 <IO_write>

			IO_write(HPI_DATA,0x000f & data_size);//2 data length
10001ef4:	e0bff703 	ldbu	r2,-36(fp)
10001ef8:	108003cc 	andi	r2,r2,15
10001efc:	100b883a 	mov	r5,r2
10001f00:	0009883a 	mov	r4,zero
10001f04:	00002f40 	call	100002f4 <IO_write>

			IO_write(HPI_DATA,0x0291);//4 //endpoint 1
10001f08:	0140a444 	movi	r5,657
10001f0c:	0009883a 	mov	r4,zero
10001f10:	00002f40 	call	100002f4 <IO_write>
			if(toggle%2)
10001f14:	e0bff183 	ldbu	r2,-58(fp)
10001f18:	1080004c 	andi	r2,r2,1
10001f1c:	10803fcc 	andi	r2,r2,255
10001f20:	10000426 	beq	r2,zero,10001f34 <main+0xcbc>
			{
				IO_write(HPI_DATA,0x0001);//6 //data 1
10001f24:	01400044 	movi	r5,1
10001f28:	0009883a 	mov	r4,zero
10001f2c:	00002f40 	call	100002f4 <IO_write>
10001f30:	00000306 	br	10001f40 <main+0xcc8>
			}
			else
			{
				IO_write(HPI_DATA,0x0041);//6 //data 1
10001f34:	01401044 	movi	r5,65
10001f38:	0009883a 	mov	r4,zero
10001f3c:	00002f40 	call	100002f4 <IO_write>
			}
			IO_write(HPI_DATA,0x0013);//8
10001f40:	014004c4 	movi	r5,19
10001f44:	0009883a 	mov	r4,zero
10001f48:	00002f40 	call	100002f4 <IO_write>
			IO_write(HPI_DATA,0x0000);//
10001f4c:	000b883a 	mov	r5,zero
10001f50:	0009883a 	mov	r4,zero
10001f54:	00002f40 	call	100002f4 <IO_write>
			UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
10001f58:	01414004 	movi	r5,1280
10001f5c:	01006c04 	movi	r4,432
10001f60:	00021100 	call	10002110 <UsbWrite>
			usleep(10*1000);
10001f64:	0109c404 	movi	r4,10000
10001f68:	0019e380 	call	10019e38 <usleep>
		}
		IO_write(HPI_DATA,0x0013);//8
		IO_write(HPI_DATA,0x0000);//a
		UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
		
		while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
10001f6c:	010000c4 	movi	r4,3
10001f70:	00003700 	call	10000370 <IO_read>
10001f74:	10bfffcc 	andi	r2,r2,65535
10001f78:	1080040c 	andi	r2,r2,16
10001f7c:	103fd726 	beq	r2,zero,10001edc <__alt_data_end+0xf8001edc>
			IO_write(HPI_DATA,0x0000);//
			UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
			usleep(10*1000);
		}//end while

		usb_ctl_val = UsbWaitTDListDone();
10001f80:	00031000 	call	10003100 <UsbWaitTDListDone>
10001f84:	e0bff10d 	sth	r2,-60(fp)

		// The first two keycodes are stored in 0x051E. Other keycodes are in 
		// subsequent addresses.
		keycode = UsbRead(0x051e);
10001f88:	01014784 	movi	r4,1310
10001f8c:	00021680 	call	10002168 <UsbRead>
10001f90:	10bfffcc 	andi	r2,r2,65535
10001f94:	e0bff515 	stw	r2,-44(fp)
//		printf("\nfirst two keycode values are %04x\n",keycode);
		// We only need the first keycode, which is at the lower byte of keycode.
		// Send the keycode to hardware via PIO.
		//*keycode_base = keycode & 0xff;
		volatile unsigned int * keycode1 = (unsigned int *) 0x90;
10001f98:	00802404 	movi	r2,144
10001f9c:	e0bff815 	stw	r2,-32(fp)
		volatile unsigned int * keycode2 = (unsigned int *) 0xd0;
10001fa0:	00803404 	movi	r2,208
10001fa4:	e0bff915 	stw	r2,-28(fp)
		*keycode1 = keycode & 0xff;
10001fa8:	e0bff517 	ldw	r2,-44(fp)
10001fac:	10c03fcc 	andi	r3,r2,255
10001fb0:	e0bff817 	ldw	r2,-32(fp)
10001fb4:	10c00015 	stw	r3,0(r2)
		*keycode2 = (keycode >> 8) & 0xff;
10001fb8:	e0bff517 	ldw	r2,-44(fp)
10001fbc:	1005d23a 	srai	r2,r2,8
10001fc0:	10c03fcc 	andi	r3,r2,255
10001fc4:	e0bff917 	ldw	r2,-28(fp)
10001fc8:	10c00015 	stw	r3,0(r2)


		usleep(200);//usleep(5000);
10001fcc:	01003204 	movi	r4,200
10001fd0:	0019e380 	call	10019e38 <usleep>
		usb_ctl_val = UsbRead(ctl_reg);
10001fd4:	d0a6d10b 	ldhu	r2,-25788(gp)
10001fd8:	10bfffcc 	andi	r2,r2,65535
10001fdc:	1009883a 	mov	r4,r2
10001fe0:	00021680 	call	10002168 <UsbRead>
10001fe4:	e0bff10d 	sth	r2,-60(fp)

		if(!(usb_ctl_val & no_device))
10001fe8:	d0a6d18b 	ldhu	r2,-25786(gp)
10001fec:	e0fff10b 	ldhu	r3,-60(fp)
10001ff0:	1884703a 	and	r2,r3,r2
10001ff4:	10bfffcc 	andi	r2,r2,65535
10001ff8:	10003f1e 	bne	r2,zero,100020f8 <main+0xe80>
		{
			//USB hot plug routine
			for(hot_plug_count = 0 ; hot_plug_count < 7 ; hot_plug_count++)
10001ffc:	e03ff1c5 	stb	zero,-57(fp)
10002000:	00000f06 	br	10002040 <main+0xdc8>
			{
				usleep(5*1000);
10002004:	0104e204 	movi	r4,5000
10002008:	0019e380 	call	10019e38 <usleep>
				usb_ctl_val = UsbRead(ctl_reg);
1000200c:	d0a6d10b 	ldhu	r2,-25788(gp)
10002010:	10bfffcc 	andi	r2,r2,65535
10002014:	1009883a 	mov	r4,r2
10002018:	00021680 	call	10002168 <UsbRead>
1000201c:	e0bff10d 	sth	r2,-60(fp)
				if(usb_ctl_val & no_device) break;
10002020:	d0a6d18b 	ldhu	r2,-25786(gp)
10002024:	e0fff10b 	ldhu	r3,-60(fp)
10002028:	1884703a 	and	r2,r3,r2
1000202c:	10bfffcc 	andi	r2,r2,65535
10002030:	1000071e 	bne	r2,zero,10002050 <main+0xdd8>
		usb_ctl_val = UsbRead(ctl_reg);

		if(!(usb_ctl_val & no_device))
		{
			//USB hot plug routine
			for(hot_plug_count = 0 ; hot_plug_count < 7 ; hot_plug_count++)
10002034:	e0bff1c3 	ldbu	r2,-57(fp)
10002038:	10800044 	addi	r2,r2,1
1000203c:	e0bff1c5 	stb	r2,-57(fp)
10002040:	e0bff1c3 	ldbu	r2,-57(fp)
10002044:	108001f0 	cmpltui	r2,r2,7
10002048:	103fee1e 	bne	r2,zero,10002004 <__alt_data_end+0xf8002004>
1000204c:	00000106 	br	10002054 <main+0xddc>
			{
				usleep(5*1000);
				usb_ctl_val = UsbRead(ctl_reg);
				if(usb_ctl_val & no_device) break;
10002050:	0001883a 	nop
			}
			if(!(usb_ctl_val & no_device))
10002054:	d0a6d18b 	ldhu	r2,-25786(gp)
10002058:	e0fff10b 	ldhu	r3,-60(fp)
1000205c:	1884703a 	and	r2,r3,r2
10002060:	10bfffcc 	andi	r2,r2,65535
10002064:	1000241e 	bne	r2,zero,100020f8 <main+0xe80>
			{
				printf("\n[INFO]: the keyboard has been removed!!! \n");
10002068:	010400b4 	movhi	r4,4098
1000206c:	21317204 	addi	r4,r4,-14904
10002070:	0003de00 	call	10003de0 <puts>
				printf("[INFO]: please insert again!!! \n");
10002074:	010400b4 	movhi	r4,4098
10002078:	21317d04 	addi	r4,r4,-14860
1000207c:	0003de00 	call	10003de0 <puts>
			}
		}

		while (!(usb_ctl_val & no_device))
10002080:	00001d06 	br	100020f8 <main+0xe80>
		{

			usb_ctl_val = UsbRead(ctl_reg);
10002084:	d0a6d10b 	ldhu	r2,-25788(gp)
10002088:	10bfffcc 	andi	r2,r2,65535
1000208c:	1009883a 	mov	r4,r2
10002090:	00021680 	call	10002168 <UsbRead>
10002094:	e0bff10d 	sth	r2,-60(fp)
			usleep(5*1000);
10002098:	0104e204 	movi	r4,5000
1000209c:	0019e380 	call	10019e38 <usleep>
			usb_ctl_val = UsbRead(ctl_reg);
100020a0:	d0a6d10b 	ldhu	r2,-25788(gp)
100020a4:	10bfffcc 	andi	r2,r2,65535
100020a8:	1009883a 	mov	r4,r2
100020ac:	00021680 	call	10002168 <UsbRead>
100020b0:	e0bff10d 	sth	r2,-60(fp)
			usleep(5*1000);
100020b4:	0104e204 	movi	r4,5000
100020b8:	0019e380 	call	10019e38 <usleep>
			usb_ctl_val = UsbRead(ctl_reg);
100020bc:	d0a6d10b 	ldhu	r2,-25788(gp)
100020c0:	10bfffcc 	andi	r2,r2,65535
100020c4:	1009883a 	mov	r4,r2
100020c8:	00021680 	call	10002168 <UsbRead>
100020cc:	e0bff10d 	sth	r2,-60(fp)
			usleep(5*1000);
100020d0:	0104e204 	movi	r4,5000
100020d4:	0019e380 	call	10019e38 <usleep>

			if(usb_ctl_val & no_device)
100020d8:	d0a6d18b 	ldhu	r2,-25786(gp)
100020dc:	e0fff10b 	ldhu	r3,-60(fp)
100020e0:	1884703a 	and	r2,r3,r2
100020e4:	10bfffcc 	andi	r2,r2,65535
100020e8:	10000126 	beq	r2,zero,100020f0 <main+0xe78>
				goto USB_HOT_PLUG;
100020ec:	003ca406 	br	10001380 <__alt_data_end+0xf8001380>

			usleep(200);
100020f0:	01003204 	movi	r4,200
100020f4:	0019e380 	call	10019e38 <usleep>
				printf("\n[INFO]: the keyboard has been removed!!! \n");
				printf("[INFO]: please insert again!!! \n");
			}
		}

		while (!(usb_ctl_val & no_device))
100020f8:	d0a6d18b 	ldhu	r2,-25786(gp)
100020fc:	e0fff10b 	ldhu	r3,-60(fp)
10002100:	1884703a 	and	r2,r3,r2
10002104:	10bfffcc 	andi	r2,r2,65535
10002108:	103fde26 	beq	r2,zero,10002084 <__alt_data_end+0xf8002084>
				goto USB_HOT_PLUG;

			usleep(200);
		}

	}//end while
1000210c:	003f4d06 	br	10001e44 <__alt_data_end+0xf8001e44>

10002110 <UsbWrite>:
 *
 * @note     None
 *
 ******************************************************************************/
void UsbWrite(alt_u16 Address, alt_u16 Data)
{
10002110:	defffc04 	addi	sp,sp,-16
10002114:	dfc00315 	stw	ra,12(sp)
10002118:	df000215 	stw	fp,8(sp)
1000211c:	df000204 	addi	fp,sp,8
10002120:	2007883a 	mov	r3,r4
10002124:	2805883a 	mov	r2,r5
10002128:	e0fffe0d 	sth	r3,-8(fp)
1000212c:	e0bfff0d 	sth	r2,-4(fp)
	IO_write(HPI_ADDR, Address);
10002130:	e0bffe0b 	ldhu	r2,-8(fp)
10002134:	100b883a 	mov	r5,r2
10002138:	01000084 	movi	r4,2
1000213c:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA, Data);
10002140:	e0bfff0b 	ldhu	r2,-4(fp)
10002144:	100b883a 	mov	r5,r2
10002148:	0009883a 	mov	r4,zero
1000214c:	00002f40 	call	100002f4 <IO_write>
}
10002150:	0001883a 	nop
10002154:	e037883a 	mov	sp,fp
10002158:	dfc00117 	ldw	ra,4(sp)
1000215c:	df000017 	ldw	fp,0(sp)
10002160:	dec00204 	addi	sp,sp,8
10002164:	f800283a 	ret

10002168 <UsbRead>:
 *
 * @note     None
 *
 ******************************************************************************/
alt_u16 UsbRead(alt_u16 Address)
{
10002168:	defffd04 	addi	sp,sp,-12
1000216c:	dfc00215 	stw	ra,8(sp)
10002170:	df000115 	stw	fp,4(sp)
10002174:	df000104 	addi	fp,sp,4
10002178:	2005883a 	mov	r2,r4
1000217c:	e0bfff0d 	sth	r2,-4(fp)
	IO_write(HPI_ADDR, Address);
10002180:	e0bfff0b 	ldhu	r2,-4(fp)
10002184:	100b883a 	mov	r5,r2
10002188:	01000084 	movi	r4,2
1000218c:	00002f40 	call	100002f4 <IO_write>
	return IO_read(HPI_DATA);
10002190:	0009883a 	mov	r4,zero
10002194:	00003700 	call	10000370 <IO_read>
}
10002198:	e037883a 	mov	sp,fp
1000219c:	dfc00117 	ldw	ra,4(sp)
100021a0:	df000017 	ldw	fp,0(sp)
100021a4:	dec00204 	addi	sp,sp,8
100021a8:	f800283a 	ret

100021ac <UsbSoftReset>:
 *
 * @note     None
 *
 ******************************************************************************/
void UsbSoftReset()
{
100021ac:	defffe04 	addi	sp,sp,-8
100021b0:	dfc00115 	stw	ra,4(sp)
100021b4:	df000015 	stw	fp,0(sp)
100021b8:	d839883a 	mov	fp,sp
	//XIo_Out16(USB_MAILBOX, COMM_RESET);
	IO_write(HPI_MAILBOX,COMM_RESET); //COMM_JUMP2CODE
100021bc:	017e9414 	movui	r5,64080
100021c0:	01000044 	movi	r4,1
100021c4:	00002f40 	call	100002f4 <IO_write>
	usleep(100000);
100021c8:	010000b4 	movhi	r4,2
100021cc:	2121a804 	addi	r4,r4,-31072
100021d0:	0019e380 	call	10019e38 <usleep>
	printf("[USB INIT]:reset finished!\n");
100021d4:	010400b4 	movhi	r4,4098
100021d8:	21318504 	addi	r4,r4,-14828
100021dc:	0003de00 	call	10003de0 <puts>

	usleep(500000);
100021e0:	01000234 	movhi	r4,8
100021e4:	21284804 	addi	r4,r4,-24288
100021e8:	0019e380 	call	10019e38 <usleep>
	printf("[USB INIT]:Clear up the interrupt\r\n");
100021ec:	010400b4 	movhi	r4,4098
100021f0:	21318c04 	addi	r4,r4,-14800
100021f4:	0003de00 	call	10003de0 <puts>
	IO_read(HPI_MAILBOX);
100021f8:	01000044 	movi	r4,1
100021fc:	00003700 	call	10000370 <IO_read>
	IO_read(HPI_STATUS);
10002200:	010000c4 	movi	r4,3
10002204:	00003700 	call	10000370 <IO_read>

	// Had to add the write due to a bug in BIOS where they overwrite
	// the mailbox after initialization with garbage.  The read clears
	// any pending interrupts.
	UsbRead (HPI_SIE1_MSG_ADR);
10002208:	01005104 	movi	r4,324
1000220c:	00021680 	call	10002168 <UsbRead>
	UsbWrite (HPI_SIE1_MSG_ADR, 0);
10002210:	000b883a 	mov	r5,zero
10002214:	01005104 	movi	r4,324
10002218:	00021100 	call	10002110 <UsbWrite>
	UsbRead (HPI_SIE2_MSG_ADR);
1000221c:	01005204 	movi	r4,328
10002220:	00021680 	call	10002168 <UsbRead>
	UsbWrite (HPI_SIE2_MSG_ADR, 0);
10002224:	000b883a 	mov	r5,zero
10002228:	01005204 	movi	r4,328
1000222c:	00021100 	call	10002110 <UsbWrite>


	UsbWrite (HOST1_STAT_REG, 0xFFFF);
10002230:	017fffd4 	movui	r5,65535
10002234:	01302414 	movui	r4,49296
10002238:	00021100 	call	10002110 <UsbWrite>
	UsbWrite (HOST2_STAT_REG, 0xFFFF);
1000223c:	017fffd4 	movui	r5,65535
10002240:	01302c14 	movui	r4,49328
10002244:	00021100 	call	10002110 <UsbWrite>
}
10002248:	0001883a 	nop
1000224c:	e037883a 	mov	sp,fp
10002250:	dfc00117 	ldw	ra,4(sp)
10002254:	df000017 	ldw	fp,0(sp)
10002258:	dec00204 	addi	sp,sp,8
1000225c:	f800283a 	ret

10002260 <UsbSetAddress>:


void UsbSetAddress()
{
10002260:	defffe04 	addi	sp,sp,-8
10002264:	dfc00115 	stw	ra,4(sp)
10002268:	df000015 	stw	fp,0(sp)
1000226c:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
10002270:	01414004 	movi	r5,1280
10002274:	01000084 	movi	r4,2
10002278:	00002f40 	call	100002f4 <IO_write>
	// TD #1: 6 writes
	IO_write(HPI_DATA,0x050C);
1000227c:	01414304 	movi	r5,1292
10002280:	0009883a 	mov	r4,zero
10002284:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
10002288:	01400204 	movi	r5,8
1000228c:	0009883a 	mov	r4,zero
10002290:	00002f40 	call	100002f4 <IO_write>
	// TASK: Complete with 4 more IOWR functions
	IO_write(HPI_DATA,0x00D0);
10002294:	01403404 	movi	r5,208
10002298:	0009883a 	mov	r4,zero
1000229c:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0001);
100022a0:	01400044 	movi	r5,1
100022a4:	0009883a 	mov	r4,zero
100022a8:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0013);
100022ac:	014004c4 	movi	r5,19
100022b0:	0009883a 	mov	r4,zero
100022b4:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0514);
100022b8:	01414504 	movi	r5,1300
100022bc:	0009883a 	mov	r4,zero
100022c0:	00002f40 	call	100002f4 <IO_write>
	// TD #2: 4 writes
	// TASK: Complete with 4 IOWR functions
	IO_write(HPI_DATA,0x0500);
100022c4:	01414004 	movi	r5,1280
100022c8:	0009883a 	mov	r4,zero
100022cc:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0002);
100022d0:	01400084 	movi	r5,2
100022d4:	0009883a 	mov	r4,zero
100022d8:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0000);
100022dc:	000b883a 	mov	r5,zero
100022e0:	0009883a 	mov	r4,zero
100022e4:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0000);
100022e8:	000b883a 	mov	r5,zero
100022ec:	0009883a 	mov	r4,zero
100022f0:	00002f40 	call	100002f4 <IO_write>
	// TD #3: 6 writes
	// TASK: Complete with 6 IOWR functions
	IO_write(HPI_DATA,0x0000); //
100022f4:	000b883a 	mov	r5,zero
100022f8:	0009883a 	mov	r4,zero
100022fc:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0000);//
10002300:	000b883a 	mov	r5,zero
10002304:	0009883a 	mov	r4,zero
10002308:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0090);//
1000230c:	01402404 	movi	r5,144
10002310:	0009883a 	mov	r4,zero
10002314:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0041);
10002318:	01401044 	movi	r5,65
1000231c:	0009883a 	mov	r4,zero
10002320:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0013);
10002324:	014004c4 	movi	r5,19
10002328:	0009883a 	mov	r4,zero
1000232c:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0000);
10002330:	000b883a 	mov	r5,zero
10002334:	0009883a 	mov	r4,zero
10002338:	00002f40 	call	100002f4 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
1000233c:	01414004 	movi	r5,1280
10002340:	01006c04 	movi	r4,432
10002344:	00021100 	call	10002110 <UsbWrite>
}
10002348:	0001883a 	nop
1000234c:	e037883a 	mov	sp,fp
10002350:	dfc00117 	ldw	ra,4(sp)
10002354:	df000017 	ldw	fp,0(sp)
10002358:	dec00204 	addi	sp,sp,8
1000235c:	f800283a 	ret

10002360 <UsbGetDeviceDesc1>:


void UsbGetDeviceDesc1()
{
10002360:	defffe04 	addi	sp,sp,-8
10002364:	dfc00115 	stw	ra,4(sp)
10002368:	df000015 	stw	fp,0(sp)
1000236c:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
10002370:	01414004 	movi	r5,1280
10002374:	01000084 	movi	r4,2
10002378:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x050C);
1000237c:	01414304 	movi	r5,1292
10002380:	0009883a 	mov	r4,zero
10002384:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
10002388:	01400204 	movi	r5,8
1000238c:	0009883a 	mov	r4,zero
10002390:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x02D0); //device address
10002394:	0140b404 	movi	r5,720
10002398:	0009883a 	mov	r4,zero
1000239c:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0001);
100023a0:	01400044 	movi	r5,1
100023a4:	0009883a 	mov	r4,zero
100023a8:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0013);
100023ac:	014004c4 	movi	r5,19
100023b0:	0009883a 	mov	r4,zero
100023b4:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0514);
100023b8:	01414504 	movi	r5,1300
100023bc:	0009883a 	mov	r4,zero
100023c0:	00002f40 	call	100002f4 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0680);//c
100023c4:	0141a004 	movi	r5,1664
100023c8:	0009883a 	mov	r4,zero
100023cc:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0100); //device 0x01
100023d0:	01404004 	movi	r5,256
100023d4:	0009883a 	mov	r4,zero
100023d8:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0000);
100023dc:	000b883a 	mov	r5,zero
100023e0:	0009883a 	mov	r4,zero
100023e4:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0008);
100023e8:	01400204 	movi	r5,8
100023ec:	0009883a 	mov	r4,zero
100023f0:	00002f40 	call	100002f4 <IO_write>

	//data phase IN
	IO_write(HPI_DATA,0x052C); //
100023f4:	01414b04 	movi	r5,1324
100023f8:	0009883a 	mov	r4,zero
100023fc:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0008);//
10002400:	01400204 	movi	r5,8
10002404:	0009883a 	mov	r4,zero
10002408:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0290);//
1000240c:	0140a404 	movi	r5,656
10002410:	0009883a 	mov	r4,zero
10002414:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0041);
10002418:	01401044 	movi	r5,65
1000241c:	0009883a 	mov	r4,zero
10002420:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0013);
10002424:	014004c4 	movi	r5,19
10002428:	0009883a 	mov	r4,zero
1000242c:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0520);
10002430:	01414804 	movi	r5,1312
10002434:	0009883a 	mov	r4,zero
10002438:	00002f40 	call	100002f4 <IO_write>

	//    //status phase
	IO_write(HPI_DATA,0x0000); //don't care
1000243c:	000b883a 	mov	r5,zero
10002440:	0009883a 	mov	r4,zero
10002444:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0000);//port number
10002448:	000b883a 	mov	r5,zero
1000244c:	0009883a 	mov	r4,zero
10002450:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0210);//device address
10002454:	01408404 	movi	r5,528
10002458:	0009883a 	mov	r4,zero
1000245c:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0041);
10002460:	01401044 	movi	r5,65
10002464:	0009883a 	mov	r4,zero
10002468:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0013);
1000246c:	014004c4 	movi	r5,19
10002470:	0009883a 	mov	r4,zero
10002474:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0000);
10002478:	000b883a 	mov	r5,zero
1000247c:	0009883a 	mov	r4,zero
10002480:	00002f40 	call	100002f4 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
10002484:	01414004 	movi	r5,1280
10002488:	01006c04 	movi	r4,432
1000248c:	00021100 	call	10002110 <UsbWrite>
}
10002490:	0001883a 	nop
10002494:	e037883a 	mov	sp,fp
10002498:	dfc00117 	ldw	ra,4(sp)
1000249c:	df000017 	ldw	fp,0(sp)
100024a0:	dec00204 	addi	sp,sp,8
100024a4:	f800283a 	ret

100024a8 <UsbGetDeviceDesc2>:

void UsbGetDeviceDesc2()
{
100024a8:	defffe04 	addi	sp,sp,-8
100024ac:	dfc00115 	stw	ra,4(sp)
100024b0:	df000015 	stw	fp,0(sp)
100024b4:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
100024b8:	01414004 	movi	r5,1280
100024bc:	01000084 	movi	r4,2
100024c0:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x050C);
100024c4:	01414304 	movi	r5,1292
100024c8:	0009883a 	mov	r4,zero
100024cc:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
100024d0:	01400204 	movi	r5,8
100024d4:	0009883a 	mov	r4,zero
100024d8:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x02D0); //device address
100024dc:	0140b404 	movi	r5,720
100024e0:	0009883a 	mov	r4,zero
100024e4:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0001);
100024e8:	01400044 	movi	r5,1
100024ec:	0009883a 	mov	r4,zero
100024f0:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0013);
100024f4:	014004c4 	movi	r5,19
100024f8:	0009883a 	mov	r4,zero
100024fc:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0514);
10002500:	01414504 	movi	r5,1300
10002504:	0009883a 	mov	r4,zero
10002508:	00002f40 	call	100002f4 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0680);//c
1000250c:	0141a004 	movi	r5,1664
10002510:	0009883a 	mov	r4,zero
10002514:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0100);//e //device 0x01
10002518:	01404004 	movi	r5,256
1000251c:	0009883a 	mov	r4,zero
10002520:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0000);//0
10002524:	000b883a 	mov	r5,zero
10002528:	0009883a 	mov	r4,zero
1000252c:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0012);//2
10002530:	01400484 	movi	r5,18
10002534:	0009883a 	mov	r4,zero
10002538:	00002f40 	call	100002f4 <IO_write>

	//data phase IN-1
	IO_write(HPI_DATA,0x0544); //514
1000253c:	01415104 	movi	r5,1348
10002540:	0009883a 	mov	r4,zero
10002544:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0008);//6
10002548:	01400204 	movi	r5,8
1000254c:	0009883a 	mov	r4,zero
10002550:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
10002554:	0140a404 	movi	r5,656
10002558:	0009883a 	mov	r4,zero
1000255c:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0041);//a
10002560:	01401044 	movi	r5,65
10002564:	0009883a 	mov	r4,zero
10002568:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
1000256c:	014004c4 	movi	r5,19
10002570:	0009883a 	mov	r4,zero
10002574:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0520);//e
10002578:	01414804 	movi	r5,1312
1000257c:	0009883a 	mov	r4,zero
10002580:	00002f40 	call	100002f4 <IO_write>

	//data phase IN-2
	IO_write(HPI_DATA,0x054c); //520
10002584:	01415304 	movi	r5,1356
10002588:	0009883a 	mov	r4,zero
1000258c:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0008);//2
10002590:	01400204 	movi	r5,8
10002594:	0009883a 	mov	r4,zero
10002598:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0290);//4
1000259c:	0140a404 	movi	r5,656
100025a0:	0009883a 	mov	r4,zero
100025a4:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0001);//6
100025a8:	01400044 	movi	r5,1
100025ac:	0009883a 	mov	r4,zero
100025b0:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0013);//8
100025b4:	014004c4 	movi	r5,19
100025b8:	0009883a 	mov	r4,zero
100025bc:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x052c);//a
100025c0:	01414b04 	movi	r5,1324
100025c4:	0009883a 	mov	r4,zero
100025c8:	00002f40 	call	100002f4 <IO_write>

	//data phase IN-3
	IO_write(HPI_DATA,0x0554); //c
100025cc:	01415504 	movi	r5,1364
100025d0:	0009883a 	mov	r4,zero
100025d4:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0002);//e
100025d8:	01400084 	movi	r5,2
100025dc:	0009883a 	mov	r4,zero
100025e0:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0290);//530
100025e4:	0140a404 	movi	r5,656
100025e8:	0009883a 	mov	r4,zero
100025ec:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0041);//2
100025f0:	01401044 	movi	r5,65
100025f4:	0009883a 	mov	r4,zero
100025f8:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0013);//4
100025fc:	014004c4 	movi	r5,19
10002600:	0009883a 	mov	r4,zero
10002604:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0538);//6
10002608:	01414e04 	movi	r5,1336
1000260c:	0009883a 	mov	r4,zero
10002610:	00002f40 	call	100002f4 <IO_write>

	//status phase
	IO_write(HPI_DATA,0x0000); //538
10002614:	000b883a 	mov	r5,zero
10002618:	0009883a 	mov	r4,zero
1000261c:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0000);//a
10002620:	000b883a 	mov	r5,zero
10002624:	0009883a 	mov	r4,zero
10002628:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0210);//c
1000262c:	01408404 	movi	r5,528
10002630:	0009883a 	mov	r4,zero
10002634:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0041);//e
10002638:	01401044 	movi	r5,65
1000263c:	0009883a 	mov	r4,zero
10002640:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0013);//540
10002644:	014004c4 	movi	r5,19
10002648:	0009883a 	mov	r4,zero
1000264c:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0000);//2
10002650:	000b883a 	mov	r5,zero
10002654:	0009883a 	mov	r4,zero
10002658:	00002f40 	call	100002f4 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
1000265c:	01414004 	movi	r5,1280
10002660:	01006c04 	movi	r4,432
10002664:	00021100 	call	10002110 <UsbWrite>
}
10002668:	0001883a 	nop
1000266c:	e037883a 	mov	sp,fp
10002670:	dfc00117 	ldw	ra,4(sp)
10002674:	df000017 	ldw	fp,0(sp)
10002678:	dec00204 	addi	sp,sp,8
1000267c:	f800283a 	ret

10002680 <UsbGetConfigDesc1>:


void UsbGetConfigDesc1()
{
10002680:	defffe04 	addi	sp,sp,-8
10002684:	dfc00115 	stw	ra,4(sp)
10002688:	df000015 	stw	fp,0(sp)
1000268c:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
10002690:	01414004 	movi	r5,1280
10002694:	01000084 	movi	r4,2
10002698:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x050C);
1000269c:	01414304 	movi	r5,1292
100026a0:	0009883a 	mov	r4,zero
100026a4:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
100026a8:	01400204 	movi	r5,8
100026ac:	0009883a 	mov	r4,zero
100026b0:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x02D0); //device address
100026b4:	0140b404 	movi	r5,720
100026b8:	0009883a 	mov	r4,zero
100026bc:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0001);
100026c0:	01400044 	movi	r5,1
100026c4:	0009883a 	mov	r4,zero
100026c8:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0013);
100026cc:	014004c4 	movi	r5,19
100026d0:	0009883a 	mov	r4,zero
100026d4:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0514);
100026d8:	01414504 	movi	r5,1300
100026dc:	0009883a 	mov	r4,zero
100026e0:	00002f40 	call	100002f4 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0680);//c
100026e4:	0141a004 	movi	r5,1664
100026e8:	0009883a 	mov	r4,zero
100026ec:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0200);//e //config 0x02
100026f0:	01408004 	movi	r5,512
100026f4:	0009883a 	mov	r4,zero
100026f8:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0000);//0
100026fc:	000b883a 	mov	r5,zero
10002700:	0009883a 	mov	r4,zero
10002704:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0009);//2
10002708:	01400244 	movi	r5,9
1000270c:	0009883a 	mov	r4,zero
10002710:	00002f40 	call	100002f4 <IO_write>

	//data phase IN-1
	IO_write(HPI_DATA,0x0544); //514
10002714:	01415104 	movi	r5,1348
10002718:	0009883a 	mov	r4,zero
1000271c:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0008);//6
10002720:	01400204 	movi	r5,8
10002724:	0009883a 	mov	r4,zero
10002728:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
1000272c:	0140a404 	movi	r5,656
10002730:	0009883a 	mov	r4,zero
10002734:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0041);//a
10002738:	01401044 	movi	r5,65
1000273c:	0009883a 	mov	r4,zero
10002740:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
10002744:	014004c4 	movi	r5,19
10002748:	0009883a 	mov	r4,zero
1000274c:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0520);//e
10002750:	01414804 	movi	r5,1312
10002754:	0009883a 	mov	r4,zero
10002758:	00002f40 	call	100002f4 <IO_write>

	//data phase IN-2
	IO_write(HPI_DATA,0x054c); //520
1000275c:	01415304 	movi	r5,1356
10002760:	0009883a 	mov	r4,zero
10002764:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0001);//2
10002768:	01400044 	movi	r5,1
1000276c:	0009883a 	mov	r4,zero
10002770:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0290);//4
10002774:	0140a404 	movi	r5,656
10002778:	0009883a 	mov	r4,zero
1000277c:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0001);//6 //data0
10002780:	01400044 	movi	r5,1
10002784:	0009883a 	mov	r4,zero
10002788:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0013);//8
1000278c:	014004c4 	movi	r5,19
10002790:	0009883a 	mov	r4,zero
10002794:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x052c);//a
10002798:	01414b04 	movi	r5,1324
1000279c:	0009883a 	mov	r4,zero
100027a0:	00002f40 	call	100002f4 <IO_write>

	//status phase
	IO_write(HPI_DATA,0x0000); //52c
100027a4:	000b883a 	mov	r5,zero
100027a8:	0009883a 	mov	r4,zero
100027ac:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0000);//e
100027b0:	000b883a 	mov	r5,zero
100027b4:	0009883a 	mov	r4,zero
100027b8:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0210);//530
100027bc:	01408404 	movi	r5,528
100027c0:	0009883a 	mov	r4,zero
100027c4:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0041);//2
100027c8:	01401044 	movi	r5,65
100027cc:	0009883a 	mov	r4,zero
100027d0:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0013);//4
100027d4:	014004c4 	movi	r5,19
100027d8:	0009883a 	mov	r4,zero
100027dc:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0000);//6
100027e0:	000b883a 	mov	r5,zero
100027e4:	0009883a 	mov	r4,zero
100027e8:	00002f40 	call	100002f4 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
100027ec:	01414004 	movi	r5,1280
100027f0:	01006c04 	movi	r4,432
100027f4:	00021100 	call	10002110 <UsbWrite>
}
100027f8:	0001883a 	nop
100027fc:	e037883a 	mov	sp,fp
10002800:	dfc00117 	ldw	ra,4(sp)
10002804:	df000017 	ldw	fp,0(sp)
10002808:	dec00204 	addi	sp,sp,8
1000280c:	f800283a 	ret

10002810 <UsbGetConfigDesc2>:


void UsbGetConfigDesc2()
{
10002810:	defffe04 	addi	sp,sp,-8
10002814:	dfc00115 	stw	ra,4(sp)
10002818:	df000015 	stw	fp,0(sp)
1000281c:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
10002820:	01414004 	movi	r5,1280
10002824:	01000084 	movi	r4,2
10002828:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x050C);
1000282c:	01414304 	movi	r5,1292
10002830:	0009883a 	mov	r4,zero
10002834:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
10002838:	01400204 	movi	r5,8
1000283c:	0009883a 	mov	r4,zero
10002840:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x02D0); //device address
10002844:	0140b404 	movi	r5,720
10002848:	0009883a 	mov	r4,zero
1000284c:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0001);
10002850:	01400044 	movi	r5,1
10002854:	0009883a 	mov	r4,zero
10002858:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0013);
1000285c:	014004c4 	movi	r5,19
10002860:	0009883a 	mov	r4,zero
10002864:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0514);
10002868:	01414504 	movi	r5,1300
1000286c:	0009883a 	mov	r4,zero
10002870:	00002f40 	call	100002f4 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0680);//c
10002874:	0141a004 	movi	r5,1664
10002878:	0009883a 	mov	r4,zero
1000287c:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0200);//e //config 0x02
10002880:	01408004 	movi	r5,512
10002884:	0009883a 	mov	r4,zero
10002888:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0000);//0
1000288c:	000b883a 	mov	r5,zero
10002890:	0009883a 	mov	r4,zero
10002894:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x00FF);//2
10002898:	01403fc4 	movi	r5,255
1000289c:	0009883a 	mov	r4,zero
100028a0:	00002f40 	call	100002f4 <IO_write>

	//data phase IN-1
	IO_write(HPI_DATA,0x055c); //514
100028a4:	01415704 	movi	r5,1372
100028a8:	0009883a 	mov	r4,zero
100028ac:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0008);//6
100028b0:	01400204 	movi	r5,8
100028b4:	0009883a 	mov	r4,zero
100028b8:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
100028bc:	0140a404 	movi	r5,656
100028c0:	0009883a 	mov	r4,zero
100028c4:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0041);//a
100028c8:	01401044 	movi	r5,65
100028cc:	0009883a 	mov	r4,zero
100028d0:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
100028d4:	014004c4 	movi	r5,19
100028d8:	0009883a 	mov	r4,zero
100028dc:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0520);//e
100028e0:	01414804 	movi	r5,1312
100028e4:	0009883a 	mov	r4,zero
100028e8:	00002f40 	call	100002f4 <IO_write>

	//data phase IN-2
	IO_write(HPI_DATA,0x0564); //520
100028ec:	01415904 	movi	r5,1380
100028f0:	0009883a 	mov	r4,zero
100028f4:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0008);//2
100028f8:	01400204 	movi	r5,8
100028fc:	0009883a 	mov	r4,zero
10002900:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0290);//4
10002904:	0140a404 	movi	r5,656
10002908:	0009883a 	mov	r4,zero
1000290c:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0001);//6 //data0
10002910:	01400044 	movi	r5,1
10002914:	0009883a 	mov	r4,zero
10002918:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0013);//8
1000291c:	014004c4 	movi	r5,19
10002920:	0009883a 	mov	r4,zero
10002924:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x052c);//a
10002928:	01414b04 	movi	r5,1324
1000292c:	0009883a 	mov	r4,zero
10002930:	00002f40 	call	100002f4 <IO_write>

	//data phase IN-3
	IO_write(HPI_DATA,0x056c); //52c
10002934:	01415b04 	movi	r5,1388
10002938:	0009883a 	mov	r4,zero
1000293c:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0008);//e
10002940:	01400204 	movi	r5,8
10002944:	0009883a 	mov	r4,zero
10002948:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0290);//530
1000294c:	0140a404 	movi	r5,656
10002950:	0009883a 	mov	r4,zero
10002954:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0041);//2
10002958:	01401044 	movi	r5,65
1000295c:	0009883a 	mov	r4,zero
10002960:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0013);//4
10002964:	014004c4 	movi	r5,19
10002968:	0009883a 	mov	r4,zero
1000296c:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0538);//6
10002970:	01414e04 	movi	r5,1336
10002974:	0009883a 	mov	r4,zero
10002978:	00002f40 	call	100002f4 <IO_write>

	//data phase IN-4
	IO_write(HPI_DATA,0x0574); //538
1000297c:	01415d04 	movi	r5,1396
10002980:	0009883a 	mov	r4,zero
10002984:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0008);//a
10002988:	01400204 	movi	r5,8
1000298c:	0009883a 	mov	r4,zero
10002990:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0290);//c
10002994:	0140a404 	movi	r5,656
10002998:	0009883a 	mov	r4,zero
1000299c:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0001);//e //data0
100029a0:	01400044 	movi	r5,1
100029a4:	0009883a 	mov	r4,zero
100029a8:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0013);//540
100029ac:	014004c4 	movi	r5,19
100029b0:	0009883a 	mov	r4,zero
100029b4:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0544);//2
100029b8:	01415104 	movi	r5,1348
100029bc:	0009883a 	mov	r4,zero
100029c0:	00002f40 	call	100002f4 <IO_write>

	//data phase IN-5
	IO_write(HPI_DATA,0x057c); //544
100029c4:	01415f04 	movi	r5,1404
100029c8:	0009883a 	mov	r4,zero
100029cc:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0002);//6
100029d0:	01400084 	movi	r5,2
100029d4:	0009883a 	mov	r4,zero
100029d8:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
100029dc:	0140a404 	movi	r5,656
100029e0:	0009883a 	mov	r4,zero
100029e4:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0041);//a //data1
100029e8:	01401044 	movi	r5,65
100029ec:	0009883a 	mov	r4,zero
100029f0:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
100029f4:	014004c4 	movi	r5,19
100029f8:	0009883a 	mov	r4,zero
100029fc:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0550);//e
10002a00:	01415404 	movi	r5,1360
10002a04:	0009883a 	mov	r4,zero
10002a08:	00002f40 	call	100002f4 <IO_write>

	//status phase
	IO_write(HPI_DATA,0x0000); //550
10002a0c:	000b883a 	mov	r5,zero
10002a10:	0009883a 	mov	r4,zero
10002a14:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0000);//2
10002a18:	000b883a 	mov	r5,zero
10002a1c:	0009883a 	mov	r4,zero
10002a20:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0210);//4
10002a24:	01408404 	movi	r5,528
10002a28:	0009883a 	mov	r4,zero
10002a2c:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0041);//6
10002a30:	01401044 	movi	r5,65
10002a34:	0009883a 	mov	r4,zero
10002a38:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0013);//8
10002a3c:	014004c4 	movi	r5,19
10002a40:	0009883a 	mov	r4,zero
10002a44:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0000);//a
10002a48:	000b883a 	mov	r5,zero
10002a4c:	0009883a 	mov	r4,zero
10002a50:	00002f40 	call	100002f4 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
10002a54:	01414004 	movi	r5,1280
10002a58:	01006c04 	movi	r4,432
10002a5c:	00021100 	call	10002110 <UsbWrite>
}
10002a60:	0001883a 	nop
10002a64:	e037883a 	mov	sp,fp
10002a68:	dfc00117 	ldw	ra,4(sp)
10002a6c:	df000017 	ldw	fp,0(sp)
10002a70:	dec00204 	addi	sp,sp,8
10002a74:	f800283a 	ret

10002a78 <UsbSetConfig>:

void UsbSetConfig()
{
10002a78:	defffe04 	addi	sp,sp,-8
10002a7c:	dfc00115 	stw	ra,4(sp)
10002a80:	df000015 	stw	fp,0(sp)
10002a84:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
10002a88:	01414004 	movi	r5,1280
10002a8c:	01000084 	movi	r4,2
10002a90:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x050C);
10002a94:	01414304 	movi	r5,1292
10002a98:	0009883a 	mov	r4,zero
10002a9c:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
10002aa0:	01400204 	movi	r5,8
10002aa4:	0009883a 	mov	r4,zero
10002aa8:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x02D0); //port address
10002aac:	0140b404 	movi	r5,720
10002ab0:	0009883a 	mov	r4,zero
10002ab4:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0001);
10002ab8:	01400044 	movi	r5,1
10002abc:	0009883a 	mov	r4,zero
10002ac0:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0013);
10002ac4:	014004c4 	movi	r5,19
10002ac8:	0009883a 	mov	r4,zero
10002acc:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0514);
10002ad0:	01414504 	movi	r5,1300
10002ad4:	0009883a 	mov	r4,zero
10002ad8:	00002f40 	call	100002f4 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0900);
10002adc:	01424004 	movi	r5,2304
10002ae0:	0009883a 	mov	r4,zero
10002ae4:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0001);//device address
10002ae8:	01400044 	movi	r5,1
10002aec:	0009883a 	mov	r4,zero
10002af0:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0000);
10002af4:	000b883a 	mov	r5,zero
10002af8:	0009883a 	mov	r4,zero
10002afc:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0000);
10002b00:	000b883a 	mov	r5,zero
10002b04:	0009883a 	mov	r4,zero
10002b08:	00002f40 	call	100002f4 <IO_write>
	//in packet
	IO_write(HPI_DATA,0x0000); //don't care
10002b0c:	000b883a 	mov	r5,zero
10002b10:	0009883a 	mov	r4,zero
10002b14:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0000);//port number
10002b18:	000b883a 	mov	r5,zero
10002b1c:	0009883a 	mov	r4,zero
10002b20:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0290);//device address
10002b24:	0140a404 	movi	r5,656
10002b28:	0009883a 	mov	r4,zero
10002b2c:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0041); //data 1
10002b30:	01401044 	movi	r5,65
10002b34:	0009883a 	mov	r4,zero
10002b38:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0013);
10002b3c:	014004c4 	movi	r5,19
10002b40:	0009883a 	mov	r4,zero
10002b44:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0000);
10002b48:	000b883a 	mov	r5,zero
10002b4c:	0009883a 	mov	r4,zero
10002b50:	00002f40 	call	100002f4 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
10002b54:	01414004 	movi	r5,1280
10002b58:	01006c04 	movi	r4,432
10002b5c:	00021100 	call	10002110 <UsbWrite>

}
10002b60:	0001883a 	nop
10002b64:	e037883a 	mov	sp,fp
10002b68:	dfc00117 	ldw	ra,4(sp)
10002b6c:	df000017 	ldw	fp,0(sp)
10002b70:	dec00204 	addi	sp,sp,8
10002b74:	f800283a 	ret

10002b78 <UsbClassRequest>:

void UsbClassRequest()
{
10002b78:	defffe04 	addi	sp,sp,-8
10002b7c:	dfc00115 	stw	ra,4(sp)
10002b80:	df000015 	stw	fp,0(sp)
10002b84:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
10002b88:	01414004 	movi	r5,1280
10002b8c:	01000084 	movi	r4,2
10002b90:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x050C);
10002b94:	01414304 	movi	r5,1292
10002b98:	0009883a 	mov	r4,zero
10002b9c:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
10002ba0:	01400204 	movi	r5,8
10002ba4:	0009883a 	mov	r4,zero
10002ba8:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x02D0); //port address
10002bac:	0140b404 	movi	r5,720
10002bb0:	0009883a 	mov	r4,zero
10002bb4:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0001);
10002bb8:	01400044 	movi	r5,1
10002bbc:	0009883a 	mov	r4,zero
10002bc0:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0013);
10002bc4:	014004c4 	movi	r5,19
10002bc8:	0009883a 	mov	r4,zero
10002bcc:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0514);
10002bd0:	01414504 	movi	r5,1300
10002bd4:	0009883a 	mov	r4,zero
10002bd8:	00002f40 	call	100002f4 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0A21);
10002bdc:	01428844 	movi	r5,2593
10002be0:	0009883a 	mov	r4,zero
10002be4:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0000);//device address
10002be8:	000b883a 	mov	r5,zero
10002bec:	0009883a 	mov	r4,zero
10002bf0:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0000);
10002bf4:	000b883a 	mov	r5,zero
10002bf8:	0009883a 	mov	r4,zero
10002bfc:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0000);
10002c00:	000b883a 	mov	r5,zero
10002c04:	0009883a 	mov	r4,zero
10002c08:	00002f40 	call	100002f4 <IO_write>
	//in packet
	IO_write(HPI_DATA,0x0000); //don't care
10002c0c:	000b883a 	mov	r5,zero
10002c10:	0009883a 	mov	r4,zero
10002c14:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0000);//port number /data length
10002c18:	000b883a 	mov	r5,zero
10002c1c:	0009883a 	mov	r4,zero
10002c20:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0290);//device address
10002c24:	0140a404 	movi	r5,656
10002c28:	0009883a 	mov	r4,zero
10002c2c:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0041); //data 1
10002c30:	01401044 	movi	r5,65
10002c34:	0009883a 	mov	r4,zero
10002c38:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0013);
10002c3c:	014004c4 	movi	r5,19
10002c40:	0009883a 	mov	r4,zero
10002c44:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0000);
10002c48:	000b883a 	mov	r5,zero
10002c4c:	0009883a 	mov	r4,zero
10002c50:	00002f40 	call	100002f4 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
10002c54:	01414004 	movi	r5,1280
10002c58:	01006c04 	movi	r4,432
10002c5c:	00021100 	call	10002110 <UsbWrite>
}
10002c60:	0001883a 	nop
10002c64:	e037883a 	mov	sp,fp
10002c68:	dfc00117 	ldw	ra,4(sp)
10002c6c:	df000017 	ldw	fp,0(sp)
10002c70:	dec00204 	addi	sp,sp,8
10002c74:	f800283a 	ret

10002c78 <UsbGetHidDesc>:


void UsbGetHidDesc()
{
10002c78:	defffe04 	addi	sp,sp,-8
10002c7c:	dfc00115 	stw	ra,4(sp)
10002c80:	df000015 	stw	fp,0(sp)
10002c84:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
10002c88:	01414004 	movi	r5,1280
10002c8c:	01000084 	movi	r4,2
10002c90:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x050C);
10002c94:	01414304 	movi	r5,1292
10002c98:	0009883a 	mov	r4,zero
10002c9c:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
10002ca0:	01400204 	movi	r5,8
10002ca4:	0009883a 	mov	r4,zero
10002ca8:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x02D0); //port address
10002cac:	0140b404 	movi	r5,720
10002cb0:	0009883a 	mov	r4,zero
10002cb4:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0001);
10002cb8:	01400044 	movi	r5,1
10002cbc:	0009883a 	mov	r4,zero
10002cc0:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0013);
10002cc4:	014004c4 	movi	r5,19
10002cc8:	0009883a 	mov	r4,zero
10002ccc:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0514);
10002cd0:	01414504 	movi	r5,1300
10002cd4:	0009883a 	mov	r4,zero
10002cd8:	00002f40 	call	100002f4 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0681);//c
10002cdc:	0141a044 	movi	r5,1665
10002ce0:	0009883a 	mov	r4,zero
10002ce4:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x2100);//e //HID 0x21
10002ce8:	01484004 	movi	r5,8448
10002cec:	0009883a 	mov	r4,zero
10002cf0:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0000);//0
10002cf4:	000b883a 	mov	r5,zero
10002cf8:	0009883a 	mov	r4,zero
10002cfc:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x007B);//2
10002d00:	01401ec4 	movi	r5,123
10002d04:	0009883a 	mov	r4,zero
10002d08:	00002f40 	call	100002f4 <IO_write>

	//data phase IN-1
	IO_write(HPI_DATA,0x0544); //514
10002d0c:	01415104 	movi	r5,1348
10002d10:	0009883a 	mov	r4,zero
10002d14:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0008);//6
10002d18:	01400204 	movi	r5,8
10002d1c:	0009883a 	mov	r4,zero
10002d20:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
10002d24:	0140a404 	movi	r5,656
10002d28:	0009883a 	mov	r4,zero
10002d2c:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0041);//a
10002d30:	01401044 	movi	r5,65
10002d34:	0009883a 	mov	r4,zero
10002d38:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
10002d3c:	014004c4 	movi	r5,19
10002d40:	0009883a 	mov	r4,zero
10002d44:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0520);//e
10002d48:	01414804 	movi	r5,1312
10002d4c:	0009883a 	mov	r4,zero
10002d50:	00002f40 	call	100002f4 <IO_write>

	//status phase
	IO_write(HPI_DATA,0x0000); //52c
10002d54:	000b883a 	mov	r5,zero
10002d58:	0009883a 	mov	r4,zero
10002d5c:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0000);//e
10002d60:	000b883a 	mov	r5,zero
10002d64:	0009883a 	mov	r4,zero
10002d68:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0210);//530
10002d6c:	01408404 	movi	r5,528
10002d70:	0009883a 	mov	r4,zero
10002d74:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0041);//2
10002d78:	01401044 	movi	r5,65
10002d7c:	0009883a 	mov	r4,zero
10002d80:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0013);//4
10002d84:	014004c4 	movi	r5,19
10002d88:	0009883a 	mov	r4,zero
10002d8c:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0000);//6
10002d90:	000b883a 	mov	r5,zero
10002d94:	0009883a 	mov	r4,zero
10002d98:	00002f40 	call	100002f4 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
10002d9c:	01414004 	movi	r5,1280
10002da0:	01006c04 	movi	r4,432
10002da4:	00021100 	call	10002110 <UsbWrite>

}
10002da8:	0001883a 	nop
10002dac:	e037883a 	mov	sp,fp
10002db0:	dfc00117 	ldw	ra,4(sp)
10002db4:	df000017 	ldw	fp,0(sp)
10002db8:	dec00204 	addi	sp,sp,8
10002dbc:	f800283a 	ret

10002dc0 <UsbGetReportDesc>:


void UsbGetReportDesc()
{
10002dc0:	defffe04 	addi	sp,sp,-8
10002dc4:	dfc00115 	stw	ra,4(sp)
10002dc8:	df000015 	stw	fp,0(sp)
10002dcc:	d839883a 	mov	fp,sp
	//the starting address
	IO_write(HPI_ADDR,0x0500); //the start address
10002dd0:	01414004 	movi	r5,1280
10002dd4:	01000084 	movi	r4,2
10002dd8:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x050C);
10002ddc:	01414304 	movi	r5,1292
10002de0:	0009883a 	mov	r4,zero
10002de4:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0008); //4 port number
10002de8:	01400204 	movi	r5,8
10002dec:	0009883a 	mov	r4,zero
10002df0:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x02D0); //device address
10002df4:	0140b404 	movi	r5,720
10002df8:	0009883a 	mov	r4,zero
10002dfc:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0001);
10002e00:	01400044 	movi	r5,1
10002e04:	0009883a 	mov	r4,zero
10002e08:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0013);
10002e0c:	014004c4 	movi	r5,19
10002e10:	0009883a 	mov	r4,zero
10002e14:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0514);
10002e18:	01414504 	movi	r5,1300
10002e1c:	0009883a 	mov	r4,zero
10002e20:	00002f40 	call	100002f4 <IO_write>

	//td content 4 bytes
	IO_write(HPI_DATA,0x0681);//c
10002e24:	0141a044 	movi	r5,1665
10002e28:	0009883a 	mov	r4,zero
10002e2c:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x2200);//e //report 0x22
10002e30:	01488004 	movi	r5,8704
10002e34:	0009883a 	mov	r4,zero
10002e38:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0000);//0
10002e3c:	000b883a 	mov	r5,zero
10002e40:	0009883a 	mov	r4,zero
10002e44:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x007B);//2
10002e48:	01401ec4 	movi	r5,123
10002e4c:	0009883a 	mov	r4,zero
10002e50:	00002f40 	call	100002f4 <IO_write>

	//data phase IN-1
	IO_write(HPI_DATA,0x0580); //514
10002e54:	01416004 	movi	r5,1408
10002e58:	0009883a 	mov	r4,zero
10002e5c:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0008);//6
10002e60:	01400204 	movi	r5,8
10002e64:	0009883a 	mov	r4,zero
10002e68:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
10002e6c:	0140a404 	movi	r5,656
10002e70:	0009883a 	mov	r4,zero
10002e74:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0041);//a
10002e78:	01401044 	movi	r5,65
10002e7c:	0009883a 	mov	r4,zero
10002e80:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
10002e84:	014004c4 	movi	r5,19
10002e88:	0009883a 	mov	r4,zero
10002e8c:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0520);//e
10002e90:	01414804 	movi	r5,1312
10002e94:	0009883a 	mov	r4,zero
10002e98:	00002f40 	call	100002f4 <IO_write>

	//data phase IN-2
	IO_write(HPI_DATA,0x0588); //520
10002e9c:	01416204 	movi	r5,1416
10002ea0:	0009883a 	mov	r4,zero
10002ea4:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0008);//2
10002ea8:	01400204 	movi	r5,8
10002eac:	0009883a 	mov	r4,zero
10002eb0:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0290);//4
10002eb4:	0140a404 	movi	r5,656
10002eb8:	0009883a 	mov	r4,zero
10002ebc:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0001);//6 //data0
10002ec0:	01400044 	movi	r5,1
10002ec4:	0009883a 	mov	r4,zero
10002ec8:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0013);//8
10002ecc:	014004c4 	movi	r5,19
10002ed0:	0009883a 	mov	r4,zero
10002ed4:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x052c);//a
10002ed8:	01414b04 	movi	r5,1324
10002edc:	0009883a 	mov	r4,zero
10002ee0:	00002f40 	call	100002f4 <IO_write>

	//data phase IN-3
	IO_write(HPI_DATA,0x0590); //52c
10002ee4:	01416404 	movi	r5,1424
10002ee8:	0009883a 	mov	r4,zero
10002eec:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0008);//e
10002ef0:	01400204 	movi	r5,8
10002ef4:	0009883a 	mov	r4,zero
10002ef8:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0290);//530
10002efc:	0140a404 	movi	r5,656
10002f00:	0009883a 	mov	r4,zero
10002f04:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0041);//2
10002f08:	01401044 	movi	r5,65
10002f0c:	0009883a 	mov	r4,zero
10002f10:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0013);//4
10002f14:	014004c4 	movi	r5,19
10002f18:	0009883a 	mov	r4,zero
10002f1c:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0538);//6
10002f20:	01414e04 	movi	r5,1336
10002f24:	0009883a 	mov	r4,zero
10002f28:	00002f40 	call	100002f4 <IO_write>

	//data phase IN-4
	IO_write(HPI_DATA,0x0598); //538
10002f2c:	01416604 	movi	r5,1432
10002f30:	0009883a 	mov	r4,zero
10002f34:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0008);//a
10002f38:	01400204 	movi	r5,8
10002f3c:	0009883a 	mov	r4,zero
10002f40:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0290);//c
10002f44:	0140a404 	movi	r5,656
10002f48:	0009883a 	mov	r4,zero
10002f4c:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0001);//e //data0
10002f50:	01400044 	movi	r5,1
10002f54:	0009883a 	mov	r4,zero
10002f58:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0013);//540
10002f5c:	014004c4 	movi	r5,19
10002f60:	0009883a 	mov	r4,zero
10002f64:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0544);//2
10002f68:	01415104 	movi	r5,1348
10002f6c:	0009883a 	mov	r4,zero
10002f70:	00002f40 	call	100002f4 <IO_write>

	//data phase IN-5
	IO_write(HPI_DATA,0x05a0); //544
10002f74:	01416804 	movi	r5,1440
10002f78:	0009883a 	mov	r4,zero
10002f7c:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0008);//6
10002f80:	01400204 	movi	r5,8
10002f84:	0009883a 	mov	r4,zero
10002f88:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0290);//8
10002f8c:	0140a404 	movi	r5,656
10002f90:	0009883a 	mov	r4,zero
10002f94:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0041);//a //data1
10002f98:	01401044 	movi	r5,65
10002f9c:	0009883a 	mov	r4,zero
10002fa0:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
10002fa4:	014004c4 	movi	r5,19
10002fa8:	0009883a 	mov	r4,zero
10002fac:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0550);//e
10002fb0:	01415404 	movi	r5,1360
10002fb4:	0009883a 	mov	r4,zero
10002fb8:	00002f40 	call	100002f4 <IO_write>

	//data phase IN-6
	IO_write(HPI_DATA,0x05a8); //550
10002fbc:	01416a04 	movi	r5,1448
10002fc0:	0009883a 	mov	r4,zero
10002fc4:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0008);//2
10002fc8:	01400204 	movi	r5,8
10002fcc:	0009883a 	mov	r4,zero
10002fd0:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0290);//4
10002fd4:	0140a404 	movi	r5,656
10002fd8:	0009883a 	mov	r4,zero
10002fdc:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0001);//6 //data0
10002fe0:	01400044 	movi	r5,1
10002fe4:	0009883a 	mov	r4,zero
10002fe8:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0013);//8
10002fec:	014004c4 	movi	r5,19
10002ff0:	0009883a 	mov	r4,zero
10002ff4:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x055c);//a
10002ff8:	01415704 	movi	r5,1372
10002ffc:	0009883a 	mov	r4,zero
10003000:	00002f40 	call	100002f4 <IO_write>

	//data phase IN-7
	IO_write(HPI_DATA,0x05b0); //c
10003004:	01416c04 	movi	r5,1456
10003008:	0009883a 	mov	r4,zero
1000300c:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0008);//e
10003010:	01400204 	movi	r5,8
10003014:	0009883a 	mov	r4,zero
10003018:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0290);//560
1000301c:	0140a404 	movi	r5,656
10003020:	0009883a 	mov	r4,zero
10003024:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0041);//2 //data1
10003028:	01401044 	movi	r5,65
1000302c:	0009883a 	mov	r4,zero
10003030:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0013);//4
10003034:	014004c4 	movi	r5,19
10003038:	0009883a 	mov	r4,zero
1000303c:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0568);//6
10003040:	01415a04 	movi	r5,1384
10003044:	0009883a 	mov	r4,zero
10003048:	00002f40 	call	100002f4 <IO_write>

	//data phase IN-8
	IO_write(HPI_DATA,0x05b8); //8
1000304c:	01416e04 	movi	r5,1464
10003050:	0009883a 	mov	r4,zero
10003054:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0003);//a
10003058:	014000c4 	movi	r5,3
1000305c:	0009883a 	mov	r4,zero
10003060:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0290);//c
10003064:	0140a404 	movi	r5,656
10003068:	0009883a 	mov	r4,zero
1000306c:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0001);//e //data0
10003070:	01400044 	movi	r5,1
10003074:	0009883a 	mov	r4,zero
10003078:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0013);//570
1000307c:	014004c4 	movi	r5,19
10003080:	0009883a 	mov	r4,zero
10003084:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0574);//2
10003088:	01415d04 	movi	r5,1396
1000308c:	0009883a 	mov	r4,zero
10003090:	00002f40 	call	100002f4 <IO_write>

	//status phase
	IO_write(HPI_DATA,0x0000); //574
10003094:	000b883a 	mov	r5,zero
10003098:	0009883a 	mov	r4,zero
1000309c:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0000);//6
100030a0:	000b883a 	mov	r5,zero
100030a4:	0009883a 	mov	r4,zero
100030a8:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0210);//8
100030ac:	01408404 	movi	r5,528
100030b0:	0009883a 	mov	r4,zero
100030b4:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0041);//a
100030b8:	01401044 	movi	r5,65
100030bc:	0009883a 	mov	r4,zero
100030c0:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0013);//c
100030c4:	014004c4 	movi	r5,19
100030c8:	0009883a 	mov	r4,zero
100030cc:	00002f40 	call	100002f4 <IO_write>
	IO_write(HPI_DATA,0x0000);//e
100030d0:	000b883a 	mov	r5,zero
100030d4:	0009883a 	mov	r4,zero
100030d8:	00002f40 	call	100002f4 <IO_write>

	UsbWrite(HUSB_SIE1_pCurrentTDPtr,0x0500); //HUSB_SIE1_pCurrentTDPtr
100030dc:	01414004 	movi	r5,1280
100030e0:	01006c04 	movi	r4,432
100030e4:	00021100 	call	10002110 <UsbWrite>

}
100030e8:	0001883a 	nop
100030ec:	e037883a 	mov	sp,fp
100030f0:	dfc00117 	ldw	ra,4(sp)
100030f4:	df000017 	ldw	fp,0(sp)
100030f8:	dec00204 	addi	sp,sp,8
100030fc:	f800283a 	ret

10003100 <UsbWaitTDListDone>:


alt_u16 UsbWaitTDListDone()
{
10003100:	defffd04 	addi	sp,sp,-12
10003104:	dfc00215 	stw	ra,8(sp)
10003108:	df000115 	stw	fp,4(sp)
1000310c:	df000104 	addi	fp,sp,4
	alt_u16 usb_ctl_val;

	usb_ctl_val = UsbRead(HPI_SIE1_MSG_ADR); // STEP 3 j
10003110:	01005104 	movi	r4,324
10003114:	00021680 	call	10002168 <UsbRead>
10003118:	e0bfff0d 	sth	r2,-4(fp)
	UsbWrite(HPI_SIE1_MSG_ADR, 0);
1000311c:	000b883a 	mov	r5,zero
10003120:	01005104 	movi	r4,324
10003124:	00021100 	call	10002110 <UsbWrite>
	while (usb_ctl_val != HUSB_TDListDone)  // k, read sie1 msg register
10003128:	00000d06 	br	10003160 <UsbWaitTDListDone+0x60>
	{
		if(usb_ctl_val == 0x0000)
1000312c:	e0bfff0b 	ldhu	r2,-4(fp)
10003130:	10000526 	beq	r2,zero,10003148 <UsbWaitTDListDone+0x48>
		{
		}
		else
		{
			printf("[SIE1 MSG]:SIE1 msg reg is %x\n",usb_ctl_val);
10003134:	e0bfff0b 	ldhu	r2,-4(fp)
10003138:	100b883a 	mov	r5,r2
1000313c:	010400b4 	movhi	r4,4098
10003140:	21319504 	addi	r4,r4,-14764
10003144:	0003cc40 	call	10003cc4 <printf>
		}
		usb_ctl_val = UsbRead(HPI_SIE1_MSG_ADR);
10003148:	01005104 	movi	r4,324
1000314c:	00021680 	call	10002168 <UsbRead>
10003150:	e0bfff0d 	sth	r2,-4(fp)
		UsbWrite(HPI_SIE1_MSG_ADR, 0);
10003154:	000b883a 	mov	r5,zero
10003158:	01005104 	movi	r4,324
1000315c:	00021100 	call	10002110 <UsbWrite>
{
	alt_u16 usb_ctl_val;

	usb_ctl_val = UsbRead(HPI_SIE1_MSG_ADR); // STEP 3 j
	UsbWrite(HPI_SIE1_MSG_ADR, 0);
	while (usb_ctl_val != HUSB_TDListDone)  // k, read sie1 msg register
10003160:	e0bfff0b 	ldhu	r2,-4(fp)
10003164:	10840018 	cmpnei	r2,r2,4096
10003168:	103ff01e 	bne	r2,zero,1000312c <__alt_data_end+0xf800312c>
		}
		usb_ctl_val = UsbRead(HPI_SIE1_MSG_ADR);
		UsbWrite(HPI_SIE1_MSG_ADR, 0);
	}

	return usb_ctl_val;
1000316c:	e0bfff0b 	ldhu	r2,-4(fp)
}
10003170:	e037883a 	mov	sp,fp
10003174:	dfc00117 	ldw	ra,4(sp)
10003178:	df000017 	ldw	fp,0(sp)
1000317c:	dec00204 	addi	sp,sp,8
10003180:	f800283a 	ret

10003184 <UsbGetRetryCnt>:


alt_u16 UsbGetRetryCnt()
{
10003184:	defffd04 	addi	sp,sp,-12
10003188:	dfc00215 	stw	ra,8(sp)
1000318c:	df000115 	stw	fp,4(sp)
10003190:	df000104 	addi	fp,sp,4
	alt_u16 usb_ctl_val;

	IO_read(HPI_STATUS);
10003194:	010000c4 	movi	r4,3
10003198:	00003700 	call	10000370 <IO_read>
	if(UsbRead(HPI_SIE1_MSG_ADR) == HUSB_TDListDone)
1000319c:	01005104 	movi	r4,324
100031a0:	00021680 	call	10002168 <UsbRead>
100031a4:	10bfffcc 	andi	r2,r2,65535
100031a8:	10840018 	cmpnei	r2,r2,4096
100031ac:	1000091e 	bne	r2,zero,100031d4 <UsbGetRetryCnt+0x50>
	{
		UsbWrite(HPI_SIE1_MSG_ADR, 0);
100031b0:	000b883a 	mov	r5,zero
100031b4:	01005104 	movi	r4,324
100031b8:	00021100 	call	10002110 <UsbWrite>

		while (!(IO_read(HPI_STATUS) & HPI_STATUS_SIE1msg_FLAG) )  //read sie1 msg register
100031bc:	0001883a 	nop
100031c0:	010000c4 	movi	r4,3
100031c4:	00003700 	call	10000370 <IO_read>
100031c8:	10bfffcc 	andi	r2,r2,65535
100031cc:	1080040c 	andi	r2,r2,16
100031d0:	103ffb26 	beq	r2,zero,100031c0 <__alt_data_end+0xf80031c0>
		{
		}
	}
	//usleep(1000);
	IO_write(HPI_ADDR,0x0508);
100031d4:	01414204 	movi	r5,1288
100031d8:	01000084 	movi	r4,2
100031dc:	00002f40 	call	100002f4 <IO_write>
	usb_ctl_val = IO_read(HPI_DATA);
100031e0:	0009883a 	mov	r4,zero
100031e4:	00003700 	call	10000370 <IO_read>
100031e8:	e0bfff0d 	sth	r2,-4(fp)

	return usb_ctl_val;
100031ec:	e0bfff0b 	ldhu	r2,-4(fp)
}
100031f0:	e037883a 	mov	sp,fp
100031f4:	dfc00117 	ldw	ra,4(sp)
100031f8:	df000017 	ldw	fp,0(sp)
100031fc:	dec00204 	addi	sp,sp,8
10003200:	f800283a 	ret

10003204 <UsbPrintMem>:


void UsbPrintMem()
{
10003204:	defffc04 	addi	sp,sp,-16
10003208:	dfc00315 	stw	ra,12(sp)
1000320c:	df000215 	stw	fp,8(sp)
10003210:	df000204 	addi	fp,sp,8
	int i, code;
	IO_write(HPI_ADDR,0x0500); //the start address
10003214:	01414004 	movi	r5,1280
10003218:	01000084 	movi	r4,2
1000321c:	00002f40 	call	100002f4 <IO_write>
	for (i = 0; i <= 200; i += 2)
10003220:	e03ffe15 	stw	zero,-8(fp)
10003224:	00000e06 	br	10003260 <UsbPrintMem+0x5c>
	{
		code = IO_read(HPI_DATA);
10003228:	0009883a 	mov	r4,zero
1000322c:	00003700 	call	10000370 <IO_read>
10003230:	10bfffcc 	andi	r2,r2,65535
10003234:	e0bfff15 	stw	r2,-4(fp)
		printf("\naddr %x = %04x\n", 0x0500+i, code);
10003238:	e0bffe17 	ldw	r2,-8(fp)
1000323c:	10814004 	addi	r2,r2,1280
10003240:	e1bfff17 	ldw	r6,-4(fp)
10003244:	100b883a 	mov	r5,r2
10003248:	010400b4 	movhi	r4,4098
1000324c:	21319d04 	addi	r4,r4,-14732
10003250:	0003cc40 	call	10003cc4 <printf>

void UsbPrintMem()
{
	int i, code;
	IO_write(HPI_ADDR,0x0500); //the start address
	for (i = 0; i <= 200; i += 2)
10003254:	e0bffe17 	ldw	r2,-8(fp)
10003258:	10800084 	addi	r2,r2,2
1000325c:	e0bffe15 	stw	r2,-8(fp)
10003260:	e0bffe17 	ldw	r2,-8(fp)
10003264:	10803250 	cmplti	r2,r2,201
10003268:	103fef1e 	bne	r2,zero,10003228 <__alt_data_end+0xf8003228>
	{
		code = IO_read(HPI_DATA);
		printf("\naddr %x = %04x\n", 0x0500+i, code);
	}
}
1000326c:	0001883a 	nop
10003270:	e037883a 	mov	sp,fp
10003274:	dfc00117 	ldw	ra,4(sp)
10003278:	df000017 	ldw	fp,0(sp)
1000327c:	dec00204 	addi	sp,sp,8
10003280:	f800283a 	ret

10003284 <__divsi3>:
10003284:	20001b16 	blt	r4,zero,100032f4 <__divsi3+0x70>
10003288:	000f883a 	mov	r7,zero
1000328c:	28001616 	blt	r5,zero,100032e8 <__divsi3+0x64>
10003290:	200d883a 	mov	r6,r4
10003294:	29001a2e 	bgeu	r5,r4,10003300 <__divsi3+0x7c>
10003298:	00800804 	movi	r2,32
1000329c:	00c00044 	movi	r3,1
100032a0:	00000106 	br	100032a8 <__divsi3+0x24>
100032a4:	10000d26 	beq	r2,zero,100032dc <__divsi3+0x58>
100032a8:	294b883a 	add	r5,r5,r5
100032ac:	10bfffc4 	addi	r2,r2,-1
100032b0:	18c7883a 	add	r3,r3,r3
100032b4:	293ffb36 	bltu	r5,r4,100032a4 <__alt_data_end+0xf80032a4>
100032b8:	0005883a 	mov	r2,zero
100032bc:	18000726 	beq	r3,zero,100032dc <__divsi3+0x58>
100032c0:	0005883a 	mov	r2,zero
100032c4:	31400236 	bltu	r6,r5,100032d0 <__divsi3+0x4c>
100032c8:	314dc83a 	sub	r6,r6,r5
100032cc:	10c4b03a 	or	r2,r2,r3
100032d0:	1806d07a 	srli	r3,r3,1
100032d4:	280ad07a 	srli	r5,r5,1
100032d8:	183ffa1e 	bne	r3,zero,100032c4 <__alt_data_end+0xf80032c4>
100032dc:	38000126 	beq	r7,zero,100032e4 <__divsi3+0x60>
100032e0:	0085c83a 	sub	r2,zero,r2
100032e4:	f800283a 	ret
100032e8:	014bc83a 	sub	r5,zero,r5
100032ec:	39c0005c 	xori	r7,r7,1
100032f0:	003fe706 	br	10003290 <__alt_data_end+0xf8003290>
100032f4:	0109c83a 	sub	r4,zero,r4
100032f8:	01c00044 	movi	r7,1
100032fc:	003fe306 	br	1000328c <__alt_data_end+0xf800328c>
10003300:	00c00044 	movi	r3,1
10003304:	003fee06 	br	100032c0 <__alt_data_end+0xf80032c0>

10003308 <__modsi3>:
10003308:	20001716 	blt	r4,zero,10003368 <__modsi3+0x60>
1000330c:	000f883a 	mov	r7,zero
10003310:	2005883a 	mov	r2,r4
10003314:	28001216 	blt	r5,zero,10003360 <__modsi3+0x58>
10003318:	2900162e 	bgeu	r5,r4,10003374 <__modsi3+0x6c>
1000331c:	01800804 	movi	r6,32
10003320:	00c00044 	movi	r3,1
10003324:	00000106 	br	1000332c <__modsi3+0x24>
10003328:	30000a26 	beq	r6,zero,10003354 <__modsi3+0x4c>
1000332c:	294b883a 	add	r5,r5,r5
10003330:	31bfffc4 	addi	r6,r6,-1
10003334:	18c7883a 	add	r3,r3,r3
10003338:	293ffb36 	bltu	r5,r4,10003328 <__alt_data_end+0xf8003328>
1000333c:	18000526 	beq	r3,zero,10003354 <__modsi3+0x4c>
10003340:	1806d07a 	srli	r3,r3,1
10003344:	11400136 	bltu	r2,r5,1000334c <__modsi3+0x44>
10003348:	1145c83a 	sub	r2,r2,r5
1000334c:	280ad07a 	srli	r5,r5,1
10003350:	183ffb1e 	bne	r3,zero,10003340 <__alt_data_end+0xf8003340>
10003354:	38000126 	beq	r7,zero,1000335c <__modsi3+0x54>
10003358:	0085c83a 	sub	r2,zero,r2
1000335c:	f800283a 	ret
10003360:	014bc83a 	sub	r5,zero,r5
10003364:	003fec06 	br	10003318 <__alt_data_end+0xf8003318>
10003368:	0109c83a 	sub	r4,zero,r4
1000336c:	01c00044 	movi	r7,1
10003370:	003fe706 	br	10003310 <__alt_data_end+0xf8003310>
10003374:	00c00044 	movi	r3,1
10003378:	003ff106 	br	10003340 <__alt_data_end+0xf8003340>

1000337c <__udivsi3>:
1000337c:	200d883a 	mov	r6,r4
10003380:	2900152e 	bgeu	r5,r4,100033d8 <__udivsi3+0x5c>
10003384:	28001416 	blt	r5,zero,100033d8 <__udivsi3+0x5c>
10003388:	00800804 	movi	r2,32
1000338c:	00c00044 	movi	r3,1
10003390:	00000206 	br	1000339c <__udivsi3+0x20>
10003394:	10000e26 	beq	r2,zero,100033d0 <__udivsi3+0x54>
10003398:	28000516 	blt	r5,zero,100033b0 <__udivsi3+0x34>
1000339c:	294b883a 	add	r5,r5,r5
100033a0:	10bfffc4 	addi	r2,r2,-1
100033a4:	18c7883a 	add	r3,r3,r3
100033a8:	293ffa36 	bltu	r5,r4,10003394 <__alt_data_end+0xf8003394>
100033ac:	18000826 	beq	r3,zero,100033d0 <__udivsi3+0x54>
100033b0:	0005883a 	mov	r2,zero
100033b4:	31400236 	bltu	r6,r5,100033c0 <__udivsi3+0x44>
100033b8:	314dc83a 	sub	r6,r6,r5
100033bc:	10c4b03a 	or	r2,r2,r3
100033c0:	1806d07a 	srli	r3,r3,1
100033c4:	280ad07a 	srli	r5,r5,1
100033c8:	183ffa1e 	bne	r3,zero,100033b4 <__alt_data_end+0xf80033b4>
100033cc:	f800283a 	ret
100033d0:	0005883a 	mov	r2,zero
100033d4:	f800283a 	ret
100033d8:	00c00044 	movi	r3,1
100033dc:	003ff406 	br	100033b0 <__alt_data_end+0xf80033b0>

100033e0 <__umodsi3>:
100033e0:	2005883a 	mov	r2,r4
100033e4:	2900122e 	bgeu	r5,r4,10003430 <__umodsi3+0x50>
100033e8:	28001116 	blt	r5,zero,10003430 <__umodsi3+0x50>
100033ec:	01800804 	movi	r6,32
100033f0:	00c00044 	movi	r3,1
100033f4:	00000206 	br	10003400 <__umodsi3+0x20>
100033f8:	30000c26 	beq	r6,zero,1000342c <__umodsi3+0x4c>
100033fc:	28000516 	blt	r5,zero,10003414 <__umodsi3+0x34>
10003400:	294b883a 	add	r5,r5,r5
10003404:	31bfffc4 	addi	r6,r6,-1
10003408:	18c7883a 	add	r3,r3,r3
1000340c:	293ffa36 	bltu	r5,r4,100033f8 <__alt_data_end+0xf80033f8>
10003410:	18000626 	beq	r3,zero,1000342c <__umodsi3+0x4c>
10003414:	1806d07a 	srli	r3,r3,1
10003418:	11400136 	bltu	r2,r5,10003420 <__umodsi3+0x40>
1000341c:	1145c83a 	sub	r2,r2,r5
10003420:	280ad07a 	srli	r5,r5,1
10003424:	183ffb1e 	bne	r3,zero,10003414 <__alt_data_end+0xf8003414>
10003428:	f800283a 	ret
1000342c:	f800283a 	ret
10003430:	00c00044 	movi	r3,1
10003434:	003ff706 	br	10003414 <__alt_data_end+0xf8003414>

10003438 <__mulsi3>:
10003438:	0005883a 	mov	r2,zero
1000343c:	20000726 	beq	r4,zero,1000345c <__mulsi3+0x24>
10003440:	20c0004c 	andi	r3,r4,1
10003444:	2008d07a 	srli	r4,r4,1
10003448:	18000126 	beq	r3,zero,10003450 <__mulsi3+0x18>
1000344c:	1145883a 	add	r2,r2,r5
10003450:	294b883a 	add	r5,r5,r5
10003454:	203ffa1e 	bne	r4,zero,10003440 <__alt_data_end+0xf8003440>
10003458:	f800283a 	ret
1000345c:	f800283a 	ret

10003460 <malloc>:
10003460:	008400b4 	movhi	r2,4098
10003464:	10ba2504 	addi	r2,r2,-5996
10003468:	200b883a 	mov	r5,r4
1000346c:	11000017 	ldw	r4,0(r2)
10003470:	00034881 	jmpi	10003488 <_malloc_r>

10003474 <free>:
10003474:	008400b4 	movhi	r2,4098
10003478:	10ba2504 	addi	r2,r2,-5996
1000347c:	200b883a 	mov	r5,r4
10003480:	11000017 	ldw	r4,0(r2)
10003484:	000a1c81 	jmpi	1000a1c8 <_free_r>

10003488 <_malloc_r>:
10003488:	defff504 	addi	sp,sp,-44
1000348c:	dc800315 	stw	r18,12(sp)
10003490:	dfc00a15 	stw	ra,40(sp)
10003494:	df000915 	stw	fp,36(sp)
10003498:	ddc00815 	stw	r23,32(sp)
1000349c:	dd800715 	stw	r22,28(sp)
100034a0:	dd400615 	stw	r21,24(sp)
100034a4:	dd000515 	stw	r20,20(sp)
100034a8:	dcc00415 	stw	r19,16(sp)
100034ac:	dc400215 	stw	r17,8(sp)
100034b0:	dc000115 	stw	r16,4(sp)
100034b4:	288002c4 	addi	r2,r5,11
100034b8:	00c00584 	movi	r3,22
100034bc:	2025883a 	mov	r18,r4
100034c0:	18807f2e 	bgeu	r3,r2,100036c0 <_malloc_r+0x238>
100034c4:	047ffe04 	movi	r17,-8
100034c8:	1462703a 	and	r17,r2,r17
100034cc:	8800a316 	blt	r17,zero,1000375c <_malloc_r+0x2d4>
100034d0:	8940a236 	bltu	r17,r5,1000375c <_malloc_r+0x2d4>
100034d4:	0019b7c0 	call	10019b7c <__malloc_lock>
100034d8:	00807dc4 	movi	r2,503
100034dc:	1441e92e 	bgeu	r2,r17,10003c84 <_malloc_r+0x7fc>
100034e0:	8804d27a 	srli	r2,r17,9
100034e4:	1000a126 	beq	r2,zero,1000376c <_malloc_r+0x2e4>
100034e8:	00c00104 	movi	r3,4
100034ec:	18811e36 	bltu	r3,r2,10003968 <_malloc_r+0x4e0>
100034f0:	8804d1ba 	srli	r2,r17,6
100034f4:	12000e44 	addi	r8,r2,57
100034f8:	11c00e04 	addi	r7,r2,56
100034fc:	4209883a 	add	r4,r8,r8
10003500:	04c400b4 	movhi	r19,4098
10003504:	2109883a 	add	r4,r4,r4
10003508:	9cf37504 	addi	r19,r19,-12844
1000350c:	2109883a 	add	r4,r4,r4
10003510:	9909883a 	add	r4,r19,r4
10003514:	24000117 	ldw	r16,4(r4)
10003518:	213ffe04 	addi	r4,r4,-8
1000351c:	24009726 	beq	r4,r16,1000377c <_malloc_r+0x2f4>
10003520:	80800117 	ldw	r2,4(r16)
10003524:	01bfff04 	movi	r6,-4
10003528:	014003c4 	movi	r5,15
1000352c:	1184703a 	and	r2,r2,r6
10003530:	1447c83a 	sub	r3,r2,r17
10003534:	28c00716 	blt	r5,r3,10003554 <_malloc_r+0xcc>
10003538:	1800920e 	bge	r3,zero,10003784 <_malloc_r+0x2fc>
1000353c:	84000317 	ldw	r16,12(r16)
10003540:	24008e26 	beq	r4,r16,1000377c <_malloc_r+0x2f4>
10003544:	80800117 	ldw	r2,4(r16)
10003548:	1184703a 	and	r2,r2,r6
1000354c:	1447c83a 	sub	r3,r2,r17
10003550:	28fff90e 	bge	r5,r3,10003538 <__alt_data_end+0xf8003538>
10003554:	3809883a 	mov	r4,r7
10003558:	018400b4 	movhi	r6,4098
1000355c:	9c000417 	ldw	r16,16(r19)
10003560:	31b37504 	addi	r6,r6,-12844
10003564:	32000204 	addi	r8,r6,8
10003568:	82013426 	beq	r16,r8,10003a3c <_malloc_r+0x5b4>
1000356c:	80c00117 	ldw	r3,4(r16)
10003570:	00bfff04 	movi	r2,-4
10003574:	188e703a 	and	r7,r3,r2
10003578:	3c45c83a 	sub	r2,r7,r17
1000357c:	00c003c4 	movi	r3,15
10003580:	18811f16 	blt	r3,r2,10003a00 <_malloc_r+0x578>
10003584:	32000515 	stw	r8,20(r6)
10003588:	32000415 	stw	r8,16(r6)
1000358c:	10007f0e 	bge	r2,zero,1000378c <_malloc_r+0x304>
10003590:	00807fc4 	movi	r2,511
10003594:	11c0fd36 	bltu	r2,r7,1000398c <_malloc_r+0x504>
10003598:	3806d0fa 	srli	r3,r7,3
1000359c:	01c00044 	movi	r7,1
100035a0:	30800117 	ldw	r2,4(r6)
100035a4:	19400044 	addi	r5,r3,1
100035a8:	294b883a 	add	r5,r5,r5
100035ac:	1807d0ba 	srai	r3,r3,2
100035b0:	294b883a 	add	r5,r5,r5
100035b4:	294b883a 	add	r5,r5,r5
100035b8:	298b883a 	add	r5,r5,r6
100035bc:	38c6983a 	sll	r3,r7,r3
100035c0:	29c00017 	ldw	r7,0(r5)
100035c4:	2a7ffe04 	addi	r9,r5,-8
100035c8:	1886b03a 	or	r3,r3,r2
100035cc:	82400315 	stw	r9,12(r16)
100035d0:	81c00215 	stw	r7,8(r16)
100035d4:	30c00115 	stw	r3,4(r6)
100035d8:	2c000015 	stw	r16,0(r5)
100035dc:	3c000315 	stw	r16,12(r7)
100035e0:	2005d0ba 	srai	r2,r4,2
100035e4:	01400044 	movi	r5,1
100035e8:	288a983a 	sll	r5,r5,r2
100035ec:	19406f36 	bltu	r3,r5,100037ac <_malloc_r+0x324>
100035f0:	28c4703a 	and	r2,r5,r3
100035f4:	10000a1e 	bne	r2,zero,10003620 <_malloc_r+0x198>
100035f8:	00bfff04 	movi	r2,-4
100035fc:	294b883a 	add	r5,r5,r5
10003600:	2088703a 	and	r4,r4,r2
10003604:	28c4703a 	and	r2,r5,r3
10003608:	21000104 	addi	r4,r4,4
1000360c:	1000041e 	bne	r2,zero,10003620 <_malloc_r+0x198>
10003610:	294b883a 	add	r5,r5,r5
10003614:	28c4703a 	and	r2,r5,r3
10003618:	21000104 	addi	r4,r4,4
1000361c:	103ffc26 	beq	r2,zero,10003610 <__alt_data_end+0xf8003610>
10003620:	02bfff04 	movi	r10,-4
10003624:	024003c4 	movi	r9,15
10003628:	21800044 	addi	r6,r4,1
1000362c:	318d883a 	add	r6,r6,r6
10003630:	318d883a 	add	r6,r6,r6
10003634:	318d883a 	add	r6,r6,r6
10003638:	998d883a 	add	r6,r19,r6
1000363c:	333ffe04 	addi	r12,r6,-8
10003640:	2017883a 	mov	r11,r4
10003644:	31800104 	addi	r6,r6,4
10003648:	34000017 	ldw	r16,0(r6)
1000364c:	31fffd04 	addi	r7,r6,-12
10003650:	81c0041e 	bne	r16,r7,10003664 <_malloc_r+0x1dc>
10003654:	0000fb06 	br	10003a44 <_malloc_r+0x5bc>
10003658:	1801030e 	bge	r3,zero,10003a68 <_malloc_r+0x5e0>
1000365c:	84000317 	ldw	r16,12(r16)
10003660:	81c0f826 	beq	r16,r7,10003a44 <_malloc_r+0x5bc>
10003664:	80800117 	ldw	r2,4(r16)
10003668:	1284703a 	and	r2,r2,r10
1000366c:	1447c83a 	sub	r3,r2,r17
10003670:	48fff90e 	bge	r9,r3,10003658 <__alt_data_end+0xf8003658>
10003674:	80800317 	ldw	r2,12(r16)
10003678:	81000217 	ldw	r4,8(r16)
1000367c:	89400054 	ori	r5,r17,1
10003680:	81400115 	stw	r5,4(r16)
10003684:	20800315 	stw	r2,12(r4)
10003688:	11000215 	stw	r4,8(r2)
1000368c:	8463883a 	add	r17,r16,r17
10003690:	9c400515 	stw	r17,20(r19)
10003694:	9c400415 	stw	r17,16(r19)
10003698:	18800054 	ori	r2,r3,1
1000369c:	88800115 	stw	r2,4(r17)
100036a0:	8a000315 	stw	r8,12(r17)
100036a4:	8a000215 	stw	r8,8(r17)
100036a8:	88e3883a 	add	r17,r17,r3
100036ac:	88c00015 	stw	r3,0(r17)
100036b0:	9009883a 	mov	r4,r18
100036b4:	0019ba00 	call	10019ba0 <__malloc_unlock>
100036b8:	80800204 	addi	r2,r16,8
100036bc:	00001b06 	br	1000372c <_malloc_r+0x2a4>
100036c0:	04400404 	movi	r17,16
100036c4:	89402536 	bltu	r17,r5,1000375c <_malloc_r+0x2d4>
100036c8:	0019b7c0 	call	10019b7c <__malloc_lock>
100036cc:	00800184 	movi	r2,6
100036d0:	01000084 	movi	r4,2
100036d4:	04c400b4 	movhi	r19,4098
100036d8:	1085883a 	add	r2,r2,r2
100036dc:	9cf37504 	addi	r19,r19,-12844
100036e0:	1085883a 	add	r2,r2,r2
100036e4:	9885883a 	add	r2,r19,r2
100036e8:	14000117 	ldw	r16,4(r2)
100036ec:	10fffe04 	addi	r3,r2,-8
100036f0:	80c0d926 	beq	r16,r3,10003a58 <_malloc_r+0x5d0>
100036f4:	80c00117 	ldw	r3,4(r16)
100036f8:	81000317 	ldw	r4,12(r16)
100036fc:	00bfff04 	movi	r2,-4
10003700:	1884703a 	and	r2,r3,r2
10003704:	81400217 	ldw	r5,8(r16)
10003708:	8085883a 	add	r2,r16,r2
1000370c:	10c00117 	ldw	r3,4(r2)
10003710:	29000315 	stw	r4,12(r5)
10003714:	21400215 	stw	r5,8(r4)
10003718:	18c00054 	ori	r3,r3,1
1000371c:	10c00115 	stw	r3,4(r2)
10003720:	9009883a 	mov	r4,r18
10003724:	0019ba00 	call	10019ba0 <__malloc_unlock>
10003728:	80800204 	addi	r2,r16,8
1000372c:	dfc00a17 	ldw	ra,40(sp)
10003730:	df000917 	ldw	fp,36(sp)
10003734:	ddc00817 	ldw	r23,32(sp)
10003738:	dd800717 	ldw	r22,28(sp)
1000373c:	dd400617 	ldw	r21,24(sp)
10003740:	dd000517 	ldw	r20,20(sp)
10003744:	dcc00417 	ldw	r19,16(sp)
10003748:	dc800317 	ldw	r18,12(sp)
1000374c:	dc400217 	ldw	r17,8(sp)
10003750:	dc000117 	ldw	r16,4(sp)
10003754:	dec00b04 	addi	sp,sp,44
10003758:	f800283a 	ret
1000375c:	00800304 	movi	r2,12
10003760:	90800015 	stw	r2,0(r18)
10003764:	0005883a 	mov	r2,zero
10003768:	003ff006 	br	1000372c <__alt_data_end+0xf800372c>
1000376c:	01002004 	movi	r4,128
10003770:	02001004 	movi	r8,64
10003774:	01c00fc4 	movi	r7,63
10003778:	003f6106 	br	10003500 <__alt_data_end+0xf8003500>
1000377c:	4009883a 	mov	r4,r8
10003780:	003f7506 	br	10003558 <__alt_data_end+0xf8003558>
10003784:	81000317 	ldw	r4,12(r16)
10003788:	003fde06 	br	10003704 <__alt_data_end+0xf8003704>
1000378c:	81c5883a 	add	r2,r16,r7
10003790:	11400117 	ldw	r5,4(r2)
10003794:	9009883a 	mov	r4,r18
10003798:	29400054 	ori	r5,r5,1
1000379c:	11400115 	stw	r5,4(r2)
100037a0:	0019ba00 	call	10019ba0 <__malloc_unlock>
100037a4:	80800204 	addi	r2,r16,8
100037a8:	003fe006 	br	1000372c <__alt_data_end+0xf800372c>
100037ac:	9c000217 	ldw	r16,8(r19)
100037b0:	00bfff04 	movi	r2,-4
100037b4:	85800117 	ldw	r22,4(r16)
100037b8:	b0ac703a 	and	r22,r22,r2
100037bc:	b4400336 	bltu	r22,r17,100037cc <_malloc_r+0x344>
100037c0:	b445c83a 	sub	r2,r22,r17
100037c4:	00c003c4 	movi	r3,15
100037c8:	18805d16 	blt	r3,r2,10003940 <_malloc_r+0x4b8>
100037cc:	05c400b4 	movhi	r23,4098
100037d0:	008400b4 	movhi	r2,4098
100037d4:	1080f404 	addi	r2,r2,976
100037d8:	bdfa2104 	addi	r23,r23,-6012
100037dc:	15400017 	ldw	r21,0(r2)
100037e0:	b8c00017 	ldw	r3,0(r23)
100037e4:	00bfffc4 	movi	r2,-1
100037e8:	858d883a 	add	r6,r16,r22
100037ec:	8d6b883a 	add	r21,r17,r21
100037f0:	1880ea26 	beq	r3,r2,10003b9c <_malloc_r+0x714>
100037f4:	ad4403c4 	addi	r21,r21,4111
100037f8:	00bc0004 	movi	r2,-4096
100037fc:	a8aa703a 	and	r21,r21,r2
10003800:	a80b883a 	mov	r5,r21
10003804:	9009883a 	mov	r4,r18
10003808:	d9800015 	stw	r6,0(sp)
1000380c:	0003e700 	call	10003e70 <_sbrk_r>
10003810:	1029883a 	mov	r20,r2
10003814:	00bfffc4 	movi	r2,-1
10003818:	d9800017 	ldw	r6,0(sp)
1000381c:	a080e826 	beq	r20,r2,10003bc0 <_malloc_r+0x738>
10003820:	a180a636 	bltu	r20,r6,10003abc <_malloc_r+0x634>
10003824:	070400b4 	movhi	fp,4098
10003828:	e7010004 	addi	fp,fp,1024
1000382c:	e0800017 	ldw	r2,0(fp)
10003830:	a887883a 	add	r3,r21,r2
10003834:	e0c00015 	stw	r3,0(fp)
10003838:	3500e626 	beq	r6,r20,10003bd4 <_malloc_r+0x74c>
1000383c:	b9000017 	ldw	r4,0(r23)
10003840:	00bfffc4 	movi	r2,-1
10003844:	2080ee26 	beq	r4,r2,10003c00 <_malloc_r+0x778>
10003848:	a185c83a 	sub	r2,r20,r6
1000384c:	10c5883a 	add	r2,r2,r3
10003850:	e0800015 	stw	r2,0(fp)
10003854:	a0c001cc 	andi	r3,r20,7
10003858:	1800bc26 	beq	r3,zero,10003b4c <_malloc_r+0x6c4>
1000385c:	a0e9c83a 	sub	r20,r20,r3
10003860:	00840204 	movi	r2,4104
10003864:	a5000204 	addi	r20,r20,8
10003868:	10c7c83a 	sub	r3,r2,r3
1000386c:	a545883a 	add	r2,r20,r21
10003870:	1083ffcc 	andi	r2,r2,4095
10003874:	18abc83a 	sub	r21,r3,r2
10003878:	a80b883a 	mov	r5,r21
1000387c:	9009883a 	mov	r4,r18
10003880:	0003e700 	call	10003e70 <_sbrk_r>
10003884:	00ffffc4 	movi	r3,-1
10003888:	10c0e126 	beq	r2,r3,10003c10 <_malloc_r+0x788>
1000388c:	1505c83a 	sub	r2,r2,r20
10003890:	1545883a 	add	r2,r2,r21
10003894:	10800054 	ori	r2,r2,1
10003898:	e0c00017 	ldw	r3,0(fp)
1000389c:	9d000215 	stw	r20,8(r19)
100038a0:	a0800115 	stw	r2,4(r20)
100038a4:	a8c7883a 	add	r3,r21,r3
100038a8:	e0c00015 	stw	r3,0(fp)
100038ac:	84c00e26 	beq	r16,r19,100038e8 <_malloc_r+0x460>
100038b0:	018003c4 	movi	r6,15
100038b4:	3580a72e 	bgeu	r6,r22,10003b54 <_malloc_r+0x6cc>
100038b8:	81400117 	ldw	r5,4(r16)
100038bc:	013ffe04 	movi	r4,-8
100038c0:	b0bffd04 	addi	r2,r22,-12
100038c4:	1104703a 	and	r2,r2,r4
100038c8:	2900004c 	andi	r4,r5,1
100038cc:	2088b03a 	or	r4,r4,r2
100038d0:	81000115 	stw	r4,4(r16)
100038d4:	01400144 	movi	r5,5
100038d8:	8089883a 	add	r4,r16,r2
100038dc:	21400115 	stw	r5,4(r4)
100038e0:	21400215 	stw	r5,8(r4)
100038e4:	3080cd36 	bltu	r6,r2,10003c1c <_malloc_r+0x794>
100038e8:	008400b4 	movhi	r2,4098
100038ec:	1080f304 	addi	r2,r2,972
100038f0:	11000017 	ldw	r4,0(r2)
100038f4:	20c0012e 	bgeu	r4,r3,100038fc <_malloc_r+0x474>
100038f8:	10c00015 	stw	r3,0(r2)
100038fc:	008400b4 	movhi	r2,4098
10003900:	1080f204 	addi	r2,r2,968
10003904:	11000017 	ldw	r4,0(r2)
10003908:	9c000217 	ldw	r16,8(r19)
1000390c:	20c0012e 	bgeu	r4,r3,10003914 <_malloc_r+0x48c>
10003910:	10c00015 	stw	r3,0(r2)
10003914:	80c00117 	ldw	r3,4(r16)
10003918:	00bfff04 	movi	r2,-4
1000391c:	1886703a 	and	r3,r3,r2
10003920:	1c45c83a 	sub	r2,r3,r17
10003924:	1c400236 	bltu	r3,r17,10003930 <_malloc_r+0x4a8>
10003928:	00c003c4 	movi	r3,15
1000392c:	18800416 	blt	r3,r2,10003940 <_malloc_r+0x4b8>
10003930:	9009883a 	mov	r4,r18
10003934:	0019ba00 	call	10019ba0 <__malloc_unlock>
10003938:	0005883a 	mov	r2,zero
1000393c:	003f7b06 	br	1000372c <__alt_data_end+0xf800372c>
10003940:	88c00054 	ori	r3,r17,1
10003944:	80c00115 	stw	r3,4(r16)
10003948:	8463883a 	add	r17,r16,r17
1000394c:	10800054 	ori	r2,r2,1
10003950:	9c400215 	stw	r17,8(r19)
10003954:	88800115 	stw	r2,4(r17)
10003958:	9009883a 	mov	r4,r18
1000395c:	0019ba00 	call	10019ba0 <__malloc_unlock>
10003960:	80800204 	addi	r2,r16,8
10003964:	003f7106 	br	1000372c <__alt_data_end+0xf800372c>
10003968:	00c00504 	movi	r3,20
1000396c:	18804a2e 	bgeu	r3,r2,10003a98 <_malloc_r+0x610>
10003970:	00c01504 	movi	r3,84
10003974:	18806e36 	bltu	r3,r2,10003b30 <_malloc_r+0x6a8>
10003978:	8804d33a 	srli	r2,r17,12
1000397c:	12001bc4 	addi	r8,r2,111
10003980:	11c01b84 	addi	r7,r2,110
10003984:	4209883a 	add	r4,r8,r8
10003988:	003edd06 	br	10003500 <__alt_data_end+0xf8003500>
1000398c:	3804d27a 	srli	r2,r7,9
10003990:	00c00104 	movi	r3,4
10003994:	1880442e 	bgeu	r3,r2,10003aa8 <_malloc_r+0x620>
10003998:	00c00504 	movi	r3,20
1000399c:	18808136 	bltu	r3,r2,10003ba4 <_malloc_r+0x71c>
100039a0:	11401704 	addi	r5,r2,92
100039a4:	10c016c4 	addi	r3,r2,91
100039a8:	294b883a 	add	r5,r5,r5
100039ac:	294b883a 	add	r5,r5,r5
100039b0:	294b883a 	add	r5,r5,r5
100039b4:	994b883a 	add	r5,r19,r5
100039b8:	28800017 	ldw	r2,0(r5)
100039bc:	018400b4 	movhi	r6,4098
100039c0:	297ffe04 	addi	r5,r5,-8
100039c4:	31b37504 	addi	r6,r6,-12844
100039c8:	28806526 	beq	r5,r2,10003b60 <_malloc_r+0x6d8>
100039cc:	01bfff04 	movi	r6,-4
100039d0:	10c00117 	ldw	r3,4(r2)
100039d4:	1986703a 	and	r3,r3,r6
100039d8:	38c0022e 	bgeu	r7,r3,100039e4 <_malloc_r+0x55c>
100039dc:	10800217 	ldw	r2,8(r2)
100039e0:	28bffb1e 	bne	r5,r2,100039d0 <__alt_data_end+0xf80039d0>
100039e4:	11400317 	ldw	r5,12(r2)
100039e8:	98c00117 	ldw	r3,4(r19)
100039ec:	81400315 	stw	r5,12(r16)
100039f0:	80800215 	stw	r2,8(r16)
100039f4:	2c000215 	stw	r16,8(r5)
100039f8:	14000315 	stw	r16,12(r2)
100039fc:	003ef806 	br	100035e0 <__alt_data_end+0xf80035e0>
10003a00:	88c00054 	ori	r3,r17,1
10003a04:	80c00115 	stw	r3,4(r16)
10003a08:	8463883a 	add	r17,r16,r17
10003a0c:	34400515 	stw	r17,20(r6)
10003a10:	34400415 	stw	r17,16(r6)
10003a14:	10c00054 	ori	r3,r2,1
10003a18:	8a000315 	stw	r8,12(r17)
10003a1c:	8a000215 	stw	r8,8(r17)
10003a20:	88c00115 	stw	r3,4(r17)
10003a24:	88a3883a 	add	r17,r17,r2
10003a28:	88800015 	stw	r2,0(r17)
10003a2c:	9009883a 	mov	r4,r18
10003a30:	0019ba00 	call	10019ba0 <__malloc_unlock>
10003a34:	80800204 	addi	r2,r16,8
10003a38:	003f3c06 	br	1000372c <__alt_data_end+0xf800372c>
10003a3c:	30c00117 	ldw	r3,4(r6)
10003a40:	003ee706 	br	100035e0 <__alt_data_end+0xf80035e0>
10003a44:	5ac00044 	addi	r11,r11,1
10003a48:	588000cc 	andi	r2,r11,3
10003a4c:	31800204 	addi	r6,r6,8
10003a50:	103efd1e 	bne	r2,zero,10003648 <__alt_data_end+0xf8003648>
10003a54:	00002406 	br	10003ae8 <_malloc_r+0x660>
10003a58:	14000317 	ldw	r16,12(r2)
10003a5c:	143f251e 	bne	r2,r16,100036f4 <__alt_data_end+0xf80036f4>
10003a60:	21000084 	addi	r4,r4,2
10003a64:	003ebc06 	br	10003558 <__alt_data_end+0xf8003558>
10003a68:	8085883a 	add	r2,r16,r2
10003a6c:	10c00117 	ldw	r3,4(r2)
10003a70:	81000317 	ldw	r4,12(r16)
10003a74:	81400217 	ldw	r5,8(r16)
10003a78:	18c00054 	ori	r3,r3,1
10003a7c:	10c00115 	stw	r3,4(r2)
10003a80:	29000315 	stw	r4,12(r5)
10003a84:	21400215 	stw	r5,8(r4)
10003a88:	9009883a 	mov	r4,r18
10003a8c:	0019ba00 	call	10019ba0 <__malloc_unlock>
10003a90:	80800204 	addi	r2,r16,8
10003a94:	003f2506 	br	1000372c <__alt_data_end+0xf800372c>
10003a98:	12001704 	addi	r8,r2,92
10003a9c:	11c016c4 	addi	r7,r2,91
10003aa0:	4209883a 	add	r4,r8,r8
10003aa4:	003e9606 	br	10003500 <__alt_data_end+0xf8003500>
10003aa8:	3804d1ba 	srli	r2,r7,6
10003aac:	11400e44 	addi	r5,r2,57
10003ab0:	10c00e04 	addi	r3,r2,56
10003ab4:	294b883a 	add	r5,r5,r5
10003ab8:	003fbc06 	br	100039ac <__alt_data_end+0xf80039ac>
10003abc:	84ff5926 	beq	r16,r19,10003824 <__alt_data_end+0xf8003824>
10003ac0:	008400b4 	movhi	r2,4098
10003ac4:	10b37504 	addi	r2,r2,-12844
10003ac8:	14000217 	ldw	r16,8(r2)
10003acc:	00bfff04 	movi	r2,-4
10003ad0:	80c00117 	ldw	r3,4(r16)
10003ad4:	1886703a 	and	r3,r3,r2
10003ad8:	003f9106 	br	10003920 <__alt_data_end+0xf8003920>
10003adc:	60800217 	ldw	r2,8(r12)
10003ae0:	213fffc4 	addi	r4,r4,-1
10003ae4:	1300651e 	bne	r2,r12,10003c7c <_malloc_r+0x7f4>
10003ae8:	208000cc 	andi	r2,r4,3
10003aec:	633ffe04 	addi	r12,r12,-8
10003af0:	103ffa1e 	bne	r2,zero,10003adc <__alt_data_end+0xf8003adc>
10003af4:	98800117 	ldw	r2,4(r19)
10003af8:	0146303a 	nor	r3,zero,r5
10003afc:	1884703a 	and	r2,r3,r2
10003b00:	98800115 	stw	r2,4(r19)
10003b04:	294b883a 	add	r5,r5,r5
10003b08:	117f2836 	bltu	r2,r5,100037ac <__alt_data_end+0xf80037ac>
10003b0c:	283f2726 	beq	r5,zero,100037ac <__alt_data_end+0xf80037ac>
10003b10:	2886703a 	and	r3,r5,r2
10003b14:	5809883a 	mov	r4,r11
10003b18:	183ec31e 	bne	r3,zero,10003628 <__alt_data_end+0xf8003628>
10003b1c:	294b883a 	add	r5,r5,r5
10003b20:	2886703a 	and	r3,r5,r2
10003b24:	21000104 	addi	r4,r4,4
10003b28:	183ffc26 	beq	r3,zero,10003b1c <__alt_data_end+0xf8003b1c>
10003b2c:	003ebe06 	br	10003628 <__alt_data_end+0xf8003628>
10003b30:	00c05504 	movi	r3,340
10003b34:	18801236 	bltu	r3,r2,10003b80 <_malloc_r+0x6f8>
10003b38:	8804d3fa 	srli	r2,r17,15
10003b3c:	12001e04 	addi	r8,r2,120
10003b40:	11c01dc4 	addi	r7,r2,119
10003b44:	4209883a 	add	r4,r8,r8
10003b48:	003e6d06 	br	10003500 <__alt_data_end+0xf8003500>
10003b4c:	00c40004 	movi	r3,4096
10003b50:	003f4606 	br	1000386c <__alt_data_end+0xf800386c>
10003b54:	00800044 	movi	r2,1
10003b58:	a0800115 	stw	r2,4(r20)
10003b5c:	003f7406 	br	10003930 <__alt_data_end+0xf8003930>
10003b60:	1805d0ba 	srai	r2,r3,2
10003b64:	01c00044 	movi	r7,1
10003b68:	30c00117 	ldw	r3,4(r6)
10003b6c:	388e983a 	sll	r7,r7,r2
10003b70:	2805883a 	mov	r2,r5
10003b74:	38c6b03a 	or	r3,r7,r3
10003b78:	30c00115 	stw	r3,4(r6)
10003b7c:	003f9b06 	br	100039ec <__alt_data_end+0xf80039ec>
10003b80:	00c15504 	movi	r3,1364
10003b84:	18801a36 	bltu	r3,r2,10003bf0 <_malloc_r+0x768>
10003b88:	8804d4ba 	srli	r2,r17,18
10003b8c:	12001f44 	addi	r8,r2,125
10003b90:	11c01f04 	addi	r7,r2,124
10003b94:	4209883a 	add	r4,r8,r8
10003b98:	003e5906 	br	10003500 <__alt_data_end+0xf8003500>
10003b9c:	ad400404 	addi	r21,r21,16
10003ba0:	003f1706 	br	10003800 <__alt_data_end+0xf8003800>
10003ba4:	00c01504 	movi	r3,84
10003ba8:	18802336 	bltu	r3,r2,10003c38 <_malloc_r+0x7b0>
10003bac:	3804d33a 	srli	r2,r7,12
10003bb0:	11401bc4 	addi	r5,r2,111
10003bb4:	10c01b84 	addi	r3,r2,110
10003bb8:	294b883a 	add	r5,r5,r5
10003bbc:	003f7b06 	br	100039ac <__alt_data_end+0xf80039ac>
10003bc0:	9c000217 	ldw	r16,8(r19)
10003bc4:	00bfff04 	movi	r2,-4
10003bc8:	80c00117 	ldw	r3,4(r16)
10003bcc:	1886703a 	and	r3,r3,r2
10003bd0:	003f5306 	br	10003920 <__alt_data_end+0xf8003920>
10003bd4:	3083ffcc 	andi	r2,r6,4095
10003bd8:	103f181e 	bne	r2,zero,1000383c <__alt_data_end+0xf800383c>
10003bdc:	99000217 	ldw	r4,8(r19)
10003be0:	b545883a 	add	r2,r22,r21
10003be4:	10800054 	ori	r2,r2,1
10003be8:	20800115 	stw	r2,4(r4)
10003bec:	003f3e06 	br	100038e8 <__alt_data_end+0xf80038e8>
10003bf0:	01003f84 	movi	r4,254
10003bf4:	02001fc4 	movi	r8,127
10003bf8:	01c01f84 	movi	r7,126
10003bfc:	003e4006 	br	10003500 <__alt_data_end+0xf8003500>
10003c00:	008400b4 	movhi	r2,4098
10003c04:	10ba2104 	addi	r2,r2,-6012
10003c08:	15000015 	stw	r20,0(r2)
10003c0c:	003f1106 	br	10003854 <__alt_data_end+0xf8003854>
10003c10:	00800044 	movi	r2,1
10003c14:	002b883a 	mov	r21,zero
10003c18:	003f1f06 	br	10003898 <__alt_data_end+0xf8003898>
10003c1c:	81400204 	addi	r5,r16,8
10003c20:	9009883a 	mov	r4,r18
10003c24:	000a1c80 	call	1000a1c8 <_free_r>
10003c28:	008400b4 	movhi	r2,4098
10003c2c:	10810004 	addi	r2,r2,1024
10003c30:	10c00017 	ldw	r3,0(r2)
10003c34:	003f2c06 	br	100038e8 <__alt_data_end+0xf80038e8>
10003c38:	00c05504 	movi	r3,340
10003c3c:	18800536 	bltu	r3,r2,10003c54 <_malloc_r+0x7cc>
10003c40:	3804d3fa 	srli	r2,r7,15
10003c44:	11401e04 	addi	r5,r2,120
10003c48:	10c01dc4 	addi	r3,r2,119
10003c4c:	294b883a 	add	r5,r5,r5
10003c50:	003f5606 	br	100039ac <__alt_data_end+0xf80039ac>
10003c54:	00c15504 	movi	r3,1364
10003c58:	18800536 	bltu	r3,r2,10003c70 <_malloc_r+0x7e8>
10003c5c:	3804d4ba 	srli	r2,r7,18
10003c60:	11401f44 	addi	r5,r2,125
10003c64:	10c01f04 	addi	r3,r2,124
10003c68:	294b883a 	add	r5,r5,r5
10003c6c:	003f4f06 	br	100039ac <__alt_data_end+0xf80039ac>
10003c70:	01403f84 	movi	r5,254
10003c74:	00c01f84 	movi	r3,126
10003c78:	003f4c06 	br	100039ac <__alt_data_end+0xf80039ac>
10003c7c:	98800117 	ldw	r2,4(r19)
10003c80:	003fa006 	br	10003b04 <__alt_data_end+0xf8003b04>
10003c84:	8808d0fa 	srli	r4,r17,3
10003c88:	20800044 	addi	r2,r4,1
10003c8c:	1085883a 	add	r2,r2,r2
10003c90:	003e9006 	br	100036d4 <__alt_data_end+0xf80036d4>

10003c94 <_printf_r>:
10003c94:	defffd04 	addi	sp,sp,-12
10003c98:	2805883a 	mov	r2,r5
10003c9c:	dfc00015 	stw	ra,0(sp)
10003ca0:	d9800115 	stw	r6,4(sp)
10003ca4:	d9c00215 	stw	r7,8(sp)
10003ca8:	21400217 	ldw	r5,8(r4)
10003cac:	d9c00104 	addi	r7,sp,4
10003cb0:	100d883a 	mov	r6,r2
10003cb4:	0003fc80 	call	10003fc8 <___vfprintf_internal_r>
10003cb8:	dfc00017 	ldw	ra,0(sp)
10003cbc:	dec00304 	addi	sp,sp,12
10003cc0:	f800283a 	ret

10003cc4 <printf>:
10003cc4:	defffc04 	addi	sp,sp,-16
10003cc8:	dfc00015 	stw	ra,0(sp)
10003ccc:	d9400115 	stw	r5,4(sp)
10003cd0:	d9800215 	stw	r6,8(sp)
10003cd4:	d9c00315 	stw	r7,12(sp)
10003cd8:	008400b4 	movhi	r2,4098
10003cdc:	10ba2504 	addi	r2,r2,-5996
10003ce0:	10800017 	ldw	r2,0(r2)
10003ce4:	200b883a 	mov	r5,r4
10003ce8:	d9800104 	addi	r6,sp,4
10003cec:	11000217 	ldw	r4,8(r2)
10003cf0:	00062a40 	call	100062a4 <__vfprintf_internal>
10003cf4:	dfc00017 	ldw	ra,0(sp)
10003cf8:	dec00404 	addi	sp,sp,16
10003cfc:	f800283a 	ret

10003d00 <_putchar_r>:
10003d00:	21800217 	ldw	r6,8(r4)
10003d04:	000c57c1 	jmpi	1000c57c <_putc_r>

10003d08 <putchar>:
10003d08:	008400b4 	movhi	r2,4098
10003d0c:	10ba2504 	addi	r2,r2,-5996
10003d10:	200b883a 	mov	r5,r4
10003d14:	11000017 	ldw	r4,0(r2)
10003d18:	21800217 	ldw	r6,8(r4)
10003d1c:	000c57c1 	jmpi	1000c57c <_putc_r>

10003d20 <_puts_r>:
10003d20:	defff604 	addi	sp,sp,-40
10003d24:	dc000715 	stw	r16,28(sp)
10003d28:	2021883a 	mov	r16,r4
10003d2c:	2809883a 	mov	r4,r5
10003d30:	dc400815 	stw	r17,32(sp)
10003d34:	dfc00915 	stw	ra,36(sp)
10003d38:	2823883a 	mov	r17,r5
10003d3c:	0003f300 	call	10003f30 <strlen>
10003d40:	10c00044 	addi	r3,r2,1
10003d44:	d8800115 	stw	r2,4(sp)
10003d48:	008400b4 	movhi	r2,4098
10003d4c:	10b1a204 	addi	r2,r2,-14712
10003d50:	d8800215 	stw	r2,8(sp)
10003d54:	00800044 	movi	r2,1
10003d58:	d8800315 	stw	r2,12(sp)
10003d5c:	00800084 	movi	r2,2
10003d60:	dc400015 	stw	r17,0(sp)
10003d64:	d8c00615 	stw	r3,24(sp)
10003d68:	dec00415 	stw	sp,16(sp)
10003d6c:	d8800515 	stw	r2,20(sp)
10003d70:	80000226 	beq	r16,zero,10003d7c <_puts_r+0x5c>
10003d74:	80800e17 	ldw	r2,56(r16)
10003d78:	10001426 	beq	r2,zero,10003dcc <_puts_r+0xac>
10003d7c:	81400217 	ldw	r5,8(r16)
10003d80:	2880030b 	ldhu	r2,12(r5)
10003d84:	10c8000c 	andi	r3,r2,8192
10003d88:	1800061e 	bne	r3,zero,10003da4 <_puts_r+0x84>
10003d8c:	29001917 	ldw	r4,100(r5)
10003d90:	00f7ffc4 	movi	r3,-8193
10003d94:	10880014 	ori	r2,r2,8192
10003d98:	20c6703a 	and	r3,r4,r3
10003d9c:	2880030d 	sth	r2,12(r5)
10003da0:	28c01915 	stw	r3,100(r5)
10003da4:	d9800404 	addi	r6,sp,16
10003da8:	8009883a 	mov	r4,r16
10003dac:	000a4d80 	call	1000a4d8 <__sfvwrite_r>
10003db0:	1000091e 	bne	r2,zero,10003dd8 <_puts_r+0xb8>
10003db4:	00800284 	movi	r2,10
10003db8:	dfc00917 	ldw	ra,36(sp)
10003dbc:	dc400817 	ldw	r17,32(sp)
10003dc0:	dc000717 	ldw	r16,28(sp)
10003dc4:	dec00a04 	addi	sp,sp,40
10003dc8:	f800283a 	ret
10003dcc:	8009883a 	mov	r4,r16
10003dd0:	0009de40 	call	10009de4 <__sinit>
10003dd4:	003fe906 	br	10003d7c <__alt_data_end+0xf8003d7c>
10003dd8:	00bfffc4 	movi	r2,-1
10003ddc:	003ff606 	br	10003db8 <__alt_data_end+0xf8003db8>

10003de0 <puts>:
10003de0:	008400b4 	movhi	r2,4098
10003de4:	10ba2504 	addi	r2,r2,-5996
10003de8:	200b883a 	mov	r5,r4
10003dec:	11000017 	ldw	r4,0(r2)
10003df0:	0003d201 	jmpi	10003d20 <_puts_r>

10003df4 <srand>:
10003df4:	008400b4 	movhi	r2,4098
10003df8:	10ba2504 	addi	r2,r2,-5996
10003dfc:	10800017 	ldw	r2,0(r2)
10003e00:	11002915 	stw	r4,164(r2)
10003e04:	10002a15 	stw	zero,168(r2)
10003e08:	f800283a 	ret

10003e0c <rand>:
10003e0c:	008400b4 	movhi	r2,4098
10003e10:	defffe04 	addi	sp,sp,-8
10003e14:	10ba2504 	addi	r2,r2,-5996
10003e18:	dc000015 	stw	r16,0(sp)
10003e1c:	14000017 	ldw	r16,0(r2)
10003e20:	dfc00115 	stw	ra,4(sp)
10003e24:	01932574 	movhi	r6,19605
10003e28:	81002917 	ldw	r4,164(r16)
10003e2c:	81402a17 	ldw	r5,168(r16)
10003e30:	01d614b4 	movhi	r7,22610
10003e34:	319fcb44 	addi	r6,r6,32557
10003e38:	39fd0b44 	addi	r7,r7,-3027
10003e3c:	0015c580 	call	10015c58 <__muldi3>
10003e40:	11000044 	addi	r4,r2,1
10003e44:	2085803a 	cmpltu	r2,r4,r2
10003e48:	10c7883a 	add	r3,r2,r3
10003e4c:	00a00034 	movhi	r2,32768
10003e50:	10bfffc4 	addi	r2,r2,-1
10003e54:	1884703a 	and	r2,r3,r2
10003e58:	81002915 	stw	r4,164(r16)
10003e5c:	80c02a15 	stw	r3,168(r16)
10003e60:	dfc00117 	ldw	ra,4(sp)
10003e64:	dc000017 	ldw	r16,0(sp)
10003e68:	dec00204 	addi	sp,sp,8
10003e6c:	f800283a 	ret

10003e70 <_sbrk_r>:
10003e70:	defffd04 	addi	sp,sp,-12
10003e74:	dc000015 	stw	r16,0(sp)
10003e78:	040400b4 	movhi	r16,4098
10003e7c:	dc400115 	stw	r17,4(sp)
10003e80:	8400f504 	addi	r16,r16,980
10003e84:	2023883a 	mov	r17,r4
10003e88:	2809883a 	mov	r4,r5
10003e8c:	dfc00215 	stw	ra,8(sp)
10003e90:	80000015 	stw	zero,0(r16)
10003e94:	0019d880 	call	10019d88 <sbrk>
10003e98:	00ffffc4 	movi	r3,-1
10003e9c:	10c00526 	beq	r2,r3,10003eb4 <_sbrk_r+0x44>
10003ea0:	dfc00217 	ldw	ra,8(sp)
10003ea4:	dc400117 	ldw	r17,4(sp)
10003ea8:	dc000017 	ldw	r16,0(sp)
10003eac:	dec00304 	addi	sp,sp,12
10003eb0:	f800283a 	ret
10003eb4:	80c00017 	ldw	r3,0(r16)
10003eb8:	183ff926 	beq	r3,zero,10003ea0 <__alt_data_end+0xf8003ea0>
10003ebc:	88c00015 	stw	r3,0(r17)
10003ec0:	003ff706 	br	10003ea0 <__alt_data_end+0xf8003ea0>

10003ec4 <scanf>:
10003ec4:	defffc04 	addi	sp,sp,-16
10003ec8:	dfc00015 	stw	ra,0(sp)
10003ecc:	d9400115 	stw	r5,4(sp)
10003ed0:	d9800215 	stw	r6,8(sp)
10003ed4:	d9c00315 	stw	r7,12(sp)
10003ed8:	008400b4 	movhi	r2,4098
10003edc:	10ba2504 	addi	r2,r2,-5996
10003ee0:	200d883a 	mov	r6,r4
10003ee4:	11000017 	ldw	r4,0(r2)
10003ee8:	d9c00104 	addi	r7,sp,4
10003eec:	21400117 	ldw	r5,4(r4)
10003ef0:	0007d8c0 	call	10007d8c <_vfscanf_r>
10003ef4:	dfc00017 	ldw	ra,0(sp)
10003ef8:	dec00404 	addi	sp,sp,16
10003efc:	f800283a 	ret

10003f00 <_scanf_r>:
10003f00:	defffd04 	addi	sp,sp,-12
10003f04:	2805883a 	mov	r2,r5
10003f08:	dfc00015 	stw	ra,0(sp)
10003f0c:	d9800115 	stw	r6,4(sp)
10003f10:	d9c00215 	stw	r7,8(sp)
10003f14:	21400117 	ldw	r5,4(r4)
10003f18:	d9c00104 	addi	r7,sp,4
10003f1c:	100d883a 	mov	r6,r2
10003f20:	0007d8c0 	call	10007d8c <_vfscanf_r>
10003f24:	dfc00017 	ldw	ra,0(sp)
10003f28:	dec00304 	addi	sp,sp,12
10003f2c:	f800283a 	ret

10003f30 <strlen>:
10003f30:	208000cc 	andi	r2,r4,3
10003f34:	10002026 	beq	r2,zero,10003fb8 <strlen+0x88>
10003f38:	20800007 	ldb	r2,0(r4)
10003f3c:	10002026 	beq	r2,zero,10003fc0 <strlen+0x90>
10003f40:	2005883a 	mov	r2,r4
10003f44:	00000206 	br	10003f50 <strlen+0x20>
10003f48:	10c00007 	ldb	r3,0(r2)
10003f4c:	18001826 	beq	r3,zero,10003fb0 <strlen+0x80>
10003f50:	10800044 	addi	r2,r2,1
10003f54:	10c000cc 	andi	r3,r2,3
10003f58:	183ffb1e 	bne	r3,zero,10003f48 <__alt_data_end+0xf8003f48>
10003f5c:	10c00017 	ldw	r3,0(r2)
10003f60:	01ffbff4 	movhi	r7,65279
10003f64:	39ffbfc4 	addi	r7,r7,-257
10003f68:	00ca303a 	nor	r5,zero,r3
10003f6c:	01a02074 	movhi	r6,32897
10003f70:	19c7883a 	add	r3,r3,r7
10003f74:	31a02004 	addi	r6,r6,-32640
10003f78:	1946703a 	and	r3,r3,r5
10003f7c:	1986703a 	and	r3,r3,r6
10003f80:	1800091e 	bne	r3,zero,10003fa8 <strlen+0x78>
10003f84:	10800104 	addi	r2,r2,4
10003f88:	10c00017 	ldw	r3,0(r2)
10003f8c:	19cb883a 	add	r5,r3,r7
10003f90:	00c6303a 	nor	r3,zero,r3
10003f94:	28c6703a 	and	r3,r5,r3
10003f98:	1986703a 	and	r3,r3,r6
10003f9c:	183ff926 	beq	r3,zero,10003f84 <__alt_data_end+0xf8003f84>
10003fa0:	00000106 	br	10003fa8 <strlen+0x78>
10003fa4:	10800044 	addi	r2,r2,1
10003fa8:	10c00007 	ldb	r3,0(r2)
10003fac:	183ffd1e 	bne	r3,zero,10003fa4 <__alt_data_end+0xf8003fa4>
10003fb0:	1105c83a 	sub	r2,r2,r4
10003fb4:	f800283a 	ret
10003fb8:	2005883a 	mov	r2,r4
10003fbc:	003fe706 	br	10003f5c <__alt_data_end+0xf8003f5c>
10003fc0:	0005883a 	mov	r2,zero
10003fc4:	f800283a 	ret

10003fc8 <___vfprintf_internal_r>:
10003fc8:	deffb804 	addi	sp,sp,-288
10003fcc:	dfc04715 	stw	ra,284(sp)
10003fd0:	ddc04515 	stw	r23,276(sp)
10003fd4:	dd404315 	stw	r21,268(sp)
10003fd8:	d9002d15 	stw	r4,180(sp)
10003fdc:	282f883a 	mov	r23,r5
10003fe0:	302b883a 	mov	r21,r6
10003fe4:	d9c02e15 	stw	r7,184(sp)
10003fe8:	df004615 	stw	fp,280(sp)
10003fec:	dd804415 	stw	r22,272(sp)
10003ff0:	dd004215 	stw	r20,264(sp)
10003ff4:	dcc04115 	stw	r19,260(sp)
10003ff8:	dc804015 	stw	r18,256(sp)
10003ffc:	dc403f15 	stw	r17,252(sp)
10004000:	dc003e15 	stw	r16,248(sp)
10004004:	000ac040 	call	1000ac04 <_localeconv_r>
10004008:	10800017 	ldw	r2,0(r2)
1000400c:	1009883a 	mov	r4,r2
10004010:	d8803415 	stw	r2,208(sp)
10004014:	0003f300 	call	10003f30 <strlen>
10004018:	d8803715 	stw	r2,220(sp)
1000401c:	d8802d17 	ldw	r2,180(sp)
10004020:	10000226 	beq	r2,zero,1000402c <___vfprintf_internal_r+0x64>
10004024:	10800e17 	ldw	r2,56(r2)
10004028:	1000fb26 	beq	r2,zero,10004418 <___vfprintf_internal_r+0x450>
1000402c:	b880030b 	ldhu	r2,12(r23)
10004030:	10c8000c 	andi	r3,r2,8192
10004034:	1800061e 	bne	r3,zero,10004050 <___vfprintf_internal_r+0x88>
10004038:	b9001917 	ldw	r4,100(r23)
1000403c:	00f7ffc4 	movi	r3,-8193
10004040:	10880014 	ori	r2,r2,8192
10004044:	20c6703a 	and	r3,r4,r3
10004048:	b880030d 	sth	r2,12(r23)
1000404c:	b8c01915 	stw	r3,100(r23)
10004050:	10c0020c 	andi	r3,r2,8
10004054:	1800c326 	beq	r3,zero,10004364 <___vfprintf_internal_r+0x39c>
10004058:	b8c00417 	ldw	r3,16(r23)
1000405c:	1800c126 	beq	r3,zero,10004364 <___vfprintf_internal_r+0x39c>
10004060:	1080068c 	andi	r2,r2,26
10004064:	00c00284 	movi	r3,10
10004068:	10c0c626 	beq	r2,r3,10004384 <___vfprintf_internal_r+0x3bc>
1000406c:	d8c00404 	addi	r3,sp,16
10004070:	050400b4 	movhi	r20,4098
10004074:	d9001e04 	addi	r4,sp,120
10004078:	a531b384 	addi	r20,r20,-14642
1000407c:	d8c01e15 	stw	r3,120(sp)
10004080:	d8002015 	stw	zero,128(sp)
10004084:	d8001f15 	stw	zero,124(sp)
10004088:	d8003315 	stw	zero,204(sp)
1000408c:	d8003615 	stw	zero,216(sp)
10004090:	d8003815 	stw	zero,224(sp)
10004094:	1811883a 	mov	r8,r3
10004098:	d8003915 	stw	zero,228(sp)
1000409c:	d8003a15 	stw	zero,232(sp)
100040a0:	d8002f15 	stw	zero,188(sp)
100040a4:	d9002815 	stw	r4,160(sp)
100040a8:	a8800007 	ldb	r2,0(r21)
100040ac:	10028b26 	beq	r2,zero,10004adc <___vfprintf_internal_r+0xb14>
100040b0:	00c00944 	movi	r3,37
100040b4:	a823883a 	mov	r17,r21
100040b8:	10c0021e 	bne	r2,r3,100040c4 <___vfprintf_internal_r+0xfc>
100040bc:	00001406 	br	10004110 <___vfprintf_internal_r+0x148>
100040c0:	10c00326 	beq	r2,r3,100040d0 <___vfprintf_internal_r+0x108>
100040c4:	8c400044 	addi	r17,r17,1
100040c8:	88800007 	ldb	r2,0(r17)
100040cc:	103ffc1e 	bne	r2,zero,100040c0 <__alt_data_end+0xf80040c0>
100040d0:	8d61c83a 	sub	r16,r17,r21
100040d4:	80000e26 	beq	r16,zero,10004110 <___vfprintf_internal_r+0x148>
100040d8:	d8c02017 	ldw	r3,128(sp)
100040dc:	d8801f17 	ldw	r2,124(sp)
100040e0:	45400015 	stw	r21,0(r8)
100040e4:	1c07883a 	add	r3,r3,r16
100040e8:	10800044 	addi	r2,r2,1
100040ec:	d8c02015 	stw	r3,128(sp)
100040f0:	44000115 	stw	r16,4(r8)
100040f4:	d8801f15 	stw	r2,124(sp)
100040f8:	00c001c4 	movi	r3,7
100040fc:	1880a916 	blt	r3,r2,100043a4 <___vfprintf_internal_r+0x3dc>
10004100:	42000204 	addi	r8,r8,8
10004104:	d9402f17 	ldw	r5,188(sp)
10004108:	2c0b883a 	add	r5,r5,r16
1000410c:	d9402f15 	stw	r5,188(sp)
10004110:	88800007 	ldb	r2,0(r17)
10004114:	1000aa26 	beq	r2,zero,100043c0 <___vfprintf_internal_r+0x3f8>
10004118:	8d400044 	addi	r21,r17,1
1000411c:	8c400047 	ldb	r17,1(r17)
10004120:	0021883a 	mov	r16,zero
10004124:	00bfffc4 	movi	r2,-1
10004128:	0025883a 	mov	r18,zero
1000412c:	dc002905 	stb	r16,164(sp)
10004130:	d8002785 	stb	zero,158(sp)
10004134:	d8002b05 	stb	zero,172(sp)
10004138:	d8802a15 	stw	r2,168(sp)
1000413c:	d8003115 	stw	zero,196(sp)
10004140:	04c01604 	movi	r19,88
10004144:	05800244 	movi	r22,9
10004148:	9021883a 	mov	r16,r18
1000414c:	4039883a 	mov	fp,r8
10004150:	ad400044 	addi	r21,r21,1
10004154:	88bff804 	addi	r2,r17,-32
10004158:	98833236 	bltu	r19,r2,10004e24 <___vfprintf_internal_r+0xe5c>
1000415c:	100490ba 	slli	r2,r2,2
10004160:	00c40034 	movhi	r3,4096
10004164:	18d05d04 	addi	r3,r3,16756
10004168:	10c5883a 	add	r2,r2,r3
1000416c:	10800017 	ldw	r2,0(r2)
10004170:	1000683a 	jmp	r2
10004174:	10004d1c 	xori	zero,r2,308
10004178:	10004e24 	muli	zero,r2,312
1000417c:	10004e24 	muli	zero,r2,312
10004180:	10004d3c 	xorhi	zero,r2,308
10004184:	10004e24 	muli	zero,r2,312
10004188:	10004e24 	muli	zero,r2,312
1000418c:	10004e24 	muli	zero,r2,312
10004190:	10004e24 	muli	zero,r2,312
10004194:	10004e24 	muli	zero,r2,312
10004198:	10004e24 	muli	zero,r2,312
1000419c:	10004424 	muli	zero,r2,272
100041a0:	10004c2c 	andhi	zero,r2,304
100041a4:	10004e24 	muli	zero,r2,312
100041a8:	100042e8 	cmpgeui	zero,r2,267
100041ac:	10004448 	cmpgei	zero,r2,273
100041b0:	10004e24 	muli	zero,r2,312
100041b4:	10004498 	cmpnei	zero,r2,274
100041b8:	100044a4 	muli	zero,r2,274
100041bc:	100044a4 	muli	zero,r2,274
100041c0:	100044a4 	muli	zero,r2,274
100041c4:	100044a4 	muli	zero,r2,274
100041c8:	100044a4 	muli	zero,r2,274
100041cc:	100044a4 	muli	zero,r2,274
100041d0:	100044a4 	muli	zero,r2,274
100041d4:	100044a4 	muli	zero,r2,274
100041d8:	100044a4 	muli	zero,r2,274
100041dc:	10004e24 	muli	zero,r2,312
100041e0:	10004e24 	muli	zero,r2,312
100041e4:	10004e24 	muli	zero,r2,312
100041e8:	10004e24 	muli	zero,r2,312
100041ec:	10004e24 	muli	zero,r2,312
100041f0:	10004e24 	muli	zero,r2,312
100041f4:	10004e24 	muli	zero,r2,312
100041f8:	10004e24 	muli	zero,r2,312
100041fc:	10004e24 	muli	zero,r2,312
10004200:	10004e24 	muli	zero,r2,312
10004204:	100044e0 	cmpeqi	zero,r2,275
10004208:	100045a8 	cmpgeui	zero,r2,278
1000420c:	10004e24 	muli	zero,r2,312
10004210:	100045a8 	cmpgeui	zero,r2,278
10004214:	10004e24 	muli	zero,r2,312
10004218:	10004e24 	muli	zero,r2,312
1000421c:	10004e24 	muli	zero,r2,312
10004220:	10004e24 	muli	zero,r2,312
10004224:	10004654 	ori	zero,r2,281
10004228:	10004e24 	muli	zero,r2,312
1000422c:	10004e24 	muli	zero,r2,312
10004230:	10004660 	cmpeqi	zero,r2,281
10004234:	10004e24 	muli	zero,r2,312
10004238:	10004e24 	muli	zero,r2,312
1000423c:	10004e24 	muli	zero,r2,312
10004240:	10004e24 	muli	zero,r2,312
10004244:	10004e24 	muli	zero,r2,312
10004248:	10004ae4 	muli	zero,r2,299
1000424c:	10004e24 	muli	zero,r2,312
10004250:	10004e24 	muli	zero,r2,312
10004254:	10004b50 	cmplti	zero,r2,301
10004258:	10004e24 	muli	zero,r2,312
1000425c:	10004e24 	muli	zero,r2,312
10004260:	10004e24 	muli	zero,r2,312
10004264:	10004e24 	muli	zero,r2,312
10004268:	10004e24 	muli	zero,r2,312
1000426c:	10004e24 	muli	zero,r2,312
10004270:	10004e24 	muli	zero,r2,312
10004274:	10004e24 	muli	zero,r2,312
10004278:	10004e24 	muli	zero,r2,312
1000427c:	10004e24 	muli	zero,r2,312
10004280:	10004dc8 	cmpgei	zero,r2,311
10004284:	10004d48 	cmpgei	zero,r2,309
10004288:	100045a8 	cmpgeui	zero,r2,278
1000428c:	100045a8 	cmpgeui	zero,r2,278
10004290:	100045a8 	cmpgeui	zero,r2,278
10004294:	10004d68 	cmpgeui	zero,r2,309
10004298:	10004d48 	cmpgei	zero,r2,309
1000429c:	10004e24 	muli	zero,r2,312
100042a0:	10004e24 	muli	zero,r2,312
100042a4:	10004d74 	orhi	zero,r2,309
100042a8:	10004e24 	muli	zero,r2,312
100042ac:	10004d88 	cmpgei	zero,r2,310
100042b0:	10004c0c 	andi	zero,r2,304
100042b4:	100042f4 	orhi	zero,r2,267
100042b8:	10004c44 	addi	zero,r2,305
100042bc:	10004e24 	muli	zero,r2,312
100042c0:	10004c50 	cmplti	zero,r2,305
100042c4:	10004e24 	muli	zero,r2,312
100042c8:	10004cb4 	orhi	zero,r2,306
100042cc:	10004e24 	muli	zero,r2,312
100042d0:	10004e24 	muli	zero,r2,312
100042d4:	10004cd4 	ori	zero,r2,307
100042d8:	d8c03117 	ldw	r3,196(sp)
100042dc:	d8802e15 	stw	r2,184(sp)
100042e0:	00c7c83a 	sub	r3,zero,r3
100042e4:	d8c03115 	stw	r3,196(sp)
100042e8:	84000114 	ori	r16,r16,4
100042ec:	ac400007 	ldb	r17,0(r21)
100042f0:	003f9706 	br	10004150 <__alt_data_end+0xf8004150>
100042f4:	00800c04 	movi	r2,48
100042f8:	d8802705 	stb	r2,156(sp)
100042fc:	00801e04 	movi	r2,120
10004300:	d8802745 	stb	r2,157(sp)
10004304:	d9002a17 	ldw	r4,168(sp)
10004308:	d8802e17 	ldw	r2,184(sp)
1000430c:	d8002785 	stb	zero,158(sp)
10004310:	e011883a 	mov	r8,fp
10004314:	10c00104 	addi	r3,r2,4
10004318:	14c00017 	ldw	r19,0(r2)
1000431c:	002d883a 	mov	r22,zero
10004320:	80800094 	ori	r2,r16,2
10004324:	2002ca16 	blt	r4,zero,10004e50 <___vfprintf_internal_r+0xe88>
10004328:	00bfdfc4 	movi	r2,-129
1000432c:	80a4703a 	and	r18,r16,r2
10004330:	d8c02e15 	stw	r3,184(sp)
10004334:	94800094 	ori	r18,r18,2
10004338:	9802b41e 	bne	r19,zero,10004e0c <___vfprintf_internal_r+0xe44>
1000433c:	014400b4 	movhi	r5,4098
10004340:	2971ac04 	addi	r5,r5,-14672
10004344:	d9403915 	stw	r5,228(sp)
10004348:	04401e04 	movi	r17,120
1000434c:	d8802a17 	ldw	r2,168(sp)
10004350:	0039883a 	mov	fp,zero
10004354:	1001fa26 	beq	r2,zero,10004b40 <___vfprintf_internal_r+0xb78>
10004358:	0027883a 	mov	r19,zero
1000435c:	002d883a 	mov	r22,zero
10004360:	00021906 	br	10004bc8 <___vfprintf_internal_r+0xc00>
10004364:	d9002d17 	ldw	r4,180(sp)
10004368:	b80b883a 	mov	r5,r23
1000436c:	0007dd80 	call	10007dd8 <__swsetup_r>
10004370:	1005dc1e 	bne	r2,zero,10005ae4 <___vfprintf_internal_r+0x1b1c>
10004374:	b880030b 	ldhu	r2,12(r23)
10004378:	00c00284 	movi	r3,10
1000437c:	1080068c 	andi	r2,r2,26
10004380:	10ff3a1e 	bne	r2,r3,1000406c <__alt_data_end+0xf800406c>
10004384:	b880038f 	ldh	r2,14(r23)
10004388:	103f3816 	blt	r2,zero,1000406c <__alt_data_end+0xf800406c>
1000438c:	d9c02e17 	ldw	r7,184(sp)
10004390:	d9002d17 	ldw	r4,180(sp)
10004394:	a80d883a 	mov	r6,r21
10004398:	b80b883a 	mov	r5,r23
1000439c:	00062c00 	call	100062c0 <__sbprintf>
100043a0:	00001106 	br	100043e8 <___vfprintf_internal_r+0x420>
100043a4:	d9002d17 	ldw	r4,180(sp)
100043a8:	d9801e04 	addi	r6,sp,120
100043ac:	b80b883a 	mov	r5,r23
100043b0:	0011b240 	call	10011b24 <__sprint_r>
100043b4:	1000081e 	bne	r2,zero,100043d8 <___vfprintf_internal_r+0x410>
100043b8:	da000404 	addi	r8,sp,16
100043bc:	003f5106 	br	10004104 <__alt_data_end+0xf8004104>
100043c0:	d8802017 	ldw	r2,128(sp)
100043c4:	10000426 	beq	r2,zero,100043d8 <___vfprintf_internal_r+0x410>
100043c8:	d9002d17 	ldw	r4,180(sp)
100043cc:	d9801e04 	addi	r6,sp,120
100043d0:	b80b883a 	mov	r5,r23
100043d4:	0011b240 	call	10011b24 <__sprint_r>
100043d8:	b880030b 	ldhu	r2,12(r23)
100043dc:	1080100c 	andi	r2,r2,64
100043e0:	1005c01e 	bne	r2,zero,10005ae4 <___vfprintf_internal_r+0x1b1c>
100043e4:	d8802f17 	ldw	r2,188(sp)
100043e8:	dfc04717 	ldw	ra,284(sp)
100043ec:	df004617 	ldw	fp,280(sp)
100043f0:	ddc04517 	ldw	r23,276(sp)
100043f4:	dd804417 	ldw	r22,272(sp)
100043f8:	dd404317 	ldw	r21,268(sp)
100043fc:	dd004217 	ldw	r20,264(sp)
10004400:	dcc04117 	ldw	r19,260(sp)
10004404:	dc804017 	ldw	r18,256(sp)
10004408:	dc403f17 	ldw	r17,252(sp)
1000440c:	dc003e17 	ldw	r16,248(sp)
10004410:	dec04804 	addi	sp,sp,288
10004414:	f800283a 	ret
10004418:	d9002d17 	ldw	r4,180(sp)
1000441c:	0009de40 	call	10009de4 <__sinit>
10004420:	003f0206 	br	1000402c <__alt_data_end+0xf800402c>
10004424:	d9002e17 	ldw	r4,184(sp)
10004428:	d9402e17 	ldw	r5,184(sp)
1000442c:	21000017 	ldw	r4,0(r4)
10004430:	28800104 	addi	r2,r5,4
10004434:	d9003115 	stw	r4,196(sp)
10004438:	203fa716 	blt	r4,zero,100042d8 <__alt_data_end+0xf80042d8>
1000443c:	d8802e15 	stw	r2,184(sp)
10004440:	ac400007 	ldb	r17,0(r21)
10004444:	003f4206 	br	10004150 <__alt_data_end+0xf8004150>
10004448:	ac400007 	ldb	r17,0(r21)
1000444c:	01000a84 	movi	r4,42
10004450:	a8c00044 	addi	r3,r21,1
10004454:	89075826 	beq	r17,r4,100061b8 <___vfprintf_internal_r+0x21f0>
10004458:	8cbff404 	addi	r18,r17,-48
1000445c:	b486ae36 	bltu	r22,r18,10005f18 <___vfprintf_internal_r+0x1f50>
10004460:	0009883a 	mov	r4,zero
10004464:	1823883a 	mov	r17,r3
10004468:	01400284 	movi	r5,10
1000446c:	00034380 	call	10003438 <__mulsi3>
10004470:	88c00007 	ldb	r3,0(r17)
10004474:	1489883a 	add	r4,r2,r18
10004478:	8d400044 	addi	r21,r17,1
1000447c:	1cbff404 	addi	r18,r3,-48
10004480:	a823883a 	mov	r17,r21
10004484:	b4bff82e 	bgeu	r22,r18,10004468 <__alt_data_end+0xf8004468>
10004488:	1823883a 	mov	r17,r3
1000448c:	2005f616 	blt	r4,zero,10005c68 <___vfprintf_internal_r+0x1ca0>
10004490:	d9002a15 	stw	r4,168(sp)
10004494:	003f2f06 	br	10004154 <__alt_data_end+0xf8004154>
10004498:	84002014 	ori	r16,r16,128
1000449c:	ac400007 	ldb	r17,0(r21)
100044a0:	003f2b06 	br	10004150 <__alt_data_end+0xf8004150>
100044a4:	8cbff404 	addi	r18,r17,-48
100044a8:	d8003115 	stw	zero,196(sp)
100044ac:	0009883a 	mov	r4,zero
100044b0:	a823883a 	mov	r17,r21
100044b4:	01400284 	movi	r5,10
100044b8:	00034380 	call	10003438 <__mulsi3>
100044bc:	88c00007 	ldb	r3,0(r17)
100044c0:	9089883a 	add	r4,r18,r2
100044c4:	ad400044 	addi	r21,r21,1
100044c8:	1cbff404 	addi	r18,r3,-48
100044cc:	a823883a 	mov	r17,r21
100044d0:	b4bff82e 	bgeu	r22,r18,100044b4 <__alt_data_end+0xf80044b4>
100044d4:	1823883a 	mov	r17,r3
100044d8:	d9003115 	stw	r4,196(sp)
100044dc:	003f1d06 	br	10004154 <__alt_data_end+0xf8004154>
100044e0:	8025883a 	mov	r18,r16
100044e4:	dc002903 	ldbu	r16,164(sp)
100044e8:	e011883a 	mov	r8,fp
100044ec:	84003fcc 	andi	r16,r16,255
100044f0:	8007531e 	bne	r16,zero,10006240 <___vfprintf_internal_r+0x2278>
100044f4:	94800414 	ori	r18,r18,16
100044f8:	9080080c 	andi	r2,r18,32
100044fc:	1003a326 	beq	r2,zero,1000538c <___vfprintf_internal_r+0x13c4>
10004500:	d9002e17 	ldw	r4,184(sp)
10004504:	20800117 	ldw	r2,4(r4)
10004508:	24c00017 	ldw	r19,0(r4)
1000450c:	21000204 	addi	r4,r4,8
10004510:	d9002e15 	stw	r4,184(sp)
10004514:	102d883a 	mov	r22,r2
10004518:	10047316 	blt	r2,zero,100056e8 <___vfprintf_internal_r+0x1720>
1000451c:	d9002a17 	ldw	r4,168(sp)
10004520:	df002783 	ldbu	fp,158(sp)
10004524:	2003e416 	blt	r4,zero,100054b8 <___vfprintf_internal_r+0x14f0>
10004528:	00ffdfc4 	movi	r3,-129
1000452c:	9d84b03a 	or	r2,r19,r22
10004530:	90e4703a 	and	r18,r18,r3
10004534:	10018026 	beq	r2,zero,10004b38 <___vfprintf_internal_r+0xb70>
10004538:	b003ab26 	beq	r22,zero,100053e8 <___vfprintf_internal_r+0x1420>
1000453c:	dc402915 	stw	r17,164(sp)
10004540:	dc001e04 	addi	r16,sp,120
10004544:	b023883a 	mov	r17,r22
10004548:	402d883a 	mov	r22,r8
1000454c:	9809883a 	mov	r4,r19
10004550:	880b883a 	mov	r5,r17
10004554:	01800284 	movi	r6,10
10004558:	000f883a 	mov	r7,zero
1000455c:	00163d40 	call	100163d4 <__umoddi3>
10004560:	10800c04 	addi	r2,r2,48
10004564:	843fffc4 	addi	r16,r16,-1
10004568:	9809883a 	mov	r4,r19
1000456c:	880b883a 	mov	r5,r17
10004570:	80800005 	stb	r2,0(r16)
10004574:	01800284 	movi	r6,10
10004578:	000f883a 	mov	r7,zero
1000457c:	0015dd80 	call	10015dd8 <__udivdi3>
10004580:	1027883a 	mov	r19,r2
10004584:	10c4b03a 	or	r2,r2,r3
10004588:	1823883a 	mov	r17,r3
1000458c:	103fef1e 	bne	r2,zero,1000454c <__alt_data_end+0xf800454c>
10004590:	d8c02817 	ldw	r3,160(sp)
10004594:	dc402917 	ldw	r17,164(sp)
10004598:	b011883a 	mov	r8,r22
1000459c:	1c07c83a 	sub	r3,r3,r16
100045a0:	d8c02b15 	stw	r3,172(sp)
100045a4:	00005f06 	br	10004724 <___vfprintf_internal_r+0x75c>
100045a8:	8025883a 	mov	r18,r16
100045ac:	dc002903 	ldbu	r16,164(sp)
100045b0:	e011883a 	mov	r8,fp
100045b4:	84003fcc 	andi	r16,r16,255
100045b8:	80071e1e 	bne	r16,zero,10006234 <___vfprintf_internal_r+0x226c>
100045bc:	9080020c 	andi	r2,r18,8
100045c0:	1004af26 	beq	r2,zero,10005880 <___vfprintf_internal_r+0x18b8>
100045c4:	d9002e17 	ldw	r4,184(sp)
100045c8:	d9402e17 	ldw	r5,184(sp)
100045cc:	d8802e17 	ldw	r2,184(sp)
100045d0:	21000017 	ldw	r4,0(r4)
100045d4:	29400117 	ldw	r5,4(r5)
100045d8:	10800204 	addi	r2,r2,8
100045dc:	d9003615 	stw	r4,216(sp)
100045e0:	d9403815 	stw	r5,224(sp)
100045e4:	d8802e15 	stw	r2,184(sp)
100045e8:	d9003617 	ldw	r4,216(sp)
100045ec:	d9403817 	ldw	r5,224(sp)
100045f0:	da003d15 	stw	r8,244(sp)
100045f4:	04000044 	movi	r16,1
100045f8:	000ce380 	call	1000ce38 <__fpclassifyd>
100045fc:	da003d17 	ldw	r8,244(sp)
10004600:	1404441e 	bne	r2,r16,10005714 <___vfprintf_internal_r+0x174c>
10004604:	d9003617 	ldw	r4,216(sp)
10004608:	d9403817 	ldw	r5,224(sp)
1000460c:	000d883a 	mov	r6,zero
10004610:	000f883a 	mov	r7,zero
10004614:	0017f740 	call	10017f74 <__ledf2>
10004618:	da003d17 	ldw	r8,244(sp)
1000461c:	1005e316 	blt	r2,zero,10005dac <___vfprintf_internal_r+0x1de4>
10004620:	df002783 	ldbu	fp,158(sp)
10004624:	008011c4 	movi	r2,71
10004628:	1445580e 	bge	r2,r17,10005b8c <___vfprintf_internal_r+0x1bc4>
1000462c:	040400b4 	movhi	r16,4098
10004630:	8431a404 	addi	r16,r16,-14704
10004634:	00c000c4 	movi	r3,3
10004638:	00bfdfc4 	movi	r2,-129
1000463c:	d8c02915 	stw	r3,164(sp)
10004640:	90a4703a 	and	r18,r18,r2
10004644:	d8c02b15 	stw	r3,172(sp)
10004648:	d8002a15 	stw	zero,168(sp)
1000464c:	d8003215 	stw	zero,200(sp)
10004650:	00003a06 	br	1000473c <___vfprintf_internal_r+0x774>
10004654:	84000214 	ori	r16,r16,8
10004658:	ac400007 	ldb	r17,0(r21)
1000465c:	003ebc06 	br	10004150 <__alt_data_end+0xf8004150>
10004660:	8025883a 	mov	r18,r16
10004664:	dc002903 	ldbu	r16,164(sp)
10004668:	e011883a 	mov	r8,fp
1000466c:	84003fcc 	andi	r16,r16,255
10004670:	8007001e 	bne	r16,zero,10006274 <___vfprintf_internal_r+0x22ac>
10004674:	94800414 	ori	r18,r18,16
10004678:	9080080c 	andi	r2,r18,32
1000467c:	1002fa26 	beq	r2,zero,10005268 <___vfprintf_internal_r+0x12a0>
10004680:	d9002e17 	ldw	r4,184(sp)
10004684:	d9402a17 	ldw	r5,168(sp)
10004688:	d8002785 	stb	zero,158(sp)
1000468c:	20800204 	addi	r2,r4,8
10004690:	24c00017 	ldw	r19,0(r4)
10004694:	25800117 	ldw	r22,4(r4)
10004698:	2804b116 	blt	r5,zero,10005960 <___vfprintf_internal_r+0x1998>
1000469c:	013fdfc4 	movi	r4,-129
100046a0:	9d86b03a 	or	r3,r19,r22
100046a4:	d8802e15 	stw	r2,184(sp)
100046a8:	9124703a 	and	r18,r18,r4
100046ac:	1802fb1e 	bne	r3,zero,1000529c <___vfprintf_internal_r+0x12d4>
100046b0:	d8c02a17 	ldw	r3,168(sp)
100046b4:	0039883a 	mov	fp,zero
100046b8:	1805e526 	beq	r3,zero,10005e50 <___vfprintf_internal_r+0x1e88>
100046bc:	0027883a 	mov	r19,zero
100046c0:	002d883a 	mov	r22,zero
100046c4:	dc001e04 	addi	r16,sp,120
100046c8:	9806d0fa 	srli	r3,r19,3
100046cc:	b008977a 	slli	r4,r22,29
100046d0:	b02cd0fa 	srli	r22,r22,3
100046d4:	9cc001cc 	andi	r19,r19,7
100046d8:	98800c04 	addi	r2,r19,48
100046dc:	843fffc4 	addi	r16,r16,-1
100046e0:	20e6b03a 	or	r19,r4,r3
100046e4:	80800005 	stb	r2,0(r16)
100046e8:	9d86b03a 	or	r3,r19,r22
100046ec:	183ff61e 	bne	r3,zero,100046c8 <__alt_data_end+0xf80046c8>
100046f0:	90c0004c 	andi	r3,r18,1
100046f4:	18014126 	beq	r3,zero,10004bfc <___vfprintf_internal_r+0xc34>
100046f8:	10803fcc 	andi	r2,r2,255
100046fc:	1080201c 	xori	r2,r2,128
10004700:	10bfe004 	addi	r2,r2,-128
10004704:	00c00c04 	movi	r3,48
10004708:	10c13c26 	beq	r2,r3,10004bfc <___vfprintf_internal_r+0xc34>
1000470c:	80ffffc5 	stb	r3,-1(r16)
10004710:	d8c02817 	ldw	r3,160(sp)
10004714:	80bfffc4 	addi	r2,r16,-1
10004718:	1021883a 	mov	r16,r2
1000471c:	1887c83a 	sub	r3,r3,r2
10004720:	d8c02b15 	stw	r3,172(sp)
10004724:	d8802b17 	ldw	r2,172(sp)
10004728:	d9002a17 	ldw	r4,168(sp)
1000472c:	1100010e 	bge	r2,r4,10004734 <___vfprintf_internal_r+0x76c>
10004730:	2005883a 	mov	r2,r4
10004734:	d8802915 	stw	r2,164(sp)
10004738:	d8003215 	stw	zero,200(sp)
1000473c:	e7003fcc 	andi	fp,fp,255
10004740:	e700201c 	xori	fp,fp,128
10004744:	e73fe004 	addi	fp,fp,-128
10004748:	e0000326 	beq	fp,zero,10004758 <___vfprintf_internal_r+0x790>
1000474c:	d8c02917 	ldw	r3,164(sp)
10004750:	18c00044 	addi	r3,r3,1
10004754:	d8c02915 	stw	r3,164(sp)
10004758:	90c0008c 	andi	r3,r18,2
1000475c:	d8c02c15 	stw	r3,176(sp)
10004760:	18000326 	beq	r3,zero,10004770 <___vfprintf_internal_r+0x7a8>
10004764:	d8c02917 	ldw	r3,164(sp)
10004768:	18c00084 	addi	r3,r3,2
1000476c:	d8c02915 	stw	r3,164(sp)
10004770:	90c0210c 	andi	r3,r18,132
10004774:	d8c03015 	stw	r3,192(sp)
10004778:	1801c51e 	bne	r3,zero,10004e90 <___vfprintf_internal_r+0xec8>
1000477c:	d9003117 	ldw	r4,196(sp)
10004780:	d8c02917 	ldw	r3,164(sp)
10004784:	20e7c83a 	sub	r19,r4,r3
10004788:	04c1c10e 	bge	zero,r19,10004e90 <___vfprintf_internal_r+0xec8>
1000478c:	02400404 	movi	r9,16
10004790:	d8c02017 	ldw	r3,128(sp)
10004794:	d8801f17 	ldw	r2,124(sp)
10004798:	4cc52f0e 	bge	r9,r19,10005c58 <___vfprintf_internal_r+0x1c90>
1000479c:	014400b4 	movhi	r5,4098
100047a0:	2971b784 	addi	r5,r5,-14626
100047a4:	dc403b15 	stw	r17,236(sp)
100047a8:	d9403515 	stw	r5,212(sp)
100047ac:	9823883a 	mov	r17,r19
100047b0:	482d883a 	mov	r22,r9
100047b4:	9027883a 	mov	r19,r18
100047b8:	070001c4 	movi	fp,7
100047bc:	8025883a 	mov	r18,r16
100047c0:	dc002d17 	ldw	r16,180(sp)
100047c4:	00000306 	br	100047d4 <___vfprintf_internal_r+0x80c>
100047c8:	8c7ffc04 	addi	r17,r17,-16
100047cc:	42000204 	addi	r8,r8,8
100047d0:	b440130e 	bge	r22,r17,10004820 <___vfprintf_internal_r+0x858>
100047d4:	010400b4 	movhi	r4,4098
100047d8:	18c00404 	addi	r3,r3,16
100047dc:	10800044 	addi	r2,r2,1
100047e0:	2131b784 	addi	r4,r4,-14626
100047e4:	41000015 	stw	r4,0(r8)
100047e8:	45800115 	stw	r22,4(r8)
100047ec:	d8c02015 	stw	r3,128(sp)
100047f0:	d8801f15 	stw	r2,124(sp)
100047f4:	e0bff40e 	bge	fp,r2,100047c8 <__alt_data_end+0xf80047c8>
100047f8:	d9801e04 	addi	r6,sp,120
100047fc:	b80b883a 	mov	r5,r23
10004800:	8009883a 	mov	r4,r16
10004804:	0011b240 	call	10011b24 <__sprint_r>
10004808:	103ef31e 	bne	r2,zero,100043d8 <__alt_data_end+0xf80043d8>
1000480c:	8c7ffc04 	addi	r17,r17,-16
10004810:	d8c02017 	ldw	r3,128(sp)
10004814:	d8801f17 	ldw	r2,124(sp)
10004818:	da000404 	addi	r8,sp,16
1000481c:	b47fed16 	blt	r22,r17,100047d4 <__alt_data_end+0xf80047d4>
10004820:	9021883a 	mov	r16,r18
10004824:	9825883a 	mov	r18,r19
10004828:	8827883a 	mov	r19,r17
1000482c:	dc403b17 	ldw	r17,236(sp)
10004830:	d9403517 	ldw	r5,212(sp)
10004834:	98c7883a 	add	r3,r19,r3
10004838:	10800044 	addi	r2,r2,1
1000483c:	41400015 	stw	r5,0(r8)
10004840:	44c00115 	stw	r19,4(r8)
10004844:	d8c02015 	stw	r3,128(sp)
10004848:	d8801f15 	stw	r2,124(sp)
1000484c:	010001c4 	movi	r4,7
10004850:	2082c516 	blt	r4,r2,10005368 <___vfprintf_internal_r+0x13a0>
10004854:	df002787 	ldb	fp,158(sp)
10004858:	42000204 	addi	r8,r8,8
1000485c:	e0000c26 	beq	fp,zero,10004890 <___vfprintf_internal_r+0x8c8>
10004860:	d8801f17 	ldw	r2,124(sp)
10004864:	d9002784 	addi	r4,sp,158
10004868:	18c00044 	addi	r3,r3,1
1000486c:	10800044 	addi	r2,r2,1
10004870:	41000015 	stw	r4,0(r8)
10004874:	01000044 	movi	r4,1
10004878:	41000115 	stw	r4,4(r8)
1000487c:	d8c02015 	stw	r3,128(sp)
10004880:	d8801f15 	stw	r2,124(sp)
10004884:	010001c4 	movi	r4,7
10004888:	20825e16 	blt	r4,r2,10005204 <___vfprintf_internal_r+0x123c>
1000488c:	42000204 	addi	r8,r8,8
10004890:	d8802c17 	ldw	r2,176(sp)
10004894:	10000c26 	beq	r2,zero,100048c8 <___vfprintf_internal_r+0x900>
10004898:	d8801f17 	ldw	r2,124(sp)
1000489c:	d9002704 	addi	r4,sp,156
100048a0:	18c00084 	addi	r3,r3,2
100048a4:	10800044 	addi	r2,r2,1
100048a8:	41000015 	stw	r4,0(r8)
100048ac:	01000084 	movi	r4,2
100048b0:	41000115 	stw	r4,4(r8)
100048b4:	d8c02015 	stw	r3,128(sp)
100048b8:	d8801f15 	stw	r2,124(sp)
100048bc:	010001c4 	movi	r4,7
100048c0:	20825816 	blt	r4,r2,10005224 <___vfprintf_internal_r+0x125c>
100048c4:	42000204 	addi	r8,r8,8
100048c8:	d9003017 	ldw	r4,192(sp)
100048cc:	00802004 	movi	r2,128
100048d0:	2081bb26 	beq	r4,r2,10004fc0 <___vfprintf_internal_r+0xff8>
100048d4:	d9402a17 	ldw	r5,168(sp)
100048d8:	d8802b17 	ldw	r2,172(sp)
100048dc:	28adc83a 	sub	r22,r5,r2
100048e0:	0580310e 	bge	zero,r22,100049a8 <___vfprintf_internal_r+0x9e0>
100048e4:	07000404 	movi	fp,16
100048e8:	d8801f17 	ldw	r2,124(sp)
100048ec:	e584360e 	bge	fp,r22,100059c8 <___vfprintf_internal_r+0x1a00>
100048f0:	014400b4 	movhi	r5,4098
100048f4:	2971b384 	addi	r5,r5,-14642
100048f8:	dc402a15 	stw	r17,168(sp)
100048fc:	d9402c15 	stw	r5,176(sp)
10004900:	b023883a 	mov	r17,r22
10004904:	04c001c4 	movi	r19,7
10004908:	a82d883a 	mov	r22,r21
1000490c:	902b883a 	mov	r21,r18
10004910:	8025883a 	mov	r18,r16
10004914:	dc002d17 	ldw	r16,180(sp)
10004918:	00000306 	br	10004928 <___vfprintf_internal_r+0x960>
1000491c:	8c7ffc04 	addi	r17,r17,-16
10004920:	42000204 	addi	r8,r8,8
10004924:	e440110e 	bge	fp,r17,1000496c <___vfprintf_internal_r+0x9a4>
10004928:	18c00404 	addi	r3,r3,16
1000492c:	10800044 	addi	r2,r2,1
10004930:	45000015 	stw	r20,0(r8)
10004934:	47000115 	stw	fp,4(r8)
10004938:	d8c02015 	stw	r3,128(sp)
1000493c:	d8801f15 	stw	r2,124(sp)
10004940:	98bff60e 	bge	r19,r2,1000491c <__alt_data_end+0xf800491c>
10004944:	d9801e04 	addi	r6,sp,120
10004948:	b80b883a 	mov	r5,r23
1000494c:	8009883a 	mov	r4,r16
10004950:	0011b240 	call	10011b24 <__sprint_r>
10004954:	103ea01e 	bne	r2,zero,100043d8 <__alt_data_end+0xf80043d8>
10004958:	8c7ffc04 	addi	r17,r17,-16
1000495c:	d8c02017 	ldw	r3,128(sp)
10004960:	d8801f17 	ldw	r2,124(sp)
10004964:	da000404 	addi	r8,sp,16
10004968:	e47fef16 	blt	fp,r17,10004928 <__alt_data_end+0xf8004928>
1000496c:	9021883a 	mov	r16,r18
10004970:	a825883a 	mov	r18,r21
10004974:	b02b883a 	mov	r21,r22
10004978:	882d883a 	mov	r22,r17
1000497c:	dc402a17 	ldw	r17,168(sp)
10004980:	d9002c17 	ldw	r4,176(sp)
10004984:	1d87883a 	add	r3,r3,r22
10004988:	10800044 	addi	r2,r2,1
1000498c:	41000015 	stw	r4,0(r8)
10004990:	45800115 	stw	r22,4(r8)
10004994:	d8c02015 	stw	r3,128(sp)
10004998:	d8801f15 	stw	r2,124(sp)
1000499c:	010001c4 	movi	r4,7
100049a0:	20821016 	blt	r4,r2,100051e4 <___vfprintf_internal_r+0x121c>
100049a4:	42000204 	addi	r8,r8,8
100049a8:	9080400c 	andi	r2,r18,256
100049ac:	10013a1e 	bne	r2,zero,10004e98 <___vfprintf_internal_r+0xed0>
100049b0:	d9402b17 	ldw	r5,172(sp)
100049b4:	d8801f17 	ldw	r2,124(sp)
100049b8:	44000015 	stw	r16,0(r8)
100049bc:	1947883a 	add	r3,r3,r5
100049c0:	10800044 	addi	r2,r2,1
100049c4:	41400115 	stw	r5,4(r8)
100049c8:	d8c02015 	stw	r3,128(sp)
100049cc:	d8801f15 	stw	r2,124(sp)
100049d0:	010001c4 	movi	r4,7
100049d4:	2081f516 	blt	r4,r2,100051ac <___vfprintf_internal_r+0x11e4>
100049d8:	42000204 	addi	r8,r8,8
100049dc:	9480010c 	andi	r18,r18,4
100049e0:	90003226 	beq	r18,zero,10004aac <___vfprintf_internal_r+0xae4>
100049e4:	d9403117 	ldw	r5,196(sp)
100049e8:	d8802917 	ldw	r2,164(sp)
100049ec:	28a1c83a 	sub	r16,r5,r2
100049f0:	04002e0e 	bge	zero,r16,10004aac <___vfprintf_internal_r+0xae4>
100049f4:	04400404 	movi	r17,16
100049f8:	d8801f17 	ldw	r2,124(sp)
100049fc:	8c04c40e 	bge	r17,r16,10005d10 <___vfprintf_internal_r+0x1d48>
10004a00:	014400b4 	movhi	r5,4098
10004a04:	2971b784 	addi	r5,r5,-14626
10004a08:	d9403515 	stw	r5,212(sp)
10004a0c:	048001c4 	movi	r18,7
10004a10:	dcc02d17 	ldw	r19,180(sp)
10004a14:	00000306 	br	10004a24 <___vfprintf_internal_r+0xa5c>
10004a18:	843ffc04 	addi	r16,r16,-16
10004a1c:	42000204 	addi	r8,r8,8
10004a20:	8c00130e 	bge	r17,r16,10004a70 <___vfprintf_internal_r+0xaa8>
10004a24:	010400b4 	movhi	r4,4098
10004a28:	18c00404 	addi	r3,r3,16
10004a2c:	10800044 	addi	r2,r2,1
10004a30:	2131b784 	addi	r4,r4,-14626
10004a34:	41000015 	stw	r4,0(r8)
10004a38:	44400115 	stw	r17,4(r8)
10004a3c:	d8c02015 	stw	r3,128(sp)
10004a40:	d8801f15 	stw	r2,124(sp)
10004a44:	90bff40e 	bge	r18,r2,10004a18 <__alt_data_end+0xf8004a18>
10004a48:	d9801e04 	addi	r6,sp,120
10004a4c:	b80b883a 	mov	r5,r23
10004a50:	9809883a 	mov	r4,r19
10004a54:	0011b240 	call	10011b24 <__sprint_r>
10004a58:	103e5f1e 	bne	r2,zero,100043d8 <__alt_data_end+0xf80043d8>
10004a5c:	843ffc04 	addi	r16,r16,-16
10004a60:	d8c02017 	ldw	r3,128(sp)
10004a64:	d8801f17 	ldw	r2,124(sp)
10004a68:	da000404 	addi	r8,sp,16
10004a6c:	8c3fed16 	blt	r17,r16,10004a24 <__alt_data_end+0xf8004a24>
10004a70:	d9403517 	ldw	r5,212(sp)
10004a74:	1c07883a 	add	r3,r3,r16
10004a78:	10800044 	addi	r2,r2,1
10004a7c:	41400015 	stw	r5,0(r8)
10004a80:	44000115 	stw	r16,4(r8)
10004a84:	d8c02015 	stw	r3,128(sp)
10004a88:	d8801f15 	stw	r2,124(sp)
10004a8c:	010001c4 	movi	r4,7
10004a90:	2080060e 	bge	r4,r2,10004aac <___vfprintf_internal_r+0xae4>
10004a94:	d9002d17 	ldw	r4,180(sp)
10004a98:	d9801e04 	addi	r6,sp,120
10004a9c:	b80b883a 	mov	r5,r23
10004aa0:	0011b240 	call	10011b24 <__sprint_r>
10004aa4:	103e4c1e 	bne	r2,zero,100043d8 <__alt_data_end+0xf80043d8>
10004aa8:	d8c02017 	ldw	r3,128(sp)
10004aac:	d8803117 	ldw	r2,196(sp)
10004ab0:	d9002917 	ldw	r4,164(sp)
10004ab4:	1100010e 	bge	r2,r4,10004abc <___vfprintf_internal_r+0xaf4>
10004ab8:	2005883a 	mov	r2,r4
10004abc:	d9402f17 	ldw	r5,188(sp)
10004ac0:	288b883a 	add	r5,r5,r2
10004ac4:	d9402f15 	stw	r5,188(sp)
10004ac8:	1801c01e 	bne	r3,zero,100051cc <___vfprintf_internal_r+0x1204>
10004acc:	a8800007 	ldb	r2,0(r21)
10004ad0:	d8001f15 	stw	zero,124(sp)
10004ad4:	da000404 	addi	r8,sp,16
10004ad8:	103d751e 	bne	r2,zero,100040b0 <__alt_data_end+0xf80040b0>
10004adc:	a823883a 	mov	r17,r21
10004ae0:	003d8b06 	br	10004110 <__alt_data_end+0xf8004110>
10004ae4:	8025883a 	mov	r18,r16
10004ae8:	dc002903 	ldbu	r16,164(sp)
10004aec:	e011883a 	mov	r8,fp
10004af0:	84003fcc 	andi	r16,r16,255
10004af4:	8005e51e 	bne	r16,zero,1000628c <___vfprintf_internal_r+0x22c4>
10004af8:	94800414 	ori	r18,r18,16
10004afc:	9080080c 	andi	r2,r18,32
10004b00:	10022b26 	beq	r2,zero,100053b0 <___vfprintf_internal_r+0x13e8>
10004b04:	d9002e17 	ldw	r4,184(sp)
10004b08:	d9402a17 	ldw	r5,168(sp)
10004b0c:	d8002785 	stb	zero,158(sp)
10004b10:	20c00204 	addi	r3,r4,8
10004b14:	24c00017 	ldw	r19,0(r4)
10004b18:	25800117 	ldw	r22,4(r4)
10004b1c:	28042e16 	blt	r5,zero,10005bd8 <___vfprintf_internal_r+0x1c10>
10004b20:	013fdfc4 	movi	r4,-129
10004b24:	9d84b03a 	or	r2,r19,r22
10004b28:	d8c02e15 	stw	r3,184(sp)
10004b2c:	9124703a 	and	r18,r18,r4
10004b30:	0039883a 	mov	fp,zero
10004b34:	103e801e 	bne	r2,zero,10004538 <__alt_data_end+0xf8004538>
10004b38:	d9002a17 	ldw	r4,168(sp)
10004b3c:	2002e01e 	bne	r4,zero,100056c0 <___vfprintf_internal_r+0x16f8>
10004b40:	d8002a15 	stw	zero,168(sp)
10004b44:	d8002b15 	stw	zero,172(sp)
10004b48:	dc001e04 	addi	r16,sp,120
10004b4c:	003ef506 	br	10004724 <__alt_data_end+0xf8004724>
10004b50:	8025883a 	mov	r18,r16
10004b54:	dc002903 	ldbu	r16,164(sp)
10004b58:	e011883a 	mov	r8,fp
10004b5c:	84003fcc 	andi	r16,r16,255
10004b60:	8005ba1e 	bne	r16,zero,1000624c <___vfprintf_internal_r+0x2284>
10004b64:	010400b4 	movhi	r4,4098
10004b68:	2131a704 	addi	r4,r4,-14692
10004b6c:	d9003915 	stw	r4,228(sp)
10004b70:	9080080c 	andi	r2,r18,32
10004b74:	10006126 	beq	r2,zero,10004cfc <___vfprintf_internal_r+0xd34>
10004b78:	d9402e17 	ldw	r5,184(sp)
10004b7c:	2cc00017 	ldw	r19,0(r5)
10004b80:	2d800117 	ldw	r22,4(r5)
10004b84:	29400204 	addi	r5,r5,8
10004b88:	d9402e15 	stw	r5,184(sp)
10004b8c:	9080004c 	andi	r2,r18,1
10004b90:	1001ac26 	beq	r2,zero,10005244 <___vfprintf_internal_r+0x127c>
10004b94:	9d84b03a 	or	r2,r19,r22
10004b98:	10038526 	beq	r2,zero,100059b0 <___vfprintf_internal_r+0x19e8>
10004b9c:	d8c02a17 	ldw	r3,168(sp)
10004ba0:	00800c04 	movi	r2,48
10004ba4:	d8802705 	stb	r2,156(sp)
10004ba8:	dc402745 	stb	r17,157(sp)
10004bac:	d8002785 	stb	zero,158(sp)
10004bb0:	90800094 	ori	r2,r18,2
10004bb4:	18047916 	blt	r3,zero,10005d9c <___vfprintf_internal_r+0x1dd4>
10004bb8:	00bfdfc4 	movi	r2,-129
10004bbc:	90a4703a 	and	r18,r18,r2
10004bc0:	94800094 	ori	r18,r18,2
10004bc4:	0039883a 	mov	fp,zero
10004bc8:	d9003917 	ldw	r4,228(sp)
10004bcc:	dc001e04 	addi	r16,sp,120
10004bd0:	988003cc 	andi	r2,r19,15
10004bd4:	b006973a 	slli	r3,r22,28
10004bd8:	2085883a 	add	r2,r4,r2
10004bdc:	9826d13a 	srli	r19,r19,4
10004be0:	10800003 	ldbu	r2,0(r2)
10004be4:	b02cd13a 	srli	r22,r22,4
10004be8:	843fffc4 	addi	r16,r16,-1
10004bec:	1ce6b03a 	or	r19,r3,r19
10004bf0:	80800005 	stb	r2,0(r16)
10004bf4:	9d84b03a 	or	r2,r19,r22
10004bf8:	103ff51e 	bne	r2,zero,10004bd0 <__alt_data_end+0xf8004bd0>
10004bfc:	d8c02817 	ldw	r3,160(sp)
10004c00:	1c07c83a 	sub	r3,r3,r16
10004c04:	d8c02b15 	stw	r3,172(sp)
10004c08:	003ec606 	br	10004724 <__alt_data_end+0xf8004724>
10004c0c:	8025883a 	mov	r18,r16
10004c10:	dc002903 	ldbu	r16,164(sp)
10004c14:	e011883a 	mov	r8,fp
10004c18:	84003fcc 	andi	r16,r16,255
10004c1c:	803e9626 	beq	r16,zero,10004678 <__alt_data_end+0xf8004678>
10004c20:	d8c02b03 	ldbu	r3,172(sp)
10004c24:	d8c02785 	stb	r3,158(sp)
10004c28:	003e9306 	br	10004678 <__alt_data_end+0xf8004678>
10004c2c:	00c00044 	movi	r3,1
10004c30:	d8c02905 	stb	r3,164(sp)
10004c34:	00c00ac4 	movi	r3,43
10004c38:	d8c02b05 	stb	r3,172(sp)
10004c3c:	ac400007 	ldb	r17,0(r21)
10004c40:	003d4306 	br	10004150 <__alt_data_end+0xf8004150>
10004c44:	84000814 	ori	r16,r16,32
10004c48:	ac400007 	ldb	r17,0(r21)
10004c4c:	003d4006 	br	10004150 <__alt_data_end+0xf8004150>
10004c50:	d8802e17 	ldw	r2,184(sp)
10004c54:	8025883a 	mov	r18,r16
10004c58:	d8002785 	stb	zero,158(sp)
10004c5c:	14000017 	ldw	r16,0(r2)
10004c60:	e011883a 	mov	r8,fp
10004c64:	14c00104 	addi	r19,r2,4
10004c68:	80042d26 	beq	r16,zero,10005d20 <___vfprintf_internal_r+0x1d58>
10004c6c:	d8c02a17 	ldw	r3,168(sp)
10004c70:	1803e416 	blt	r3,zero,10005c04 <___vfprintf_internal_r+0x1c3c>
10004c74:	180d883a 	mov	r6,r3
10004c78:	000b883a 	mov	r5,zero
10004c7c:	8009883a 	mov	r4,r16
10004c80:	df003d15 	stw	fp,244(sp)
10004c84:	000b0140 	call	1000b014 <memchr>
10004c88:	da003d17 	ldw	r8,244(sp)
10004c8c:	10046826 	beq	r2,zero,10005e30 <___vfprintf_internal_r+0x1e68>
10004c90:	1405c83a 	sub	r2,r2,r16
10004c94:	d8802b15 	stw	r2,172(sp)
10004c98:	1003e016 	blt	r2,zero,10005c1c <___vfprintf_internal_r+0x1c54>
10004c9c:	df002783 	ldbu	fp,158(sp)
10004ca0:	d8802915 	stw	r2,164(sp)
10004ca4:	dcc02e15 	stw	r19,184(sp)
10004ca8:	d8002a15 	stw	zero,168(sp)
10004cac:	d8003215 	stw	zero,200(sp)
10004cb0:	003ea206 	br	1000473c <__alt_data_end+0xf800473c>
10004cb4:	8025883a 	mov	r18,r16
10004cb8:	dc002903 	ldbu	r16,164(sp)
10004cbc:	e011883a 	mov	r8,fp
10004cc0:	84003fcc 	andi	r16,r16,255
10004cc4:	803f8d26 	beq	r16,zero,10004afc <__alt_data_end+0xf8004afc>
10004cc8:	d8c02b03 	ldbu	r3,172(sp)
10004ccc:	d8c02785 	stb	r3,158(sp)
10004cd0:	003f8a06 	br	10004afc <__alt_data_end+0xf8004afc>
10004cd4:	8025883a 	mov	r18,r16
10004cd8:	dc002903 	ldbu	r16,164(sp)
10004cdc:	e011883a 	mov	r8,fp
10004ce0:	84003fcc 	andi	r16,r16,255
10004ce4:	8005661e 	bne	r16,zero,10006280 <___vfprintf_internal_r+0x22b8>
10004ce8:	010400b4 	movhi	r4,4098
10004cec:	2131ac04 	addi	r4,r4,-14672
10004cf0:	d9003915 	stw	r4,228(sp)
10004cf4:	9080080c 	andi	r2,r18,32
10004cf8:	103f9f1e 	bne	r2,zero,10004b78 <__alt_data_end+0xf8004b78>
10004cfc:	9080040c 	andi	r2,r18,16
10004d00:	1002eb26 	beq	r2,zero,100058b0 <___vfprintf_internal_r+0x18e8>
10004d04:	d8802e17 	ldw	r2,184(sp)
10004d08:	002d883a 	mov	r22,zero
10004d0c:	14c00017 	ldw	r19,0(r2)
10004d10:	10800104 	addi	r2,r2,4
10004d14:	d8802e15 	stw	r2,184(sp)
10004d18:	003f9c06 	br	10004b8c <__alt_data_end+0xf8004b8c>
10004d1c:	d8802b07 	ldb	r2,172(sp)
10004d20:	1002e11e 	bne	r2,zero,100058a8 <___vfprintf_internal_r+0x18e0>
10004d24:	00c00044 	movi	r3,1
10004d28:	d8c02905 	stb	r3,164(sp)
10004d2c:	00c00804 	movi	r3,32
10004d30:	d8c02b05 	stb	r3,172(sp)
10004d34:	ac400007 	ldb	r17,0(r21)
10004d38:	003d0506 	br	10004150 <__alt_data_end+0xf8004150>
10004d3c:	84000054 	ori	r16,r16,1
10004d40:	ac400007 	ldb	r17,0(r21)
10004d44:	003d0206 	br	10004150 <__alt_data_end+0xf8004150>
10004d48:	8025883a 	mov	r18,r16
10004d4c:	dc002903 	ldbu	r16,164(sp)
10004d50:	e011883a 	mov	r8,fp
10004d54:	84003fcc 	andi	r16,r16,255
10004d58:	803de726 	beq	r16,zero,100044f8 <__alt_data_end+0xf80044f8>
10004d5c:	d8c02b03 	ldbu	r3,172(sp)
10004d60:	d8c02785 	stb	r3,158(sp)
10004d64:	003de406 	br	100044f8 <__alt_data_end+0xf80044f8>
10004d68:	84001014 	ori	r16,r16,64
10004d6c:	ac400007 	ldb	r17,0(r21)
10004d70:	003cf706 	br	10004150 <__alt_data_end+0xf8004150>
10004d74:	ac400007 	ldb	r17,0(r21)
10004d78:	00801b04 	movi	r2,108
10004d7c:	88838f26 	beq	r17,r2,10005bbc <___vfprintf_internal_r+0x1bf4>
10004d80:	84000414 	ori	r16,r16,16
10004d84:	003cf206 	br	10004150 <__alt_data_end+0xf8004150>
10004d88:	8025883a 	mov	r18,r16
10004d8c:	dc002903 	ldbu	r16,164(sp)
10004d90:	e011883a 	mov	r8,fp
10004d94:	84003fcc 	andi	r16,r16,255
10004d98:	80053f1e 	bne	r16,zero,10006298 <___vfprintf_internal_r+0x22d0>
10004d9c:	9080080c 	andi	r2,r18,32
10004da0:	1002d226 	beq	r2,zero,100058ec <___vfprintf_internal_r+0x1924>
10004da4:	d9002e17 	ldw	r4,184(sp)
10004da8:	d9402f17 	ldw	r5,188(sp)
10004dac:	20800017 	ldw	r2,0(r4)
10004db0:	2807d7fa 	srai	r3,r5,31
10004db4:	21000104 	addi	r4,r4,4
10004db8:	d9002e15 	stw	r4,184(sp)
10004dbc:	11400015 	stw	r5,0(r2)
10004dc0:	10c00115 	stw	r3,4(r2)
10004dc4:	003cb806 	br	100040a8 <__alt_data_end+0xf80040a8>
10004dc8:	d8c02e17 	ldw	r3,184(sp)
10004dcc:	d9002e17 	ldw	r4,184(sp)
10004dd0:	8025883a 	mov	r18,r16
10004dd4:	18800017 	ldw	r2,0(r3)
10004dd8:	21000104 	addi	r4,r4,4
10004ddc:	00c00044 	movi	r3,1
10004de0:	e011883a 	mov	r8,fp
10004de4:	d8c02915 	stw	r3,164(sp)
10004de8:	d8002785 	stb	zero,158(sp)
10004dec:	d8801405 	stb	r2,80(sp)
10004df0:	d9002e15 	stw	r4,184(sp)
10004df4:	d8c02b15 	stw	r3,172(sp)
10004df8:	d8002a15 	stw	zero,168(sp)
10004dfc:	d8003215 	stw	zero,200(sp)
10004e00:	dc001404 	addi	r16,sp,80
10004e04:	0039883a 	mov	fp,zero
10004e08:	003e5306 	br	10004758 <__alt_data_end+0xf8004758>
10004e0c:	010400b4 	movhi	r4,4098
10004e10:	2131ac04 	addi	r4,r4,-14672
10004e14:	0039883a 	mov	fp,zero
10004e18:	d9003915 	stw	r4,228(sp)
10004e1c:	04401e04 	movi	r17,120
10004e20:	003f6906 	br	10004bc8 <__alt_data_end+0xf8004bc8>
10004e24:	8025883a 	mov	r18,r16
10004e28:	dc002903 	ldbu	r16,164(sp)
10004e2c:	e011883a 	mov	r8,fp
10004e30:	84003fcc 	andi	r16,r16,255
10004e34:	8005081e 	bne	r16,zero,10006258 <___vfprintf_internal_r+0x2290>
10004e38:	883d6126 	beq	r17,zero,100043c0 <__alt_data_end+0xf80043c0>
10004e3c:	00c00044 	movi	r3,1
10004e40:	d8c02915 	stw	r3,164(sp)
10004e44:	dc401405 	stb	r17,80(sp)
10004e48:	d8002785 	stb	zero,158(sp)
10004e4c:	003fe906 	br	10004df4 <__alt_data_end+0xf8004df4>
10004e50:	014400b4 	movhi	r5,4098
10004e54:	2971ac04 	addi	r5,r5,-14672
10004e58:	d9403915 	stw	r5,228(sp)
10004e5c:	d8c02e15 	stw	r3,184(sp)
10004e60:	1025883a 	mov	r18,r2
10004e64:	04401e04 	movi	r17,120
10004e68:	9d84b03a 	or	r2,r19,r22
10004e6c:	1000fc1e 	bne	r2,zero,10005260 <___vfprintf_internal_r+0x1298>
10004e70:	0039883a 	mov	fp,zero
10004e74:	00800084 	movi	r2,2
10004e78:	10803fcc 	andi	r2,r2,255
10004e7c:	00c00044 	movi	r3,1
10004e80:	10c20f26 	beq	r2,r3,100056c0 <___vfprintf_internal_r+0x16f8>
10004e84:	00c00084 	movi	r3,2
10004e88:	10fd3326 	beq	r2,r3,10004358 <__alt_data_end+0xf8004358>
10004e8c:	003e0b06 	br	100046bc <__alt_data_end+0xf80046bc>
10004e90:	d8c02017 	ldw	r3,128(sp)
10004e94:	003e7106 	br	1000485c <__alt_data_end+0xf800485c>
10004e98:	00801944 	movi	r2,101
10004e9c:	14407e0e 	bge	r2,r17,10005098 <___vfprintf_internal_r+0x10d0>
10004ea0:	d9003617 	ldw	r4,216(sp)
10004ea4:	d9403817 	ldw	r5,224(sp)
10004ea8:	000d883a 	mov	r6,zero
10004eac:	000f883a 	mov	r7,zero
10004eb0:	d8c03c15 	stw	r3,240(sp)
10004eb4:	da003d15 	stw	r8,244(sp)
10004eb8:	0017e100 	call	10017e10 <__eqdf2>
10004ebc:	d8c03c17 	ldw	r3,240(sp)
10004ec0:	da003d17 	ldw	r8,244(sp)
10004ec4:	1000f71e 	bne	r2,zero,100052a4 <___vfprintf_internal_r+0x12dc>
10004ec8:	d8801f17 	ldw	r2,124(sp)
10004ecc:	010400b4 	movhi	r4,4098
10004ed0:	2131b304 	addi	r4,r4,-14644
10004ed4:	18c00044 	addi	r3,r3,1
10004ed8:	10800044 	addi	r2,r2,1
10004edc:	41000015 	stw	r4,0(r8)
10004ee0:	01000044 	movi	r4,1
10004ee4:	41000115 	stw	r4,4(r8)
10004ee8:	d8c02015 	stw	r3,128(sp)
10004eec:	d8801f15 	stw	r2,124(sp)
10004ef0:	010001c4 	movi	r4,7
10004ef4:	2082b816 	blt	r4,r2,100059d8 <___vfprintf_internal_r+0x1a10>
10004ef8:	42000204 	addi	r8,r8,8
10004efc:	d8802617 	ldw	r2,152(sp)
10004f00:	d9403317 	ldw	r5,204(sp)
10004f04:	11400216 	blt	r2,r5,10004f10 <___vfprintf_internal_r+0xf48>
10004f08:	9080004c 	andi	r2,r18,1
10004f0c:	103eb326 	beq	r2,zero,100049dc <__alt_data_end+0xf80049dc>
10004f10:	d8803717 	ldw	r2,220(sp)
10004f14:	d9003417 	ldw	r4,208(sp)
10004f18:	d9403717 	ldw	r5,220(sp)
10004f1c:	1887883a 	add	r3,r3,r2
10004f20:	d8801f17 	ldw	r2,124(sp)
10004f24:	41000015 	stw	r4,0(r8)
10004f28:	41400115 	stw	r5,4(r8)
10004f2c:	10800044 	addi	r2,r2,1
10004f30:	d8c02015 	stw	r3,128(sp)
10004f34:	d8801f15 	stw	r2,124(sp)
10004f38:	010001c4 	movi	r4,7
10004f3c:	20832916 	blt	r4,r2,10005be4 <___vfprintf_internal_r+0x1c1c>
10004f40:	42000204 	addi	r8,r8,8
10004f44:	d8803317 	ldw	r2,204(sp)
10004f48:	143fffc4 	addi	r16,r2,-1
10004f4c:	043ea30e 	bge	zero,r16,100049dc <__alt_data_end+0xf80049dc>
10004f50:	04400404 	movi	r17,16
10004f54:	d8801f17 	ldw	r2,124(sp)
10004f58:	8c00880e 	bge	r17,r16,1000517c <___vfprintf_internal_r+0x11b4>
10004f5c:	014400b4 	movhi	r5,4098
10004f60:	2971b384 	addi	r5,r5,-14642
10004f64:	d9402c15 	stw	r5,176(sp)
10004f68:	058001c4 	movi	r22,7
10004f6c:	dcc02d17 	ldw	r19,180(sp)
10004f70:	00000306 	br	10004f80 <___vfprintf_internal_r+0xfb8>
10004f74:	42000204 	addi	r8,r8,8
10004f78:	843ffc04 	addi	r16,r16,-16
10004f7c:	8c00820e 	bge	r17,r16,10005188 <___vfprintf_internal_r+0x11c0>
10004f80:	18c00404 	addi	r3,r3,16
10004f84:	10800044 	addi	r2,r2,1
10004f88:	45000015 	stw	r20,0(r8)
10004f8c:	44400115 	stw	r17,4(r8)
10004f90:	d8c02015 	stw	r3,128(sp)
10004f94:	d8801f15 	stw	r2,124(sp)
10004f98:	b0bff60e 	bge	r22,r2,10004f74 <__alt_data_end+0xf8004f74>
10004f9c:	d9801e04 	addi	r6,sp,120
10004fa0:	b80b883a 	mov	r5,r23
10004fa4:	9809883a 	mov	r4,r19
10004fa8:	0011b240 	call	10011b24 <__sprint_r>
10004fac:	103d0a1e 	bne	r2,zero,100043d8 <__alt_data_end+0xf80043d8>
10004fb0:	d8c02017 	ldw	r3,128(sp)
10004fb4:	d8801f17 	ldw	r2,124(sp)
10004fb8:	da000404 	addi	r8,sp,16
10004fbc:	003fee06 	br	10004f78 <__alt_data_end+0xf8004f78>
10004fc0:	d9403117 	ldw	r5,196(sp)
10004fc4:	d8802917 	ldw	r2,164(sp)
10004fc8:	28adc83a 	sub	r22,r5,r2
10004fcc:	05be410e 	bge	zero,r22,100048d4 <__alt_data_end+0xf80048d4>
10004fd0:	07000404 	movi	fp,16
10004fd4:	d8801f17 	ldw	r2,124(sp)
10004fd8:	e5838f0e 	bge	fp,r22,10005e18 <___vfprintf_internal_r+0x1e50>
10004fdc:	014400b4 	movhi	r5,4098
10004fe0:	2971b384 	addi	r5,r5,-14642
10004fe4:	dc403015 	stw	r17,192(sp)
10004fe8:	d9402c15 	stw	r5,176(sp)
10004fec:	b023883a 	mov	r17,r22
10004ff0:	04c001c4 	movi	r19,7
10004ff4:	a82d883a 	mov	r22,r21
10004ff8:	902b883a 	mov	r21,r18
10004ffc:	8025883a 	mov	r18,r16
10005000:	dc002d17 	ldw	r16,180(sp)
10005004:	00000306 	br	10005014 <___vfprintf_internal_r+0x104c>
10005008:	8c7ffc04 	addi	r17,r17,-16
1000500c:	42000204 	addi	r8,r8,8
10005010:	e440110e 	bge	fp,r17,10005058 <___vfprintf_internal_r+0x1090>
10005014:	18c00404 	addi	r3,r3,16
10005018:	10800044 	addi	r2,r2,1
1000501c:	45000015 	stw	r20,0(r8)
10005020:	47000115 	stw	fp,4(r8)
10005024:	d8c02015 	stw	r3,128(sp)
10005028:	d8801f15 	stw	r2,124(sp)
1000502c:	98bff60e 	bge	r19,r2,10005008 <__alt_data_end+0xf8005008>
10005030:	d9801e04 	addi	r6,sp,120
10005034:	b80b883a 	mov	r5,r23
10005038:	8009883a 	mov	r4,r16
1000503c:	0011b240 	call	10011b24 <__sprint_r>
10005040:	103ce51e 	bne	r2,zero,100043d8 <__alt_data_end+0xf80043d8>
10005044:	8c7ffc04 	addi	r17,r17,-16
10005048:	d8c02017 	ldw	r3,128(sp)
1000504c:	d8801f17 	ldw	r2,124(sp)
10005050:	da000404 	addi	r8,sp,16
10005054:	e47fef16 	blt	fp,r17,10005014 <__alt_data_end+0xf8005014>
10005058:	9021883a 	mov	r16,r18
1000505c:	a825883a 	mov	r18,r21
10005060:	b02b883a 	mov	r21,r22
10005064:	882d883a 	mov	r22,r17
10005068:	dc403017 	ldw	r17,192(sp)
1000506c:	d9002c17 	ldw	r4,176(sp)
10005070:	1d87883a 	add	r3,r3,r22
10005074:	10800044 	addi	r2,r2,1
10005078:	41000015 	stw	r4,0(r8)
1000507c:	45800115 	stw	r22,4(r8)
10005080:	d8c02015 	stw	r3,128(sp)
10005084:	d8801f15 	stw	r2,124(sp)
10005088:	010001c4 	movi	r4,7
1000508c:	20818e16 	blt	r4,r2,100056c8 <___vfprintf_internal_r+0x1700>
10005090:	42000204 	addi	r8,r8,8
10005094:	003e0f06 	br	100048d4 <__alt_data_end+0xf80048d4>
10005098:	d9403317 	ldw	r5,204(sp)
1000509c:	00800044 	movi	r2,1
100050a0:	18c00044 	addi	r3,r3,1
100050a4:	1141530e 	bge	r2,r5,100055f4 <___vfprintf_internal_r+0x162c>
100050a8:	dc401f17 	ldw	r17,124(sp)
100050ac:	00800044 	movi	r2,1
100050b0:	40800115 	stw	r2,4(r8)
100050b4:	8c400044 	addi	r17,r17,1
100050b8:	44000015 	stw	r16,0(r8)
100050bc:	d8c02015 	stw	r3,128(sp)
100050c0:	dc401f15 	stw	r17,124(sp)
100050c4:	008001c4 	movi	r2,7
100050c8:	14416b16 	blt	r2,r17,10005678 <___vfprintf_internal_r+0x16b0>
100050cc:	42000204 	addi	r8,r8,8
100050d0:	d8803717 	ldw	r2,220(sp)
100050d4:	d9003417 	ldw	r4,208(sp)
100050d8:	8c400044 	addi	r17,r17,1
100050dc:	10c7883a 	add	r3,r2,r3
100050e0:	40800115 	stw	r2,4(r8)
100050e4:	41000015 	stw	r4,0(r8)
100050e8:	d8c02015 	stw	r3,128(sp)
100050ec:	dc401f15 	stw	r17,124(sp)
100050f0:	008001c4 	movi	r2,7
100050f4:	14416916 	blt	r2,r17,1000569c <___vfprintf_internal_r+0x16d4>
100050f8:	45800204 	addi	r22,r8,8
100050fc:	d9003617 	ldw	r4,216(sp)
10005100:	d9403817 	ldw	r5,224(sp)
10005104:	000d883a 	mov	r6,zero
10005108:	000f883a 	mov	r7,zero
1000510c:	d8c03c15 	stw	r3,240(sp)
10005110:	0017e100 	call	10017e10 <__eqdf2>
10005114:	d8c03c17 	ldw	r3,240(sp)
10005118:	1000bc26 	beq	r2,zero,1000540c <___vfprintf_internal_r+0x1444>
1000511c:	d9403317 	ldw	r5,204(sp)
10005120:	84000044 	addi	r16,r16,1
10005124:	8c400044 	addi	r17,r17,1
10005128:	28bfffc4 	addi	r2,r5,-1
1000512c:	1887883a 	add	r3,r3,r2
10005130:	b0800115 	stw	r2,4(r22)
10005134:	b4000015 	stw	r16,0(r22)
10005138:	d8c02015 	stw	r3,128(sp)
1000513c:	dc401f15 	stw	r17,124(sp)
10005140:	008001c4 	movi	r2,7
10005144:	14414316 	blt	r2,r17,10005654 <___vfprintf_internal_r+0x168c>
10005148:	b5800204 	addi	r22,r22,8
1000514c:	d9003a17 	ldw	r4,232(sp)
10005150:	df0022c4 	addi	fp,sp,139
10005154:	8c400044 	addi	r17,r17,1
10005158:	20c7883a 	add	r3,r4,r3
1000515c:	b7000015 	stw	fp,0(r22)
10005160:	b1000115 	stw	r4,4(r22)
10005164:	d8c02015 	stw	r3,128(sp)
10005168:	dc401f15 	stw	r17,124(sp)
1000516c:	008001c4 	movi	r2,7
10005170:	14400e16 	blt	r2,r17,100051ac <___vfprintf_internal_r+0x11e4>
10005174:	b2000204 	addi	r8,r22,8
10005178:	003e1806 	br	100049dc <__alt_data_end+0xf80049dc>
1000517c:	010400b4 	movhi	r4,4098
10005180:	2131b384 	addi	r4,r4,-14642
10005184:	d9002c15 	stw	r4,176(sp)
10005188:	d9002c17 	ldw	r4,176(sp)
1000518c:	1c07883a 	add	r3,r3,r16
10005190:	44000115 	stw	r16,4(r8)
10005194:	41000015 	stw	r4,0(r8)
10005198:	10800044 	addi	r2,r2,1
1000519c:	d8c02015 	stw	r3,128(sp)
100051a0:	d8801f15 	stw	r2,124(sp)
100051a4:	010001c4 	movi	r4,7
100051a8:	20be0b0e 	bge	r4,r2,100049d8 <__alt_data_end+0xf80049d8>
100051ac:	d9002d17 	ldw	r4,180(sp)
100051b0:	d9801e04 	addi	r6,sp,120
100051b4:	b80b883a 	mov	r5,r23
100051b8:	0011b240 	call	10011b24 <__sprint_r>
100051bc:	103c861e 	bne	r2,zero,100043d8 <__alt_data_end+0xf80043d8>
100051c0:	d8c02017 	ldw	r3,128(sp)
100051c4:	da000404 	addi	r8,sp,16
100051c8:	003e0406 	br	100049dc <__alt_data_end+0xf80049dc>
100051cc:	d9002d17 	ldw	r4,180(sp)
100051d0:	d9801e04 	addi	r6,sp,120
100051d4:	b80b883a 	mov	r5,r23
100051d8:	0011b240 	call	10011b24 <__sprint_r>
100051dc:	103e3b26 	beq	r2,zero,10004acc <__alt_data_end+0xf8004acc>
100051e0:	003c7d06 	br	100043d8 <__alt_data_end+0xf80043d8>
100051e4:	d9002d17 	ldw	r4,180(sp)
100051e8:	d9801e04 	addi	r6,sp,120
100051ec:	b80b883a 	mov	r5,r23
100051f0:	0011b240 	call	10011b24 <__sprint_r>
100051f4:	103c781e 	bne	r2,zero,100043d8 <__alt_data_end+0xf80043d8>
100051f8:	d8c02017 	ldw	r3,128(sp)
100051fc:	da000404 	addi	r8,sp,16
10005200:	003de906 	br	100049a8 <__alt_data_end+0xf80049a8>
10005204:	d9002d17 	ldw	r4,180(sp)
10005208:	d9801e04 	addi	r6,sp,120
1000520c:	b80b883a 	mov	r5,r23
10005210:	0011b240 	call	10011b24 <__sprint_r>
10005214:	103c701e 	bne	r2,zero,100043d8 <__alt_data_end+0xf80043d8>
10005218:	d8c02017 	ldw	r3,128(sp)
1000521c:	da000404 	addi	r8,sp,16
10005220:	003d9b06 	br	10004890 <__alt_data_end+0xf8004890>
10005224:	d9002d17 	ldw	r4,180(sp)
10005228:	d9801e04 	addi	r6,sp,120
1000522c:	b80b883a 	mov	r5,r23
10005230:	0011b240 	call	10011b24 <__sprint_r>
10005234:	103c681e 	bne	r2,zero,100043d8 <__alt_data_end+0xf80043d8>
10005238:	d8c02017 	ldw	r3,128(sp)
1000523c:	da000404 	addi	r8,sp,16
10005240:	003da106 	br	100048c8 <__alt_data_end+0xf80048c8>
10005244:	d9402a17 	ldw	r5,168(sp)
10005248:	d8002785 	stb	zero,158(sp)
1000524c:	283f0616 	blt	r5,zero,10004e68 <__alt_data_end+0xf8004e68>
10005250:	00ffdfc4 	movi	r3,-129
10005254:	9d84b03a 	or	r2,r19,r22
10005258:	90e4703a 	and	r18,r18,r3
1000525c:	103c3b26 	beq	r2,zero,1000434c <__alt_data_end+0xf800434c>
10005260:	0039883a 	mov	fp,zero
10005264:	003e5806 	br	10004bc8 <__alt_data_end+0xf8004bc8>
10005268:	9080040c 	andi	r2,r18,16
1000526c:	1001b326 	beq	r2,zero,1000593c <___vfprintf_internal_r+0x1974>
10005270:	d8c02e17 	ldw	r3,184(sp)
10005274:	d9002a17 	ldw	r4,168(sp)
10005278:	d8002785 	stb	zero,158(sp)
1000527c:	18800104 	addi	r2,r3,4
10005280:	1cc00017 	ldw	r19,0(r3)
10005284:	002d883a 	mov	r22,zero
10005288:	2001b516 	blt	r4,zero,10005960 <___vfprintf_internal_r+0x1998>
1000528c:	00ffdfc4 	movi	r3,-129
10005290:	d8802e15 	stw	r2,184(sp)
10005294:	90e4703a 	and	r18,r18,r3
10005298:	983d0526 	beq	r19,zero,100046b0 <__alt_data_end+0xf80046b0>
1000529c:	0039883a 	mov	fp,zero
100052a0:	003d0806 	br	100046c4 <__alt_data_end+0xf80046c4>
100052a4:	dc402617 	ldw	r17,152(sp)
100052a8:	0441d30e 	bge	zero,r17,100059f8 <___vfprintf_internal_r+0x1a30>
100052ac:	dc403217 	ldw	r17,200(sp)
100052b0:	d8803317 	ldw	r2,204(sp)
100052b4:	1440010e 	bge	r2,r17,100052bc <___vfprintf_internal_r+0x12f4>
100052b8:	1023883a 	mov	r17,r2
100052bc:	04400a0e 	bge	zero,r17,100052e8 <___vfprintf_internal_r+0x1320>
100052c0:	d8801f17 	ldw	r2,124(sp)
100052c4:	1c47883a 	add	r3,r3,r17
100052c8:	44000015 	stw	r16,0(r8)
100052cc:	10800044 	addi	r2,r2,1
100052d0:	44400115 	stw	r17,4(r8)
100052d4:	d8c02015 	stw	r3,128(sp)
100052d8:	d8801f15 	stw	r2,124(sp)
100052dc:	010001c4 	movi	r4,7
100052e0:	20826516 	blt	r4,r2,10005c78 <___vfprintf_internal_r+0x1cb0>
100052e4:	42000204 	addi	r8,r8,8
100052e8:	88026116 	blt	r17,zero,10005c70 <___vfprintf_internal_r+0x1ca8>
100052ec:	d9003217 	ldw	r4,200(sp)
100052f0:	2463c83a 	sub	r17,r4,r17
100052f4:	04407b0e 	bge	zero,r17,100054e4 <___vfprintf_internal_r+0x151c>
100052f8:	05800404 	movi	r22,16
100052fc:	d8801f17 	ldw	r2,124(sp)
10005300:	b4419d0e 	bge	r22,r17,10005978 <___vfprintf_internal_r+0x19b0>
10005304:	010400b4 	movhi	r4,4098
10005308:	2131b384 	addi	r4,r4,-14642
1000530c:	d9002c15 	stw	r4,176(sp)
10005310:	070001c4 	movi	fp,7
10005314:	dcc02d17 	ldw	r19,180(sp)
10005318:	00000306 	br	10005328 <___vfprintf_internal_r+0x1360>
1000531c:	42000204 	addi	r8,r8,8
10005320:	8c7ffc04 	addi	r17,r17,-16
10005324:	b441970e 	bge	r22,r17,10005984 <___vfprintf_internal_r+0x19bc>
10005328:	18c00404 	addi	r3,r3,16
1000532c:	10800044 	addi	r2,r2,1
10005330:	45000015 	stw	r20,0(r8)
10005334:	45800115 	stw	r22,4(r8)
10005338:	d8c02015 	stw	r3,128(sp)
1000533c:	d8801f15 	stw	r2,124(sp)
10005340:	e0bff60e 	bge	fp,r2,1000531c <__alt_data_end+0xf800531c>
10005344:	d9801e04 	addi	r6,sp,120
10005348:	b80b883a 	mov	r5,r23
1000534c:	9809883a 	mov	r4,r19
10005350:	0011b240 	call	10011b24 <__sprint_r>
10005354:	103c201e 	bne	r2,zero,100043d8 <__alt_data_end+0xf80043d8>
10005358:	d8c02017 	ldw	r3,128(sp)
1000535c:	d8801f17 	ldw	r2,124(sp)
10005360:	da000404 	addi	r8,sp,16
10005364:	003fee06 	br	10005320 <__alt_data_end+0xf8005320>
10005368:	d9002d17 	ldw	r4,180(sp)
1000536c:	d9801e04 	addi	r6,sp,120
10005370:	b80b883a 	mov	r5,r23
10005374:	0011b240 	call	10011b24 <__sprint_r>
10005378:	103c171e 	bne	r2,zero,100043d8 <__alt_data_end+0xf80043d8>
1000537c:	d8c02017 	ldw	r3,128(sp)
10005380:	df002787 	ldb	fp,158(sp)
10005384:	da000404 	addi	r8,sp,16
10005388:	003d3406 	br	1000485c <__alt_data_end+0xf800485c>
1000538c:	9080040c 	andi	r2,r18,16
10005390:	10016126 	beq	r2,zero,10005918 <___vfprintf_internal_r+0x1950>
10005394:	d9402e17 	ldw	r5,184(sp)
10005398:	2cc00017 	ldw	r19,0(r5)
1000539c:	29400104 	addi	r5,r5,4
100053a0:	d9402e15 	stw	r5,184(sp)
100053a4:	982dd7fa 	srai	r22,r19,31
100053a8:	b005883a 	mov	r2,r22
100053ac:	003c5a06 	br	10004518 <__alt_data_end+0xf8004518>
100053b0:	9080040c 	andi	r2,r18,16
100053b4:	10003526 	beq	r2,zero,1000548c <___vfprintf_internal_r+0x14c4>
100053b8:	d8c02e17 	ldw	r3,184(sp)
100053bc:	d9002a17 	ldw	r4,168(sp)
100053c0:	d8002785 	stb	zero,158(sp)
100053c4:	18800104 	addi	r2,r3,4
100053c8:	1cc00017 	ldw	r19,0(r3)
100053cc:	002d883a 	mov	r22,zero
100053d0:	20003716 	blt	r4,zero,100054b0 <___vfprintf_internal_r+0x14e8>
100053d4:	00ffdfc4 	movi	r3,-129
100053d8:	d8802e15 	stw	r2,184(sp)
100053dc:	90e4703a 	and	r18,r18,r3
100053e0:	0039883a 	mov	fp,zero
100053e4:	983dd426 	beq	r19,zero,10004b38 <__alt_data_end+0xf8004b38>
100053e8:	00800244 	movi	r2,9
100053ec:	14fc5336 	bltu	r2,r19,1000453c <__alt_data_end+0xf800453c>
100053f0:	d8c02817 	ldw	r3,160(sp)
100053f4:	dc001dc4 	addi	r16,sp,119
100053f8:	9cc00c04 	addi	r19,r19,48
100053fc:	1c07c83a 	sub	r3,r3,r16
10005400:	dcc01dc5 	stb	r19,119(sp)
10005404:	d8c02b15 	stw	r3,172(sp)
10005408:	003cc606 	br	10004724 <__alt_data_end+0xf8004724>
1000540c:	d8803317 	ldw	r2,204(sp)
10005410:	143fffc4 	addi	r16,r2,-1
10005414:	043f4d0e 	bge	zero,r16,1000514c <__alt_data_end+0xf800514c>
10005418:	07000404 	movi	fp,16
1000541c:	e400810e 	bge	fp,r16,10005624 <___vfprintf_internal_r+0x165c>
10005420:	014400b4 	movhi	r5,4098
10005424:	2971b384 	addi	r5,r5,-14642
10005428:	d9402c15 	stw	r5,176(sp)
1000542c:	01c001c4 	movi	r7,7
10005430:	dcc02d17 	ldw	r19,180(sp)
10005434:	00000306 	br	10005444 <___vfprintf_internal_r+0x147c>
10005438:	b5800204 	addi	r22,r22,8
1000543c:	843ffc04 	addi	r16,r16,-16
10005440:	e4007b0e 	bge	fp,r16,10005630 <___vfprintf_internal_r+0x1668>
10005444:	18c00404 	addi	r3,r3,16
10005448:	8c400044 	addi	r17,r17,1
1000544c:	b5000015 	stw	r20,0(r22)
10005450:	b7000115 	stw	fp,4(r22)
10005454:	d8c02015 	stw	r3,128(sp)
10005458:	dc401f15 	stw	r17,124(sp)
1000545c:	3c7ff60e 	bge	r7,r17,10005438 <__alt_data_end+0xf8005438>
10005460:	d9801e04 	addi	r6,sp,120
10005464:	b80b883a 	mov	r5,r23
10005468:	9809883a 	mov	r4,r19
1000546c:	d9c03c15 	stw	r7,240(sp)
10005470:	0011b240 	call	10011b24 <__sprint_r>
10005474:	d9c03c17 	ldw	r7,240(sp)
10005478:	103bd71e 	bne	r2,zero,100043d8 <__alt_data_end+0xf80043d8>
1000547c:	d8c02017 	ldw	r3,128(sp)
10005480:	dc401f17 	ldw	r17,124(sp)
10005484:	dd800404 	addi	r22,sp,16
10005488:	003fec06 	br	1000543c <__alt_data_end+0xf800543c>
1000548c:	9080100c 	andi	r2,r18,64
10005490:	d8002785 	stb	zero,158(sp)
10005494:	10010e26 	beq	r2,zero,100058d0 <___vfprintf_internal_r+0x1908>
10005498:	d9402e17 	ldw	r5,184(sp)
1000549c:	d8c02a17 	ldw	r3,168(sp)
100054a0:	002d883a 	mov	r22,zero
100054a4:	28800104 	addi	r2,r5,4
100054a8:	2cc0000b 	ldhu	r19,0(r5)
100054ac:	183fc90e 	bge	r3,zero,100053d4 <__alt_data_end+0xf80053d4>
100054b0:	d8802e15 	stw	r2,184(sp)
100054b4:	0039883a 	mov	fp,zero
100054b8:	9d84b03a 	or	r2,r19,r22
100054bc:	103c1e1e 	bne	r2,zero,10004538 <__alt_data_end+0xf8004538>
100054c0:	00800044 	movi	r2,1
100054c4:	003e6c06 	br	10004e78 <__alt_data_end+0xf8004e78>
100054c8:	d9002d17 	ldw	r4,180(sp)
100054cc:	d9801e04 	addi	r6,sp,120
100054d0:	b80b883a 	mov	r5,r23
100054d4:	0011b240 	call	10011b24 <__sprint_r>
100054d8:	103bbf1e 	bne	r2,zero,100043d8 <__alt_data_end+0xf80043d8>
100054dc:	d8c02017 	ldw	r3,128(sp)
100054e0:	da000404 	addi	r8,sp,16
100054e4:	d9003217 	ldw	r4,200(sp)
100054e8:	d8802617 	ldw	r2,152(sp)
100054ec:	d9403317 	ldw	r5,204(sp)
100054f0:	8123883a 	add	r17,r16,r4
100054f4:	11400216 	blt	r2,r5,10005500 <___vfprintf_internal_r+0x1538>
100054f8:	9100004c 	andi	r4,r18,1
100054fc:	20000d26 	beq	r4,zero,10005534 <___vfprintf_internal_r+0x156c>
10005500:	d9003717 	ldw	r4,220(sp)
10005504:	d9403417 	ldw	r5,208(sp)
10005508:	1907883a 	add	r3,r3,r4
1000550c:	d9001f17 	ldw	r4,124(sp)
10005510:	41400015 	stw	r5,0(r8)
10005514:	d9403717 	ldw	r5,220(sp)
10005518:	21000044 	addi	r4,r4,1
1000551c:	d8c02015 	stw	r3,128(sp)
10005520:	41400115 	stw	r5,4(r8)
10005524:	d9001f15 	stw	r4,124(sp)
10005528:	014001c4 	movi	r5,7
1000552c:	2901e816 	blt	r5,r4,10005cd0 <___vfprintf_internal_r+0x1d08>
10005530:	42000204 	addi	r8,r8,8
10005534:	d9003317 	ldw	r4,204(sp)
10005538:	8121883a 	add	r16,r16,r4
1000553c:	2085c83a 	sub	r2,r4,r2
10005540:	8461c83a 	sub	r16,r16,r17
10005544:	1400010e 	bge	r2,r16,1000554c <___vfprintf_internal_r+0x1584>
10005548:	1021883a 	mov	r16,r2
1000554c:	04000a0e 	bge	zero,r16,10005578 <___vfprintf_internal_r+0x15b0>
10005550:	d9001f17 	ldw	r4,124(sp)
10005554:	1c07883a 	add	r3,r3,r16
10005558:	44400015 	stw	r17,0(r8)
1000555c:	21000044 	addi	r4,r4,1
10005560:	44000115 	stw	r16,4(r8)
10005564:	d8c02015 	stw	r3,128(sp)
10005568:	d9001f15 	stw	r4,124(sp)
1000556c:	014001c4 	movi	r5,7
10005570:	2901fb16 	blt	r5,r4,10005d60 <___vfprintf_internal_r+0x1d98>
10005574:	42000204 	addi	r8,r8,8
10005578:	8001f716 	blt	r16,zero,10005d58 <___vfprintf_internal_r+0x1d90>
1000557c:	1421c83a 	sub	r16,r2,r16
10005580:	043d160e 	bge	zero,r16,100049dc <__alt_data_end+0xf80049dc>
10005584:	04400404 	movi	r17,16
10005588:	d8801f17 	ldw	r2,124(sp)
1000558c:	8c3efb0e 	bge	r17,r16,1000517c <__alt_data_end+0xf800517c>
10005590:	014400b4 	movhi	r5,4098
10005594:	2971b384 	addi	r5,r5,-14642
10005598:	d9402c15 	stw	r5,176(sp)
1000559c:	058001c4 	movi	r22,7
100055a0:	dcc02d17 	ldw	r19,180(sp)
100055a4:	00000306 	br	100055b4 <___vfprintf_internal_r+0x15ec>
100055a8:	42000204 	addi	r8,r8,8
100055ac:	843ffc04 	addi	r16,r16,-16
100055b0:	8c3ef50e 	bge	r17,r16,10005188 <__alt_data_end+0xf8005188>
100055b4:	18c00404 	addi	r3,r3,16
100055b8:	10800044 	addi	r2,r2,1
100055bc:	45000015 	stw	r20,0(r8)
100055c0:	44400115 	stw	r17,4(r8)
100055c4:	d8c02015 	stw	r3,128(sp)
100055c8:	d8801f15 	stw	r2,124(sp)
100055cc:	b0bff60e 	bge	r22,r2,100055a8 <__alt_data_end+0xf80055a8>
100055d0:	d9801e04 	addi	r6,sp,120
100055d4:	b80b883a 	mov	r5,r23
100055d8:	9809883a 	mov	r4,r19
100055dc:	0011b240 	call	10011b24 <__sprint_r>
100055e0:	103b7d1e 	bne	r2,zero,100043d8 <__alt_data_end+0xf80043d8>
100055e4:	d8c02017 	ldw	r3,128(sp)
100055e8:	d8801f17 	ldw	r2,124(sp)
100055ec:	da000404 	addi	r8,sp,16
100055f0:	003fee06 	br	100055ac <__alt_data_end+0xf80055ac>
100055f4:	9088703a 	and	r4,r18,r2
100055f8:	203eab1e 	bne	r4,zero,100050a8 <__alt_data_end+0xf80050a8>
100055fc:	dc401f17 	ldw	r17,124(sp)
10005600:	40800115 	stw	r2,4(r8)
10005604:	44000015 	stw	r16,0(r8)
10005608:	8c400044 	addi	r17,r17,1
1000560c:	d8c02015 	stw	r3,128(sp)
10005610:	dc401f15 	stw	r17,124(sp)
10005614:	008001c4 	movi	r2,7
10005618:	14400e16 	blt	r2,r17,10005654 <___vfprintf_internal_r+0x168c>
1000561c:	45800204 	addi	r22,r8,8
10005620:	003eca06 	br	1000514c <__alt_data_end+0xf800514c>
10005624:	010400b4 	movhi	r4,4098
10005628:	2131b384 	addi	r4,r4,-14642
1000562c:	d9002c15 	stw	r4,176(sp)
10005630:	d8802c17 	ldw	r2,176(sp)
10005634:	1c07883a 	add	r3,r3,r16
10005638:	8c400044 	addi	r17,r17,1
1000563c:	b0800015 	stw	r2,0(r22)
10005640:	b4000115 	stw	r16,4(r22)
10005644:	d8c02015 	stw	r3,128(sp)
10005648:	dc401f15 	stw	r17,124(sp)
1000564c:	008001c4 	movi	r2,7
10005650:	147ebd0e 	bge	r2,r17,10005148 <__alt_data_end+0xf8005148>
10005654:	d9002d17 	ldw	r4,180(sp)
10005658:	d9801e04 	addi	r6,sp,120
1000565c:	b80b883a 	mov	r5,r23
10005660:	0011b240 	call	10011b24 <__sprint_r>
10005664:	103b5c1e 	bne	r2,zero,100043d8 <__alt_data_end+0xf80043d8>
10005668:	d8c02017 	ldw	r3,128(sp)
1000566c:	dc401f17 	ldw	r17,124(sp)
10005670:	dd800404 	addi	r22,sp,16
10005674:	003eb506 	br	1000514c <__alt_data_end+0xf800514c>
10005678:	d9002d17 	ldw	r4,180(sp)
1000567c:	d9801e04 	addi	r6,sp,120
10005680:	b80b883a 	mov	r5,r23
10005684:	0011b240 	call	10011b24 <__sprint_r>
10005688:	103b531e 	bne	r2,zero,100043d8 <__alt_data_end+0xf80043d8>
1000568c:	d8c02017 	ldw	r3,128(sp)
10005690:	dc401f17 	ldw	r17,124(sp)
10005694:	da000404 	addi	r8,sp,16
10005698:	003e8d06 	br	100050d0 <__alt_data_end+0xf80050d0>
1000569c:	d9002d17 	ldw	r4,180(sp)
100056a0:	d9801e04 	addi	r6,sp,120
100056a4:	b80b883a 	mov	r5,r23
100056a8:	0011b240 	call	10011b24 <__sprint_r>
100056ac:	103b4a1e 	bne	r2,zero,100043d8 <__alt_data_end+0xf80043d8>
100056b0:	d8c02017 	ldw	r3,128(sp)
100056b4:	dc401f17 	ldw	r17,124(sp)
100056b8:	dd800404 	addi	r22,sp,16
100056bc:	003e8f06 	br	100050fc <__alt_data_end+0xf80050fc>
100056c0:	0027883a 	mov	r19,zero
100056c4:	003f4a06 	br	100053f0 <__alt_data_end+0xf80053f0>
100056c8:	d9002d17 	ldw	r4,180(sp)
100056cc:	d9801e04 	addi	r6,sp,120
100056d0:	b80b883a 	mov	r5,r23
100056d4:	0011b240 	call	10011b24 <__sprint_r>
100056d8:	103b3f1e 	bne	r2,zero,100043d8 <__alt_data_end+0xf80043d8>
100056dc:	d8c02017 	ldw	r3,128(sp)
100056e0:	da000404 	addi	r8,sp,16
100056e4:	003c7b06 	br	100048d4 <__alt_data_end+0xf80048d4>
100056e8:	d9402a17 	ldw	r5,168(sp)
100056ec:	04e7c83a 	sub	r19,zero,r19
100056f0:	07000b44 	movi	fp,45
100056f4:	9804c03a 	cmpne	r2,r19,zero
100056f8:	05adc83a 	sub	r22,zero,r22
100056fc:	df002785 	stb	fp,158(sp)
10005700:	b0adc83a 	sub	r22,r22,r2
10005704:	28017b16 	blt	r5,zero,10005cf4 <___vfprintf_internal_r+0x1d2c>
10005708:	00bfdfc4 	movi	r2,-129
1000570c:	90a4703a 	and	r18,r18,r2
10005710:	003b8906 	br	10004538 <__alt_data_end+0xf8004538>
10005714:	d9003617 	ldw	r4,216(sp)
10005718:	d9403817 	ldw	r5,224(sp)
1000571c:	da003d15 	stw	r8,244(sp)
10005720:	000ce380 	call	1000ce38 <__fpclassifyd>
10005724:	da003d17 	ldw	r8,244(sp)
10005728:	1000f026 	beq	r2,zero,10005aec <___vfprintf_internal_r+0x1b24>
1000572c:	d9002a17 	ldw	r4,168(sp)
10005730:	05bff7c4 	movi	r22,-33
10005734:	00bfffc4 	movi	r2,-1
10005738:	8dac703a 	and	r22,r17,r22
1000573c:	20820026 	beq	r4,r2,10005f40 <___vfprintf_internal_r+0x1f78>
10005740:	008011c4 	movi	r2,71
10005744:	b081f726 	beq	r22,r2,10005f24 <___vfprintf_internal_r+0x1f5c>
10005748:	d9003817 	ldw	r4,224(sp)
1000574c:	90c04014 	ori	r3,r18,256
10005750:	d8c02c15 	stw	r3,176(sp)
10005754:	20021516 	blt	r4,zero,10005fac <___vfprintf_internal_r+0x1fe4>
10005758:	dcc03817 	ldw	r19,224(sp)
1000575c:	d8002905 	stb	zero,164(sp)
10005760:	00801984 	movi	r2,102
10005764:	8881f926 	beq	r17,r2,10005f4c <___vfprintf_internal_r+0x1f84>
10005768:	00801184 	movi	r2,70
1000576c:	88821c26 	beq	r17,r2,10005fe0 <___vfprintf_internal_r+0x2018>
10005770:	00801144 	movi	r2,69
10005774:	b081ef26 	beq	r22,r2,10005f34 <___vfprintf_internal_r+0x1f6c>
10005778:	d8c02a17 	ldw	r3,168(sp)
1000577c:	d8802104 	addi	r2,sp,132
10005780:	d8800315 	stw	r2,12(sp)
10005784:	d9403617 	ldw	r5,216(sp)
10005788:	d8802504 	addi	r2,sp,148
1000578c:	d9002d17 	ldw	r4,180(sp)
10005790:	d8800215 	stw	r2,8(sp)
10005794:	d8802604 	addi	r2,sp,152
10005798:	d8c00015 	stw	r3,0(sp)
1000579c:	d8800115 	stw	r2,4(sp)
100057a0:	01c00084 	movi	r7,2
100057a4:	980d883a 	mov	r6,r19
100057a8:	d8c03c15 	stw	r3,240(sp)
100057ac:	da003d15 	stw	r8,244(sp)
100057b0:	00081540 	call	10008154 <_dtoa_r>
100057b4:	1021883a 	mov	r16,r2
100057b8:	008019c4 	movi	r2,103
100057bc:	d8c03c17 	ldw	r3,240(sp)
100057c0:	da003d17 	ldw	r8,244(sp)
100057c4:	88817126 	beq	r17,r2,10005d8c <___vfprintf_internal_r+0x1dc4>
100057c8:	008011c4 	movi	r2,71
100057cc:	88829126 	beq	r17,r2,10006214 <___vfprintf_internal_r+0x224c>
100057d0:	80f9883a 	add	fp,r16,r3
100057d4:	d9003617 	ldw	r4,216(sp)
100057d8:	000d883a 	mov	r6,zero
100057dc:	000f883a 	mov	r7,zero
100057e0:	980b883a 	mov	r5,r19
100057e4:	da003d15 	stw	r8,244(sp)
100057e8:	0017e100 	call	10017e10 <__eqdf2>
100057ec:	da003d17 	ldw	r8,244(sp)
100057f0:	10018d26 	beq	r2,zero,10005e28 <___vfprintf_internal_r+0x1e60>
100057f4:	d8802117 	ldw	r2,132(sp)
100057f8:	1700062e 	bgeu	r2,fp,10005814 <___vfprintf_internal_r+0x184c>
100057fc:	01000c04 	movi	r4,48
10005800:	10c00044 	addi	r3,r2,1
10005804:	d8c02115 	stw	r3,132(sp)
10005808:	11000005 	stb	r4,0(r2)
1000580c:	d8802117 	ldw	r2,132(sp)
10005810:	173ffb36 	bltu	r2,fp,10005800 <__alt_data_end+0xf8005800>
10005814:	1405c83a 	sub	r2,r2,r16
10005818:	d8803315 	stw	r2,204(sp)
1000581c:	008011c4 	movi	r2,71
10005820:	b0817626 	beq	r22,r2,10005dfc <___vfprintf_internal_r+0x1e34>
10005824:	00801944 	movi	r2,101
10005828:	1442800e 	bge	r2,r17,1000622c <___vfprintf_internal_r+0x2264>
1000582c:	d8c02617 	ldw	r3,152(sp)
10005830:	00801984 	movi	r2,102
10005834:	d8c03215 	stw	r3,200(sp)
10005838:	8881fe26 	beq	r17,r2,10006034 <___vfprintf_internal_r+0x206c>
1000583c:	d8c03217 	ldw	r3,200(sp)
10005840:	d9003317 	ldw	r4,204(sp)
10005844:	1901dd16 	blt	r3,r4,10005fbc <___vfprintf_internal_r+0x1ff4>
10005848:	9480004c 	andi	r18,r18,1
1000584c:	90022b1e 	bne	r18,zero,100060fc <___vfprintf_internal_r+0x2134>
10005850:	1805883a 	mov	r2,r3
10005854:	18028316 	blt	r3,zero,10006264 <___vfprintf_internal_r+0x229c>
10005858:	d8c03217 	ldw	r3,200(sp)
1000585c:	044019c4 	movi	r17,103
10005860:	d8c02b15 	stw	r3,172(sp)
10005864:	df002907 	ldb	fp,164(sp)
10005868:	e001531e 	bne	fp,zero,10005db8 <___vfprintf_internal_r+0x1df0>
1000586c:	df002783 	ldbu	fp,158(sp)
10005870:	d8802915 	stw	r2,164(sp)
10005874:	dc802c17 	ldw	r18,176(sp)
10005878:	d8002a15 	stw	zero,168(sp)
1000587c:	003baf06 	br	1000473c <__alt_data_end+0xf800473c>
10005880:	d8c02e17 	ldw	r3,184(sp)
10005884:	d9002e17 	ldw	r4,184(sp)
10005888:	d9402e17 	ldw	r5,184(sp)
1000588c:	18c00017 	ldw	r3,0(r3)
10005890:	21000117 	ldw	r4,4(r4)
10005894:	29400204 	addi	r5,r5,8
10005898:	d8c03615 	stw	r3,216(sp)
1000589c:	d9003815 	stw	r4,224(sp)
100058a0:	d9402e15 	stw	r5,184(sp)
100058a4:	003b5006 	br	100045e8 <__alt_data_end+0xf80045e8>
100058a8:	ac400007 	ldb	r17,0(r21)
100058ac:	003a2806 	br	10004150 <__alt_data_end+0xf8004150>
100058b0:	9080100c 	andi	r2,r18,64
100058b4:	1000a826 	beq	r2,zero,10005b58 <___vfprintf_internal_r+0x1b90>
100058b8:	d8c02e17 	ldw	r3,184(sp)
100058bc:	002d883a 	mov	r22,zero
100058c0:	1cc0000b 	ldhu	r19,0(r3)
100058c4:	18c00104 	addi	r3,r3,4
100058c8:	d8c02e15 	stw	r3,184(sp)
100058cc:	003caf06 	br	10004b8c <__alt_data_end+0xf8004b8c>
100058d0:	d9002e17 	ldw	r4,184(sp)
100058d4:	d9402a17 	ldw	r5,168(sp)
100058d8:	002d883a 	mov	r22,zero
100058dc:	20800104 	addi	r2,r4,4
100058e0:	24c00017 	ldw	r19,0(r4)
100058e4:	283ebb0e 	bge	r5,zero,100053d4 <__alt_data_end+0xf80053d4>
100058e8:	003ef106 	br	100054b0 <__alt_data_end+0xf80054b0>
100058ec:	9080040c 	andi	r2,r18,16
100058f0:	1000921e 	bne	r2,zero,10005b3c <___vfprintf_internal_r+0x1b74>
100058f4:	9480100c 	andi	r18,r18,64
100058f8:	90013926 	beq	r18,zero,10005de0 <___vfprintf_internal_r+0x1e18>
100058fc:	d9402e17 	ldw	r5,184(sp)
10005900:	d8c02f17 	ldw	r3,188(sp)
10005904:	28800017 	ldw	r2,0(r5)
10005908:	29400104 	addi	r5,r5,4
1000590c:	d9402e15 	stw	r5,184(sp)
10005910:	10c0000d 	sth	r3,0(r2)
10005914:	0039e406 	br	100040a8 <__alt_data_end+0xf80040a8>
10005918:	9080100c 	andi	r2,r18,64
1000591c:	10008026 	beq	r2,zero,10005b20 <___vfprintf_internal_r+0x1b58>
10005920:	d8802e17 	ldw	r2,184(sp)
10005924:	14c0000f 	ldh	r19,0(r2)
10005928:	10800104 	addi	r2,r2,4
1000592c:	d8802e15 	stw	r2,184(sp)
10005930:	982dd7fa 	srai	r22,r19,31
10005934:	b005883a 	mov	r2,r22
10005938:	003af706 	br	10004518 <__alt_data_end+0xf8004518>
1000593c:	9080100c 	andi	r2,r18,64
10005940:	d8002785 	stb	zero,158(sp)
10005944:	10008a1e 	bne	r2,zero,10005b70 <___vfprintf_internal_r+0x1ba8>
10005948:	d9002e17 	ldw	r4,184(sp)
1000594c:	d9402a17 	ldw	r5,168(sp)
10005950:	002d883a 	mov	r22,zero
10005954:	20800104 	addi	r2,r4,4
10005958:	24c00017 	ldw	r19,0(r4)
1000595c:	283e4b0e 	bge	r5,zero,1000528c <__alt_data_end+0xf800528c>
10005960:	9d86b03a 	or	r3,r19,r22
10005964:	d8802e15 	stw	r2,184(sp)
10005968:	183e4c1e 	bne	r3,zero,1000529c <__alt_data_end+0xf800529c>
1000596c:	0039883a 	mov	fp,zero
10005970:	0005883a 	mov	r2,zero
10005974:	003d4006 	br	10004e78 <__alt_data_end+0xf8004e78>
10005978:	014400b4 	movhi	r5,4098
1000597c:	2971b384 	addi	r5,r5,-14642
10005980:	d9402c15 	stw	r5,176(sp)
10005984:	d9402c17 	ldw	r5,176(sp)
10005988:	1c47883a 	add	r3,r3,r17
1000598c:	10800044 	addi	r2,r2,1
10005990:	41400015 	stw	r5,0(r8)
10005994:	44400115 	stw	r17,4(r8)
10005998:	d8c02015 	stw	r3,128(sp)
1000599c:	d8801f15 	stw	r2,124(sp)
100059a0:	010001c4 	movi	r4,7
100059a4:	20bec816 	blt	r4,r2,100054c8 <__alt_data_end+0xf80054c8>
100059a8:	42000204 	addi	r8,r8,8
100059ac:	003ecd06 	br	100054e4 <__alt_data_end+0xf80054e4>
100059b0:	d9002a17 	ldw	r4,168(sp)
100059b4:	d8002785 	stb	zero,158(sp)
100059b8:	203d2d16 	blt	r4,zero,10004e70 <__alt_data_end+0xf8004e70>
100059bc:	00bfdfc4 	movi	r2,-129
100059c0:	90a4703a 	and	r18,r18,r2
100059c4:	003a6106 	br	1000434c <__alt_data_end+0xf800434c>
100059c8:	010400b4 	movhi	r4,4098
100059cc:	2131b384 	addi	r4,r4,-14642
100059d0:	d9002c15 	stw	r4,176(sp)
100059d4:	003bea06 	br	10004980 <__alt_data_end+0xf8004980>
100059d8:	d9002d17 	ldw	r4,180(sp)
100059dc:	d9801e04 	addi	r6,sp,120
100059e0:	b80b883a 	mov	r5,r23
100059e4:	0011b240 	call	10011b24 <__sprint_r>
100059e8:	103a7b1e 	bne	r2,zero,100043d8 <__alt_data_end+0xf80043d8>
100059ec:	d8c02017 	ldw	r3,128(sp)
100059f0:	da000404 	addi	r8,sp,16
100059f4:	003d4106 	br	10004efc <__alt_data_end+0xf8004efc>
100059f8:	d8801f17 	ldw	r2,124(sp)
100059fc:	014400b4 	movhi	r5,4098
10005a00:	01000044 	movi	r4,1
10005a04:	18c00044 	addi	r3,r3,1
10005a08:	10800044 	addi	r2,r2,1
10005a0c:	2971b304 	addi	r5,r5,-14644
10005a10:	41000115 	stw	r4,4(r8)
10005a14:	41400015 	stw	r5,0(r8)
10005a18:	d8c02015 	stw	r3,128(sp)
10005a1c:	d8801f15 	stw	r2,124(sp)
10005a20:	010001c4 	movi	r4,7
10005a24:	20805c16 	blt	r4,r2,10005b98 <___vfprintf_internal_r+0x1bd0>
10005a28:	42000204 	addi	r8,r8,8
10005a2c:	8800041e 	bne	r17,zero,10005a40 <___vfprintf_internal_r+0x1a78>
10005a30:	d8803317 	ldw	r2,204(sp)
10005a34:	1000021e 	bne	r2,zero,10005a40 <___vfprintf_internal_r+0x1a78>
10005a38:	9080004c 	andi	r2,r18,1
10005a3c:	103be726 	beq	r2,zero,100049dc <__alt_data_end+0xf80049dc>
10005a40:	d9003717 	ldw	r4,220(sp)
10005a44:	d8801f17 	ldw	r2,124(sp)
10005a48:	d9403417 	ldw	r5,208(sp)
10005a4c:	20c7883a 	add	r3,r4,r3
10005a50:	10800044 	addi	r2,r2,1
10005a54:	41000115 	stw	r4,4(r8)
10005a58:	41400015 	stw	r5,0(r8)
10005a5c:	d8c02015 	stw	r3,128(sp)
10005a60:	d8801f15 	stw	r2,124(sp)
10005a64:	010001c4 	movi	r4,7
10005a68:	20812116 	blt	r4,r2,10005ef0 <___vfprintf_internal_r+0x1f28>
10005a6c:	42000204 	addi	r8,r8,8
10005a70:	0463c83a 	sub	r17,zero,r17
10005a74:	0440730e 	bge	zero,r17,10005c44 <___vfprintf_internal_r+0x1c7c>
10005a78:	05800404 	movi	r22,16
10005a7c:	b440860e 	bge	r22,r17,10005c98 <___vfprintf_internal_r+0x1cd0>
10005a80:	014400b4 	movhi	r5,4098
10005a84:	2971b384 	addi	r5,r5,-14642
10005a88:	d9402c15 	stw	r5,176(sp)
10005a8c:	070001c4 	movi	fp,7
10005a90:	dcc02d17 	ldw	r19,180(sp)
10005a94:	00000306 	br	10005aa4 <___vfprintf_internal_r+0x1adc>
10005a98:	42000204 	addi	r8,r8,8
10005a9c:	8c7ffc04 	addi	r17,r17,-16
10005aa0:	b440800e 	bge	r22,r17,10005ca4 <___vfprintf_internal_r+0x1cdc>
10005aa4:	18c00404 	addi	r3,r3,16
10005aa8:	10800044 	addi	r2,r2,1
10005aac:	45000015 	stw	r20,0(r8)
10005ab0:	45800115 	stw	r22,4(r8)
10005ab4:	d8c02015 	stw	r3,128(sp)
10005ab8:	d8801f15 	stw	r2,124(sp)
10005abc:	e0bff60e 	bge	fp,r2,10005a98 <__alt_data_end+0xf8005a98>
10005ac0:	d9801e04 	addi	r6,sp,120
10005ac4:	b80b883a 	mov	r5,r23
10005ac8:	9809883a 	mov	r4,r19
10005acc:	0011b240 	call	10011b24 <__sprint_r>
10005ad0:	103a411e 	bne	r2,zero,100043d8 <__alt_data_end+0xf80043d8>
10005ad4:	d8c02017 	ldw	r3,128(sp)
10005ad8:	d8801f17 	ldw	r2,124(sp)
10005adc:	da000404 	addi	r8,sp,16
10005ae0:	003fee06 	br	10005a9c <__alt_data_end+0xf8005a9c>
10005ae4:	00bfffc4 	movi	r2,-1
10005ae8:	003a3f06 	br	100043e8 <__alt_data_end+0xf80043e8>
10005aec:	008011c4 	movi	r2,71
10005af0:	1440b816 	blt	r2,r17,10005dd4 <___vfprintf_internal_r+0x1e0c>
10005af4:	040400b4 	movhi	r16,4098
10005af8:	8431a504 	addi	r16,r16,-14700
10005afc:	00c000c4 	movi	r3,3
10005b00:	00bfdfc4 	movi	r2,-129
10005b04:	d8c02915 	stw	r3,164(sp)
10005b08:	90a4703a 	and	r18,r18,r2
10005b0c:	df002783 	ldbu	fp,158(sp)
10005b10:	d8c02b15 	stw	r3,172(sp)
10005b14:	d8002a15 	stw	zero,168(sp)
10005b18:	d8003215 	stw	zero,200(sp)
10005b1c:	003b0706 	br	1000473c <__alt_data_end+0xf800473c>
10005b20:	d8c02e17 	ldw	r3,184(sp)
10005b24:	1cc00017 	ldw	r19,0(r3)
10005b28:	18c00104 	addi	r3,r3,4
10005b2c:	d8c02e15 	stw	r3,184(sp)
10005b30:	982dd7fa 	srai	r22,r19,31
10005b34:	b005883a 	mov	r2,r22
10005b38:	003a7706 	br	10004518 <__alt_data_end+0xf8004518>
10005b3c:	d8c02e17 	ldw	r3,184(sp)
10005b40:	d9002f17 	ldw	r4,188(sp)
10005b44:	18800017 	ldw	r2,0(r3)
10005b48:	18c00104 	addi	r3,r3,4
10005b4c:	d8c02e15 	stw	r3,184(sp)
10005b50:	11000015 	stw	r4,0(r2)
10005b54:	00395406 	br	100040a8 <__alt_data_end+0xf80040a8>
10005b58:	d9002e17 	ldw	r4,184(sp)
10005b5c:	002d883a 	mov	r22,zero
10005b60:	24c00017 	ldw	r19,0(r4)
10005b64:	21000104 	addi	r4,r4,4
10005b68:	d9002e15 	stw	r4,184(sp)
10005b6c:	003c0706 	br	10004b8c <__alt_data_end+0xf8004b8c>
10005b70:	d9402e17 	ldw	r5,184(sp)
10005b74:	d8c02a17 	ldw	r3,168(sp)
10005b78:	002d883a 	mov	r22,zero
10005b7c:	28800104 	addi	r2,r5,4
10005b80:	2cc0000b 	ldhu	r19,0(r5)
10005b84:	183dc10e 	bge	r3,zero,1000528c <__alt_data_end+0xf800528c>
10005b88:	003f7506 	br	10005960 <__alt_data_end+0xf8005960>
10005b8c:	040400b4 	movhi	r16,4098
10005b90:	8431a304 	addi	r16,r16,-14708
10005b94:	003aa706 	br	10004634 <__alt_data_end+0xf8004634>
10005b98:	d9002d17 	ldw	r4,180(sp)
10005b9c:	d9801e04 	addi	r6,sp,120
10005ba0:	b80b883a 	mov	r5,r23
10005ba4:	0011b240 	call	10011b24 <__sprint_r>
10005ba8:	103a0b1e 	bne	r2,zero,100043d8 <__alt_data_end+0xf80043d8>
10005bac:	dc402617 	ldw	r17,152(sp)
10005bb0:	d8c02017 	ldw	r3,128(sp)
10005bb4:	da000404 	addi	r8,sp,16
10005bb8:	003f9c06 	br	10005a2c <__alt_data_end+0xf8005a2c>
10005bbc:	ac400043 	ldbu	r17,1(r21)
10005bc0:	84000814 	ori	r16,r16,32
10005bc4:	ad400044 	addi	r21,r21,1
10005bc8:	8c403fcc 	andi	r17,r17,255
10005bcc:	8c40201c 	xori	r17,r17,128
10005bd0:	8c7fe004 	addi	r17,r17,-128
10005bd4:	00395e06 	br	10004150 <__alt_data_end+0xf8004150>
10005bd8:	d8c02e15 	stw	r3,184(sp)
10005bdc:	0039883a 	mov	fp,zero
10005be0:	003e3506 	br	100054b8 <__alt_data_end+0xf80054b8>
10005be4:	d9002d17 	ldw	r4,180(sp)
10005be8:	d9801e04 	addi	r6,sp,120
10005bec:	b80b883a 	mov	r5,r23
10005bf0:	0011b240 	call	10011b24 <__sprint_r>
10005bf4:	1039f81e 	bne	r2,zero,100043d8 <__alt_data_end+0xf80043d8>
10005bf8:	d8c02017 	ldw	r3,128(sp)
10005bfc:	da000404 	addi	r8,sp,16
10005c00:	003cd006 	br	10004f44 <__alt_data_end+0xf8004f44>
10005c04:	8009883a 	mov	r4,r16
10005c08:	df003d15 	stw	fp,244(sp)
10005c0c:	0003f300 	call	10003f30 <strlen>
10005c10:	d8802b15 	stw	r2,172(sp)
10005c14:	da003d17 	ldw	r8,244(sp)
10005c18:	103c200e 	bge	r2,zero,10004c9c <__alt_data_end+0xf8004c9c>
10005c1c:	0005883a 	mov	r2,zero
10005c20:	003c1e06 	br	10004c9c <__alt_data_end+0xf8004c9c>
10005c24:	d9002d17 	ldw	r4,180(sp)
10005c28:	d9801e04 	addi	r6,sp,120
10005c2c:	b80b883a 	mov	r5,r23
10005c30:	0011b240 	call	10011b24 <__sprint_r>
10005c34:	1039e81e 	bne	r2,zero,100043d8 <__alt_data_end+0xf80043d8>
10005c38:	d8c02017 	ldw	r3,128(sp)
10005c3c:	d8801f17 	ldw	r2,124(sp)
10005c40:	da000404 	addi	r8,sp,16
10005c44:	d9403317 	ldw	r5,204(sp)
10005c48:	10800044 	addi	r2,r2,1
10005c4c:	44000015 	stw	r16,0(r8)
10005c50:	28c7883a 	add	r3,r5,r3
10005c54:	003b5b06 	br	100049c4 <__alt_data_end+0xf80049c4>
10005c58:	010400b4 	movhi	r4,4098
10005c5c:	2131b784 	addi	r4,r4,-14626
10005c60:	d9003515 	stw	r4,212(sp)
10005c64:	003af206 	br	10004830 <__alt_data_end+0xf8004830>
10005c68:	013fffc4 	movi	r4,-1
10005c6c:	003a0806 	br	10004490 <__alt_data_end+0xf8004490>
10005c70:	0023883a 	mov	r17,zero
10005c74:	003d9d06 	br	100052ec <__alt_data_end+0xf80052ec>
10005c78:	d9002d17 	ldw	r4,180(sp)
10005c7c:	d9801e04 	addi	r6,sp,120
10005c80:	b80b883a 	mov	r5,r23
10005c84:	0011b240 	call	10011b24 <__sprint_r>
10005c88:	1039d31e 	bne	r2,zero,100043d8 <__alt_data_end+0xf80043d8>
10005c8c:	d8c02017 	ldw	r3,128(sp)
10005c90:	da000404 	addi	r8,sp,16
10005c94:	003d9406 	br	100052e8 <__alt_data_end+0xf80052e8>
10005c98:	010400b4 	movhi	r4,4098
10005c9c:	2131b384 	addi	r4,r4,-14642
10005ca0:	d9002c15 	stw	r4,176(sp)
10005ca4:	d9002c17 	ldw	r4,176(sp)
10005ca8:	1c47883a 	add	r3,r3,r17
10005cac:	10800044 	addi	r2,r2,1
10005cb0:	41000015 	stw	r4,0(r8)
10005cb4:	44400115 	stw	r17,4(r8)
10005cb8:	d8c02015 	stw	r3,128(sp)
10005cbc:	d8801f15 	stw	r2,124(sp)
10005cc0:	010001c4 	movi	r4,7
10005cc4:	20bfd716 	blt	r4,r2,10005c24 <__alt_data_end+0xf8005c24>
10005cc8:	42000204 	addi	r8,r8,8
10005ccc:	003fdd06 	br	10005c44 <__alt_data_end+0xf8005c44>
10005cd0:	d9002d17 	ldw	r4,180(sp)
10005cd4:	d9801e04 	addi	r6,sp,120
10005cd8:	b80b883a 	mov	r5,r23
10005cdc:	0011b240 	call	10011b24 <__sprint_r>
10005ce0:	1039bd1e 	bne	r2,zero,100043d8 <__alt_data_end+0xf80043d8>
10005ce4:	d8802617 	ldw	r2,152(sp)
10005ce8:	d8c02017 	ldw	r3,128(sp)
10005cec:	da000404 	addi	r8,sp,16
10005cf0:	003e1006 	br	10005534 <__alt_data_end+0xf8005534>
10005cf4:	00800044 	movi	r2,1
10005cf8:	10803fcc 	andi	r2,r2,255
10005cfc:	00c00044 	movi	r3,1
10005d00:	10fa0d26 	beq	r2,r3,10004538 <__alt_data_end+0xf8004538>
10005d04:	00c00084 	movi	r3,2
10005d08:	10fbaf26 	beq	r2,r3,10004bc8 <__alt_data_end+0xf8004bc8>
10005d0c:	003a6d06 	br	100046c4 <__alt_data_end+0xf80046c4>
10005d10:	010400b4 	movhi	r4,4098
10005d14:	2131b784 	addi	r4,r4,-14626
10005d18:	d9003515 	stw	r4,212(sp)
10005d1c:	003b5406 	br	10004a70 <__alt_data_end+0xf8004a70>
10005d20:	d8802a17 	ldw	r2,168(sp)
10005d24:	00c00184 	movi	r3,6
10005d28:	1880012e 	bgeu	r3,r2,10005d30 <___vfprintf_internal_r+0x1d68>
10005d2c:	1805883a 	mov	r2,r3
10005d30:	d8802b15 	stw	r2,172(sp)
10005d34:	1000ef16 	blt	r2,zero,100060f4 <___vfprintf_internal_r+0x212c>
10005d38:	040400b4 	movhi	r16,4098
10005d3c:	d8802915 	stw	r2,164(sp)
10005d40:	dcc02e15 	stw	r19,184(sp)
10005d44:	d8002a15 	stw	zero,168(sp)
10005d48:	d8003215 	stw	zero,200(sp)
10005d4c:	8431b104 	addi	r16,r16,-14652
10005d50:	0039883a 	mov	fp,zero
10005d54:	003a8006 	br	10004758 <__alt_data_end+0xf8004758>
10005d58:	0021883a 	mov	r16,zero
10005d5c:	003e0706 	br	1000557c <__alt_data_end+0xf800557c>
10005d60:	d9002d17 	ldw	r4,180(sp)
10005d64:	d9801e04 	addi	r6,sp,120
10005d68:	b80b883a 	mov	r5,r23
10005d6c:	0011b240 	call	10011b24 <__sprint_r>
10005d70:	1039991e 	bne	r2,zero,100043d8 <__alt_data_end+0xf80043d8>
10005d74:	d8802617 	ldw	r2,152(sp)
10005d78:	d9403317 	ldw	r5,204(sp)
10005d7c:	d8c02017 	ldw	r3,128(sp)
10005d80:	da000404 	addi	r8,sp,16
10005d84:	2885c83a 	sub	r2,r5,r2
10005d88:	003dfb06 	br	10005578 <__alt_data_end+0xf8005578>
10005d8c:	9080004c 	andi	r2,r18,1
10005d90:	103e8f1e 	bne	r2,zero,100057d0 <__alt_data_end+0xf80057d0>
10005d94:	d8802117 	ldw	r2,132(sp)
10005d98:	003e9e06 	br	10005814 <__alt_data_end+0xf8005814>
10005d9c:	1025883a 	mov	r18,r2
10005da0:	0039883a 	mov	fp,zero
10005da4:	00800084 	movi	r2,2
10005da8:	003fd306 	br	10005cf8 <__alt_data_end+0xf8005cf8>
10005dac:	07000b44 	movi	fp,45
10005db0:	df002785 	stb	fp,158(sp)
10005db4:	003a1b06 	br	10004624 <__alt_data_end+0xf8004624>
10005db8:	00c00b44 	movi	r3,45
10005dbc:	d8c02785 	stb	r3,158(sp)
10005dc0:	d8802915 	stw	r2,164(sp)
10005dc4:	dc802c17 	ldw	r18,176(sp)
10005dc8:	d8002a15 	stw	zero,168(sp)
10005dcc:	07000b44 	movi	fp,45
10005dd0:	003a5e06 	br	1000474c <__alt_data_end+0xf800474c>
10005dd4:	040400b4 	movhi	r16,4098
10005dd8:	8431a604 	addi	r16,r16,-14696
10005ddc:	003f4706 	br	10005afc <__alt_data_end+0xf8005afc>
10005de0:	d9002e17 	ldw	r4,184(sp)
10005de4:	d9402f17 	ldw	r5,188(sp)
10005de8:	20800017 	ldw	r2,0(r4)
10005dec:	21000104 	addi	r4,r4,4
10005df0:	d9002e15 	stw	r4,184(sp)
10005df4:	11400015 	stw	r5,0(r2)
10005df8:	0038ab06 	br	100040a8 <__alt_data_end+0xf80040a8>
10005dfc:	dd802617 	ldw	r22,152(sp)
10005e00:	00bfff44 	movi	r2,-3
10005e04:	b0801c16 	blt	r22,r2,10005e78 <___vfprintf_internal_r+0x1eb0>
10005e08:	d9402a17 	ldw	r5,168(sp)
10005e0c:	2d801a16 	blt	r5,r22,10005e78 <___vfprintf_internal_r+0x1eb0>
10005e10:	dd803215 	stw	r22,200(sp)
10005e14:	003e8906 	br	1000583c <__alt_data_end+0xf800583c>
10005e18:	010400b4 	movhi	r4,4098
10005e1c:	2131b384 	addi	r4,r4,-14642
10005e20:	d9002c15 	stw	r4,176(sp)
10005e24:	003c9106 	br	1000506c <__alt_data_end+0xf800506c>
10005e28:	e005883a 	mov	r2,fp
10005e2c:	003e7906 	br	10005814 <__alt_data_end+0xf8005814>
10005e30:	d9002a17 	ldw	r4,168(sp)
10005e34:	df002783 	ldbu	fp,158(sp)
10005e38:	dcc02e15 	stw	r19,184(sp)
10005e3c:	d9002915 	stw	r4,164(sp)
10005e40:	d9002b15 	stw	r4,172(sp)
10005e44:	d8002a15 	stw	zero,168(sp)
10005e48:	d8003215 	stw	zero,200(sp)
10005e4c:	003a3b06 	br	1000473c <__alt_data_end+0xf800473c>
10005e50:	9080004c 	andi	r2,r18,1
10005e54:	0039883a 	mov	fp,zero
10005e58:	10000426 	beq	r2,zero,10005e6c <___vfprintf_internal_r+0x1ea4>
10005e5c:	00800c04 	movi	r2,48
10005e60:	dc001dc4 	addi	r16,sp,119
10005e64:	d8801dc5 	stb	r2,119(sp)
10005e68:	003b6406 	br	10004bfc <__alt_data_end+0xf8004bfc>
10005e6c:	d8002b15 	stw	zero,172(sp)
10005e70:	dc001e04 	addi	r16,sp,120
10005e74:	003a2b06 	br	10004724 <__alt_data_end+0xf8004724>
10005e78:	8c7fff84 	addi	r17,r17,-2
10005e7c:	b5bfffc4 	addi	r22,r22,-1
10005e80:	dd802615 	stw	r22,152(sp)
10005e84:	dc4022c5 	stb	r17,139(sp)
10005e88:	b000bf16 	blt	r22,zero,10006188 <___vfprintf_internal_r+0x21c0>
10005e8c:	00800ac4 	movi	r2,43
10005e90:	d8802305 	stb	r2,140(sp)
10005e94:	00800244 	movi	r2,9
10005e98:	15807016 	blt	r2,r22,1000605c <___vfprintf_internal_r+0x2094>
10005e9c:	00800c04 	movi	r2,48
10005ea0:	b5800c04 	addi	r22,r22,48
10005ea4:	d8802345 	stb	r2,141(sp)
10005ea8:	dd802385 	stb	r22,142(sp)
10005eac:	d88023c4 	addi	r2,sp,143
10005eb0:	df0022c4 	addi	fp,sp,139
10005eb4:	d8c03317 	ldw	r3,204(sp)
10005eb8:	1739c83a 	sub	fp,r2,fp
10005ebc:	d9003317 	ldw	r4,204(sp)
10005ec0:	e0c7883a 	add	r3,fp,r3
10005ec4:	df003a15 	stw	fp,232(sp)
10005ec8:	d8c02b15 	stw	r3,172(sp)
10005ecc:	00800044 	movi	r2,1
10005ed0:	1100b30e 	bge	r2,r4,100061a0 <___vfprintf_internal_r+0x21d8>
10005ed4:	d8c02b17 	ldw	r3,172(sp)
10005ed8:	18c00044 	addi	r3,r3,1
10005edc:	d8c02b15 	stw	r3,172(sp)
10005ee0:	1805883a 	mov	r2,r3
10005ee4:	1800ac16 	blt	r3,zero,10006198 <___vfprintf_internal_r+0x21d0>
10005ee8:	d8003215 	stw	zero,200(sp)
10005eec:	003e5d06 	br	10005864 <__alt_data_end+0xf8005864>
10005ef0:	d9002d17 	ldw	r4,180(sp)
10005ef4:	d9801e04 	addi	r6,sp,120
10005ef8:	b80b883a 	mov	r5,r23
10005efc:	0011b240 	call	10011b24 <__sprint_r>
10005f00:	1039351e 	bne	r2,zero,100043d8 <__alt_data_end+0xf80043d8>
10005f04:	dc402617 	ldw	r17,152(sp)
10005f08:	d8c02017 	ldw	r3,128(sp)
10005f0c:	d8801f17 	ldw	r2,124(sp)
10005f10:	da000404 	addi	r8,sp,16
10005f14:	003ed606 	br	10005a70 <__alt_data_end+0xf8005a70>
10005f18:	182b883a 	mov	r21,r3
10005f1c:	d8002a15 	stw	zero,168(sp)
10005f20:	00388c06 	br	10004154 <__alt_data_end+0xf8004154>
10005f24:	d8802a17 	ldw	r2,168(sp)
10005f28:	103e071e 	bne	r2,zero,10005748 <__alt_data_end+0xf8005748>
10005f2c:	dc002a15 	stw	r16,168(sp)
10005f30:	003e0506 	br	10005748 <__alt_data_end+0xf8005748>
10005f34:	d9002a17 	ldw	r4,168(sp)
10005f38:	20c00044 	addi	r3,r4,1
10005f3c:	003e0f06 	br	1000577c <__alt_data_end+0xf800577c>
10005f40:	01400184 	movi	r5,6
10005f44:	d9402a15 	stw	r5,168(sp)
10005f48:	003dff06 	br	10005748 <__alt_data_end+0xf8005748>
10005f4c:	d8802104 	addi	r2,sp,132
10005f50:	d8800315 	stw	r2,12(sp)
10005f54:	d8802504 	addi	r2,sp,148
10005f58:	d8800215 	stw	r2,8(sp)
10005f5c:	d8802604 	addi	r2,sp,152
10005f60:	d8800115 	stw	r2,4(sp)
10005f64:	d8802a17 	ldw	r2,168(sp)
10005f68:	d9403617 	ldw	r5,216(sp)
10005f6c:	d9002d17 	ldw	r4,180(sp)
10005f70:	d8800015 	stw	r2,0(sp)
10005f74:	01c000c4 	movi	r7,3
10005f78:	980d883a 	mov	r6,r19
10005f7c:	da003d15 	stw	r8,244(sp)
10005f80:	00081540 	call	10008154 <_dtoa_r>
10005f84:	d8c02a17 	ldw	r3,168(sp)
10005f88:	da003d17 	ldw	r8,244(sp)
10005f8c:	1021883a 	mov	r16,r2
10005f90:	10f9883a 	add	fp,r2,r3
10005f94:	81000007 	ldb	r4,0(r16)
10005f98:	00800c04 	movi	r2,48
10005f9c:	20805e26 	beq	r4,r2,10006118 <___vfprintf_internal_r+0x2150>
10005fa0:	d8c02617 	ldw	r3,152(sp)
10005fa4:	e0f9883a 	add	fp,fp,r3
10005fa8:	003e0a06 	br	100057d4 <__alt_data_end+0xf80057d4>
10005fac:	00c00b44 	movi	r3,45
10005fb0:	24e0003c 	xorhi	r19,r4,32768
10005fb4:	d8c02905 	stb	r3,164(sp)
10005fb8:	003de906 	br	10005760 <__alt_data_end+0xf8005760>
10005fbc:	d8c03217 	ldw	r3,200(sp)
10005fc0:	00c07a0e 	bge	zero,r3,100061ac <___vfprintf_internal_r+0x21e4>
10005fc4:	00800044 	movi	r2,1
10005fc8:	d9003317 	ldw	r4,204(sp)
10005fcc:	1105883a 	add	r2,r2,r4
10005fd0:	d8802b15 	stw	r2,172(sp)
10005fd4:	10004e16 	blt	r2,zero,10006110 <___vfprintf_internal_r+0x2148>
10005fd8:	044019c4 	movi	r17,103
10005fdc:	003e2106 	br	10005864 <__alt_data_end+0xf8005864>
10005fe0:	d9002a17 	ldw	r4,168(sp)
10005fe4:	d8802104 	addi	r2,sp,132
10005fe8:	d8800315 	stw	r2,12(sp)
10005fec:	d9000015 	stw	r4,0(sp)
10005ff0:	d8802504 	addi	r2,sp,148
10005ff4:	d9403617 	ldw	r5,216(sp)
10005ff8:	d9002d17 	ldw	r4,180(sp)
10005ffc:	d8800215 	stw	r2,8(sp)
10006000:	d8802604 	addi	r2,sp,152
10006004:	d8800115 	stw	r2,4(sp)
10006008:	01c000c4 	movi	r7,3
1000600c:	980d883a 	mov	r6,r19
10006010:	da003d15 	stw	r8,244(sp)
10006014:	00081540 	call	10008154 <_dtoa_r>
10006018:	d8c02a17 	ldw	r3,168(sp)
1000601c:	da003d17 	ldw	r8,244(sp)
10006020:	1021883a 	mov	r16,r2
10006024:	00801184 	movi	r2,70
10006028:	80f9883a 	add	fp,r16,r3
1000602c:	88bfd926 	beq	r17,r2,10005f94 <__alt_data_end+0xf8005f94>
10006030:	003de806 	br	100057d4 <__alt_data_end+0xf80057d4>
10006034:	d9002a17 	ldw	r4,168(sp)
10006038:	00c04d0e 	bge	zero,r3,10006170 <___vfprintf_internal_r+0x21a8>
1000603c:	2000441e 	bne	r4,zero,10006150 <___vfprintf_internal_r+0x2188>
10006040:	9480004c 	andi	r18,r18,1
10006044:	9000421e 	bne	r18,zero,10006150 <___vfprintf_internal_r+0x2188>
10006048:	1805883a 	mov	r2,r3
1000604c:	18006f16 	blt	r3,zero,1000620c <___vfprintf_internal_r+0x2244>
10006050:	d8c03217 	ldw	r3,200(sp)
10006054:	d8c02b15 	stw	r3,172(sp)
10006058:	003e0206 	br	10005864 <__alt_data_end+0xf8005864>
1000605c:	df0022c4 	addi	fp,sp,139
10006060:	dc002a15 	stw	r16,168(sp)
10006064:	4027883a 	mov	r19,r8
10006068:	e021883a 	mov	r16,fp
1000606c:	b009883a 	mov	r4,r22
10006070:	01400284 	movi	r5,10
10006074:	00033080 	call	10003308 <__modsi3>
10006078:	10800c04 	addi	r2,r2,48
1000607c:	843fffc4 	addi	r16,r16,-1
10006080:	b009883a 	mov	r4,r22
10006084:	01400284 	movi	r5,10
10006088:	80800005 	stb	r2,0(r16)
1000608c:	00032840 	call	10003284 <__divsi3>
10006090:	102d883a 	mov	r22,r2
10006094:	00800244 	movi	r2,9
10006098:	15bff416 	blt	r2,r22,1000606c <__alt_data_end+0xf800606c>
1000609c:	9811883a 	mov	r8,r19
100060a0:	b0800c04 	addi	r2,r22,48
100060a4:	8027883a 	mov	r19,r16
100060a8:	997fffc4 	addi	r5,r19,-1
100060ac:	98bfffc5 	stb	r2,-1(r19)
100060b0:	dc002a17 	ldw	r16,168(sp)
100060b4:	2f006d2e 	bgeu	r5,fp,1000626c <___vfprintf_internal_r+0x22a4>
100060b8:	d9c02384 	addi	r7,sp,142
100060bc:	3ccfc83a 	sub	r7,r7,r19
100060c0:	d9002344 	addi	r4,sp,141
100060c4:	e1cf883a 	add	r7,fp,r7
100060c8:	00000106 	br	100060d0 <___vfprintf_internal_r+0x2108>
100060cc:	28800003 	ldbu	r2,0(r5)
100060d0:	20800005 	stb	r2,0(r4)
100060d4:	21000044 	addi	r4,r4,1
100060d8:	29400044 	addi	r5,r5,1
100060dc:	393ffb1e 	bne	r7,r4,100060cc <__alt_data_end+0xf80060cc>
100060e0:	d8802304 	addi	r2,sp,140
100060e4:	14c5c83a 	sub	r2,r2,r19
100060e8:	d8c02344 	addi	r3,sp,141
100060ec:	1885883a 	add	r2,r3,r2
100060f0:	003f7006 	br	10005eb4 <__alt_data_end+0xf8005eb4>
100060f4:	0005883a 	mov	r2,zero
100060f8:	003f0f06 	br	10005d38 <__alt_data_end+0xf8005d38>
100060fc:	d8c03217 	ldw	r3,200(sp)
10006100:	18c00044 	addi	r3,r3,1
10006104:	d8c02b15 	stw	r3,172(sp)
10006108:	1805883a 	mov	r2,r3
1000610c:	183fb20e 	bge	r3,zero,10005fd8 <__alt_data_end+0xf8005fd8>
10006110:	0005883a 	mov	r2,zero
10006114:	003fb006 	br	10005fd8 <__alt_data_end+0xf8005fd8>
10006118:	d9003617 	ldw	r4,216(sp)
1000611c:	000d883a 	mov	r6,zero
10006120:	000f883a 	mov	r7,zero
10006124:	980b883a 	mov	r5,r19
10006128:	d8c03c15 	stw	r3,240(sp)
1000612c:	da003d15 	stw	r8,244(sp)
10006130:	0017e100 	call	10017e10 <__eqdf2>
10006134:	d8c03c17 	ldw	r3,240(sp)
10006138:	da003d17 	ldw	r8,244(sp)
1000613c:	103f9826 	beq	r2,zero,10005fa0 <__alt_data_end+0xf8005fa0>
10006140:	00800044 	movi	r2,1
10006144:	10c7c83a 	sub	r3,r2,r3
10006148:	d8c02615 	stw	r3,152(sp)
1000614c:	003f9506 	br	10005fa4 <__alt_data_end+0xf8005fa4>
10006150:	d9002a17 	ldw	r4,168(sp)
10006154:	d8c03217 	ldw	r3,200(sp)
10006158:	20800044 	addi	r2,r4,1
1000615c:	1885883a 	add	r2,r3,r2
10006160:	d8802b15 	stw	r2,172(sp)
10006164:	103dbf0e 	bge	r2,zero,10005864 <__alt_data_end+0xf8005864>
10006168:	0005883a 	mov	r2,zero
1000616c:	003dbd06 	br	10005864 <__alt_data_end+0xf8005864>
10006170:	2000201e 	bne	r4,zero,100061f4 <___vfprintf_internal_r+0x222c>
10006174:	9480004c 	andi	r18,r18,1
10006178:	90001e1e 	bne	r18,zero,100061f4 <___vfprintf_internal_r+0x222c>
1000617c:	00800044 	movi	r2,1
10006180:	d8802b15 	stw	r2,172(sp)
10006184:	003db706 	br	10005864 <__alt_data_end+0xf8005864>
10006188:	00800b44 	movi	r2,45
1000618c:	05adc83a 	sub	r22,zero,r22
10006190:	d8802305 	stb	r2,140(sp)
10006194:	003f3f06 	br	10005e94 <__alt_data_end+0xf8005e94>
10006198:	0005883a 	mov	r2,zero
1000619c:	003f5206 	br	10005ee8 <__alt_data_end+0xf8005ee8>
100061a0:	90a4703a 	and	r18,r18,r2
100061a4:	903f4e26 	beq	r18,zero,10005ee0 <__alt_data_end+0xf8005ee0>
100061a8:	003f4a06 	br	10005ed4 <__alt_data_end+0xf8005ed4>
100061ac:	00800084 	movi	r2,2
100061b0:	10c5c83a 	sub	r2,r2,r3
100061b4:	003f8406 	br	10005fc8 <__alt_data_end+0xf8005fc8>
100061b8:	d9402e17 	ldw	r5,184(sp)
100061bc:	d9002e17 	ldw	r4,184(sp)
100061c0:	ac400043 	ldbu	r17,1(r21)
100061c4:	29400017 	ldw	r5,0(r5)
100061c8:	20800104 	addi	r2,r4,4
100061cc:	d8802e15 	stw	r2,184(sp)
100061d0:	d9402a15 	stw	r5,168(sp)
100061d4:	182b883a 	mov	r21,r3
100061d8:	283e7b0e 	bge	r5,zero,10005bc8 <__alt_data_end+0xf8005bc8>
100061dc:	8c403fcc 	andi	r17,r17,255
100061e0:	017fffc4 	movi	r5,-1
100061e4:	8c40201c 	xori	r17,r17,128
100061e8:	d9402a15 	stw	r5,168(sp)
100061ec:	8c7fe004 	addi	r17,r17,-128
100061f0:	0037d706 	br	10004150 <__alt_data_end+0xf8004150>
100061f4:	d8c02a17 	ldw	r3,168(sp)
100061f8:	18c00084 	addi	r3,r3,2
100061fc:	d8c02b15 	stw	r3,172(sp)
10006200:	1805883a 	mov	r2,r3
10006204:	183d970e 	bge	r3,zero,10005864 <__alt_data_end+0xf8005864>
10006208:	003fd706 	br	10006168 <__alt_data_end+0xf8006168>
1000620c:	0005883a 	mov	r2,zero
10006210:	003f8f06 	br	10006050 <__alt_data_end+0xf8006050>
10006214:	9080004c 	andi	r2,r18,1
10006218:	103f821e 	bne	r2,zero,10006024 <__alt_data_end+0xf8006024>
1000621c:	d8802117 	ldw	r2,132(sp)
10006220:	1405c83a 	sub	r2,r2,r16
10006224:	d8803315 	stw	r2,204(sp)
10006228:	b47ef426 	beq	r22,r17,10005dfc <__alt_data_end+0xf8005dfc>
1000622c:	dd802617 	ldw	r22,152(sp)
10006230:	003f1206 	br	10005e7c <__alt_data_end+0xf8005e7c>
10006234:	d8c02b03 	ldbu	r3,172(sp)
10006238:	d8c02785 	stb	r3,158(sp)
1000623c:	0038df06 	br	100045bc <__alt_data_end+0xf80045bc>
10006240:	d8c02b03 	ldbu	r3,172(sp)
10006244:	d8c02785 	stb	r3,158(sp)
10006248:	0038aa06 	br	100044f4 <__alt_data_end+0xf80044f4>
1000624c:	d8c02b03 	ldbu	r3,172(sp)
10006250:	d8c02785 	stb	r3,158(sp)
10006254:	003a4306 	br	10004b64 <__alt_data_end+0xf8004b64>
10006258:	d8c02b03 	ldbu	r3,172(sp)
1000625c:	d8c02785 	stb	r3,158(sp)
10006260:	003af506 	br	10004e38 <__alt_data_end+0xf8004e38>
10006264:	0005883a 	mov	r2,zero
10006268:	003d7b06 	br	10005858 <__alt_data_end+0xf8005858>
1000626c:	d8802344 	addi	r2,sp,141
10006270:	003f1006 	br	10005eb4 <__alt_data_end+0xf8005eb4>
10006274:	d8c02b03 	ldbu	r3,172(sp)
10006278:	d8c02785 	stb	r3,158(sp)
1000627c:	0038fd06 	br	10004674 <__alt_data_end+0xf8004674>
10006280:	d8c02b03 	ldbu	r3,172(sp)
10006284:	d8c02785 	stb	r3,158(sp)
10006288:	003a9706 	br	10004ce8 <__alt_data_end+0xf8004ce8>
1000628c:	d8c02b03 	ldbu	r3,172(sp)
10006290:	d8c02785 	stb	r3,158(sp)
10006294:	003a1806 	br	10004af8 <__alt_data_end+0xf8004af8>
10006298:	d8c02b03 	ldbu	r3,172(sp)
1000629c:	d8c02785 	stb	r3,158(sp)
100062a0:	003abe06 	br	10004d9c <__alt_data_end+0xf8004d9c>

100062a4 <__vfprintf_internal>:
100062a4:	008400b4 	movhi	r2,4098
100062a8:	10ba2504 	addi	r2,r2,-5996
100062ac:	300f883a 	mov	r7,r6
100062b0:	280d883a 	mov	r6,r5
100062b4:	200b883a 	mov	r5,r4
100062b8:	11000017 	ldw	r4,0(r2)
100062bc:	0003fc81 	jmpi	10003fc8 <___vfprintf_internal_r>

100062c0 <__sbprintf>:
100062c0:	2880030b 	ldhu	r2,12(r5)
100062c4:	2ac01917 	ldw	r11,100(r5)
100062c8:	2a80038b 	ldhu	r10,14(r5)
100062cc:	2a400717 	ldw	r9,28(r5)
100062d0:	2a000917 	ldw	r8,36(r5)
100062d4:	defee204 	addi	sp,sp,-1144
100062d8:	00c10004 	movi	r3,1024
100062dc:	dc011a15 	stw	r16,1128(sp)
100062e0:	10bfff4c 	andi	r2,r2,65533
100062e4:	2821883a 	mov	r16,r5
100062e8:	d8cb883a 	add	r5,sp,r3
100062ec:	dc811c15 	stw	r18,1136(sp)
100062f0:	dc411b15 	stw	r17,1132(sp)
100062f4:	dfc11d15 	stw	ra,1140(sp)
100062f8:	2025883a 	mov	r18,r4
100062fc:	d881030d 	sth	r2,1036(sp)
10006300:	dac11915 	stw	r11,1124(sp)
10006304:	da81038d 	sth	r10,1038(sp)
10006308:	da410715 	stw	r9,1052(sp)
1000630c:	da010915 	stw	r8,1060(sp)
10006310:	dec10015 	stw	sp,1024(sp)
10006314:	dec10415 	stw	sp,1040(sp)
10006318:	d8c10215 	stw	r3,1032(sp)
1000631c:	d8c10515 	stw	r3,1044(sp)
10006320:	d8010615 	stw	zero,1048(sp)
10006324:	0003fc80 	call	10003fc8 <___vfprintf_internal_r>
10006328:	1023883a 	mov	r17,r2
1000632c:	10000416 	blt	r2,zero,10006340 <__sbprintf+0x80>
10006330:	d9410004 	addi	r5,sp,1024
10006334:	9009883a 	mov	r4,r18
10006338:	00099f80 	call	100099f8 <_fflush_r>
1000633c:	10000d1e 	bne	r2,zero,10006374 <__sbprintf+0xb4>
10006340:	d881030b 	ldhu	r2,1036(sp)
10006344:	1080100c 	andi	r2,r2,64
10006348:	10000326 	beq	r2,zero,10006358 <__sbprintf+0x98>
1000634c:	8080030b 	ldhu	r2,12(r16)
10006350:	10801014 	ori	r2,r2,64
10006354:	8080030d 	sth	r2,12(r16)
10006358:	8805883a 	mov	r2,r17
1000635c:	dfc11d17 	ldw	ra,1140(sp)
10006360:	dc811c17 	ldw	r18,1136(sp)
10006364:	dc411b17 	ldw	r17,1132(sp)
10006368:	dc011a17 	ldw	r16,1128(sp)
1000636c:	dec11e04 	addi	sp,sp,1144
10006370:	f800283a 	ret
10006374:	047fffc4 	movi	r17,-1
10006378:	003ff106 	br	10006340 <__alt_data_end+0xf8006340>

1000637c <__svfscanf_r>:
1000637c:	2880030b 	ldhu	r2,12(r5)
10006380:	deff4b04 	addi	sp,sp,-724
10006384:	df00b315 	stw	fp,716(sp)
10006388:	ddc0b215 	stw	r23,712(sp)
1000638c:	dfc0b415 	stw	ra,720(sp)
10006390:	dd80b115 	stw	r22,708(sp)
10006394:	dd40b015 	stw	r21,704(sp)
10006398:	dd00af15 	stw	r20,700(sp)
1000639c:	dcc0ae15 	stw	r19,696(sp)
100063a0:	dc80ad15 	stw	r18,692(sp)
100063a4:	dc40ac15 	stw	r17,688(sp)
100063a8:	dc00ab15 	stw	r16,684(sp)
100063ac:	10c8000c 	andi	r3,r2,8192
100063b0:	d9c09c15 	stw	r7,624(sp)
100063b4:	2839883a 	mov	fp,r5
100063b8:	202f883a 	mov	r23,r4
100063bc:	1800061e 	bne	r3,zero,100063d8 <__svfscanf_r+0x5c>
100063c0:	29001917 	ldw	r4,100(r5)
100063c4:	00f7ffc4 	movi	r3,-8193
100063c8:	10880014 	ori	r2,r2,8192
100063cc:	20c6703a 	and	r3,r4,r3
100063d0:	2880030d 	sth	r2,12(r5)
100063d4:	28c01915 	stw	r3,100(r5)
100063d8:	30800003 	ldbu	r2,0(r6)
100063dc:	0021883a 	mov	r16,zero
100063e0:	058400b4 	movhi	r22,4098
100063e4:	d800a115 	stw	zero,644(sp)
100063e8:	d8009e15 	stw	zero,632(sp)
100063ec:	d800a015 	stw	zero,640(sp)
100063f0:	d8809b15 	stw	r2,620(sp)
100063f4:	b5ba2304 	addi	r22,r22,-6004
100063f8:	8025883a 	mov	r18,r16
100063fc:	e027883a 	mov	r19,fp
10006400:	35000044 	addi	r20,r6,1
10006404:	10001e26 	beq	r2,zero,10006480 <__svfscanf_r+0x104>
10006408:	b4000017 	ldw	r16,0(r22)
1000640c:	8087883a 	add	r3,r16,r2
10006410:	18c00043 	ldbu	r3,1(r3)
10006414:	18c0020c 	andi	r3,r3,8
10006418:	18001b26 	beq	r3,zero,10006488 <__svfscanf_r+0x10c>
1000641c:	98800117 	ldw	r2,4(r19)
10006420:	00800e0e 	bge	zero,r2,1000645c <__svfscanf_r+0xe0>
10006424:	98c00017 	ldw	r3,0(r19)
10006428:	b1000017 	ldw	r4,0(r22)
1000642c:	18800003 	ldbu	r2,0(r3)
10006430:	2085883a 	add	r2,r4,r2
10006434:	10800043 	ldbu	r2,1(r2)
10006438:	1080020c 	andi	r2,r2,8
1000643c:	10000b26 	beq	r2,zero,1000646c <__svfscanf_r+0xf0>
10006440:	98800117 	ldw	r2,4(r19)
10006444:	18c00044 	addi	r3,r3,1
10006448:	98c00015 	stw	r3,0(r19)
1000644c:	10bfffc4 	addi	r2,r2,-1
10006450:	98800115 	stw	r2,4(r19)
10006454:	94800044 	addi	r18,r18,1
10006458:	00bff216 	blt	zero,r2,10006424 <__alt_data_end+0xf8006424>
1000645c:	980b883a 	mov	r5,r19
10006460:	b809883a 	mov	r4,r23
10006464:	000cc640 	call	1000cc64 <__srefill_r>
10006468:	103fee26 	beq	r2,zero,10006424 <__alt_data_end+0xf8006424>
1000646c:	a00d883a 	mov	r6,r20
10006470:	30800003 	ldbu	r2,0(r6)
10006474:	35000044 	addi	r20,r6,1
10006478:	d8809b15 	stw	r2,620(sp)
1000647c:	103fe21e 	bne	r2,zero,10006408 <__alt_data_end+0xf8006408>
10006480:	d880a017 	ldw	r2,640(sp)
10006484:	00009a06 	br	100066f0 <__svfscanf_r+0x374>
10006488:	00c00944 	movi	r3,37
1000648c:	10c0891e 	bne	r2,r3,100066b4 <__svfscanf_r+0x338>
10006490:	0039883a 	mov	fp,zero
10006494:	35400043 	ldbu	r21,1(r6)
10006498:	0023883a 	mov	r17,zero
1000649c:	01801e04 	movi	r6,120
100064a0:	00c01b04 	movi	r3,108
100064a4:	e009883a 	mov	r4,fp
100064a8:	a1c00044 	addi	r7,r20,1
100064ac:	3540a236 	bltu	r6,r21,10006738 <__svfscanf_r+0x3bc>
100064b0:	a80490ba 	slli	r2,r21,2
100064b4:	01440034 	movhi	r5,4096
100064b8:	29593204 	addi	r5,r5,25800
100064bc:	1145883a 	add	r2,r2,r5
100064c0:	10800017 	ldw	r2,0(r2)
100064c4:	1000683a 	jmp	r2
100064c8:	100066ec 	andhi	zero,r2,411
100064cc:	10006738 	rdprs	zero,r2,412
100064d0:	10006738 	rdprs	zero,r2,412
100064d4:	10006738 	rdprs	zero,r2,412
100064d8:	10006738 	rdprs	zero,r2,412
100064dc:	10006738 	rdprs	zero,r2,412
100064e0:	10006738 	rdprs	zero,r2,412
100064e4:	10006738 	rdprs	zero,r2,412
100064e8:	10006738 	rdprs	zero,r2,412
100064ec:	10006738 	rdprs	zero,r2,412
100064f0:	10006738 	rdprs	zero,r2,412
100064f4:	10006738 	rdprs	zero,r2,412
100064f8:	10006738 	rdprs	zero,r2,412
100064fc:	10006738 	rdprs	zero,r2,412
10006500:	10006738 	rdprs	zero,r2,412
10006504:	10006738 	rdprs	zero,r2,412
10006508:	10006738 	rdprs	zero,r2,412
1000650c:	10006738 	rdprs	zero,r2,412
10006510:	10006738 	rdprs	zero,r2,412
10006514:	10006738 	rdprs	zero,r2,412
10006518:	10006738 	rdprs	zero,r2,412
1000651c:	10006738 	rdprs	zero,r2,412
10006520:	10006738 	rdprs	zero,r2,412
10006524:	10006738 	rdprs	zero,r2,412
10006528:	10006738 	rdprs	zero,r2,412
1000652c:	10006738 	rdprs	zero,r2,412
10006530:	10006738 	rdprs	zero,r2,412
10006534:	10006738 	rdprs	zero,r2,412
10006538:	10006738 	rdprs	zero,r2,412
1000653c:	10006738 	rdprs	zero,r2,412
10006540:	10006738 	rdprs	zero,r2,412
10006544:	10006738 	rdprs	zero,r2,412
10006548:	10006738 	rdprs	zero,r2,412
1000654c:	10006738 	rdprs	zero,r2,412
10006550:	10006738 	rdprs	zero,r2,412
10006554:	10006738 	rdprs	zero,r2,412
10006558:	10006738 	rdprs	zero,r2,412
1000655c:	100066ac 	andhi	zero,r2,410
10006560:	10006738 	rdprs	zero,r2,412
10006564:	10006738 	rdprs	zero,r2,412
10006568:	10006738 	rdprs	zero,r2,412
1000656c:	10006738 	rdprs	zero,r2,412
10006570:	10006720 	cmpeqi	zero,r2,412
10006574:	10006738 	rdprs	zero,r2,412
10006578:	10006738 	rdprs	zero,r2,412
1000657c:	10006738 	rdprs	zero,r2,412
10006580:	10006738 	rdprs	zero,r2,412
10006584:	10006738 	rdprs	zero,r2,412
10006588:	10006880 	call	11000688 <_gp+0xfd9e08>
1000658c:	10006880 	call	11000688 <_gp+0xfd9e08>
10006590:	10006880 	call	11000688 <_gp+0xfd9e08>
10006594:	10006880 	call	11000688 <_gp+0xfd9e08>
10006598:	10006880 	call	11000688 <_gp+0xfd9e08>
1000659c:	10006880 	call	11000688 <_gp+0xfd9e08>
100065a0:	10006880 	call	11000688 <_gp+0xfd9e08>
100065a4:	10006880 	call	11000688 <_gp+0xfd9e08>
100065a8:	10006880 	call	11000688 <_gp+0xfd9e08>
100065ac:	10006880 	call	11000688 <_gp+0xfd9e08>
100065b0:	10006738 	rdprs	zero,r2,412
100065b4:	10006738 	rdprs	zero,r2,412
100065b8:	10006738 	rdprs	zero,r2,412
100065bc:	10006738 	rdprs	zero,r2,412
100065c0:	10006738 	rdprs	zero,r2,412
100065c4:	10006738 	rdprs	zero,r2,412
100065c8:	10006738 	rdprs	zero,r2,412
100065cc:	10006738 	rdprs	zero,r2,412
100065d0:	10006738 	rdprs	zero,r2,412
100065d4:	10006738 	rdprs	zero,r2,412
100065d8:	10006850 	cmplti	zero,r2,417
100065dc:	1000692c 	andhi	zero,r2,420
100065e0:	10006738 	rdprs	zero,r2,412
100065e4:	1000692c 	andhi	zero,r2,420
100065e8:	10006738 	rdprs	zero,r2,412
100065ec:	10006738 	rdprs	zero,r2,412
100065f0:	10006738 	rdprs	zero,r2,412
100065f4:	10006738 	rdprs	zero,r2,412
100065f8:	10006918 	cmpnei	zero,r2,420
100065fc:	10006738 	rdprs	zero,r2,412
10006600:	10006738 	rdprs	zero,r2,412
10006604:	100068e8 	cmpgeui	zero,r2,419
10006608:	10006738 	rdprs	zero,r2,412
1000660c:	10006738 	rdprs	zero,r2,412
10006610:	10006738 	rdprs	zero,r2,412
10006614:	10006738 	rdprs	zero,r2,412
10006618:	10006738 	rdprs	zero,r2,412
1000661c:	10006738 	rdprs	zero,r2,412
10006620:	10006738 	rdprs	zero,r2,412
10006624:	10006738 	rdprs	zero,r2,412
10006628:	100068b8 	rdprs	zero,r2,418
1000662c:	10006738 	rdprs	zero,r2,412
10006630:	10006738 	rdprs	zero,r2,412
10006634:	10006a74 	orhi	zero,r2,425
10006638:	10006738 	rdprs	zero,r2,412
1000663c:	10006738 	rdprs	zero,r2,412
10006640:	10006738 	rdprs	zero,r2,412
10006644:	10006738 	rdprs	zero,r2,412
10006648:	10006738 	rdprs	zero,r2,412
1000664c:	10006738 	rdprs	zero,r2,412
10006650:	10006738 	rdprs	zero,r2,412
10006654:	100069f4 	orhi	zero,r2,423
10006658:	100069c8 	cmpgei	zero,r2,423
1000665c:	1000692c 	andhi	zero,r2,420
10006660:	1000692c 	andhi	zero,r2,420
10006664:	1000692c 	andhi	zero,r2,420
10006668:	100069b4 	orhi	zero,r2,422
1000666c:	10006b04 	addi	zero,r2,428
10006670:	10006738 	rdprs	zero,r2,412
10006674:	10006738 	rdprs	zero,r2,412
10006678:	100069a0 	cmpeqi	zero,r2,422
1000667c:	10006738 	rdprs	zero,r2,412
10006680:	10006970 	cmpltui	zero,r2,421
10006684:	10006944 	addi	zero,r2,421
10006688:	10006820 	cmpeqi	zero,r2,416
1000668c:	10006738 	rdprs	zero,r2,412
10006690:	10006738 	rdprs	zero,r2,412
10006694:	10006808 	cmpgei	zero,r2,416
10006698:	10006738 	rdprs	zero,r2,412
1000669c:	1000678c 	andi	zero,r2,414
100066a0:	10006738 	rdprs	zero,r2,412
100066a4:	10006738 	rdprs	zero,r2,412
100066a8:	100068b8 	rdprs	zero,r2,418
100066ac:	d9c09d15 	stw	r7,628(sp)
100066b0:	3829883a 	mov	r20,r7
100066b4:	98800117 	ldw	r2,4(r19)
100066b8:	0081c60e 	bge	zero,r2,10006dd4 <__svfscanf_r+0xa58>
100066bc:	98800017 	ldw	r2,0(r19)
100066c0:	a0ffffc3 	ldbu	r3,-1(r20)
100066c4:	11000003 	ldbu	r4,0(r2)
100066c8:	20ff6d1e 	bne	r4,r3,10006480 <__alt_data_end+0xf8006480>
100066cc:	98c00117 	ldw	r3,4(r19)
100066d0:	10800044 	addi	r2,r2,1
100066d4:	98800015 	stw	r2,0(r19)
100066d8:	18bfffc4 	addi	r2,r3,-1
100066dc:	98800115 	stw	r2,4(r19)
100066e0:	94800044 	addi	r18,r18,1
100066e4:	a00d883a 	mov	r6,r20
100066e8:	003f6106 	br	10006470 <__alt_data_end+0xf8006470>
100066ec:	00bfffc4 	movi	r2,-1
100066f0:	dfc0b417 	ldw	ra,720(sp)
100066f4:	df00b317 	ldw	fp,716(sp)
100066f8:	ddc0b217 	ldw	r23,712(sp)
100066fc:	dd80b117 	ldw	r22,708(sp)
10006700:	dd40b017 	ldw	r21,704(sp)
10006704:	dd00af17 	ldw	r20,700(sp)
10006708:	dcc0ae17 	ldw	r19,696(sp)
1000670c:	dc80ad17 	ldw	r18,692(sp)
10006710:	dc40ac17 	ldw	r17,688(sp)
10006714:	dc00ab17 	ldw	r16,684(sp)
10006718:	dec0b504 	addi	sp,sp,724
1000671c:	f800283a 	ret
10006720:	a1400043 	ldbu	r5,1(r20)
10006724:	3829883a 	mov	r20,r7
10006728:	8c400414 	ori	r17,r17,16
1000672c:	2d403fcc 	andi	r21,r5,255
10006730:	a1c00044 	addi	r7,r20,1
10006734:	357f5e2e 	bgeu	r6,r21,100064b0 <__alt_data_end+0xf80064b0>
10006738:	856b883a 	add	r21,r16,r21
1000673c:	a8800043 	ldbu	r2,1(r21)
10006740:	d9c09d15 	stw	r7,628(sp)
10006744:	00c00044 	movi	r3,1
10006748:	108000cc 	andi	r2,r2,3
1000674c:	2039883a 	mov	fp,r4
10006750:	10c1a526 	beq	r2,r3,10006de8 <__svfscanf_r+0xa6c>
10006754:	98800117 	ldw	r2,4(r19)
10006758:	00804216 	blt	zero,r2,10006864 <__svfscanf_r+0x4e8>
1000675c:	980b883a 	mov	r5,r19
10006760:	b809883a 	mov	r4,r23
10006764:	000cc640 	call	1000cc64 <__srefill_r>
10006768:	10015e1e 	bne	r2,zero,10006ce4 <__svfscanf_r+0x968>
1000676c:	01040074 	movhi	r4,4097
10006770:	213a7004 	addi	r4,r4,-5696
10006774:	01400284 	movi	r5,10
10006778:	b4000017 	ldw	r16,0(r22)
1000677c:	d900a115 	stw	r4,644(sp)
10006780:	d9409e15 	stw	r5,632(sp)
10006784:	050000c4 	movi	r20,3
10006788:	00000a06 	br	100067b4 <__svfscanf_r+0x438>
1000678c:	98800117 	ldw	r2,4(r19)
10006790:	d9c09d15 	stw	r7,628(sp)
10006794:	2039883a 	mov	fp,r4
10006798:	0081e20e 	bge	zero,r2,10006f24 <__svfscanf_r+0xba8>
1000679c:	00c40074 	movhi	r3,4097
100067a0:	18fbce04 	addi	r3,r3,-4296
100067a4:	01000284 	movi	r4,10
100067a8:	d8c0a115 	stw	r3,644(sp)
100067ac:	d9009e15 	stw	r4,632(sp)
100067b0:	050000c4 	movi	r20,3
100067b4:	98c00017 	ldw	r3,0(r19)
100067b8:	00000206 	br	100067c4 <__svfscanf_r+0x448>
100067bc:	18c00044 	addi	r3,r3,1
100067c0:	98c00015 	stw	r3,0(r19)
100067c4:	19000003 	ldbu	r4,0(r3)
100067c8:	20803fcc 	andi	r2,r4,255
100067cc:	8085883a 	add	r2,r16,r2
100067d0:	10800043 	ldbu	r2,1(r2)
100067d4:	1140020c 	andi	r5,r2,8
100067d8:	28020126 	beq	r5,zero,10006fe0 <__svfscanf_r+0xc64>
100067dc:	98800117 	ldw	r2,4(r19)
100067e0:	94800044 	addi	r18,r18,1
100067e4:	10bfffc4 	addi	r2,r2,-1
100067e8:	98800115 	stw	r2,4(r19)
100067ec:	00bff316 	blt	zero,r2,100067bc <__alt_data_end+0xf80067bc>
100067f0:	980b883a 	mov	r5,r19
100067f4:	b809883a 	mov	r4,r23
100067f8:	000cc640 	call	1000cc64 <__srefill_r>
100067fc:	1001391e 	bne	r2,zero,10006ce4 <__svfscanf_r+0x968>
10006800:	b4000017 	ldw	r16,0(r22)
10006804:	003feb06 	br	100067b4 <__alt_data_end+0xf80067b4>
10006808:	98800117 	ldw	r2,4(r19)
1000680c:	d9c09d15 	stw	r7,628(sp)
10006810:	2039883a 	mov	fp,r4
10006814:	0081aa0e 	bge	zero,r2,10006ec0 <__svfscanf_r+0xb44>
10006818:	05000084 	movi	r20,2
1000681c:	003fe506 	br	100067b4 <__alt_data_end+0xf80067b4>
10006820:	98800117 	ldw	r2,4(r19)
10006824:	d9c09d15 	stw	r7,628(sp)
10006828:	2039883a 	mov	fp,r4
1000682c:	8c408814 	ori	r17,r17,544
10006830:	0081df0e 	bge	zero,r2,10006fb0 <__svfscanf_r+0xc34>
10006834:	00c40074 	movhi	r3,4097
10006838:	18fbce04 	addi	r3,r3,-4296
1000683c:	01000404 	movi	r4,16
10006840:	d8c0a115 	stw	r3,644(sp)
10006844:	d9009e15 	stw	r4,632(sp)
10006848:	050000c4 	movi	r20,3
1000684c:	003fd906 	br	100067b4 <__alt_data_end+0xf80067b4>
10006850:	98800117 	ldw	r2,4(r19)
10006854:	d9c09d15 	stw	r7,628(sp)
10006858:	2039883a 	mov	fp,r4
1000685c:	8c400054 	ori	r17,r17,1
10006860:	0081850e 	bge	zero,r2,10006e78 <__svfscanf_r+0xafc>
10006864:	00c40074 	movhi	r3,4097
10006868:	18fa7004 	addi	r3,r3,-5696
1000686c:	01000284 	movi	r4,10
10006870:	d8c0a115 	stw	r3,644(sp)
10006874:	d9009e15 	stw	r4,632(sp)
10006878:	050000c4 	movi	r20,3
1000687c:	003fcd06 	br	100067b4 <__alt_data_end+0xf80067b4>
10006880:	01400284 	movi	r5,10
10006884:	d8c0a615 	stw	r3,664(sp)
10006888:	d980a915 	stw	r6,676(sp)
1000688c:	d9c0aa15 	stw	r7,680(sp)
10006890:	00034380 	call	10003438 <__mulsi3>
10006894:	a1400043 	ldbu	r5,1(r20)
10006898:	d9c0aa17 	ldw	r7,680(sp)
1000689c:	1545883a 	add	r2,r2,r21
100068a0:	113ff404 	addi	r4,r2,-48
100068a4:	3829883a 	mov	r20,r7
100068a8:	2d403fcc 	andi	r21,r5,255
100068ac:	d8c0a617 	ldw	r3,664(sp)
100068b0:	d980a917 	ldw	r6,676(sp)
100068b4:	003efc06 	br	100064a8 <__alt_data_end+0xf80064a8>
100068b8:	98800117 	ldw	r2,4(r19)
100068bc:	d9c09d15 	stw	r7,628(sp)
100068c0:	2039883a 	mov	fp,r4
100068c4:	8c408014 	ori	r17,r17,512
100068c8:	0081710e 	bge	zero,r2,10006e90 <__svfscanf_r+0xb14>
100068cc:	01440074 	movhi	r5,4097
100068d0:	297bce04 	addi	r5,r5,-4296
100068d4:	00800404 	movi	r2,16
100068d8:	d940a115 	stw	r5,644(sp)
100068dc:	d8809e15 	stw	r2,632(sp)
100068e0:	050000c4 	movi	r20,3
100068e4:	003fb306 	br	100067b4 <__alt_data_end+0xf80067b4>
100068e8:	98800117 	ldw	r2,4(r19)
100068ec:	d9c09d15 	stw	r7,628(sp)
100068f0:	2039883a 	mov	fp,r4
100068f4:	8c400054 	ori	r17,r17,1
100068f8:	0081840e 	bge	zero,r2,10006f0c <__svfscanf_r+0xb90>
100068fc:	01440074 	movhi	r5,4097
10006900:	297bce04 	addi	r5,r5,-4296
10006904:	00800204 	movi	r2,8
10006908:	d940a115 	stw	r5,644(sp)
1000690c:	d8809e15 	stw	r2,632(sp)
10006910:	050000c4 	movi	r20,3
10006914:	003fa706 	br	100067b4 <__alt_data_end+0xf80067b4>
10006918:	a1400043 	ldbu	r5,1(r20)
1000691c:	8c400094 	ori	r17,r17,2
10006920:	3829883a 	mov	r20,r7
10006924:	2d403fcc 	andi	r21,r5,255
10006928:	003edf06 	br	100064a8 <__alt_data_end+0xf80064a8>
1000692c:	98800117 	ldw	r2,4(r19)
10006930:	d9c09d15 	stw	r7,628(sp)
10006934:	2039883a 	mov	fp,r4
10006938:	00816d0e 	bge	zero,r2,10006ef0 <__svfscanf_r+0xb74>
1000693c:	05000104 	movi	r20,4
10006940:	003f9c06 	br	100067b4 <__alt_data_end+0xf80067b4>
10006944:	98800117 	ldw	r2,4(r19)
10006948:	d9c09d15 	stw	r7,628(sp)
1000694c:	2039883a 	mov	fp,r4
10006950:	0081800e 	bge	zero,r2,10006f54 <__svfscanf_r+0xbd8>
10006954:	01040074 	movhi	r4,4097
10006958:	213bce04 	addi	r4,r4,-4296
1000695c:	01400204 	movi	r5,8
10006960:	d900a115 	stw	r4,644(sp)
10006964:	d9409e15 	stw	r5,632(sp)
10006968:	050000c4 	movi	r20,3
1000696c:	003f9106 	br	100067b4 <__alt_data_end+0xf80067b4>
10006970:	d9c09d15 	stw	r7,628(sp)
10006974:	8880040c 	andi	r2,r17,16
10006978:	1000a01e 	bne	r2,zero,10006bfc <__svfscanf_r+0x880>
1000697c:	8880010c 	andi	r2,r17,4
10006980:	10012826 	beq	r2,zero,10006e24 <__svfscanf_r+0xaa8>
10006984:	d9009c17 	ldw	r4,624(sp)
10006988:	3829883a 	mov	r20,r7
1000698c:	20800017 	ldw	r2,0(r4)
10006990:	21000104 	addi	r4,r4,4
10006994:	d9009c15 	stw	r4,624(sp)
10006998:	1480000d 	sth	r18,0(r2)
1000699c:	003eb306 	br	1000646c <__alt_data_end+0xf800646c>
100069a0:	a5400043 	ldbu	r21,1(r20)
100069a4:	a8c11a26 	beq	r21,r3,10006e10 <__svfscanf_r+0xa94>
100069a8:	8c400054 	ori	r17,r17,1
100069ac:	3829883a 	mov	r20,r7
100069b0:	003ebd06 	br	100064a8 <__alt_data_end+0xf80064a8>
100069b4:	a1400043 	ldbu	r5,1(r20)
100069b8:	8c400114 	ori	r17,r17,4
100069bc:	3829883a 	mov	r20,r7
100069c0:	2d403fcc 	andi	r21,r5,255
100069c4:	003eb806 	br	100064a8 <__alt_data_end+0xf80064a8>
100069c8:	98800117 	ldw	r2,4(r19)
100069cc:	d9c09d15 	stw	r7,628(sp)
100069d0:	2039883a 	mov	fp,r4
100069d4:	00bf610e 	bge	zero,r2,1000675c <__alt_data_end+0xf800675c>
100069d8:	00840074 	movhi	r2,4097
100069dc:	10ba7004 	addi	r2,r2,-5696
100069e0:	00c00284 	movi	r3,10
100069e4:	d880a115 	stw	r2,644(sp)
100069e8:	d8c09e15 	stw	r3,632(sp)
100069ec:	050000c4 	movi	r20,3
100069f0:	003f7006 	br	100067b4 <__alt_data_end+0xf80067b4>
100069f4:	98800117 	ldw	r2,4(r19)
100069f8:	d9c09d15 	stw	r7,628(sp)
100069fc:	2039883a 	mov	fp,r4
10006a00:	0080c60e 	bge	zero,r2,10006d1c <__svfscanf_r+0x9a0>
10006a04:	e000011e 	bne	fp,zero,10006a0c <__svfscanf_r+0x690>
10006a08:	07000044 	movi	fp,1
10006a0c:	8880004c 	andi	r2,r17,1
10006a10:	1000461e 	bne	r2,zero,10006b2c <__svfscanf_r+0x7b0>
10006a14:	8c40040c 	andi	r17,r17,16
10006a18:	8800dc26 	beq	r17,zero,10006d8c <__svfscanf_r+0xa10>
10006a1c:	0021883a 	mov	r16,zero
10006a20:	00000806 	br	10006a44 <__svfscanf_r+0x6c8>
10006a24:	1887883a 	add	r3,r3,r2
10006a28:	980b883a 	mov	r5,r19
10006a2c:	b809883a 	mov	r4,r23
10006a30:	98c00015 	stw	r3,0(r19)
10006a34:	80a1883a 	add	r16,r16,r2
10006a38:	e0b9c83a 	sub	fp,fp,r2
10006a3c:	000cc640 	call	1000cc64 <__srefill_r>
10006a40:	1000cc1e 	bne	r2,zero,10006d74 <__svfscanf_r+0x9f8>
10006a44:	98800117 	ldw	r2,4(r19)
10006a48:	98c00017 	ldw	r3,0(r19)
10006a4c:	173ff516 	blt	r2,fp,10006a24 <__alt_data_end+0xf8006a24>
10006a50:	1705c83a 	sub	r2,r2,fp
10006a54:	1f15883a 	add	r10,r3,fp
10006a58:	8721883a 	add	r16,r16,fp
10006a5c:	98800115 	stw	r2,4(r19)
10006a60:	9a800015 	stw	r10,0(r19)
10006a64:	dd009d17 	ldw	r20,628(sp)
10006a68:	9425883a 	add	r18,r18,r16
10006a6c:	a00d883a 	mov	r6,r20
10006a70:	003e7f06 	br	10006470 <__alt_data_end+0xf8006470>
10006a74:	2039883a 	mov	fp,r4
10006a78:	380b883a 	mov	r5,r7
10006a7c:	d9005884 	addi	r4,sp,354
10006a80:	d9c09d15 	stw	r7,628(sp)
10006a84:	000ceac0 	call	1000ceac <__sccl>
10006a88:	1029883a 	mov	r20,r2
10006a8c:	98800117 	ldw	r2,4(r19)
10006a90:	0081120e 	bge	zero,r2,10006edc <__svfscanf_r+0xb60>
10006a94:	99000017 	ldw	r4,0(r19)
10006a98:	20800003 	ldbu	r2,0(r4)
10006a9c:	e0005a26 	beq	fp,zero,10006c08 <__svfscanf_r+0x88c>
10006aa0:	8c40040c 	andi	r17,r17,16
10006aa4:	88005b26 	beq	r17,zero,10006c14 <__svfscanf_r+0x898>
10006aa8:	e023883a 	mov	r17,fp
10006aac:	0021883a 	mov	r16,zero
10006ab0:	00000106 	br	10006ab8 <__svfscanf_r+0x73c>
10006ab4:	20800003 	ldbu	r2,0(r4)
10006ab8:	10803fcc 	andi	r2,r2,255
10006abc:	d8c05884 	addi	r3,sp,354
10006ac0:	1885883a 	add	r2,r3,r2
10006ac4:	10800007 	ldb	r2,0(r2)
10006ac8:	1000ae26 	beq	r2,zero,10006d84 <__svfscanf_r+0xa08>
10006acc:	98800117 	ldw	r2,4(r19)
10006ad0:	21000044 	addi	r4,r4,1
10006ad4:	84000044 	addi	r16,r16,1
10006ad8:	10bfffc4 	addi	r2,r2,-1
10006adc:	98800115 	stw	r2,4(r19)
10006ae0:	99000015 	stw	r4,0(r19)
10006ae4:	8700a126 	beq	r16,fp,10006d6c <__svfscanf_r+0x9f0>
10006ae8:	00bff216 	blt	zero,r2,10006ab4 <__alt_data_end+0xf8006ab4>
10006aec:	980b883a 	mov	r5,r19
10006af0:	b809883a 	mov	r4,r23
10006af4:	000cc640 	call	1000cc64 <__srefill_r>
10006af8:	10009b1e 	bne	r2,zero,10006d68 <__svfscanf_r+0x9ec>
10006afc:	99000017 	ldw	r4,0(r19)
10006b00:	003fec06 	br	10006ab4 <__alt_data_end+0xf8006ab4>
10006b04:	98800117 	ldw	r2,4(r19)
10006b08:	d9c09d15 	stw	r7,628(sp)
10006b0c:	2039883a 	mov	fp,r4
10006b10:	00811c0e 	bge	zero,r2,10006f84 <__svfscanf_r+0xc08>
10006b14:	01440074 	movhi	r5,4097
10006b18:	297a7004 	addi	r5,r5,-5696
10006b1c:	d940a115 	stw	r5,644(sp)
10006b20:	d8009e15 	stw	zero,632(sp)
10006b24:	050000c4 	movi	r20,3
10006b28:	003f2206 	br	100067b4 <__alt_data_end+0xf80067b4>
10006b2c:	dd409904 	addi	r21,sp,612
10006b30:	8c40040c 	andi	r17,r17,16
10006b34:	01800204 	movi	r6,8
10006b38:	000b883a 	mov	r5,zero
10006b3c:	a809883a 	mov	r4,r21
10006b40:	dc409f15 	stw	r17,636(sp)
10006b44:	000b39c0 	call	1000b39c <memset>
10006b48:	dc409f17 	ldw	r17,636(sp)
10006b4c:	88006e26 	beq	r17,zero,10006d08 <__svfscanf_r+0x98c>
10006b50:	0029883a 	mov	r20,zero
10006b54:	0023883a 	mov	r17,zero
10006b58:	000abe00 	call	1000abe0 <__locale_mb_cur_max>
10006b5c:	14406126 	beq	r2,r17,10006ce4 <__svfscanf_r+0x968>
10006b60:	98800017 	ldw	r2,0(r19)
10006b64:	98c00117 	ldw	r3,4(r19)
10006b68:	d9000104 	addi	r4,sp,4
10006b6c:	12000003 	ldbu	r8,0(r2)
10006b70:	18ffffc4 	addi	r3,r3,-1
10006b74:	10800044 	addi	r2,r2,1
10006b78:	98c00115 	stw	r3,4(r19)
10006b7c:	98800015 	stw	r2,0(r19)
10006b80:	8c000044 	addi	r16,r17,1
10006b84:	dd400015 	stw	r21,0(sp)
10006b88:	2463883a 	add	r17,r4,r17
10006b8c:	200d883a 	mov	r6,r4
10006b90:	a00b883a 	mov	r5,r20
10006b94:	800f883a 	mov	r7,r16
10006b98:	b809883a 	mov	r4,r23
10006b9c:	8a000005 	stb	r8,0(r17)
10006ba0:	000adf00 	call	1000adf0 <_mbrtowc_r>
10006ba4:	017fffc4 	movi	r5,-1
10006ba8:	11404e26 	beq	r2,r5,10006ce4 <__svfscanf_r+0x968>
10006bac:	1000601e 	bne	r2,zero,10006d30 <__svfscanf_r+0x9b4>
10006bb0:	d8c09f17 	ldw	r3,636(sp)
10006bb4:	1800641e 	bne	r3,zero,10006d48 <__svfscanf_r+0x9cc>
10006bb8:	a0000015 	stw	zero,0(r20)
10006bbc:	9425883a 	add	r18,r18,r16
10006bc0:	e179883a 	add	fp,fp,r5
10006bc4:	a5000104 	addi	r20,r20,4
10006bc8:	98800117 	ldw	r2,4(r19)
10006bcc:	0023883a 	mov	r17,zero
10006bd0:	00804b16 	blt	zero,r2,10006d00 <__svfscanf_r+0x984>
10006bd4:	980b883a 	mov	r5,r19
10006bd8:	b809883a 	mov	r4,r23
10006bdc:	000cc640 	call	1000cc64 <__srefill_r>
10006be0:	10004726 	beq	r2,zero,10006d00 <__svfscanf_r+0x984>
10006be4:	88003f1e 	bne	r17,zero,10006ce4 <__svfscanf_r+0x968>
10006be8:	d8c09f17 	ldw	r3,636(sp)
10006bec:	1800031e 	bne	r3,zero,10006bfc <__svfscanf_r+0x880>
10006bf0:	d900a017 	ldw	r4,640(sp)
10006bf4:	21000044 	addi	r4,r4,1
10006bf8:	d900a015 	stw	r4,640(sp)
10006bfc:	dd009d17 	ldw	r20,628(sp)
10006c00:	a00d883a 	mov	r6,r20
10006c04:	003e1a06 	br	10006470 <__alt_data_end+0xf8006470>
10006c08:	8c40040c 	andi	r17,r17,16
10006c0c:	073fffc4 	movi	fp,-1
10006c10:	883fa51e 	bne	r17,zero,10006aa8 <__alt_data_end+0xf8006aa8>
10006c14:	d9409c17 	ldw	r5,624(sp)
10006c18:	e2bfffc4 	addi	r10,fp,-1
10006c1c:	2c000017 	ldw	r16,0(r5)
10006c20:	2c400104 	addi	r17,r5,4
10006c24:	8007883a 	mov	r3,r16
10006c28:	82ab883a 	add	r21,r16,r10
10006c2c:	00000306 	br	10006c3c <__svfscanf_r+0x8c0>
10006c30:	99000017 	ldw	r4,0(r19)
10006c34:	e007883a 	mov	r3,fp
10006c38:	20800003 	ldbu	r2,0(r4)
10006c3c:	10803fcc 	andi	r2,r2,255
10006c40:	d9405884 	addi	r5,sp,354
10006c44:	2885883a 	add	r2,r5,r2
10006c48:	10800007 	ldb	r2,0(r2)
10006c4c:	10004b26 	beq	r2,zero,10006d7c <__svfscanf_r+0xa00>
10006c50:	98800117 	ldw	r2,4(r19)
10006c54:	21400044 	addi	r5,r4,1
10006c58:	99400015 	stw	r5,0(r19)
10006c5c:	10bfffc4 	addi	r2,r2,-1
10006c60:	98800115 	stw	r2,4(r19)
10006c64:	20800003 	ldbu	r2,0(r4)
10006c68:	1f000044 	addi	fp,r3,1
10006c6c:	18800005 	stb	r2,0(r3)
10006c70:	1d400726 	beq	r3,r21,10006c90 <__svfscanf_r+0x914>
10006c74:	98800117 	ldw	r2,4(r19)
10006c78:	00bfed16 	blt	zero,r2,10006c30 <__alt_data_end+0xf8006c30>
10006c7c:	980b883a 	mov	r5,r19
10006c80:	b809883a 	mov	r4,r23
10006c84:	000cc640 	call	1000cc64 <__srefill_r>
10006c88:	103fe926 	beq	r2,zero,10006c30 <__alt_data_end+0xf8006c30>
10006c8c:	87001526 	beq	r16,fp,10006ce4 <__svfscanf_r+0x968>
10006c90:	e421c83a 	sub	r16,fp,r16
10006c94:	803dfa26 	beq	r16,zero,10006480 <__alt_data_end+0xf8006480>
10006c98:	d880a017 	ldw	r2,640(sp)
10006c9c:	e0000005 	stb	zero,0(fp)
10006ca0:	dc409c15 	stw	r17,624(sp)
10006ca4:	10800044 	addi	r2,r2,1
10006ca8:	d880a015 	stw	r2,640(sp)
10006cac:	9425883a 	add	r18,r18,r16
10006cb0:	a00d883a 	mov	r6,r20
10006cb4:	003dee06 	br	10006470 <__alt_data_end+0xf8006470>
10006cb8:	013fff84 	movi	r4,-2
10006cbc:	1103ed1e 	bne	r2,r4,10007c74 <__svfscanf_r+0x18f8>
10006cc0:	8821883a 	mov	r16,r17
10006cc4:	98800117 	ldw	r2,4(r19)
10006cc8:	00834116 	blt	zero,r2,100079d0 <__svfscanf_r+0x1654>
10006ccc:	980b883a 	mov	r5,r19
10006cd0:	b809883a 	mov	r4,r23
10006cd4:	000cc640 	call	1000cc64 <__srefill_r>
10006cd8:	10033d26 	beq	r2,zero,100079d0 <__svfscanf_r+0x1654>
10006cdc:	dc409f17 	ldw	r17,636(sp)
10006ce0:	80034426 	beq	r16,zero,100079f4 <__svfscanf_r+0x1678>
10006ce4:	d900a017 	ldw	r4,640(sp)
10006ce8:	203e8026 	beq	r4,zero,100066ec <__alt_data_end+0xf80066ec>
10006cec:	9880030b 	ldhu	r2,12(r19)
10006cf0:	1080100c 	andi	r2,r2,64
10006cf4:	103e7d1e 	bne	r2,zero,100066ec <__alt_data_end+0xf80066ec>
10006cf8:	2005883a 	mov	r2,r4
10006cfc:	003e7c06 	br	100066f0 <__alt_data_end+0xf80066f0>
10006d00:	e03f951e 	bne	fp,zero,10006b58 <__alt_data_end+0xf8006b58>
10006d04:	003fb806 	br	10006be8 <__alt_data_end+0xf8006be8>
10006d08:	d8809c17 	ldw	r2,624(sp)
10006d0c:	15000017 	ldw	r20,0(r2)
10006d10:	10800104 	addi	r2,r2,4
10006d14:	d8809c15 	stw	r2,624(sp)
10006d18:	003f8e06 	br	10006b54 <__alt_data_end+0xf8006b54>
10006d1c:	980b883a 	mov	r5,r19
10006d20:	b809883a 	mov	r4,r23
10006d24:	000cc640 	call	1000cc64 <__srefill_r>
10006d28:	103f3626 	beq	r2,zero,10006a04 <__alt_data_end+0xf8006a04>
10006d2c:	003fed06 	br	10006ce4 <__alt_data_end+0xf8006ce4>
10006d30:	013fff84 	movi	r4,-2
10006d34:	1100071e 	bne	r2,r4,10006d54 <__svfscanf_r+0x9d8>
10006d38:	98800117 	ldw	r2,4(r19)
10006d3c:	8023883a 	mov	r17,r16
10006d40:	00bf8516 	blt	zero,r2,10006b58 <__alt_data_end+0xf8006b58>
10006d44:	003fa306 	br	10006bd4 <__alt_data_end+0xf8006bd4>
10006d48:	9425883a 	add	r18,r18,r16
10006d4c:	e73fffc4 	addi	fp,fp,-1
10006d50:	003f9d06 	br	10006bc8 <__alt_data_end+0xf8006bc8>
10006d54:	d8c09f17 	ldw	r3,636(sp)
10006d58:	9425883a 	add	r18,r18,r16
10006d5c:	e73fffc4 	addi	fp,fp,-1
10006d60:	183f9826 	beq	r3,zero,10006bc4 <__alt_data_end+0xf8006bc4>
10006d64:	003f9806 	br	10006bc8 <__alt_data_end+0xf8006bc8>
10006d68:	8023883a 	mov	r17,r16
10006d6c:	8821883a 	mov	r16,r17
10006d70:	003fce06 	br	10006cac <__alt_data_end+0xf8006cac>
10006d74:	803f3b1e 	bne	r16,zero,10006a64 <__alt_data_end+0xf8006a64>
10006d78:	003fda06 	br	10006ce4 <__alt_data_end+0xf8006ce4>
10006d7c:	1839883a 	mov	fp,r3
10006d80:	003fc306 	br	10006c90 <__alt_data_end+0xf8006c90>
10006d84:	803fc91e 	bne	r16,zero,10006cac <__alt_data_end+0xf8006cac>
10006d88:	003dbd06 	br	10006480 <__alt_data_end+0xf8006480>
10006d8c:	d8809c17 	ldw	r2,624(sp)
10006d90:	dcc00015 	stw	r19,0(sp)
10006d94:	b809883a 	mov	r4,r23
10006d98:	11400017 	ldw	r5,0(r2)
10006d9c:	e00f883a 	mov	r7,fp
10006da0:	01800044 	movi	r6,1
10006da4:	0009e340 	call	10009e34 <_fread_r>
10006da8:	d9009c17 	ldw	r4,624(sp)
10006dac:	20c00104 	addi	r3,r4,4
10006db0:	103fcc26 	beq	r2,zero,10006ce4 <__alt_data_end+0xf8006ce4>
10006db4:	d940a017 	ldw	r5,640(sp)
10006db8:	dd009d17 	ldw	r20,628(sp)
10006dbc:	90a5883a 	add	r18,r18,r2
10006dc0:	29400044 	addi	r5,r5,1
10006dc4:	d940a015 	stw	r5,640(sp)
10006dc8:	d8c09c15 	stw	r3,624(sp)
10006dcc:	a00d883a 	mov	r6,r20
10006dd0:	003da706 	br	10006470 <__alt_data_end+0xf8006470>
10006dd4:	980b883a 	mov	r5,r19
10006dd8:	b809883a 	mov	r4,r23
10006ddc:	000cc640 	call	1000cc64 <__srefill_r>
10006de0:	103e3626 	beq	r2,zero,100066bc <__alt_data_end+0xf80066bc>
10006de4:	003fbf06 	br	10006ce4 <__alt_data_end+0xf8006ce4>
10006de8:	98800117 	ldw	r2,4(r19)
10006dec:	88e2b03a 	or	r17,r17,r3
10006df0:	0080210e 	bge	zero,r2,10006e78 <__svfscanf_r+0xafc>
10006df4:	01440074 	movhi	r5,4097
10006df8:	297a7004 	addi	r5,r5,-5696
10006dfc:	00800284 	movi	r2,10
10006e00:	d940a115 	stw	r5,644(sp)
10006e04:	d8809e15 	stw	r2,632(sp)
10006e08:	050000c4 	movi	r20,3
10006e0c:	003e6906 	br	100067b4 <__alt_data_end+0xf80067b4>
10006e10:	a1400083 	ldbu	r5,2(r20)
10006e14:	8c400094 	ori	r17,r17,2
10006e18:	a5000084 	addi	r20,r20,2
10006e1c:	2d403fcc 	andi	r21,r5,255
10006e20:	003da106 	br	100064a8 <__alt_data_end+0xf80064a8>
10006e24:	8880004c 	andi	r2,r17,1
10006e28:	10000c1e 	bne	r2,zero,10006e5c <__svfscanf_r+0xae0>
10006e2c:	8c40008c 	andi	r17,r17,2
10006e30:	88000a26 	beq	r17,zero,10006e5c <__svfscanf_r+0xae0>
10006e34:	d8c09c17 	ldw	r3,624(sp)
10006e38:	d9009c17 	ldw	r4,624(sp)
10006e3c:	dd009d17 	ldw	r20,628(sp)
10006e40:	18800017 	ldw	r2,0(r3)
10006e44:	9007d7fa 	srai	r3,r18,31
10006e48:	21000104 	addi	r4,r4,4
10006e4c:	14800015 	stw	r18,0(r2)
10006e50:	10c00115 	stw	r3,4(r2)
10006e54:	d9009c15 	stw	r4,624(sp)
10006e58:	003d8406 	br	1000646c <__alt_data_end+0xf800646c>
10006e5c:	d9409c17 	ldw	r5,624(sp)
10006e60:	dd009d17 	ldw	r20,628(sp)
10006e64:	28800017 	ldw	r2,0(r5)
10006e68:	29400104 	addi	r5,r5,4
10006e6c:	d9409c15 	stw	r5,624(sp)
10006e70:	14800015 	stw	r18,0(r2)
10006e74:	003d7d06 	br	1000646c <__alt_data_end+0xf800646c>
10006e78:	980b883a 	mov	r5,r19
10006e7c:	b809883a 	mov	r4,r23
10006e80:	000cc640 	call	1000cc64 <__srefill_r>
10006e84:	103f971e 	bne	r2,zero,10006ce4 <__alt_data_end+0xf8006ce4>
10006e88:	b4000017 	ldw	r16,0(r22)
10006e8c:	003ed206 	br	100069d8 <__alt_data_end+0xf80069d8>
10006e90:	980b883a 	mov	r5,r19
10006e94:	b809883a 	mov	r4,r23
10006e98:	000cc640 	call	1000cc64 <__srefill_r>
10006e9c:	103f911e 	bne	r2,zero,10006ce4 <__alt_data_end+0xf8006ce4>
10006ea0:	01040074 	movhi	r4,4097
10006ea4:	213bce04 	addi	r4,r4,-4296
10006ea8:	01400404 	movi	r5,16
10006eac:	b4000017 	ldw	r16,0(r22)
10006eb0:	d900a115 	stw	r4,644(sp)
10006eb4:	d9409e15 	stw	r5,632(sp)
10006eb8:	050000c4 	movi	r20,3
10006ebc:	003e3d06 	br	100067b4 <__alt_data_end+0xf80067b4>
10006ec0:	980b883a 	mov	r5,r19
10006ec4:	b809883a 	mov	r4,r23
10006ec8:	000cc640 	call	1000cc64 <__srefill_r>
10006ecc:	103f851e 	bne	r2,zero,10006ce4 <__alt_data_end+0xf8006ce4>
10006ed0:	b4000017 	ldw	r16,0(r22)
10006ed4:	05000084 	movi	r20,2
10006ed8:	003e3606 	br	100067b4 <__alt_data_end+0xf80067b4>
10006edc:	980b883a 	mov	r5,r19
10006ee0:	b809883a 	mov	r4,r23
10006ee4:	000cc640 	call	1000cc64 <__srefill_r>
10006ee8:	103eea26 	beq	r2,zero,10006a94 <__alt_data_end+0xf8006a94>
10006eec:	003f7d06 	br	10006ce4 <__alt_data_end+0xf8006ce4>
10006ef0:	980b883a 	mov	r5,r19
10006ef4:	b809883a 	mov	r4,r23
10006ef8:	000cc640 	call	1000cc64 <__srefill_r>
10006efc:	103f791e 	bne	r2,zero,10006ce4 <__alt_data_end+0xf8006ce4>
10006f00:	b4000017 	ldw	r16,0(r22)
10006f04:	05000104 	movi	r20,4
10006f08:	003e2a06 	br	100067b4 <__alt_data_end+0xf80067b4>
10006f0c:	980b883a 	mov	r5,r19
10006f10:	b809883a 	mov	r4,r23
10006f14:	000cc640 	call	1000cc64 <__srefill_r>
10006f18:	103f721e 	bne	r2,zero,10006ce4 <__alt_data_end+0xf8006ce4>
10006f1c:	b4000017 	ldw	r16,0(r22)
10006f20:	003e8c06 	br	10006954 <__alt_data_end+0xf8006954>
10006f24:	980b883a 	mov	r5,r19
10006f28:	b809883a 	mov	r4,r23
10006f2c:	000cc640 	call	1000cc64 <__srefill_r>
10006f30:	103f6c1e 	bne	r2,zero,10006ce4 <__alt_data_end+0xf8006ce4>
10006f34:	00840074 	movhi	r2,4097
10006f38:	10bbce04 	addi	r2,r2,-4296
10006f3c:	00c00284 	movi	r3,10
10006f40:	b4000017 	ldw	r16,0(r22)
10006f44:	d880a115 	stw	r2,644(sp)
10006f48:	d8c09e15 	stw	r3,632(sp)
10006f4c:	050000c4 	movi	r20,3
10006f50:	003e1806 	br	100067b4 <__alt_data_end+0xf80067b4>
10006f54:	980b883a 	mov	r5,r19
10006f58:	b809883a 	mov	r4,r23
10006f5c:	000cc640 	call	1000cc64 <__srefill_r>
10006f60:	103f601e 	bne	r2,zero,10006ce4 <__alt_data_end+0xf8006ce4>
10006f64:	00840074 	movhi	r2,4097
10006f68:	10bbce04 	addi	r2,r2,-4296
10006f6c:	00c00204 	movi	r3,8
10006f70:	b4000017 	ldw	r16,0(r22)
10006f74:	d880a115 	stw	r2,644(sp)
10006f78:	d8c09e15 	stw	r3,632(sp)
10006f7c:	050000c4 	movi	r20,3
10006f80:	003e0c06 	br	100067b4 <__alt_data_end+0xf80067b4>
10006f84:	980b883a 	mov	r5,r19
10006f88:	b809883a 	mov	r4,r23
10006f8c:	000cc640 	call	1000cc64 <__srefill_r>
10006f90:	103f541e 	bne	r2,zero,10006ce4 <__alt_data_end+0xf8006ce4>
10006f94:	00840074 	movhi	r2,4097
10006f98:	10ba7004 	addi	r2,r2,-5696
10006f9c:	b4000017 	ldw	r16,0(r22)
10006fa0:	d880a115 	stw	r2,644(sp)
10006fa4:	d8009e15 	stw	zero,632(sp)
10006fa8:	050000c4 	movi	r20,3
10006fac:	003e0106 	br	100067b4 <__alt_data_end+0xf80067b4>
10006fb0:	980b883a 	mov	r5,r19
10006fb4:	b809883a 	mov	r4,r23
10006fb8:	000cc640 	call	1000cc64 <__srefill_r>
10006fbc:	103f491e 	bne	r2,zero,10006ce4 <__alt_data_end+0xf8006ce4>
10006fc0:	00840074 	movhi	r2,4097
10006fc4:	10bbce04 	addi	r2,r2,-4296
10006fc8:	00c00404 	movi	r3,16
10006fcc:	b4000017 	ldw	r16,0(r22)
10006fd0:	d880a115 	stw	r2,644(sp)
10006fd4:	d8c09e15 	stw	r3,632(sp)
10006fd8:	050000c4 	movi	r20,3
10006fdc:	003df506 	br	100067b4 <__alt_data_end+0xf80067b4>
10006fe0:	014000c4 	movi	r5,3
10006fe4:	a1416726 	beq	r20,r5,10007584 <__svfscanf_r+0x1208>
10006fe8:	01000104 	movi	r4,4
10006fec:	a101491e 	bne	r20,r4,10007514 <__svfscanf_r+0x1198>
10006ff0:	b809883a 	mov	r4,r23
10006ff4:	000ac040 	call	1000ac04 <_localeconv_r>
10006ff8:	10800017 	ldw	r2,0(r2)
10006ffc:	e0ffffc4 	addi	r3,fp,-1
10007000:	d880a315 	stw	r2,652(sp)
10007004:	00805704 	movi	r2,348
10007008:	10c21e2e 	bgeu	r2,r3,10007884 <__svfscanf_r+0x1508>
1000700c:	e73fa8c4 	addi	fp,fp,-349
10007010:	df00a215 	stw	fp,648(sp)
10007014:	07005744 	movi	fp,349
10007018:	8d01e014 	ori	r20,r17,1920
1000701c:	0023883a 	mov	r17,zero
10007020:	dc000104 	addi	r16,sp,4
10007024:	002b883a 	mov	r21,zero
10007028:	8805883a 	mov	r2,r17
1000702c:	0007883a 	mov	r3,zero
10007030:	8023883a 	mov	r17,r16
10007034:	b80d883a 	mov	r6,r23
10007038:	e021883a 	mov	r16,fp
1000703c:	a82f883a 	mov	r23,r21
10007040:	d800a515 	stw	zero,660(sp)
10007044:	d800a415 	stw	zero,656(sp)
10007048:	d8009f15 	stw	zero,636(sp)
1000704c:	01c01384 	movi	r7,78
10007050:	182b883a 	mov	r21,r3
10007054:	1039883a 	mov	fp,r2
10007058:	99000017 	ldw	r4,0(r19)
1000705c:	21400003 	ldbu	r5,0(r4)
10007060:	28bff544 	addi	r2,r5,-43
10007064:	10803fcc 	andi	r2,r2,255
10007068:	38810e36 	bltu	r7,r2,100074a4 <__svfscanf_r+0x1128>
1000706c:	100490ba 	slli	r2,r2,2
10007070:	00c40034 	movhi	r3,4096
10007074:	18dc2104 	addi	r3,r3,28804
10007078:	10c5883a 	add	r2,r2,r3
1000707c:	10800017 	ldw	r2,0(r2)
10007080:	1000683a 	jmp	r2
10007084:	10007378 	rdprs	zero,r2,461
10007088:	100074a4 	muli	zero,r2,466
1000708c:	10007378 	rdprs	zero,r2,461
10007090:	100074a4 	muli	zero,r2,466
10007094:	100074a4 	muli	zero,r2,466
10007098:	1000734c 	andi	zero,r2,461
1000709c:	100071c0 	call	1100071c <_gp+0xfd9e9c>
100070a0:	100071c0 	call	1100071c <_gp+0xfd9e9c>
100070a4:	100071c0 	call	1100071c <_gp+0xfd9e9c>
100070a8:	100071c0 	call	1100071c <_gp+0xfd9e9c>
100070ac:	100071c0 	call	1100071c <_gp+0xfd9e9c>
100070b0:	100071c0 	call	1100071c <_gp+0xfd9e9c>
100070b4:	100071c0 	call	1100071c <_gp+0xfd9e9c>
100070b8:	100071c0 	call	1100071c <_gp+0xfd9e9c>
100070bc:	100071c0 	call	1100071c <_gp+0xfd9e9c>
100070c0:	100074a4 	muli	zero,r2,466
100070c4:	100074a4 	muli	zero,r2,466
100070c8:	100074a4 	muli	zero,r2,466
100070cc:	100074a4 	muli	zero,r2,466
100070d0:	100074a4 	muli	zero,r2,466
100070d4:	100074a4 	muli	zero,r2,466
100070d8:	100074a4 	muli	zero,r2,466
100070dc:	10007494 	ori	zero,r2,466
100070e0:	100074a4 	muli	zero,r2,466
100070e4:	100074a4 	muli	zero,r2,466
100070e8:	100074a4 	muli	zero,r2,466
100070ec:	10007450 	cmplti	zero,r2,465
100070f0:	10007434 	orhi	zero,r2,464
100070f4:	100074a4 	muli	zero,r2,466
100070f8:	100074a4 	muli	zero,r2,466
100070fc:	100073fc 	xorhi	zero,r2,463
10007100:	100074a4 	muli	zero,r2,466
10007104:	100074a4 	muli	zero,r2,466
10007108:	100074a4 	muli	zero,r2,466
1000710c:	100074a4 	muli	zero,r2,466
10007110:	100073c4 	addi	zero,r2,463
10007114:	100074a4 	muli	zero,r2,466
10007118:	100074a4 	muli	zero,r2,466
1000711c:	100074a4 	muli	zero,r2,466
10007120:	100074a4 	muli	zero,r2,466
10007124:	100074a4 	muli	zero,r2,466
10007128:	100073a8 	cmpgeui	zero,r2,462
1000712c:	100074a4 	muli	zero,r2,466
10007130:	100074a4 	muli	zero,r2,466
10007134:	100074a4 	muli	zero,r2,466
10007138:	100074a4 	muli	zero,r2,466
1000713c:	1000738c 	andi	zero,r2,462
10007140:	100074a4 	muli	zero,r2,466
10007144:	100074a4 	muli	zero,r2,466
10007148:	100074a4 	muli	zero,r2,466
1000714c:	100074a4 	muli	zero,r2,466
10007150:	100074a4 	muli	zero,r2,466
10007154:	100074a4 	muli	zero,r2,466
10007158:	100074a4 	muli	zero,r2,466
1000715c:	10007494 	ori	zero,r2,466
10007160:	100074a4 	muli	zero,r2,466
10007164:	100074a4 	muli	zero,r2,466
10007168:	100074a4 	muli	zero,r2,466
1000716c:	10007450 	cmplti	zero,r2,465
10007170:	10007434 	orhi	zero,r2,464
10007174:	100074a4 	muli	zero,r2,466
10007178:	100074a4 	muli	zero,r2,466
1000717c:	100073fc 	xorhi	zero,r2,463
10007180:	100074a4 	muli	zero,r2,466
10007184:	100074a4 	muli	zero,r2,466
10007188:	100074a4 	muli	zero,r2,466
1000718c:	100074a4 	muli	zero,r2,466
10007190:	100073c4 	addi	zero,r2,463
10007194:	100074a4 	muli	zero,r2,466
10007198:	100074a4 	muli	zero,r2,466
1000719c:	100074a4 	muli	zero,r2,466
100071a0:	100074a4 	muli	zero,r2,466
100071a4:	100074a4 	muli	zero,r2,466
100071a8:	100073a8 	cmpgeui	zero,r2,462
100071ac:	100074a4 	muli	zero,r2,466
100071b0:	100074a4 	muli	zero,r2,466
100071b4:	100074a4 	muli	zero,r2,466
100071b8:	100074a4 	muli	zero,r2,466
100071bc:	1000738c 	andi	zero,r2,462
100071c0:	a8803fcc 	andi	r2,r21,255
100071c4:	1080201c 	xori	r2,r2,128
100071c8:	10bfe004 	addi	r2,r2,-128
100071cc:	b885883a 	add	r2,r23,r2
100071d0:	10000d1e 	bne	r2,zero,10007208 <__svfscanf_r+0xe8c>
100071d4:	00bf9fc4 	movi	r2,-385
100071d8:	a0a8703a 	and	r20,r20,r2
100071dc:	89400005 	stb	r5,0(r17)
100071e0:	8c400044 	addi	r17,r17,1
100071e4:	98800117 	ldw	r2,4(r19)
100071e8:	843fffc4 	addi	r16,r16,-1
100071ec:	94800044 	addi	r18,r18,1
100071f0:	10bfffc4 	addi	r2,r2,-1
100071f4:	98800115 	stw	r2,4(r19)
100071f8:	0080b40e 	bge	zero,r2,100074cc <__svfscanf_r+0x1150>
100071fc:	21000044 	addi	r4,r4,1
10007200:	99000015 	stw	r4,0(r19)
10007204:	803f941e 	bne	r16,zero,10007058 <__alt_data_end+0xf8007058>
10007208:	8821883a 	mov	r16,r17
1000720c:	a807883a 	mov	r3,r21
10007210:	e023883a 	mov	r17,fp
10007214:	b82b883a 	mov	r21,r23
10007218:	302f883a 	mov	r23,r6
1000721c:	e001961e 	bne	fp,zero,10007878 <__svfscanf_r+0x14fc>
10007220:	ab3fffc4 	addi	r12,r21,-1
10007224:	00800044 	movi	r2,1
10007228:	1302a22e 	bgeu	r2,r12,10007cb4 <__svfscanf_r+0x1938>
1000722c:	18803fcc 	andi	r2,r3,255
10007230:	1080201c 	xori	r2,r2,128
10007234:	10bfe004 	addi	r2,r2,-128
10007238:	113fffc4 	addi	r4,r2,-1
1000723c:	01400184 	movi	r5,6
10007240:	29001136 	bltu	r5,r4,10007288 <__svfscanf_r+0xf0c>
10007244:	01000084 	movi	r4,2
10007248:	2082770e 	bge	r4,r2,10007c28 <__svfscanf_r+0x18ac>
1000724c:	054000c4 	movi	r21,3
10007250:	1839883a 	mov	fp,r3
10007254:	15400c26 	beq	r2,r21,10007288 <__svfscanf_r+0xf0c>
10007258:	9425c83a 	sub	r18,r18,r16
1000725c:	843fffc4 	addi	r16,r16,-1
10007260:	81400007 	ldb	r5,0(r16)
10007264:	980d883a 	mov	r6,r19
10007268:	b809883a 	mov	r4,r23
1000726c:	001187c0 	call	1001187c <_ungetc_r>
10007270:	e0bfffc4 	addi	r2,fp,-1
10007274:	10c03fcc 	andi	r3,r2,255
10007278:	8493883a 	add	r9,r16,r18
1000727c:	1039883a 	mov	fp,r2
10007280:	a8fff636 	bltu	r21,r3,1000725c <__alt_data_end+0xf800725c>
10007284:	4825883a 	mov	r18,r9
10007288:	a080400c 	andi	r2,r20,256
1000728c:	10001426 	beq	r2,zero,100072e0 <__svfscanf_r+0xf64>
10007290:	a081000c 	andi	r2,r20,1024
10007294:	10027b1e 	bne	r2,zero,10007c84 <__svfscanf_r+0x1908>
10007298:	817fffc7 	ldb	r5,-1(r16)
1000729c:	00801944 	movi	r2,101
100072a0:	873fffc4 	addi	fp,r16,-1
100072a4:	957fffc4 	addi	r21,r18,-1
100072a8:	28800826 	beq	r5,r2,100072cc <__svfscanf_r+0xf50>
100072ac:	00801144 	movi	r2,69
100072b0:	28800626 	beq	r5,r2,100072cc <__svfscanf_r+0xf50>
100072b4:	980d883a 	mov	r6,r19
100072b8:	b809883a 	mov	r4,r23
100072bc:	001187c0 	call	1001187c <_ungetc_r>
100072c0:	817fff87 	ldb	r5,-2(r16)
100072c4:	873fff84 	addi	fp,r16,-2
100072c8:	957fff84 	addi	r21,r18,-2
100072cc:	980d883a 	mov	r6,r19
100072d0:	b809883a 	mov	r4,r23
100072d4:	001187c0 	call	1001187c <_ungetc_r>
100072d8:	a825883a 	mov	r18,r21
100072dc:	e021883a 	mov	r16,fp
100072e0:	a080040c 	andi	r2,r20,16
100072e4:	103e451e 	bne	r2,zero,10006bfc <__alt_data_end+0xf8006bfc>
100072e8:	80000005 	stb	zero,0(r16)
100072ec:	a081800c 	andi	r2,r20,1536
100072f0:	01010004 	movi	r4,1024
100072f4:	1101ea26 	beq	r2,r4,10007aa0 <__svfscanf_r+0x1724>
100072f8:	d8c0a417 	ldw	r3,656(sp)
100072fc:	1801f41e 	bne	r3,zero,10007ad0 <__svfscanf_r+0x1754>
10007300:	000d883a 	mov	r6,zero
10007304:	d9400104 	addi	r5,sp,4
10007308:	b809883a 	mov	r4,r23
1000730c:	000d2c40 	call	1000d2c4 <_strtod_r>
10007310:	1021883a 	mov	r16,r2
10007314:	a080004c 	andi	r2,r20,1
10007318:	1001b926 	beq	r2,zero,10007a00 <__svfscanf_r+0x1684>
1000731c:	d9009c17 	ldw	r4,624(sp)
10007320:	20800017 	ldw	r2,0(r4)
10007324:	21000104 	addi	r4,r4,4
10007328:	d9009c15 	stw	r4,624(sp)
1000732c:	14000015 	stw	r16,0(r2)
10007330:	10c00115 	stw	r3,4(r2)
10007334:	d8c0a017 	ldw	r3,640(sp)
10007338:	dd009d17 	ldw	r20,628(sp)
1000733c:	18c00044 	addi	r3,r3,1
10007340:	d8c0a015 	stw	r3,640(sp)
10007344:	a00d883a 	mov	r6,r20
10007348:	003c4906 	br	10006470 <__alt_data_end+0xf8006470>
1000734c:	a080400c 	andi	r2,r20,256
10007350:	103f9b26 	beq	r2,zero,100071c0 <__alt_data_end+0xf80071c0>
10007354:	d8c0a217 	ldw	r3,648(sp)
10007358:	00bfdfc4 	movi	r2,-129
1000735c:	a0a8703a 	and	r20,r20,r2
10007360:	e7000044 	addi	fp,fp,1
10007364:	183f9f26 	beq	r3,zero,100071e4 <__alt_data_end+0xf80071e4>
10007368:	18ffffc4 	addi	r3,r3,-1
1000736c:	d8c0a215 	stw	r3,648(sp)
10007370:	84000044 	addi	r16,r16,1
10007374:	003f9b06 	br	100071e4 <__alt_data_end+0xf80071e4>
10007378:	a080200c 	andi	r2,r20,128
1000737c:	103fa226 	beq	r2,zero,10007208 <__alt_data_end+0xf8007208>
10007380:	00bfdfc4 	movi	r2,-129
10007384:	a0a8703a 	and	r20,r20,r2
10007388:	003f9406 	br	100071dc <__alt_data_end+0xf80071dc>
1000738c:	a8803fcc 	andi	r2,r21,255
10007390:	1080201c 	xori	r2,r2,128
10007394:	10bfe004 	addi	r2,r2,-128
10007398:	00c001c4 	movi	r3,7
1000739c:	10ff9a1e 	bne	r2,r3,10007208 <__alt_data_end+0xf8007208>
100073a0:	05400204 	movi	r21,8
100073a4:	003f8d06 	br	100071dc <__alt_data_end+0xf80071dc>
100073a8:	a8803fcc 	andi	r2,r21,255
100073ac:	1080201c 	xori	r2,r2,128
100073b0:	10bfe004 	addi	r2,r2,-128
100073b4:	02000184 	movi	r8,6
100073b8:	123f931e 	bne	r2,r8,10007208 <__alt_data_end+0xf8007208>
100073bc:	054001c4 	movi	r21,7
100073c0:	003f8606 	br	100071dc <__alt_data_end+0xf80071dc>
100073c4:	b8004f1e 	bne	r23,zero,10007504 <__svfscanf_r+0x1188>
100073c8:	e000031e 	bne	fp,zero,100073d8 <__svfscanf_r+0x105c>
100073cc:	a081c00c 	andi	r2,r20,1792
100073d0:	0201c004 	movi	r8,1792
100073d4:	1201a226 	beq	r2,r8,10007a60 <__svfscanf_r+0x16e4>
100073d8:	a8803fcc 	andi	r2,r21,255
100073dc:	1080201c 	xori	r2,r2,128
100073e0:	10bfe004 	addi	r2,r2,-128
100073e4:	02000044 	movi	r8,1
100073e8:	12000226 	beq	r2,r8,100073f4 <__svfscanf_r+0x1078>
100073ec:	02000104 	movi	r8,4
100073f0:	123f851e 	bne	r2,r8,10007208 <__alt_data_end+0xf8007208>
100073f4:	ad400044 	addi	r21,r21,1
100073f8:	003f7806 	br	100071dc <__alt_data_end+0xf80071dc>
100073fc:	a8803fcc 	andi	r2,r21,255
10007400:	1080201c 	xori	r2,r2,128
10007404:	10bfe004 	addi	r2,r2,-128
10007408:	1000391e 	bne	r2,zero,100074f0 <__svfscanf_r+0x1174>
1000740c:	e001151e 	bne	fp,zero,10007864 <__svfscanf_r+0x14e8>
10007410:	a081c00c 	andi	r2,r20,1792
10007414:	0201c004 	movi	r8,1792
10007418:	12019b26 	beq	r2,r8,10007a88 <__svfscanf_r+0x170c>
1000741c:	8821883a 	mov	r16,r17
10007420:	a807883a 	mov	r3,r21
10007424:	e023883a 	mov	r17,fp
10007428:	b82b883a 	mov	r21,r23
1000742c:	302f883a 	mov	r23,r6
10007430:	003f7b06 	br	10007220 <__alt_data_end+0xf8007220>
10007434:	a8803fcc 	andi	r2,r21,255
10007438:	1080201c 	xori	r2,r2,128
1000743c:	10bfe004 	addi	r2,r2,-128
10007440:	02000084 	movi	r8,2
10007444:	123f701e 	bne	r2,r8,10007208 <__alt_data_end+0xf8007208>
10007448:	054000c4 	movi	r21,3
1000744c:	003f6306 	br	100071dc <__alt_data_end+0xf80071dc>
10007450:	a081400c 	andi	r2,r20,1280
10007454:	00c10004 	movi	r3,1024
10007458:	10c00326 	beq	r2,r3,10007468 <__svfscanf_r+0x10ec>
1000745c:	a0c4703a 	and	r2,r20,r3
10007460:	103f6926 	beq	r2,zero,10007208 <__alt_data_end+0xf8007208>
10007464:	e03fed26 	beq	fp,zero,1000741c <__alt_data_end+0xf800741c>
10007468:	a080800c 	andi	r2,r20,512
1000746c:	1000041e 	bne	r2,zero,10007480 <__svfscanf_r+0x1104>
10007470:	d8c09f17 	ldw	r3,636(sp)
10007474:	dc40a515 	stw	r17,660(sp)
10007478:	e0f9c83a 	sub	fp,fp,r3
1000747c:	df00a415 	stw	fp,656(sp)
10007480:	00be1fc4 	movi	r2,-1921
10007484:	a0a8703a 	and	r20,r20,r2
10007488:	a5006014 	ori	r20,r20,384
1000748c:	0039883a 	mov	fp,zero
10007490:	003f5206 	br	100071dc <__alt_data_end+0xf80071dc>
10007494:	00800044 	movi	r2,1
10007498:	b8bf5b1e 	bne	r23,r2,10007208 <__alt_data_end+0xf8007208>
1000749c:	05c00084 	movi	r23,2
100074a0:	003f4e06 	br	100071dc <__alt_data_end+0xf80071dc>
100074a4:	d8c0a317 	ldw	r3,652(sp)
100074a8:	2a003fcc 	andi	r8,r5,255
100074ac:	18800003 	ldbu	r2,0(r3)
100074b0:	40bf551e 	bne	r8,r2,10007208 <__alt_data_end+0xf8007208>
100074b4:	a080800c 	andi	r2,r20,512
100074b8:	103f5326 	beq	r2,zero,10007208 <__alt_data_end+0xf8007208>
100074bc:	00bf5fc4 	movi	r2,-641
100074c0:	a0a8703a 	and	r20,r20,r2
100074c4:	df009f15 	stw	fp,636(sp)
100074c8:	003f4406 	br	100071dc <__alt_data_end+0xf80071dc>
100074cc:	3009883a 	mov	r4,r6
100074d0:	980b883a 	mov	r5,r19
100074d4:	d980a915 	stw	r6,676(sp)
100074d8:	d9c0aa15 	stw	r7,680(sp)
100074dc:	000cc640 	call	1000cc64 <__srefill_r>
100074e0:	d980a917 	ldw	r6,676(sp)
100074e4:	d9c0aa17 	ldw	r7,680(sp)
100074e8:	103f4626 	beq	r2,zero,10007204 <__alt_data_end+0xf8007204>
100074ec:	003f4606 	br	10007208 <__alt_data_end+0xf8007208>
100074f0:	020000c4 	movi	r8,3
100074f4:	123fbf26 	beq	r2,r8,100073f4 <__alt_data_end+0xf80073f4>
100074f8:	02000144 	movi	r8,5
100074fc:	123fbd26 	beq	r2,r8,100073f4 <__alt_data_end+0xf80073f4>
10007500:	003f4106 	br	10007208 <__alt_data_end+0xf8007208>
10007504:	00800084 	movi	r2,2
10007508:	b8bfb31e 	bne	r23,r2,100073d8 <__alt_data_end+0xf80073d8>
1000750c:	05c000c4 	movi	r23,3
10007510:	003f3206 	br	100071dc <__alt_data_end+0xf80071dc>
10007514:	e000011e 	bne	fp,zero,1000751c <__svfscanf_r+0x11a0>
10007518:	073fffc4 	movi	fp,-1
1000751c:	8900004c 	andi	r4,r17,1
10007520:	20011d1e 	bne	r4,zero,10007998 <__svfscanf_r+0x161c>
10007524:	8c40040c 	andi	r17,r17,16
10007528:	8800da26 	beq	r17,zero,10007894 <__svfscanf_r+0x1518>
1000752c:	0023883a 	mov	r17,zero
10007530:	00000306 	br	10007540 <__svfscanf_r+0x11c4>
10007534:	18800003 	ldbu	r2,0(r3)
10007538:	8085883a 	add	r2,r16,r2
1000753c:	10800043 	ldbu	r2,1(r2)
10007540:	1080020c 	andi	r2,r2,8
10007544:	1000fc1e 	bne	r2,zero,10007938 <__svfscanf_r+0x15bc>
10007548:	98800117 	ldw	r2,4(r19)
1000754c:	18c00044 	addi	r3,r3,1
10007550:	8c400044 	addi	r17,r17,1
10007554:	10bfffc4 	addi	r2,r2,-1
10007558:	98800115 	stw	r2,4(r19)
1000755c:	98c00015 	stw	r3,0(r19)
10007560:	8f00f526 	beq	r17,fp,10007938 <__svfscanf_r+0x15bc>
10007564:	00bff316 	blt	zero,r2,10007534 <__alt_data_end+0xf8007534>
10007568:	980b883a 	mov	r5,r19
1000756c:	b809883a 	mov	r4,r23
10007570:	000cc640 	call	1000cc64 <__srefill_r>
10007574:	1000f01e 	bne	r2,zero,10007938 <__svfscanf_r+0x15bc>
10007578:	b4000017 	ldw	r16,0(r22)
1000757c:	98c00017 	ldw	r3,0(r19)
10007580:	003fec06 	br	10007534 <__alt_data_end+0xf8007534>
10007584:	e0bfffc4 	addi	r2,fp,-1
10007588:	01405704 	movi	r5,348
1000758c:	2880bf2e 	bgeu	r5,r2,1000788c <__svfscanf_r+0x1510>
10007590:	e1ffa8c4 	addi	r7,fp,-349
10007594:	07005744 	movi	fp,349
10007598:	8c436014 	ori	r17,r17,3456
1000759c:	9013883a 	mov	r9,r18
100075a0:	8825883a 	mov	r18,r17
100075a4:	dc409e17 	ldw	r17,632(sp)
100075a8:	0029883a 	mov	r20,zero
100075ac:	dc000104 	addi	r16,sp,4
100075b0:	05401344 	movi	r21,77
100075b4:	02c08004 	movi	r11,512
100075b8:	01bf7fc4 	movi	r6,-513
100075bc:	023fdfc4 	movi	r8,-129
100075c0:	20bff544 	addi	r2,r4,-43
100075c4:	10803fcc 	andi	r2,r2,255
100075c8:	a8807236 	bltu	r21,r2,10007794 <__svfscanf_r+0x1418>
100075cc:	100490ba 	slli	r2,r2,2
100075d0:	01440034 	movhi	r5,4096
100075d4:	295d7904 	addi	r5,r5,30180
100075d8:	1145883a 	add	r2,r2,r5
100075dc:	10800017 	ldw	r2,0(r2)
100075e0:	1000683a 	jmp	r2
100075e4:	10007818 	cmpnei	zero,r2,480
100075e8:	10007794 	ori	zero,r2,478
100075ec:	10007818 	cmpnei	zero,r2,480
100075f0:	10007794 	ori	zero,r2,478
100075f4:	10007794 	ori	zero,r2,478
100075f8:	100077f0 	cmpltui	zero,r2,479
100075fc:	100077d0 	cmplti	zero,r2,479
10007600:	100077d0 	cmplti	zero,r2,479
10007604:	100077d0 	cmplti	zero,r2,479
10007608:	100077d0 	cmplti	zero,r2,479
1000760c:	100077d0 	cmplti	zero,r2,479
10007610:	100077d0 	cmplti	zero,r2,479
10007614:	100077d0 	cmplti	zero,r2,479
10007618:	10007778 	rdprs	zero,r2,477
1000761c:	10007778 	rdprs	zero,r2,477
10007620:	10007794 	ori	zero,r2,478
10007624:	10007794 	ori	zero,r2,478
10007628:	10007794 	ori	zero,r2,478
1000762c:	10007794 	ori	zero,r2,478
10007630:	10007794 	ori	zero,r2,478
10007634:	10007794 	ori	zero,r2,478
10007638:	10007794 	ori	zero,r2,478
1000763c:	10007764 	muli	zero,r2,477
10007640:	10007764 	muli	zero,r2,477
10007644:	10007764 	muli	zero,r2,477
10007648:	10007764 	muli	zero,r2,477
1000764c:	10007764 	muli	zero,r2,477
10007650:	10007764 	muli	zero,r2,477
10007654:	10007794 	ori	zero,r2,478
10007658:	10007794 	ori	zero,r2,478
1000765c:	10007794 	ori	zero,r2,478
10007660:	10007794 	ori	zero,r2,478
10007664:	10007794 	ori	zero,r2,478
10007668:	10007794 	ori	zero,r2,478
1000766c:	10007794 	ori	zero,r2,478
10007670:	10007794 	ori	zero,r2,478
10007674:	10007794 	ori	zero,r2,478
10007678:	10007794 	ori	zero,r2,478
1000767c:	10007794 	ori	zero,r2,478
10007680:	10007794 	ori	zero,r2,478
10007684:	10007794 	ori	zero,r2,478
10007688:	10007794 	ori	zero,r2,478
1000768c:	10007794 	ori	zero,r2,478
10007690:	10007794 	ori	zero,r2,478
10007694:	10007794 	ori	zero,r2,478
10007698:	1000771c 	xori	zero,r2,476
1000769c:	10007794 	ori	zero,r2,478
100076a0:	10007794 	ori	zero,r2,478
100076a4:	10007794 	ori	zero,r2,478
100076a8:	10007794 	ori	zero,r2,478
100076ac:	10007794 	ori	zero,r2,478
100076b0:	10007794 	ori	zero,r2,478
100076b4:	10007794 	ori	zero,r2,478
100076b8:	10007794 	ori	zero,r2,478
100076bc:	10007764 	muli	zero,r2,477
100076c0:	10007764 	muli	zero,r2,477
100076c4:	10007764 	muli	zero,r2,477
100076c8:	10007764 	muli	zero,r2,477
100076cc:	10007764 	muli	zero,r2,477
100076d0:	10007764 	muli	zero,r2,477
100076d4:	10007794 	ori	zero,r2,478
100076d8:	10007794 	ori	zero,r2,478
100076dc:	10007794 	ori	zero,r2,478
100076e0:	10007794 	ori	zero,r2,478
100076e4:	10007794 	ori	zero,r2,478
100076e8:	10007794 	ori	zero,r2,478
100076ec:	10007794 	ori	zero,r2,478
100076f0:	10007794 	ori	zero,r2,478
100076f4:	10007794 	ori	zero,r2,478
100076f8:	10007794 	ori	zero,r2,478
100076fc:	10007794 	ori	zero,r2,478
10007700:	10007794 	ori	zero,r2,478
10007704:	10007794 	ori	zero,r2,478
10007708:	10007794 	ori	zero,r2,478
1000770c:	10007794 	ori	zero,r2,478
10007710:	10007794 	ori	zero,r2,478
10007714:	10007794 	ori	zero,r2,478
10007718:	1000771c 	xori	zero,r2,476
1000771c:	9081800c 	andi	r2,r18,1536
10007720:	12c01c1e 	bne	r2,r11,10007794 <__svfscanf_r+0x1418>
10007724:	91a4703a 	and	r18,r18,r6
10007728:	94814014 	ori	r18,r18,1280
1000772c:	04400404 	movi	r17,16
10007730:	81000005 	stb	r4,0(r16)
10007734:	84000044 	addi	r16,r16,1
10007738:	98800117 	ldw	r2,4(r19)
1000773c:	10bfffc4 	addi	r2,r2,-1
10007740:	98800115 	stw	r2,4(r19)
10007744:	0080380e 	bge	zero,r2,10007828 <__svfscanf_r+0x14ac>
10007748:	18c00044 	addi	r3,r3,1
1000774c:	98c00015 	stw	r3,0(r19)
10007750:	e73fffc4 	addi	fp,fp,-1
10007754:	e0000f26 	beq	fp,zero,10007794 <__svfscanf_r+0x1418>
10007758:	98c00017 	ldw	r3,0(r19)
1000775c:	19000003 	ldbu	r4,0(r3)
10007760:	003f9706 	br	100075c0 <__alt_data_end+0xf80075c0>
10007764:	00800284 	movi	r2,10
10007768:	14400a0e 	bge	r2,r17,10007794 <__svfscanf_r+0x1418>
1000776c:	00bd1fc4 	movi	r2,-2945
10007770:	90a4703a 	and	r18,r18,r2
10007774:	003fee06 	br	10007730 <__alt_data_end+0xf8007730>
10007778:	014400b4 	movhi	r5,4098
1000777c:	8c63883a 	add	r17,r17,r17
10007780:	2971bd84 	addi	r5,r5,-14602
10007784:	2c45883a 	add	r2,r5,r17
10007788:	1440000f 	ldh	r17,0(r2)
1000778c:	00800204 	movi	r2,8
10007790:	147ff616 	blt	r2,r17,1000776c <__alt_data_end+0xf800776c>
10007794:	dc409e15 	stw	r17,632(sp)
10007798:	9023883a 	mov	r17,r18
1000779c:	8880400c 	andi	r2,r17,256
100077a0:	4825883a 	mov	r18,r9
100077a4:	10000426 	beq	r2,zero,100077b8 <__svfscanf_r+0x143c>
100077a8:	d8800104 	addi	r2,sp,4
100077ac:	1400b036 	bltu	r2,r16,10007a70 <__svfscanf_r+0x16f4>
100077b0:	d8c00104 	addi	r3,sp,4
100077b4:	1c3b3226 	beq	r3,r16,10006480 <__alt_data_end+0xf8006480>
100077b8:	8880040c 	andi	r2,r17,16
100077bc:	10006226 	beq	r2,zero,10007948 <__svfscanf_r+0x15cc>
100077c0:	d8800104 	addi	r2,sp,4
100077c4:	80a1c83a 	sub	r16,r16,r2
100077c8:	8521883a 	add	r16,r16,r20
100077cc:	003ca506 	br	10006a64 <__alt_data_end+0xf8006a64>
100077d0:	014400b4 	movhi	r5,4098
100077d4:	8c63883a 	add	r17,r17,r17
100077d8:	2971bd84 	addi	r5,r5,-14602
100077dc:	2c45883a 	add	r2,r5,r17
100077e0:	1440000f 	ldh	r17,0(r2)
100077e4:	00bd1fc4 	movi	r2,-2945
100077e8:	90a4703a 	and	r18,r18,r2
100077ec:	003fd006 	br	10007730 <__alt_data_end+0xf8007730>
100077f0:	9082000c 	andi	r2,r18,2048
100077f4:	103fce26 	beq	r2,zero,10007730 <__alt_data_end+0xf8007730>
100077f8:	8800021e 	bne	r17,zero,10007804 <__svfscanf_r+0x1488>
100077fc:	94808014 	ori	r18,r18,512
10007800:	04400204 	movi	r17,8
10007804:	9081000c 	andi	r2,r18,1024
10007808:	10008626 	beq	r2,zero,10007a24 <__svfscanf_r+0x16a8>
1000780c:	00be9fc4 	movi	r2,-1409
10007810:	90a4703a 	and	r18,r18,r2
10007814:	003fc606 	br	10007730 <__alt_data_end+0xf8007730>
10007818:	9080200c 	andi	r2,r18,128
1000781c:	103fdd26 	beq	r2,zero,10007794 <__alt_data_end+0xf8007794>
10007820:	9224703a 	and	r18,r18,r8
10007824:	003fc206 	br	10007730 <__alt_data_end+0xf8007730>
10007828:	980b883a 	mov	r5,r19
1000782c:	b809883a 	mov	r4,r23
10007830:	d980a915 	stw	r6,676(sp)
10007834:	d9c0aa15 	stw	r7,680(sp)
10007838:	da00a715 	stw	r8,668(sp)
1000783c:	da40a815 	stw	r9,672(sp)
10007840:	dac0a615 	stw	r11,664(sp)
10007844:	000cc640 	call	1000cc64 <__srefill_r>
10007848:	d980a917 	ldw	r6,676(sp)
1000784c:	d9c0aa17 	ldw	r7,680(sp)
10007850:	da00a717 	ldw	r8,668(sp)
10007854:	da40a817 	ldw	r9,672(sp)
10007858:	dac0a617 	ldw	r11,664(sp)
1000785c:	103fbc26 	beq	r2,zero,10007750 <__alt_data_end+0xf8007750>
10007860:	003fcc06 	br	10007794 <__alt_data_end+0xf8007794>
10007864:	8821883a 	mov	r16,r17
10007868:	a807883a 	mov	r3,r21
1000786c:	e023883a 	mov	r17,fp
10007870:	b82b883a 	mov	r21,r23
10007874:	302f883a 	mov	r23,r6
10007878:	00bfbfc4 	movi	r2,-257
1000787c:	a0a8703a 	and	r20,r20,r2
10007880:	003e6706 	br	10007220 <__alt_data_end+0xf8007220>
10007884:	d800a215 	stw	zero,648(sp)
10007888:	003de306 	br	10007018 <__alt_data_end+0xf8007018>
1000788c:	000f883a 	mov	r7,zero
10007890:	003f4106 	br	10007598 <__alt_data_end+0xf8007598>
10007894:	d9409c17 	ldw	r5,624(sp)
10007898:	e2bfffc4 	addi	r10,fp,-1
1000789c:	2c400017 	ldw	r17,0(r5)
100078a0:	2c000104 	addi	r16,r5,4
100078a4:	8aa9883a 	add	r20,r17,r10
100078a8:	880b883a 	mov	r5,r17
100078ac:	00000606 	br	100078c8 <__svfscanf_r+0x154c>
100078b0:	98c00017 	ldw	r3,0(r19)
100078b4:	b1000017 	ldw	r4,0(r22)
100078b8:	a80b883a 	mov	r5,r21
100078bc:	18800003 	ldbu	r2,0(r3)
100078c0:	2085883a 	add	r2,r4,r2
100078c4:	10800043 	ldbu	r2,1(r2)
100078c8:	1080020c 	andi	r2,r2,8
100078cc:	1000621e 	bne	r2,zero,10007a58 <__svfscanf_r+0x16dc>
100078d0:	98800117 	ldw	r2,4(r19)
100078d4:	19000044 	addi	r4,r3,1
100078d8:	99000015 	stw	r4,0(r19)
100078dc:	10bfffc4 	addi	r2,r2,-1
100078e0:	98800115 	stw	r2,4(r19)
100078e4:	18800003 	ldbu	r2,0(r3)
100078e8:	2d400044 	addi	r21,r5,1
100078ec:	a839883a 	mov	fp,r21
100078f0:	28800005 	stb	r2,0(r5)
100078f4:	2d000626 	beq	r5,r20,10007910 <__svfscanf_r+0x1594>
100078f8:	98800117 	ldw	r2,4(r19)
100078fc:	00bfec16 	blt	zero,r2,100078b0 <__alt_data_end+0xf80078b0>
10007900:	980b883a 	mov	r5,r19
10007904:	b809883a 	mov	r4,r23
10007908:	000cc640 	call	1000cc64 <__srefill_r>
1000790c:	103fe826 	beq	r2,zero,100078b0 <__alt_data_end+0xf80078b0>
10007910:	d880a017 	ldw	r2,640(sp)
10007914:	dd009d17 	ldw	r20,628(sp)
10007918:	e463c83a 	sub	r17,fp,r17
1000791c:	10800044 	addi	r2,r2,1
10007920:	e0000005 	stb	zero,0(fp)
10007924:	9465883a 	add	r18,r18,r17
10007928:	d880a015 	stw	r2,640(sp)
1000792c:	dc009c15 	stw	r16,624(sp)
10007930:	a00d883a 	mov	r6,r20
10007934:	003ace06 	br	10006470 <__alt_data_end+0xf8006470>
10007938:	dd009d17 	ldw	r20,628(sp)
1000793c:	9465883a 	add	r18,r18,r17
10007940:	a00d883a 	mov	r6,r20
10007944:	003aca06 	br	10006470 <__alt_data_end+0xf8006470>
10007948:	d8c0a117 	ldw	r3,644(sp)
1000794c:	d9c09e17 	ldw	r7,632(sp)
10007950:	000d883a 	mov	r6,zero
10007954:	d9400104 	addi	r5,sp,4
10007958:	b809883a 	mov	r4,r23
1000795c:	80000005 	stb	zero,0(r16)
10007960:	183ee83a 	callr	r3
10007964:	88c0080c 	andi	r3,r17,32
10007968:	1800351e 	bne	r3,zero,10007a40 <__svfscanf_r+0x16c4>
1000796c:	88c0010c 	andi	r3,r17,4
10007970:	18007026 	beq	r3,zero,10007b34 <__svfscanf_r+0x17b8>
10007974:	d9409c17 	ldw	r5,624(sp)
10007978:	28c00017 	ldw	r3,0(r5)
1000797c:	29400104 	addi	r5,r5,4
10007980:	d9409c15 	stw	r5,624(sp)
10007984:	1880000d 	sth	r2,0(r3)
10007988:	d940a017 	ldw	r5,640(sp)
1000798c:	29400044 	addi	r5,r5,1
10007990:	d940a015 	stw	r5,640(sp)
10007994:	003f8a06 	br	100077c0 <__alt_data_end+0xf80077c0>
10007998:	dd409904 	addi	r21,sp,612
1000799c:	8c40040c 	andi	r17,r17,16
100079a0:	01800204 	movi	r6,8
100079a4:	000b883a 	mov	r5,zero
100079a8:	a809883a 	mov	r4,r21
100079ac:	000b39c0 	call	1000b39c <memset>
100079b0:	8800391e 	bne	r17,zero,10007a98 <__svfscanf_r+0x171c>
100079b4:	d8c09c17 	ldw	r3,624(sp)
100079b8:	1d000017 	ldw	r20,0(r3)
100079bc:	18c00104 	addi	r3,r3,4
100079c0:	d8c09c15 	stw	r3,624(sp)
100079c4:	000d883a 	mov	r6,zero
100079c8:	3021883a 	mov	r16,r6
100079cc:	dc409f15 	stw	r17,636(sp)
100079d0:	98800017 	ldw	r2,0(r19)
100079d4:	b0c00017 	ldw	r3,0(r22)
100079d8:	10800003 	ldbu	r2,0(r2)
100079dc:	1885883a 	add	r2,r3,r2
100079e0:	10800043 	ldbu	r2,1(r2)
100079e4:	1080020c 	andi	r2,r2,8
100079e8:	1000011e 	bne	r2,zero,100079f0 <__svfscanf_r+0x1674>
100079ec:	e000651e 	bne	fp,zero,10007b84 <__svfscanf_r+0x1808>
100079f0:	dc409f17 	ldw	r17,636(sp)
100079f4:	883c811e 	bne	r17,zero,10006bfc <__alt_data_end+0xf8006bfc>
100079f8:	a0000015 	stw	zero,0(r20)
100079fc:	003c7c06 	br	10006bf0 <__alt_data_end+0xf8006bf0>
10007a00:	a2c0008c 	andi	r11,r20,2
10007a04:	58003c26 	beq	r11,zero,10007af8 <__svfscanf_r+0x177c>
10007a08:	d9409c17 	ldw	r5,624(sp)
10007a0c:	28800017 	ldw	r2,0(r5)
10007a10:	29400104 	addi	r5,r5,4
10007a14:	d9409c15 	stw	r5,624(sp)
10007a18:	14000015 	stw	r16,0(r2)
10007a1c:	10c00115 	stw	r3,4(r2)
10007a20:	003e4406 	br	10007334 <__alt_data_end+0xf8007334>
10007a24:	00bf1fc4 	movi	r2,-897
10007a28:	90a4703a 	and	r18,r18,r2
10007a2c:	38000226 	beq	r7,zero,10007a38 <__svfscanf_r+0x16bc>
10007a30:	39ffffc4 	addi	r7,r7,-1
10007a34:	e7000044 	addi	fp,fp,1
10007a38:	a5000044 	addi	r20,r20,1
10007a3c:	003f3e06 	br	10007738 <__alt_data_end+0xf8007738>
10007a40:	d9009c17 	ldw	r4,624(sp)
10007a44:	20c00017 	ldw	r3,0(r4)
10007a48:	21000104 	addi	r4,r4,4
10007a4c:	d9009c15 	stw	r4,624(sp)
10007a50:	18800015 	stw	r2,0(r3)
10007a54:	003fcc06 	br	10007988 <__alt_data_end+0xf8007988>
10007a58:	2839883a 	mov	fp,r5
10007a5c:	003fac06 	br	10007910 <__alt_data_end+0xf8007910>
10007a60:	00be1fc4 	movi	r2,-1921
10007a64:	a0a8703a 	and	r20,r20,r2
10007a68:	05c00044 	movi	r23,1
10007a6c:	003ddb06 	br	100071dc <__alt_data_end+0xf80071dc>
10007a70:	817fffc7 	ldb	r5,-1(r16)
10007a74:	980d883a 	mov	r6,r19
10007a78:	b809883a 	mov	r4,r23
10007a7c:	843fffc4 	addi	r16,r16,-1
10007a80:	001187c0 	call	1001187c <_ungetc_r>
10007a84:	003f4a06 	br	100077b0 <__alt_data_end+0xf80077b0>
10007a88:	00fe1fc4 	movi	r3,-1921
10007a8c:	a0e8703a 	and	r20,r20,r3
10007a90:	05400044 	movi	r21,1
10007a94:	003dd106 	br	100071dc <__alt_data_end+0xf80071dc>
10007a98:	dd009b04 	addi	r20,sp,620
10007a9c:	003fc906 	br	100079c4 <__alt_data_end+0xf80079c4>
10007aa0:	d8c09f17 	ldw	r3,636(sp)
10007aa4:	88e3c83a 	sub	r17,r17,r3
10007aa8:	044dc83a 	sub	r6,zero,r17
10007aac:	883e1426 	beq	r17,zero,10007300 <__alt_data_end+0xf8007300>
10007ab0:	d88055c4 	addi	r2,sp,343
10007ab4:	80800136 	bltu	r16,r2,10007abc <__svfscanf_r+0x1740>
10007ab8:	dc005584 	addi	r16,sp,342
10007abc:	014400b4 	movhi	r5,4098
10007ac0:	2971bc04 	addi	r5,r5,-14608
10007ac4:	8009883a 	mov	r4,r16
10007ac8:	000cfdc0 	call	1000cfdc <sprintf>
10007acc:	003e0c06 	br	10007300 <__alt_data_end+0xf8007300>
10007ad0:	d8c0a517 	ldw	r3,660(sp)
10007ad4:	000d883a 	mov	r6,zero
10007ad8:	01c00284 	movi	r7,10
10007adc:	19400044 	addi	r5,r3,1
10007ae0:	b809883a 	mov	r4,r23
10007ae4:	000e9c00 	call	1000e9c0 <_strtol_r>
10007ae8:	d8c0a417 	ldw	r3,656(sp)
10007aec:	dc00a517 	ldw	r16,660(sp)
10007af0:	10cdc83a 	sub	r6,r2,r3
10007af4:	003fee06 	br	10007ab0 <__alt_data_end+0xf8007ab0>
10007af8:	d8809c17 	ldw	r2,624(sp)
10007afc:	180b883a 	mov	r5,r3
10007b00:	8009883a 	mov	r4,r16
10007b04:	15000017 	ldw	r20,0(r2)
10007b08:	14400104 	addi	r17,r2,4
10007b0c:	d8c0a615 	stw	r3,664(sp)
10007b10:	000ce380 	call	1000ce38 <__fpclassifyd>
10007b14:	d8c0a617 	ldw	r3,664(sp)
10007b18:	10007226 	beq	r2,zero,10007ce4 <__svfscanf_r+0x1968>
10007b1c:	8009883a 	mov	r4,r16
10007b20:	180b883a 	mov	r5,r3
10007b24:	00193d40 	call	100193d4 <__truncdfsf2>
10007b28:	a0800015 	stw	r2,0(r20)
10007b2c:	dc409c15 	stw	r17,624(sp)
10007b30:	003e0006 	br	10007334 <__alt_data_end+0xf8007334>
10007b34:	88c0004c 	andi	r3,r17,1
10007b38:	183fc11e 	bne	r3,zero,10007a40 <__alt_data_end+0xf8007a40>
10007b3c:	8c40008c 	andi	r17,r17,2
10007b40:	883fbf26 	beq	r17,zero,10007a40 <__alt_data_end+0xf8007a40>
10007b44:	d940a117 	ldw	r5,644(sp)
10007b48:	00840074 	movhi	r2,4097
10007b4c:	10bbce04 	addi	r2,r2,-4296
10007b50:	d9c09e17 	ldw	r7,632(sp)
10007b54:	000d883a 	mov	r6,zero
10007b58:	28806726 	beq	r5,r2,10007cf8 <__svfscanf_r+0x197c>
10007b5c:	d9400104 	addi	r5,sp,4
10007b60:	b809883a 	mov	r4,r23
10007b64:	000ec340 	call	1000ec34 <_strtoll_r>
10007b68:	d9409c17 	ldw	r5,624(sp)
10007b6c:	29000017 	ldw	r4,0(r5)
10007b70:	29400104 	addi	r5,r5,4
10007b74:	d9409c15 	stw	r5,624(sp)
10007b78:	20800015 	stw	r2,0(r4)
10007b7c:	20c00115 	stw	r3,4(r4)
10007b80:	003f8106 	br	10007988 <__alt_data_end+0xf8007988>
10007b84:	000abe00 	call	1000abe0 <__locale_mb_cur_max>
10007b88:	80bc5626 	beq	r16,r2,10006ce4 <__alt_data_end+0xf8006ce4>
10007b8c:	98800017 	ldw	r2,0(r19)
10007b90:	99000117 	ldw	r4,4(r19)
10007b94:	d9400104 	addi	r5,sp,4
10007b98:	12000003 	ldbu	r8,0(r2)
10007b9c:	213fffc4 	addi	r4,r4,-1
10007ba0:	10800044 	addi	r2,r2,1
10007ba4:	99000115 	stw	r4,4(r19)
10007ba8:	98800015 	stw	r2,0(r19)
10007bac:	84400044 	addi	r17,r16,1
10007bb0:	dd400015 	stw	r21,0(sp)
10007bb4:	2c21883a 	add	r16,r5,r16
10007bb8:	280d883a 	mov	r6,r5
10007bbc:	880f883a 	mov	r7,r17
10007bc0:	a00b883a 	mov	r5,r20
10007bc4:	b809883a 	mov	r4,r23
10007bc8:	82000005 	stb	r8,0(r16)
10007bcc:	000adf00 	call	1000adf0 <_mbrtowc_r>
10007bd0:	00ffffc4 	movi	r3,-1
10007bd4:	10fc4326 	beq	r2,r3,10006ce4 <__alt_data_end+0xf8006ce4>
10007bd8:	103c371e 	bne	r2,zero,10006cb8 <__alt_data_end+0xf8006cb8>
10007bdc:	a0000015 	stw	zero,0(r20)
10007be0:	0009883a 	mov	r4,zero
10007be4:	000ab280 	call	1000ab28 <iswspace>
10007be8:	10001b26 	beq	r2,zero,10007c58 <__svfscanf_r+0x18dc>
10007bec:	8821883a 	mov	r16,r17
10007bf0:	dc409f17 	ldw	r17,636(sp)
10007bf4:	803f7f26 	beq	r16,zero,100079f4 <__alt_data_end+0xf80079f4>
10007bf8:	843fffc4 	addi	r16,r16,-1
10007bfc:	d9400104 	addi	r5,sp,4
10007c00:	2c2b883a 	add	r21,r5,r16
10007c04:	00000106 	br	10007c0c <__svfscanf_r+0x1890>
10007c08:	843fffc4 	addi	r16,r16,-1
10007c0c:	a9400003 	ldbu	r5,0(r21)
10007c10:	980d883a 	mov	r6,r19
10007c14:	b809883a 	mov	r4,r23
10007c18:	001187c0 	call	1001187c <_ungetc_r>
10007c1c:	ad7fffc4 	addi	r21,r21,-1
10007c20:	803ff91e 	bne	r16,zero,10007c08 <__alt_data_end+0xf8007c08>
10007c24:	003f7306 	br	100079f4 <__alt_data_end+0xf80079f4>
10007c28:	d9400104 	addi	r5,sp,4
10007c2c:	802b883a 	mov	r21,r16
10007c30:	9839883a 	mov	fp,r19
10007c34:	2c3a122e 	bgeu	r5,r16,10006480 <__alt_data_end+0xf8006480>
10007c38:	ad7fffc4 	addi	r21,r21,-1
10007c3c:	a9400007 	ldb	r5,0(r21)
10007c40:	e00d883a 	mov	r6,fp
10007c44:	b809883a 	mov	r4,r23
10007c48:	001187c0 	call	1001187c <_ungetc_r>
10007c4c:	d8800104 	addi	r2,sp,4
10007c50:	157ff91e 	bne	r2,r21,10007c38 <__alt_data_end+0xf8007c38>
10007c54:	003a0a06 	br	10006480 <__alt_data_end+0xf8006480>
10007c58:	d8c09f17 	ldw	r3,636(sp)
10007c5c:	9465883a 	add	r18,r18,r17
10007c60:	e73fffc4 	addi	fp,fp,-1
10007c64:	1800051e 	bne	r3,zero,10007c7c <__svfscanf_r+0x1900>
10007c68:	a5000104 	addi	r20,r20,4
10007c6c:	0021883a 	mov	r16,zero
10007c70:	003c1406 	br	10006cc4 <__alt_data_end+0xf8006cc4>
10007c74:	a1000017 	ldw	r4,0(r20)
10007c78:	003fda06 	br	10007be4 <__alt_data_end+0xf8007be4>
10007c7c:	0021883a 	mov	r16,zero
10007c80:	003c1006 	br	10006cc4 <__alt_data_end+0xf8006cc4>
10007c84:	d8c00104 	addi	r3,sp,4
10007c88:	802b883a 	mov	r21,r16
10007c8c:	9839883a 	mov	fp,r19
10007c90:	1c39fb2e 	bgeu	r3,r16,10006480 <__alt_data_end+0xf8006480>
10007c94:	ad7fffc4 	addi	r21,r21,-1
10007c98:	a9400007 	ldb	r5,0(r21)
10007c9c:	b809883a 	mov	r4,r23
10007ca0:	e00d883a 	mov	r6,fp
10007ca4:	001187c0 	call	1001187c <_ungetc_r>
10007ca8:	d9000104 	addi	r4,sp,4
10007cac:	257ff91e 	bne	r4,r21,10007c94 <__alt_data_end+0xf8007c94>
10007cb0:	0039f306 	br	10006480 <__alt_data_end+0xf8006480>
10007cb4:	d8c00104 	addi	r3,sp,4
10007cb8:	802b883a 	mov	r21,r16
10007cbc:	9839883a 	mov	fp,r19
10007cc0:	1c39ef2e 	bgeu	r3,r16,10006480 <__alt_data_end+0xf8006480>
10007cc4:	ad7fffc4 	addi	r21,r21,-1
10007cc8:	a9400007 	ldb	r5,0(r21)
10007ccc:	b809883a 	mov	r4,r23
10007cd0:	e00d883a 	mov	r6,fp
10007cd4:	001187c0 	call	1001187c <_ungetc_r>
10007cd8:	d9000104 	addi	r4,sp,4
10007cdc:	257ff91e 	bne	r4,r21,10007cc4 <__alt_data_end+0xf8007cc4>
10007ce0:	0039e706 	br	10006480 <__alt_data_end+0xf8006480>
10007ce4:	0009883a 	mov	r4,zero
10007ce8:	000cf7c0 	call	1000cf7c <nanf>
10007cec:	a0800015 	stw	r2,0(r20)
10007cf0:	dc409c15 	stw	r17,624(sp)
10007cf4:	003d8f06 	br	10007334 <__alt_data_end+0xf8007334>
10007cf8:	d9400104 	addi	r5,sp,4
10007cfc:	b809883a 	mov	r4,r23
10007d00:	000f1cc0 	call	1000f1cc <_strtoull_r>
10007d04:	003f9806 	br	10007b68 <__alt_data_end+0xf8007b68>

10007d08 <vfscanf>:
10007d08:	008400b4 	movhi	r2,4098
10007d0c:	defffb04 	addi	sp,sp,-20
10007d10:	10ba2504 	addi	r2,r2,-5996
10007d14:	dc000215 	stw	r16,8(sp)
10007d18:	14000017 	ldw	r16,0(r2)
10007d1c:	dc400315 	stw	r17,12(sp)
10007d20:	dfc00415 	stw	ra,16(sp)
10007d24:	2023883a 	mov	r17,r4
10007d28:	80000826 	beq	r16,zero,10007d4c <vfscanf+0x44>
10007d2c:	80800e17 	ldw	r2,56(r16)
10007d30:	1000061e 	bne	r2,zero,10007d4c <vfscanf+0x44>
10007d34:	8009883a 	mov	r4,r16
10007d38:	d9400015 	stw	r5,0(sp)
10007d3c:	d9800115 	stw	r6,4(sp)
10007d40:	0009de40 	call	10009de4 <__sinit>
10007d44:	d9800117 	ldw	r6,4(sp)
10007d48:	d9400017 	ldw	r5,0(sp)
10007d4c:	300f883a 	mov	r7,r6
10007d50:	8009883a 	mov	r4,r16
10007d54:	280d883a 	mov	r6,r5
10007d58:	880b883a 	mov	r5,r17
10007d5c:	dfc00417 	ldw	ra,16(sp)
10007d60:	dc400317 	ldw	r17,12(sp)
10007d64:	dc000217 	ldw	r16,8(sp)
10007d68:	dec00504 	addi	sp,sp,20
10007d6c:	000637c1 	jmpi	1000637c <__svfscanf_r>

10007d70 <__svfscanf>:
10007d70:	008400b4 	movhi	r2,4098
10007d74:	10ba2504 	addi	r2,r2,-5996
10007d78:	300f883a 	mov	r7,r6
10007d7c:	280d883a 	mov	r6,r5
10007d80:	200b883a 	mov	r5,r4
10007d84:	11000017 	ldw	r4,0(r2)
10007d88:	000637c1 	jmpi	1000637c <__svfscanf_r>

10007d8c <_vfscanf_r>:
10007d8c:	defffb04 	addi	sp,sp,-20
10007d90:	dc000315 	stw	r16,12(sp)
10007d94:	dfc00415 	stw	ra,16(sp)
10007d98:	2021883a 	mov	r16,r4
10007d9c:	20000926 	beq	r4,zero,10007dc4 <_vfscanf_r+0x38>
10007da0:	20800e17 	ldw	r2,56(r4)
10007da4:	1000071e 	bne	r2,zero,10007dc4 <_vfscanf_r+0x38>
10007da8:	d9400015 	stw	r5,0(sp)
10007dac:	d9800115 	stw	r6,4(sp)
10007db0:	d9c00215 	stw	r7,8(sp)
10007db4:	0009de40 	call	10009de4 <__sinit>
10007db8:	d9c00217 	ldw	r7,8(sp)
10007dbc:	d9800117 	ldw	r6,4(sp)
10007dc0:	d9400017 	ldw	r5,0(sp)
10007dc4:	8009883a 	mov	r4,r16
10007dc8:	dfc00417 	ldw	ra,16(sp)
10007dcc:	dc000317 	ldw	r16,12(sp)
10007dd0:	dec00504 	addi	sp,sp,20
10007dd4:	000637c1 	jmpi	1000637c <__svfscanf_r>

10007dd8 <__swsetup_r>:
10007dd8:	008400b4 	movhi	r2,4098
10007ddc:	defffd04 	addi	sp,sp,-12
10007de0:	10ba2504 	addi	r2,r2,-5996
10007de4:	dc400115 	stw	r17,4(sp)
10007de8:	2023883a 	mov	r17,r4
10007dec:	11000017 	ldw	r4,0(r2)
10007df0:	dc000015 	stw	r16,0(sp)
10007df4:	dfc00215 	stw	ra,8(sp)
10007df8:	2821883a 	mov	r16,r5
10007dfc:	20000226 	beq	r4,zero,10007e08 <__swsetup_r+0x30>
10007e00:	20800e17 	ldw	r2,56(r4)
10007e04:	10003126 	beq	r2,zero,10007ecc <__swsetup_r+0xf4>
10007e08:	8080030b 	ldhu	r2,12(r16)
10007e0c:	10c0020c 	andi	r3,r2,8
10007e10:	1009883a 	mov	r4,r2
10007e14:	18000f26 	beq	r3,zero,10007e54 <__swsetup_r+0x7c>
10007e18:	80c00417 	ldw	r3,16(r16)
10007e1c:	18001526 	beq	r3,zero,10007e74 <__swsetup_r+0x9c>
10007e20:	1100004c 	andi	r4,r2,1
10007e24:	20001c1e 	bne	r4,zero,10007e98 <__swsetup_r+0xc0>
10007e28:	1080008c 	andi	r2,r2,2
10007e2c:	1000291e 	bne	r2,zero,10007ed4 <__swsetup_r+0xfc>
10007e30:	80800517 	ldw	r2,20(r16)
10007e34:	80800215 	stw	r2,8(r16)
10007e38:	18001c26 	beq	r3,zero,10007eac <__swsetup_r+0xd4>
10007e3c:	0005883a 	mov	r2,zero
10007e40:	dfc00217 	ldw	ra,8(sp)
10007e44:	dc400117 	ldw	r17,4(sp)
10007e48:	dc000017 	ldw	r16,0(sp)
10007e4c:	dec00304 	addi	sp,sp,12
10007e50:	f800283a 	ret
10007e54:	2080040c 	andi	r2,r4,16
10007e58:	10002e26 	beq	r2,zero,10007f14 <__swsetup_r+0x13c>
10007e5c:	2080010c 	andi	r2,r4,4
10007e60:	10001e1e 	bne	r2,zero,10007edc <__swsetup_r+0x104>
10007e64:	80c00417 	ldw	r3,16(r16)
10007e68:	20800214 	ori	r2,r4,8
10007e6c:	8080030d 	sth	r2,12(r16)
10007e70:	183feb1e 	bne	r3,zero,10007e20 <__alt_data_end+0xf8007e20>
10007e74:	1100a00c 	andi	r4,r2,640
10007e78:	01408004 	movi	r5,512
10007e7c:	217fe826 	beq	r4,r5,10007e20 <__alt_data_end+0xf8007e20>
10007e80:	800b883a 	mov	r5,r16
10007e84:	8809883a 	mov	r4,r17
10007e88:	000ac340 	call	1000ac34 <__smakebuf_r>
10007e8c:	8080030b 	ldhu	r2,12(r16)
10007e90:	80c00417 	ldw	r3,16(r16)
10007e94:	003fe206 	br	10007e20 <__alt_data_end+0xf8007e20>
10007e98:	80800517 	ldw	r2,20(r16)
10007e9c:	80000215 	stw	zero,8(r16)
10007ea0:	0085c83a 	sub	r2,zero,r2
10007ea4:	80800615 	stw	r2,24(r16)
10007ea8:	183fe41e 	bne	r3,zero,10007e3c <__alt_data_end+0xf8007e3c>
10007eac:	80c0030b 	ldhu	r3,12(r16)
10007eb0:	0005883a 	mov	r2,zero
10007eb4:	1900200c 	andi	r4,r3,128
10007eb8:	203fe126 	beq	r4,zero,10007e40 <__alt_data_end+0xf8007e40>
10007ebc:	18c01014 	ori	r3,r3,64
10007ec0:	80c0030d 	sth	r3,12(r16)
10007ec4:	00bfffc4 	movi	r2,-1
10007ec8:	003fdd06 	br	10007e40 <__alt_data_end+0xf8007e40>
10007ecc:	0009de40 	call	10009de4 <__sinit>
10007ed0:	003fcd06 	br	10007e08 <__alt_data_end+0xf8007e08>
10007ed4:	0005883a 	mov	r2,zero
10007ed8:	003fd606 	br	10007e34 <__alt_data_end+0xf8007e34>
10007edc:	81400c17 	ldw	r5,48(r16)
10007ee0:	28000626 	beq	r5,zero,10007efc <__swsetup_r+0x124>
10007ee4:	80801004 	addi	r2,r16,64
10007ee8:	28800326 	beq	r5,r2,10007ef8 <__swsetup_r+0x120>
10007eec:	8809883a 	mov	r4,r17
10007ef0:	000a1c80 	call	1000a1c8 <_free_r>
10007ef4:	8100030b 	ldhu	r4,12(r16)
10007ef8:	80000c15 	stw	zero,48(r16)
10007efc:	80c00417 	ldw	r3,16(r16)
10007f00:	00bff6c4 	movi	r2,-37
10007f04:	1108703a 	and	r4,r2,r4
10007f08:	80000115 	stw	zero,4(r16)
10007f0c:	80c00015 	stw	r3,0(r16)
10007f10:	003fd506 	br	10007e68 <__alt_data_end+0xf8007e68>
10007f14:	00800244 	movi	r2,9
10007f18:	88800015 	stw	r2,0(r17)
10007f1c:	20801014 	ori	r2,r4,64
10007f20:	8080030d 	sth	r2,12(r16)
10007f24:	00bfffc4 	movi	r2,-1
10007f28:	003fc506 	br	10007e40 <__alt_data_end+0xf8007e40>

10007f2c <quorem>:
10007f2c:	defff204 	addi	sp,sp,-56
10007f30:	ddc00b15 	stw	r23,44(sp)
10007f34:	20800417 	ldw	r2,16(r4)
10007f38:	2dc00417 	ldw	r23,16(r5)
10007f3c:	dfc00d15 	stw	ra,52(sp)
10007f40:	df000c15 	stw	fp,48(sp)
10007f44:	dd800a15 	stw	r22,40(sp)
10007f48:	dd400915 	stw	r21,36(sp)
10007f4c:	dd000815 	stw	r20,32(sp)
10007f50:	dcc00715 	stw	r19,28(sp)
10007f54:	dc800615 	stw	r18,24(sp)
10007f58:	dc400515 	stw	r17,20(sp)
10007f5c:	dc000415 	stw	r16,16(sp)
10007f60:	15c07a16 	blt	r2,r23,1000814c <quorem+0x220>
10007f64:	bdffffc4 	addi	r23,r23,-1
10007f68:	bde9883a 	add	r20,r23,r23
10007f6c:	28c00504 	addi	r3,r5,20
10007f70:	a529883a 	add	r20,r20,r20
10007f74:	1d39883a 	add	fp,r3,r20
10007f78:	24c00504 	addi	r19,r4,20
10007f7c:	d9400215 	stw	r5,8(sp)
10007f80:	9d29883a 	add	r20,r19,r20
10007f84:	e1400017 	ldw	r5,0(fp)
10007f88:	d9000015 	stw	r4,0(sp)
10007f8c:	a1000017 	ldw	r4,0(r20)
10007f90:	29400044 	addi	r5,r5,1
10007f94:	d8c00115 	stw	r3,4(sp)
10007f98:	dd000315 	stw	r20,12(sp)
10007f9c:	000337c0 	call	1000337c <__udivsi3>
10007fa0:	1025883a 	mov	r18,r2
10007fa4:	10003026 	beq	r2,zero,10008068 <quorem+0x13c>
10007fa8:	dc400117 	ldw	r17,4(sp)
10007fac:	9829883a 	mov	r20,r19
10007fb0:	002d883a 	mov	r22,zero
10007fb4:	0021883a 	mov	r16,zero
10007fb8:	8d400017 	ldw	r21,0(r17)
10007fbc:	900b883a 	mov	r5,r18
10007fc0:	8c400104 	addi	r17,r17,4
10007fc4:	a93fffcc 	andi	r4,r21,65535
10007fc8:	00034380 	call	10003438 <__mulsi3>
10007fcc:	a808d43a 	srli	r4,r21,16
10007fd0:	900b883a 	mov	r5,r18
10007fd4:	15ad883a 	add	r22,r2,r22
10007fd8:	00034380 	call	10003438 <__mulsi3>
10007fdc:	a1000017 	ldw	r4,0(r20)
10007fe0:	b00cd43a 	srli	r6,r22,16
10007fe4:	b0ffffcc 	andi	r3,r22,65535
10007fe8:	217fffcc 	andi	r5,r4,65535
10007fec:	2c21883a 	add	r16,r5,r16
10007ff0:	80c7c83a 	sub	r3,r16,r3
10007ff4:	2008d43a 	srli	r4,r4,16
10007ff8:	1185883a 	add	r2,r2,r6
10007ffc:	1821d43a 	srai	r16,r3,16
10008000:	117fffcc 	andi	r5,r2,65535
10008004:	2149c83a 	sub	r4,r4,r5
10008008:	2421883a 	add	r16,r4,r16
1000800c:	8008943a 	slli	r4,r16,16
10008010:	18ffffcc 	andi	r3,r3,65535
10008014:	102cd43a 	srli	r22,r2,16
10008018:	20c8b03a 	or	r4,r4,r3
1000801c:	a1000015 	stw	r4,0(r20)
10008020:	8021d43a 	srai	r16,r16,16
10008024:	a5000104 	addi	r20,r20,4
10008028:	e47fe32e 	bgeu	fp,r17,10007fb8 <__alt_data_end+0xf8007fb8>
1000802c:	d8c00317 	ldw	r3,12(sp)
10008030:	18800017 	ldw	r2,0(r3)
10008034:	10000c1e 	bne	r2,zero,10008068 <quorem+0x13c>
10008038:	18bfff04 	addi	r2,r3,-4
1000803c:	9880082e 	bgeu	r19,r2,10008060 <quorem+0x134>
10008040:	18ffff17 	ldw	r3,-4(r3)
10008044:	18000326 	beq	r3,zero,10008054 <quorem+0x128>
10008048:	00000506 	br	10008060 <quorem+0x134>
1000804c:	10c00017 	ldw	r3,0(r2)
10008050:	1800031e 	bne	r3,zero,10008060 <quorem+0x134>
10008054:	10bfff04 	addi	r2,r2,-4
10008058:	bdffffc4 	addi	r23,r23,-1
1000805c:	98bffb36 	bltu	r19,r2,1000804c <__alt_data_end+0xf800804c>
10008060:	d8c00017 	ldw	r3,0(sp)
10008064:	1dc00415 	stw	r23,16(r3)
10008068:	d9400217 	ldw	r5,8(sp)
1000806c:	d9000017 	ldw	r4,0(sp)
10008070:	000be480 	call	1000be48 <__mcmp>
10008074:	10002816 	blt	r2,zero,10008118 <quorem+0x1ec>
10008078:	dc400117 	ldw	r17,4(sp)
1000807c:	94800044 	addi	r18,r18,1
10008080:	980d883a 	mov	r6,r19
10008084:	0007883a 	mov	r3,zero
10008088:	31000017 	ldw	r4,0(r6)
1000808c:	89400017 	ldw	r5,0(r17)
10008090:	31800104 	addi	r6,r6,4
10008094:	20bfffcc 	andi	r2,r4,65535
10008098:	10c7883a 	add	r3,r2,r3
1000809c:	28bfffcc 	andi	r2,r5,65535
100080a0:	1885c83a 	sub	r2,r3,r2
100080a4:	280ad43a 	srli	r5,r5,16
100080a8:	2008d43a 	srli	r4,r4,16
100080ac:	1007d43a 	srai	r3,r2,16
100080b0:	10bfffcc 	andi	r2,r2,65535
100080b4:	2149c83a 	sub	r4,r4,r5
100080b8:	20c9883a 	add	r4,r4,r3
100080bc:	200a943a 	slli	r5,r4,16
100080c0:	8c400104 	addi	r17,r17,4
100080c4:	2007d43a 	srai	r3,r4,16
100080c8:	2884b03a 	or	r2,r5,r2
100080cc:	30bfff15 	stw	r2,-4(r6)
100080d0:	e47fed2e 	bgeu	fp,r17,10008088 <__alt_data_end+0xf8008088>
100080d4:	bdc5883a 	add	r2,r23,r23
100080d8:	1085883a 	add	r2,r2,r2
100080dc:	9887883a 	add	r3,r19,r2
100080e0:	18800017 	ldw	r2,0(r3)
100080e4:	10000c1e 	bne	r2,zero,10008118 <quorem+0x1ec>
100080e8:	18bfff04 	addi	r2,r3,-4
100080ec:	9880082e 	bgeu	r19,r2,10008110 <quorem+0x1e4>
100080f0:	18ffff17 	ldw	r3,-4(r3)
100080f4:	18000326 	beq	r3,zero,10008104 <quorem+0x1d8>
100080f8:	00000506 	br	10008110 <quorem+0x1e4>
100080fc:	10c00017 	ldw	r3,0(r2)
10008100:	1800031e 	bne	r3,zero,10008110 <quorem+0x1e4>
10008104:	10bfff04 	addi	r2,r2,-4
10008108:	bdffffc4 	addi	r23,r23,-1
1000810c:	98bffb36 	bltu	r19,r2,100080fc <__alt_data_end+0xf80080fc>
10008110:	d8c00017 	ldw	r3,0(sp)
10008114:	1dc00415 	stw	r23,16(r3)
10008118:	9005883a 	mov	r2,r18
1000811c:	dfc00d17 	ldw	ra,52(sp)
10008120:	df000c17 	ldw	fp,48(sp)
10008124:	ddc00b17 	ldw	r23,44(sp)
10008128:	dd800a17 	ldw	r22,40(sp)
1000812c:	dd400917 	ldw	r21,36(sp)
10008130:	dd000817 	ldw	r20,32(sp)
10008134:	dcc00717 	ldw	r19,28(sp)
10008138:	dc800617 	ldw	r18,24(sp)
1000813c:	dc400517 	ldw	r17,20(sp)
10008140:	dc000417 	ldw	r16,16(sp)
10008144:	dec00e04 	addi	sp,sp,56
10008148:	f800283a 	ret
1000814c:	0005883a 	mov	r2,zero
10008150:	003ff206 	br	1000811c <__alt_data_end+0xf800811c>

10008154 <_dtoa_r>:
10008154:	20801017 	ldw	r2,64(r4)
10008158:	deffde04 	addi	sp,sp,-136
1000815c:	df002015 	stw	fp,128(sp)
10008160:	dcc01b15 	stw	r19,108(sp)
10008164:	dc801a15 	stw	r18,104(sp)
10008168:	dc401915 	stw	r17,100(sp)
1000816c:	dc001815 	stw	r16,96(sp)
10008170:	dfc02115 	stw	ra,132(sp)
10008174:	ddc01f15 	stw	r23,124(sp)
10008178:	dd801e15 	stw	r22,120(sp)
1000817c:	dd401d15 	stw	r21,116(sp)
10008180:	dd001c15 	stw	r20,112(sp)
10008184:	d9c00315 	stw	r7,12(sp)
10008188:	2039883a 	mov	fp,r4
1000818c:	3023883a 	mov	r17,r6
10008190:	2825883a 	mov	r18,r5
10008194:	dc002417 	ldw	r16,144(sp)
10008198:	3027883a 	mov	r19,r6
1000819c:	10000826 	beq	r2,zero,100081c0 <_dtoa_r+0x6c>
100081a0:	21801117 	ldw	r6,68(r4)
100081a4:	00c00044 	movi	r3,1
100081a8:	100b883a 	mov	r5,r2
100081ac:	1986983a 	sll	r3,r3,r6
100081b0:	11800115 	stw	r6,4(r2)
100081b4:	10c00215 	stw	r3,8(r2)
100081b8:	000b56c0 	call	1000b56c <_Bfree>
100081bc:	e0001015 	stw	zero,64(fp)
100081c0:	88002e16 	blt	r17,zero,1000827c <_dtoa_r+0x128>
100081c4:	80000015 	stw	zero,0(r16)
100081c8:	889ffc2c 	andhi	r2,r17,32752
100081cc:	00dffc34 	movhi	r3,32752
100081d0:	10c01c26 	beq	r2,r3,10008244 <_dtoa_r+0xf0>
100081d4:	000d883a 	mov	r6,zero
100081d8:	000f883a 	mov	r7,zero
100081dc:	9009883a 	mov	r4,r18
100081e0:	980b883a 	mov	r5,r19
100081e4:	0017e100 	call	10017e10 <__eqdf2>
100081e8:	10002b1e 	bne	r2,zero,10008298 <_dtoa_r+0x144>
100081ec:	d9c02317 	ldw	r7,140(sp)
100081f0:	00800044 	movi	r2,1
100081f4:	38800015 	stw	r2,0(r7)
100081f8:	d8802517 	ldw	r2,148(sp)
100081fc:	10019e26 	beq	r2,zero,10008878 <_dtoa_r+0x724>
10008200:	d8c02517 	ldw	r3,148(sp)
10008204:	008400b4 	movhi	r2,4098
10008208:	10b1b344 	addi	r2,r2,-14643
1000820c:	18800015 	stw	r2,0(r3)
10008210:	10bfffc4 	addi	r2,r2,-1
10008214:	dfc02117 	ldw	ra,132(sp)
10008218:	df002017 	ldw	fp,128(sp)
1000821c:	ddc01f17 	ldw	r23,124(sp)
10008220:	dd801e17 	ldw	r22,120(sp)
10008224:	dd401d17 	ldw	r21,116(sp)
10008228:	dd001c17 	ldw	r20,112(sp)
1000822c:	dcc01b17 	ldw	r19,108(sp)
10008230:	dc801a17 	ldw	r18,104(sp)
10008234:	dc401917 	ldw	r17,100(sp)
10008238:	dc001817 	ldw	r16,96(sp)
1000823c:	dec02204 	addi	sp,sp,136
10008240:	f800283a 	ret
10008244:	d8c02317 	ldw	r3,140(sp)
10008248:	0089c3c4 	movi	r2,9999
1000824c:	18800015 	stw	r2,0(r3)
10008250:	90017726 	beq	r18,zero,10008830 <_dtoa_r+0x6dc>
10008254:	008400b4 	movhi	r2,4098
10008258:	10b26a04 	addi	r2,r2,-13912
1000825c:	d9002517 	ldw	r4,148(sp)
10008260:	203fec26 	beq	r4,zero,10008214 <__alt_data_end+0xf8008214>
10008264:	10c000c7 	ldb	r3,3(r2)
10008268:	1801781e 	bne	r3,zero,1000884c <_dtoa_r+0x6f8>
1000826c:	10c000c4 	addi	r3,r2,3
10008270:	d9802517 	ldw	r6,148(sp)
10008274:	30c00015 	stw	r3,0(r6)
10008278:	003fe606 	br	10008214 <__alt_data_end+0xf8008214>
1000827c:	04e00034 	movhi	r19,32768
10008280:	9cffffc4 	addi	r19,r19,-1
10008284:	00800044 	movi	r2,1
10008288:	8ce6703a 	and	r19,r17,r19
1000828c:	80800015 	stw	r2,0(r16)
10008290:	9823883a 	mov	r17,r19
10008294:	003fcc06 	br	100081c8 <__alt_data_end+0xf80081c8>
10008298:	d8800204 	addi	r2,sp,8
1000829c:	d8800015 	stw	r2,0(sp)
100082a0:	d9c00104 	addi	r7,sp,4
100082a4:	900b883a 	mov	r5,r18
100082a8:	980d883a 	mov	r6,r19
100082ac:	e009883a 	mov	r4,fp
100082b0:	8820d53a 	srli	r16,r17,20
100082b4:	000c2140 	call	1000c214 <__d2b>
100082b8:	d8800915 	stw	r2,36(sp)
100082bc:	8001651e 	bne	r16,zero,10008854 <_dtoa_r+0x700>
100082c0:	dd800217 	ldw	r22,8(sp)
100082c4:	dc000117 	ldw	r16,4(sp)
100082c8:	00800804 	movi	r2,32
100082cc:	b421883a 	add	r16,r22,r16
100082d0:	80c10c84 	addi	r3,r16,1074
100082d4:	10c2d10e 	bge	r2,r3,10008e1c <_dtoa_r+0xcc8>
100082d8:	00801004 	movi	r2,64
100082dc:	81010484 	addi	r4,r16,1042
100082e0:	10c7c83a 	sub	r3,r2,r3
100082e4:	9108d83a 	srl	r4,r18,r4
100082e8:	88e2983a 	sll	r17,r17,r3
100082ec:	2448b03a 	or	r4,r4,r17
100082f0:	001932c0 	call	1001932c <__floatunsidf>
100082f4:	017f8434 	movhi	r5,65040
100082f8:	01800044 	movi	r6,1
100082fc:	1009883a 	mov	r4,r2
10008300:	194b883a 	add	r5,r3,r5
10008304:	843fffc4 	addi	r16,r16,-1
10008308:	d9801115 	stw	r6,68(sp)
1000830c:	000d883a 	mov	r6,zero
10008310:	01cffe34 	movhi	r7,16376
10008314:	00188d40 	call	100188d4 <__subdf3>
10008318:	0198dbf4 	movhi	r6,25455
1000831c:	01cff4f4 	movhi	r7,16339
10008320:	3190d844 	addi	r6,r6,17249
10008324:	39e1e9c4 	addi	r7,r7,-30809
10008328:	1009883a 	mov	r4,r2
1000832c:	180b883a 	mov	r5,r3
10008330:	00180680 	call	10018068 <__muldf3>
10008334:	01a2d874 	movhi	r6,35681
10008338:	01cff1f4 	movhi	r7,16327
1000833c:	31b22cc4 	addi	r6,r6,-14157
10008340:	39e28a04 	addi	r7,r7,-30168
10008344:	180b883a 	mov	r5,r3
10008348:	1009883a 	mov	r4,r2
1000834c:	0016b940 	call	10016b94 <__adddf3>
10008350:	8009883a 	mov	r4,r16
10008354:	1029883a 	mov	r20,r2
10008358:	1823883a 	mov	r17,r3
1000835c:	00192500 	call	10019250 <__floatsidf>
10008360:	019427f4 	movhi	r6,20639
10008364:	01cff4f4 	movhi	r7,16339
10008368:	319e7ec4 	addi	r6,r6,31227
1000836c:	39d104c4 	addi	r7,r7,17427
10008370:	1009883a 	mov	r4,r2
10008374:	180b883a 	mov	r5,r3
10008378:	00180680 	call	10018068 <__muldf3>
1000837c:	100d883a 	mov	r6,r2
10008380:	180f883a 	mov	r7,r3
10008384:	a009883a 	mov	r4,r20
10008388:	880b883a 	mov	r5,r17
1000838c:	0016b940 	call	10016b94 <__adddf3>
10008390:	1009883a 	mov	r4,r2
10008394:	180b883a 	mov	r5,r3
10008398:	1029883a 	mov	r20,r2
1000839c:	1823883a 	mov	r17,r3
100083a0:	00191d00 	call	100191d0 <__fixdfsi>
100083a4:	000d883a 	mov	r6,zero
100083a8:	000f883a 	mov	r7,zero
100083ac:	a009883a 	mov	r4,r20
100083b0:	880b883a 	mov	r5,r17
100083b4:	d8800515 	stw	r2,20(sp)
100083b8:	0017f740 	call	10017f74 <__ledf2>
100083bc:	10028716 	blt	r2,zero,10008ddc <_dtoa_r+0xc88>
100083c0:	d8c00517 	ldw	r3,20(sp)
100083c4:	00800584 	movi	r2,22
100083c8:	10c27536 	bltu	r2,r3,10008da0 <_dtoa_r+0xc4c>
100083cc:	180490fa 	slli	r2,r3,3
100083d0:	00c400b4 	movhi	r3,4098
100083d4:	18f28604 	addi	r3,r3,-13800
100083d8:	1885883a 	add	r2,r3,r2
100083dc:	11000017 	ldw	r4,0(r2)
100083e0:	11400117 	ldw	r5,4(r2)
100083e4:	900d883a 	mov	r6,r18
100083e8:	980f883a 	mov	r7,r19
100083ec:	0017e980 	call	10017e98 <__gedf2>
100083f0:	00828d0e 	bge	zero,r2,10008e28 <_dtoa_r+0xcd4>
100083f4:	d9000517 	ldw	r4,20(sp)
100083f8:	d8000e15 	stw	zero,56(sp)
100083fc:	213fffc4 	addi	r4,r4,-1
10008400:	d9000515 	stw	r4,20(sp)
10008404:	b42dc83a 	sub	r22,r22,r16
10008408:	b5bfffc4 	addi	r22,r22,-1
1000840c:	b0026f16 	blt	r22,zero,10008dcc <_dtoa_r+0xc78>
10008410:	d8000815 	stw	zero,32(sp)
10008414:	d9c00517 	ldw	r7,20(sp)
10008418:	38026416 	blt	r7,zero,10008dac <_dtoa_r+0xc58>
1000841c:	b1ed883a 	add	r22,r22,r7
10008420:	d9c00d15 	stw	r7,52(sp)
10008424:	d8000a15 	stw	zero,40(sp)
10008428:	d9800317 	ldw	r6,12(sp)
1000842c:	00800244 	movi	r2,9
10008430:	11811436 	bltu	r2,r6,10008884 <_dtoa_r+0x730>
10008434:	00800144 	movi	r2,5
10008438:	1184e10e 	bge	r2,r6,100097c0 <_dtoa_r+0x166c>
1000843c:	31bfff04 	addi	r6,r6,-4
10008440:	d9800315 	stw	r6,12(sp)
10008444:	0023883a 	mov	r17,zero
10008448:	d9800317 	ldw	r6,12(sp)
1000844c:	008000c4 	movi	r2,3
10008450:	30836726 	beq	r6,r2,100091f0 <_dtoa_r+0x109c>
10008454:	1183410e 	bge	r2,r6,1000915c <_dtoa_r+0x1008>
10008458:	d9c00317 	ldw	r7,12(sp)
1000845c:	00800104 	movi	r2,4
10008460:	38827c26 	beq	r7,r2,10008e54 <_dtoa_r+0xd00>
10008464:	00800144 	movi	r2,5
10008468:	3884c41e 	bne	r7,r2,1000977c <_dtoa_r+0x1628>
1000846c:	00800044 	movi	r2,1
10008470:	d8800b15 	stw	r2,44(sp)
10008474:	d8c00517 	ldw	r3,20(sp)
10008478:	d9002217 	ldw	r4,136(sp)
1000847c:	1907883a 	add	r3,r3,r4
10008480:	19800044 	addi	r6,r3,1
10008484:	d8c00c15 	stw	r3,48(sp)
10008488:	d9800615 	stw	r6,24(sp)
1000848c:	0183a40e 	bge	zero,r6,10009320 <_dtoa_r+0x11cc>
10008490:	d9800617 	ldw	r6,24(sp)
10008494:	3021883a 	mov	r16,r6
10008498:	e0001115 	stw	zero,68(fp)
1000849c:	008005c4 	movi	r2,23
100084a0:	1184c92e 	bgeu	r2,r6,100097c8 <_dtoa_r+0x1674>
100084a4:	00c00044 	movi	r3,1
100084a8:	00800104 	movi	r2,4
100084ac:	1085883a 	add	r2,r2,r2
100084b0:	11000504 	addi	r4,r2,20
100084b4:	180b883a 	mov	r5,r3
100084b8:	18c00044 	addi	r3,r3,1
100084bc:	313ffb2e 	bgeu	r6,r4,100084ac <__alt_data_end+0xf80084ac>
100084c0:	e1401115 	stw	r5,68(fp)
100084c4:	e009883a 	mov	r4,fp
100084c8:	000b4c40 	call	1000b4c4 <_Balloc>
100084cc:	d8800715 	stw	r2,28(sp)
100084d0:	e0801015 	stw	r2,64(fp)
100084d4:	00800384 	movi	r2,14
100084d8:	1400f736 	bltu	r2,r16,100088b8 <_dtoa_r+0x764>
100084dc:	8800f626 	beq	r17,zero,100088b8 <_dtoa_r+0x764>
100084e0:	d9c00517 	ldw	r7,20(sp)
100084e4:	01c39a0e 	bge	zero,r7,10009350 <_dtoa_r+0x11fc>
100084e8:	388003cc 	andi	r2,r7,15
100084ec:	100490fa 	slli	r2,r2,3
100084f0:	382bd13a 	srai	r21,r7,4
100084f4:	00c400b4 	movhi	r3,4098
100084f8:	18f28604 	addi	r3,r3,-13800
100084fc:	1885883a 	add	r2,r3,r2
10008500:	a8c0040c 	andi	r3,r21,16
10008504:	12400017 	ldw	r9,0(r2)
10008508:	12000117 	ldw	r8,4(r2)
1000850c:	18037926 	beq	r3,zero,100092f4 <_dtoa_r+0x11a0>
10008510:	008400b4 	movhi	r2,4098
10008514:	10b27c04 	addi	r2,r2,-13840
10008518:	11800817 	ldw	r6,32(r2)
1000851c:	11c00917 	ldw	r7,36(r2)
10008520:	9009883a 	mov	r4,r18
10008524:	980b883a 	mov	r5,r19
10008528:	da001715 	stw	r8,92(sp)
1000852c:	da401615 	stw	r9,88(sp)
10008530:	00174400 	call	10017440 <__divdf3>
10008534:	da001717 	ldw	r8,92(sp)
10008538:	da401617 	ldw	r9,88(sp)
1000853c:	ad4003cc 	andi	r21,r21,15
10008540:	040000c4 	movi	r16,3
10008544:	1023883a 	mov	r17,r2
10008548:	1829883a 	mov	r20,r3
1000854c:	a8001126 	beq	r21,zero,10008594 <_dtoa_r+0x440>
10008550:	05c400b4 	movhi	r23,4098
10008554:	bdf27c04 	addi	r23,r23,-13840
10008558:	4805883a 	mov	r2,r9
1000855c:	4007883a 	mov	r3,r8
10008560:	a980004c 	andi	r6,r21,1
10008564:	1009883a 	mov	r4,r2
10008568:	a82bd07a 	srai	r21,r21,1
1000856c:	180b883a 	mov	r5,r3
10008570:	30000426 	beq	r6,zero,10008584 <_dtoa_r+0x430>
10008574:	b9800017 	ldw	r6,0(r23)
10008578:	b9c00117 	ldw	r7,4(r23)
1000857c:	84000044 	addi	r16,r16,1
10008580:	00180680 	call	10018068 <__muldf3>
10008584:	bdc00204 	addi	r23,r23,8
10008588:	a83ff51e 	bne	r21,zero,10008560 <__alt_data_end+0xf8008560>
1000858c:	1013883a 	mov	r9,r2
10008590:	1811883a 	mov	r8,r3
10008594:	480d883a 	mov	r6,r9
10008598:	400f883a 	mov	r7,r8
1000859c:	8809883a 	mov	r4,r17
100085a0:	a00b883a 	mov	r5,r20
100085a4:	00174400 	call	10017440 <__divdf3>
100085a8:	d8800f15 	stw	r2,60(sp)
100085ac:	d8c01015 	stw	r3,64(sp)
100085b0:	d8c00e17 	ldw	r3,56(sp)
100085b4:	18000626 	beq	r3,zero,100085d0 <_dtoa_r+0x47c>
100085b8:	d9000f17 	ldw	r4,60(sp)
100085bc:	d9401017 	ldw	r5,64(sp)
100085c0:	000d883a 	mov	r6,zero
100085c4:	01cffc34 	movhi	r7,16368
100085c8:	0017f740 	call	10017f74 <__ledf2>
100085cc:	10040b16 	blt	r2,zero,100095fc <_dtoa_r+0x14a8>
100085d0:	8009883a 	mov	r4,r16
100085d4:	00192500 	call	10019250 <__floatsidf>
100085d8:	d9800f17 	ldw	r6,60(sp)
100085dc:	d9c01017 	ldw	r7,64(sp)
100085e0:	1009883a 	mov	r4,r2
100085e4:	180b883a 	mov	r5,r3
100085e8:	00180680 	call	10018068 <__muldf3>
100085ec:	000d883a 	mov	r6,zero
100085f0:	01d00734 	movhi	r7,16412
100085f4:	1009883a 	mov	r4,r2
100085f8:	180b883a 	mov	r5,r3
100085fc:	0016b940 	call	10016b94 <__adddf3>
10008600:	1021883a 	mov	r16,r2
10008604:	d8800617 	ldw	r2,24(sp)
10008608:	047f3034 	movhi	r17,64704
1000860c:	1c63883a 	add	r17,r3,r17
10008610:	10031826 	beq	r2,zero,10009274 <_dtoa_r+0x1120>
10008614:	d8c00517 	ldw	r3,20(sp)
10008618:	db000617 	ldw	r12,24(sp)
1000861c:	d8c01315 	stw	r3,76(sp)
10008620:	d9000b17 	ldw	r4,44(sp)
10008624:	20038f26 	beq	r4,zero,10009464 <_dtoa_r+0x1310>
10008628:	60bfffc4 	addi	r2,r12,-1
1000862c:	100490fa 	slli	r2,r2,3
10008630:	00c400b4 	movhi	r3,4098
10008634:	18f28604 	addi	r3,r3,-13800
10008638:	1885883a 	add	r2,r3,r2
1000863c:	11800017 	ldw	r6,0(r2)
10008640:	11c00117 	ldw	r7,4(r2)
10008644:	d8800717 	ldw	r2,28(sp)
10008648:	0009883a 	mov	r4,zero
1000864c:	014ff834 	movhi	r5,16352
10008650:	db001615 	stw	r12,88(sp)
10008654:	15c00044 	addi	r23,r2,1
10008658:	00174400 	call	10017440 <__divdf3>
1000865c:	800d883a 	mov	r6,r16
10008660:	880f883a 	mov	r7,r17
10008664:	1009883a 	mov	r4,r2
10008668:	180b883a 	mov	r5,r3
1000866c:	00188d40 	call	100188d4 <__subdf3>
10008670:	d9401017 	ldw	r5,64(sp)
10008674:	d9000f17 	ldw	r4,60(sp)
10008678:	102b883a 	mov	r21,r2
1000867c:	d8c01215 	stw	r3,72(sp)
10008680:	00191d00 	call	100191d0 <__fixdfsi>
10008684:	1009883a 	mov	r4,r2
10008688:	1029883a 	mov	r20,r2
1000868c:	00192500 	call	10019250 <__floatsidf>
10008690:	d9000f17 	ldw	r4,60(sp)
10008694:	d9401017 	ldw	r5,64(sp)
10008698:	100d883a 	mov	r6,r2
1000869c:	180f883a 	mov	r7,r3
100086a0:	00188d40 	call	100188d4 <__subdf3>
100086a4:	1823883a 	mov	r17,r3
100086a8:	d8c00717 	ldw	r3,28(sp)
100086ac:	d9401217 	ldw	r5,72(sp)
100086b0:	a2000c04 	addi	r8,r20,48
100086b4:	1021883a 	mov	r16,r2
100086b8:	1a000005 	stb	r8,0(r3)
100086bc:	800d883a 	mov	r6,r16
100086c0:	880f883a 	mov	r7,r17
100086c4:	a809883a 	mov	r4,r21
100086c8:	4029883a 	mov	r20,r8
100086cc:	0017e980 	call	10017e98 <__gedf2>
100086d0:	00841d16 	blt	zero,r2,10009748 <_dtoa_r+0x15f4>
100086d4:	800d883a 	mov	r6,r16
100086d8:	880f883a 	mov	r7,r17
100086dc:	0009883a 	mov	r4,zero
100086e0:	014ffc34 	movhi	r5,16368
100086e4:	00188d40 	call	100188d4 <__subdf3>
100086e8:	d9401217 	ldw	r5,72(sp)
100086ec:	100d883a 	mov	r6,r2
100086f0:	180f883a 	mov	r7,r3
100086f4:	a809883a 	mov	r4,r21
100086f8:	0017e980 	call	10017e98 <__gedf2>
100086fc:	db001617 	ldw	r12,88(sp)
10008700:	00840e16 	blt	zero,r2,1000973c <_dtoa_r+0x15e8>
10008704:	00800044 	movi	r2,1
10008708:	13006b0e 	bge	r2,r12,100088b8 <_dtoa_r+0x764>
1000870c:	d9000717 	ldw	r4,28(sp)
10008710:	dd800f15 	stw	r22,60(sp)
10008714:	dcc01015 	stw	r19,64(sp)
10008718:	2319883a 	add	r12,r4,r12
1000871c:	dcc01217 	ldw	r19,72(sp)
10008720:	602d883a 	mov	r22,r12
10008724:	dc801215 	stw	r18,72(sp)
10008728:	b825883a 	mov	r18,r23
1000872c:	00000906 	br	10008754 <_dtoa_r+0x600>
10008730:	00188d40 	call	100188d4 <__subdf3>
10008734:	a80d883a 	mov	r6,r21
10008738:	980f883a 	mov	r7,r19
1000873c:	1009883a 	mov	r4,r2
10008740:	180b883a 	mov	r5,r3
10008744:	0017f740 	call	10017f74 <__ledf2>
10008748:	1003e816 	blt	r2,zero,100096ec <_dtoa_r+0x1598>
1000874c:	b825883a 	mov	r18,r23
10008750:	bd83e926 	beq	r23,r22,100096f8 <_dtoa_r+0x15a4>
10008754:	a809883a 	mov	r4,r21
10008758:	980b883a 	mov	r5,r19
1000875c:	000d883a 	mov	r6,zero
10008760:	01d00934 	movhi	r7,16420
10008764:	00180680 	call	10018068 <__muldf3>
10008768:	000d883a 	mov	r6,zero
1000876c:	01d00934 	movhi	r7,16420
10008770:	8009883a 	mov	r4,r16
10008774:	880b883a 	mov	r5,r17
10008778:	102b883a 	mov	r21,r2
1000877c:	1827883a 	mov	r19,r3
10008780:	00180680 	call	10018068 <__muldf3>
10008784:	180b883a 	mov	r5,r3
10008788:	1009883a 	mov	r4,r2
1000878c:	1821883a 	mov	r16,r3
10008790:	1023883a 	mov	r17,r2
10008794:	00191d00 	call	100191d0 <__fixdfsi>
10008798:	1009883a 	mov	r4,r2
1000879c:	1029883a 	mov	r20,r2
100087a0:	00192500 	call	10019250 <__floatsidf>
100087a4:	8809883a 	mov	r4,r17
100087a8:	800b883a 	mov	r5,r16
100087ac:	100d883a 	mov	r6,r2
100087b0:	180f883a 	mov	r7,r3
100087b4:	00188d40 	call	100188d4 <__subdf3>
100087b8:	a5000c04 	addi	r20,r20,48
100087bc:	a80d883a 	mov	r6,r21
100087c0:	980f883a 	mov	r7,r19
100087c4:	1009883a 	mov	r4,r2
100087c8:	180b883a 	mov	r5,r3
100087cc:	95000005 	stb	r20,0(r18)
100087d0:	1021883a 	mov	r16,r2
100087d4:	1823883a 	mov	r17,r3
100087d8:	0017f740 	call	10017f74 <__ledf2>
100087dc:	bdc00044 	addi	r23,r23,1
100087e0:	800d883a 	mov	r6,r16
100087e4:	880f883a 	mov	r7,r17
100087e8:	0009883a 	mov	r4,zero
100087ec:	014ffc34 	movhi	r5,16368
100087f0:	103fcf0e 	bge	r2,zero,10008730 <__alt_data_end+0xf8008730>
100087f4:	d8c01317 	ldw	r3,76(sp)
100087f8:	d8c00515 	stw	r3,20(sp)
100087fc:	d9400917 	ldw	r5,36(sp)
10008800:	e009883a 	mov	r4,fp
10008804:	000b56c0 	call	1000b56c <_Bfree>
10008808:	d9000517 	ldw	r4,20(sp)
1000880c:	d9802317 	ldw	r6,140(sp)
10008810:	d9c02517 	ldw	r7,148(sp)
10008814:	b8000005 	stb	zero,0(r23)
10008818:	20800044 	addi	r2,r4,1
1000881c:	30800015 	stw	r2,0(r6)
10008820:	3802aa26 	beq	r7,zero,100092cc <_dtoa_r+0x1178>
10008824:	3dc00015 	stw	r23,0(r7)
10008828:	d8800717 	ldw	r2,28(sp)
1000882c:	003e7906 	br	10008214 <__alt_data_end+0xf8008214>
10008830:	00800434 	movhi	r2,16
10008834:	10bfffc4 	addi	r2,r2,-1
10008838:	88a2703a 	and	r17,r17,r2
1000883c:	883e851e 	bne	r17,zero,10008254 <__alt_data_end+0xf8008254>
10008840:	008400b4 	movhi	r2,4098
10008844:	10b26704 	addi	r2,r2,-13924
10008848:	003e8406 	br	1000825c <__alt_data_end+0xf800825c>
1000884c:	10c00204 	addi	r3,r2,8
10008850:	003e8706 	br	10008270 <__alt_data_end+0xf8008270>
10008854:	01400434 	movhi	r5,16
10008858:	297fffc4 	addi	r5,r5,-1
1000885c:	994a703a 	and	r5,r19,r5
10008860:	9009883a 	mov	r4,r18
10008864:	843f0044 	addi	r16,r16,-1023
10008868:	294ffc34 	orhi	r5,r5,16368
1000886c:	dd800217 	ldw	r22,8(sp)
10008870:	d8001115 	stw	zero,68(sp)
10008874:	003ea506 	br	1000830c <__alt_data_end+0xf800830c>
10008878:	008400b4 	movhi	r2,4098
1000887c:	10b1b304 	addi	r2,r2,-14644
10008880:	003e6406 	br	10008214 <__alt_data_end+0xf8008214>
10008884:	e0001115 	stw	zero,68(fp)
10008888:	000b883a 	mov	r5,zero
1000888c:	e009883a 	mov	r4,fp
10008890:	000b4c40 	call	1000b4c4 <_Balloc>
10008894:	01bfffc4 	movi	r6,-1
10008898:	01c00044 	movi	r7,1
1000889c:	d8800715 	stw	r2,28(sp)
100088a0:	d9800c15 	stw	r6,48(sp)
100088a4:	e0801015 	stw	r2,64(fp)
100088a8:	d8000315 	stw	zero,12(sp)
100088ac:	d9c00b15 	stw	r7,44(sp)
100088b0:	d9800615 	stw	r6,24(sp)
100088b4:	d8002215 	stw	zero,136(sp)
100088b8:	d8800117 	ldw	r2,4(sp)
100088bc:	10008916 	blt	r2,zero,10008ae4 <_dtoa_r+0x990>
100088c0:	d9000517 	ldw	r4,20(sp)
100088c4:	00c00384 	movi	r3,14
100088c8:	19008616 	blt	r3,r4,10008ae4 <_dtoa_r+0x990>
100088cc:	200490fa 	slli	r2,r4,3
100088d0:	00c400b4 	movhi	r3,4098
100088d4:	d9802217 	ldw	r6,136(sp)
100088d8:	18f28604 	addi	r3,r3,-13800
100088dc:	1885883a 	add	r2,r3,r2
100088e0:	14000017 	ldw	r16,0(r2)
100088e4:	14400117 	ldw	r17,4(r2)
100088e8:	30016316 	blt	r6,zero,10008e78 <_dtoa_r+0xd24>
100088ec:	800d883a 	mov	r6,r16
100088f0:	880f883a 	mov	r7,r17
100088f4:	9009883a 	mov	r4,r18
100088f8:	980b883a 	mov	r5,r19
100088fc:	00174400 	call	10017440 <__divdf3>
10008900:	180b883a 	mov	r5,r3
10008904:	1009883a 	mov	r4,r2
10008908:	00191d00 	call	100191d0 <__fixdfsi>
1000890c:	1009883a 	mov	r4,r2
10008910:	102b883a 	mov	r21,r2
10008914:	00192500 	call	10019250 <__floatsidf>
10008918:	800d883a 	mov	r6,r16
1000891c:	880f883a 	mov	r7,r17
10008920:	1009883a 	mov	r4,r2
10008924:	180b883a 	mov	r5,r3
10008928:	00180680 	call	10018068 <__muldf3>
1000892c:	100d883a 	mov	r6,r2
10008930:	180f883a 	mov	r7,r3
10008934:	9009883a 	mov	r4,r18
10008938:	980b883a 	mov	r5,r19
1000893c:	00188d40 	call	100188d4 <__subdf3>
10008940:	d9c00717 	ldw	r7,28(sp)
10008944:	1009883a 	mov	r4,r2
10008948:	a8800c04 	addi	r2,r21,48
1000894c:	38800005 	stb	r2,0(r7)
10008950:	3dc00044 	addi	r23,r7,1
10008954:	d9c00617 	ldw	r7,24(sp)
10008958:	01800044 	movi	r6,1
1000895c:	180b883a 	mov	r5,r3
10008960:	2005883a 	mov	r2,r4
10008964:	39803826 	beq	r7,r6,10008a48 <_dtoa_r+0x8f4>
10008968:	000d883a 	mov	r6,zero
1000896c:	01d00934 	movhi	r7,16420
10008970:	00180680 	call	10018068 <__muldf3>
10008974:	000d883a 	mov	r6,zero
10008978:	000f883a 	mov	r7,zero
1000897c:	1009883a 	mov	r4,r2
10008980:	180b883a 	mov	r5,r3
10008984:	1025883a 	mov	r18,r2
10008988:	1827883a 	mov	r19,r3
1000898c:	0017e100 	call	10017e10 <__eqdf2>
10008990:	103f9a26 	beq	r2,zero,100087fc <__alt_data_end+0xf80087fc>
10008994:	d9c00617 	ldw	r7,24(sp)
10008998:	d8c00717 	ldw	r3,28(sp)
1000899c:	b829883a 	mov	r20,r23
100089a0:	38bfffc4 	addi	r2,r7,-1
100089a4:	18ad883a 	add	r22,r3,r2
100089a8:	00000a06 	br	100089d4 <_dtoa_r+0x880>
100089ac:	00180680 	call	10018068 <__muldf3>
100089b0:	000d883a 	mov	r6,zero
100089b4:	000f883a 	mov	r7,zero
100089b8:	1009883a 	mov	r4,r2
100089bc:	180b883a 	mov	r5,r3
100089c0:	1025883a 	mov	r18,r2
100089c4:	1827883a 	mov	r19,r3
100089c8:	b829883a 	mov	r20,r23
100089cc:	0017e100 	call	10017e10 <__eqdf2>
100089d0:	103f8a26 	beq	r2,zero,100087fc <__alt_data_end+0xf80087fc>
100089d4:	800d883a 	mov	r6,r16
100089d8:	880f883a 	mov	r7,r17
100089dc:	9009883a 	mov	r4,r18
100089e0:	980b883a 	mov	r5,r19
100089e4:	00174400 	call	10017440 <__divdf3>
100089e8:	180b883a 	mov	r5,r3
100089ec:	1009883a 	mov	r4,r2
100089f0:	00191d00 	call	100191d0 <__fixdfsi>
100089f4:	1009883a 	mov	r4,r2
100089f8:	102b883a 	mov	r21,r2
100089fc:	00192500 	call	10019250 <__floatsidf>
10008a00:	800d883a 	mov	r6,r16
10008a04:	880f883a 	mov	r7,r17
10008a08:	1009883a 	mov	r4,r2
10008a0c:	180b883a 	mov	r5,r3
10008a10:	00180680 	call	10018068 <__muldf3>
10008a14:	100d883a 	mov	r6,r2
10008a18:	180f883a 	mov	r7,r3
10008a1c:	9009883a 	mov	r4,r18
10008a20:	980b883a 	mov	r5,r19
10008a24:	00188d40 	call	100188d4 <__subdf3>
10008a28:	aa000c04 	addi	r8,r21,48
10008a2c:	a2000005 	stb	r8,0(r20)
10008a30:	000d883a 	mov	r6,zero
10008a34:	01d00934 	movhi	r7,16420
10008a38:	1009883a 	mov	r4,r2
10008a3c:	180b883a 	mov	r5,r3
10008a40:	a5c00044 	addi	r23,r20,1
10008a44:	b53fd91e 	bne	r22,r20,100089ac <__alt_data_end+0xf80089ac>
10008a48:	100d883a 	mov	r6,r2
10008a4c:	180f883a 	mov	r7,r3
10008a50:	1009883a 	mov	r4,r2
10008a54:	180b883a 	mov	r5,r3
10008a58:	0016b940 	call	10016b94 <__adddf3>
10008a5c:	100d883a 	mov	r6,r2
10008a60:	180f883a 	mov	r7,r3
10008a64:	8009883a 	mov	r4,r16
10008a68:	880b883a 	mov	r5,r17
10008a6c:	1027883a 	mov	r19,r2
10008a70:	1825883a 	mov	r18,r3
10008a74:	0017f740 	call	10017f74 <__ledf2>
10008a78:	10000816 	blt	r2,zero,10008a9c <_dtoa_r+0x948>
10008a7c:	980d883a 	mov	r6,r19
10008a80:	900f883a 	mov	r7,r18
10008a84:	8009883a 	mov	r4,r16
10008a88:	880b883a 	mov	r5,r17
10008a8c:	0017e100 	call	10017e10 <__eqdf2>
10008a90:	103f5a1e 	bne	r2,zero,100087fc <__alt_data_end+0xf80087fc>
10008a94:	ad40004c 	andi	r21,r21,1
10008a98:	a83f5826 	beq	r21,zero,100087fc <__alt_data_end+0xf80087fc>
10008a9c:	bd3fffc3 	ldbu	r20,-1(r23)
10008aa0:	b8bfffc4 	addi	r2,r23,-1
10008aa4:	1007883a 	mov	r3,r2
10008aa8:	01400e44 	movi	r5,57
10008aac:	d9800717 	ldw	r6,28(sp)
10008ab0:	00000506 	br	10008ac8 <_dtoa_r+0x974>
10008ab4:	18ffffc4 	addi	r3,r3,-1
10008ab8:	11824726 	beq	r2,r6,100093d8 <_dtoa_r+0x1284>
10008abc:	1d000003 	ldbu	r20,0(r3)
10008ac0:	102f883a 	mov	r23,r2
10008ac4:	10bfffc4 	addi	r2,r2,-1
10008ac8:	a1003fcc 	andi	r4,r20,255
10008acc:	2100201c 	xori	r4,r4,128
10008ad0:	213fe004 	addi	r4,r4,-128
10008ad4:	217ff726 	beq	r4,r5,10008ab4 <__alt_data_end+0xf8008ab4>
10008ad8:	a2000044 	addi	r8,r20,1
10008adc:	12000005 	stb	r8,0(r2)
10008ae0:	003f4606 	br	100087fc <__alt_data_end+0xf80087fc>
10008ae4:	d9000b17 	ldw	r4,44(sp)
10008ae8:	2000c826 	beq	r4,zero,10008e0c <_dtoa_r+0xcb8>
10008aec:	d9800317 	ldw	r6,12(sp)
10008af0:	00c00044 	movi	r3,1
10008af4:	1980f90e 	bge	r3,r6,10008edc <_dtoa_r+0xd88>
10008af8:	d8800617 	ldw	r2,24(sp)
10008afc:	d8c00a17 	ldw	r3,40(sp)
10008b00:	157fffc4 	addi	r21,r2,-1
10008b04:	1d41f316 	blt	r3,r21,100092d4 <_dtoa_r+0x1180>
10008b08:	1d6bc83a 	sub	r21,r3,r21
10008b0c:	d9c00617 	ldw	r7,24(sp)
10008b10:	3802aa16 	blt	r7,zero,100095bc <_dtoa_r+0x1468>
10008b14:	dd000817 	ldw	r20,32(sp)
10008b18:	d8800617 	ldw	r2,24(sp)
10008b1c:	d8c00817 	ldw	r3,32(sp)
10008b20:	01400044 	movi	r5,1
10008b24:	e009883a 	mov	r4,fp
10008b28:	1887883a 	add	r3,r3,r2
10008b2c:	d8c00815 	stw	r3,32(sp)
10008b30:	b0ad883a 	add	r22,r22,r2
10008b34:	000b8f80 	call	1000b8f8 <__i2b>
10008b38:	1023883a 	mov	r17,r2
10008b3c:	a0000826 	beq	r20,zero,10008b60 <_dtoa_r+0xa0c>
10008b40:	0580070e 	bge	zero,r22,10008b60 <_dtoa_r+0xa0c>
10008b44:	a005883a 	mov	r2,r20
10008b48:	b500b916 	blt	r22,r20,10008e30 <_dtoa_r+0xcdc>
10008b4c:	d9000817 	ldw	r4,32(sp)
10008b50:	a0a9c83a 	sub	r20,r20,r2
10008b54:	b0adc83a 	sub	r22,r22,r2
10008b58:	2089c83a 	sub	r4,r4,r2
10008b5c:	d9000815 	stw	r4,32(sp)
10008b60:	d9800a17 	ldw	r6,40(sp)
10008b64:	0181810e 	bge	zero,r6,1000916c <_dtoa_r+0x1018>
10008b68:	d9c00b17 	ldw	r7,44(sp)
10008b6c:	3800b326 	beq	r7,zero,10008e3c <_dtoa_r+0xce8>
10008b70:	a800b226 	beq	r21,zero,10008e3c <_dtoa_r+0xce8>
10008b74:	880b883a 	mov	r5,r17
10008b78:	a80d883a 	mov	r6,r21
10008b7c:	e009883a 	mov	r4,fp
10008b80:	000bbc00 	call	1000bbc0 <__pow5mult>
10008b84:	d9800917 	ldw	r6,36(sp)
10008b88:	100b883a 	mov	r5,r2
10008b8c:	e009883a 	mov	r4,fp
10008b90:	1023883a 	mov	r17,r2
10008b94:	000b9340 	call	1000b934 <__multiply>
10008b98:	1021883a 	mov	r16,r2
10008b9c:	d8800a17 	ldw	r2,40(sp)
10008ba0:	d9400917 	ldw	r5,36(sp)
10008ba4:	e009883a 	mov	r4,fp
10008ba8:	1545c83a 	sub	r2,r2,r21
10008bac:	d8800a15 	stw	r2,40(sp)
10008bb0:	000b56c0 	call	1000b56c <_Bfree>
10008bb4:	d8c00a17 	ldw	r3,40(sp)
10008bb8:	18009f1e 	bne	r3,zero,10008e38 <_dtoa_r+0xce4>
10008bbc:	05c00044 	movi	r23,1
10008bc0:	e009883a 	mov	r4,fp
10008bc4:	b80b883a 	mov	r5,r23
10008bc8:	000b8f80 	call	1000b8f8 <__i2b>
10008bcc:	d9000d17 	ldw	r4,52(sp)
10008bd0:	102b883a 	mov	r21,r2
10008bd4:	2000ce26 	beq	r4,zero,10008f10 <_dtoa_r+0xdbc>
10008bd8:	200d883a 	mov	r6,r4
10008bdc:	100b883a 	mov	r5,r2
10008be0:	e009883a 	mov	r4,fp
10008be4:	000bbc00 	call	1000bbc0 <__pow5mult>
10008be8:	d9800317 	ldw	r6,12(sp)
10008bec:	102b883a 	mov	r21,r2
10008bf0:	b981810e 	bge	r23,r6,100091f8 <_dtoa_r+0x10a4>
10008bf4:	0027883a 	mov	r19,zero
10008bf8:	a8800417 	ldw	r2,16(r21)
10008bfc:	05c00804 	movi	r23,32
10008c00:	10800104 	addi	r2,r2,4
10008c04:	1085883a 	add	r2,r2,r2
10008c08:	1085883a 	add	r2,r2,r2
10008c0c:	a885883a 	add	r2,r21,r2
10008c10:	11000017 	ldw	r4,0(r2)
10008c14:	000b7e00 	call	1000b7e0 <__hi0bits>
10008c18:	b885c83a 	sub	r2,r23,r2
10008c1c:	1585883a 	add	r2,r2,r22
10008c20:	108007cc 	andi	r2,r2,31
10008c24:	1000b326 	beq	r2,zero,10008ef4 <_dtoa_r+0xda0>
10008c28:	00c00804 	movi	r3,32
10008c2c:	1887c83a 	sub	r3,r3,r2
10008c30:	01000104 	movi	r4,4
10008c34:	20c2cd0e 	bge	r4,r3,1000976c <_dtoa_r+0x1618>
10008c38:	00c00704 	movi	r3,28
10008c3c:	1885c83a 	sub	r2,r3,r2
10008c40:	d8c00817 	ldw	r3,32(sp)
10008c44:	a0a9883a 	add	r20,r20,r2
10008c48:	b0ad883a 	add	r22,r22,r2
10008c4c:	1887883a 	add	r3,r3,r2
10008c50:	d8c00815 	stw	r3,32(sp)
10008c54:	d9800817 	ldw	r6,32(sp)
10008c58:	0180040e 	bge	zero,r6,10008c6c <_dtoa_r+0xb18>
10008c5c:	800b883a 	mov	r5,r16
10008c60:	e009883a 	mov	r4,fp
10008c64:	000bd000 	call	1000bd00 <__lshift>
10008c68:	1021883a 	mov	r16,r2
10008c6c:	0580050e 	bge	zero,r22,10008c84 <_dtoa_r+0xb30>
10008c70:	a80b883a 	mov	r5,r21
10008c74:	b00d883a 	mov	r6,r22
10008c78:	e009883a 	mov	r4,fp
10008c7c:	000bd000 	call	1000bd00 <__lshift>
10008c80:	102b883a 	mov	r21,r2
10008c84:	d9c00e17 	ldw	r7,56(sp)
10008c88:	3801211e 	bne	r7,zero,10009110 <_dtoa_r+0xfbc>
10008c8c:	d9800617 	ldw	r6,24(sp)
10008c90:	0181380e 	bge	zero,r6,10009174 <_dtoa_r+0x1020>
10008c94:	d8c00b17 	ldw	r3,44(sp)
10008c98:	1800ab1e 	bne	r3,zero,10008f48 <_dtoa_r+0xdf4>
10008c9c:	dc800717 	ldw	r18,28(sp)
10008ca0:	dcc00617 	ldw	r19,24(sp)
10008ca4:	9029883a 	mov	r20,r18
10008ca8:	00000206 	br	10008cb4 <_dtoa_r+0xb60>
10008cac:	000b5940 	call	1000b594 <__multadd>
10008cb0:	1021883a 	mov	r16,r2
10008cb4:	a80b883a 	mov	r5,r21
10008cb8:	8009883a 	mov	r4,r16
10008cbc:	0007f2c0 	call	10007f2c <quorem>
10008cc0:	10800c04 	addi	r2,r2,48
10008cc4:	90800005 	stb	r2,0(r18)
10008cc8:	94800044 	addi	r18,r18,1
10008ccc:	9507c83a 	sub	r3,r18,r20
10008cd0:	000f883a 	mov	r7,zero
10008cd4:	01800284 	movi	r6,10
10008cd8:	800b883a 	mov	r5,r16
10008cdc:	e009883a 	mov	r4,fp
10008ce0:	1cfff216 	blt	r3,r19,10008cac <__alt_data_end+0xf8008cac>
10008ce4:	1011883a 	mov	r8,r2
10008ce8:	d8800617 	ldw	r2,24(sp)
10008cec:	0082370e 	bge	zero,r2,100095cc <_dtoa_r+0x1478>
10008cf0:	d9000717 	ldw	r4,28(sp)
10008cf4:	0025883a 	mov	r18,zero
10008cf8:	20af883a 	add	r23,r4,r2
10008cfc:	01800044 	movi	r6,1
10008d00:	800b883a 	mov	r5,r16
10008d04:	e009883a 	mov	r4,fp
10008d08:	da001715 	stw	r8,92(sp)
10008d0c:	000bd000 	call	1000bd00 <__lshift>
10008d10:	a80b883a 	mov	r5,r21
10008d14:	1009883a 	mov	r4,r2
10008d18:	d8800915 	stw	r2,36(sp)
10008d1c:	000be480 	call	1000be48 <__mcmp>
10008d20:	da001717 	ldw	r8,92(sp)
10008d24:	0081800e 	bge	zero,r2,10009328 <_dtoa_r+0x11d4>
10008d28:	b93fffc3 	ldbu	r4,-1(r23)
10008d2c:	b8bfffc4 	addi	r2,r23,-1
10008d30:	1007883a 	mov	r3,r2
10008d34:	01800e44 	movi	r6,57
10008d38:	d9c00717 	ldw	r7,28(sp)
10008d3c:	00000506 	br	10008d54 <_dtoa_r+0xc00>
10008d40:	18ffffc4 	addi	r3,r3,-1
10008d44:	11c12326 	beq	r2,r7,100091d4 <_dtoa_r+0x1080>
10008d48:	19000003 	ldbu	r4,0(r3)
10008d4c:	102f883a 	mov	r23,r2
10008d50:	10bfffc4 	addi	r2,r2,-1
10008d54:	21403fcc 	andi	r5,r4,255
10008d58:	2940201c 	xori	r5,r5,128
10008d5c:	297fe004 	addi	r5,r5,-128
10008d60:	29bff726 	beq	r5,r6,10008d40 <__alt_data_end+0xf8008d40>
10008d64:	21000044 	addi	r4,r4,1
10008d68:	11000005 	stb	r4,0(r2)
10008d6c:	a80b883a 	mov	r5,r21
10008d70:	e009883a 	mov	r4,fp
10008d74:	000b56c0 	call	1000b56c <_Bfree>
10008d78:	883ea026 	beq	r17,zero,100087fc <__alt_data_end+0xf80087fc>
10008d7c:	90000426 	beq	r18,zero,10008d90 <_dtoa_r+0xc3c>
10008d80:	94400326 	beq	r18,r17,10008d90 <_dtoa_r+0xc3c>
10008d84:	900b883a 	mov	r5,r18
10008d88:	e009883a 	mov	r4,fp
10008d8c:	000b56c0 	call	1000b56c <_Bfree>
10008d90:	880b883a 	mov	r5,r17
10008d94:	e009883a 	mov	r4,fp
10008d98:	000b56c0 	call	1000b56c <_Bfree>
10008d9c:	003e9706 	br	100087fc <__alt_data_end+0xf80087fc>
10008da0:	01800044 	movi	r6,1
10008da4:	d9800e15 	stw	r6,56(sp)
10008da8:	003d9606 	br	10008404 <__alt_data_end+0xf8008404>
10008dac:	d8800817 	ldw	r2,32(sp)
10008db0:	d8c00517 	ldw	r3,20(sp)
10008db4:	d8000d15 	stw	zero,52(sp)
10008db8:	10c5c83a 	sub	r2,r2,r3
10008dbc:	00c9c83a 	sub	r4,zero,r3
10008dc0:	d8800815 	stw	r2,32(sp)
10008dc4:	d9000a15 	stw	r4,40(sp)
10008dc8:	003d9706 	br	10008428 <__alt_data_end+0xf8008428>
10008dcc:	05adc83a 	sub	r22,zero,r22
10008dd0:	dd800815 	stw	r22,32(sp)
10008dd4:	002d883a 	mov	r22,zero
10008dd8:	003d8e06 	br	10008414 <__alt_data_end+0xf8008414>
10008ddc:	d9000517 	ldw	r4,20(sp)
10008de0:	00192500 	call	10019250 <__floatsidf>
10008de4:	100d883a 	mov	r6,r2
10008de8:	180f883a 	mov	r7,r3
10008dec:	a009883a 	mov	r4,r20
10008df0:	880b883a 	mov	r5,r17
10008df4:	0017e100 	call	10017e10 <__eqdf2>
10008df8:	103d7126 	beq	r2,zero,100083c0 <__alt_data_end+0xf80083c0>
10008dfc:	d9c00517 	ldw	r7,20(sp)
10008e00:	39ffffc4 	addi	r7,r7,-1
10008e04:	d9c00515 	stw	r7,20(sp)
10008e08:	003d6d06 	br	100083c0 <__alt_data_end+0xf80083c0>
10008e0c:	dd400a17 	ldw	r21,40(sp)
10008e10:	dd000817 	ldw	r20,32(sp)
10008e14:	0023883a 	mov	r17,zero
10008e18:	003f4806 	br	10008b3c <__alt_data_end+0xf8008b3c>
10008e1c:	10e3c83a 	sub	r17,r2,r3
10008e20:	9448983a 	sll	r4,r18,r17
10008e24:	003d3206 	br	100082f0 <__alt_data_end+0xf80082f0>
10008e28:	d8000e15 	stw	zero,56(sp)
10008e2c:	003d7506 	br	10008404 <__alt_data_end+0xf8008404>
10008e30:	b005883a 	mov	r2,r22
10008e34:	003f4506 	br	10008b4c <__alt_data_end+0xf8008b4c>
10008e38:	dc000915 	stw	r16,36(sp)
10008e3c:	d9800a17 	ldw	r6,40(sp)
10008e40:	d9400917 	ldw	r5,36(sp)
10008e44:	e009883a 	mov	r4,fp
10008e48:	000bbc00 	call	1000bbc0 <__pow5mult>
10008e4c:	1021883a 	mov	r16,r2
10008e50:	003f5a06 	br	10008bbc <__alt_data_end+0xf8008bbc>
10008e54:	01c00044 	movi	r7,1
10008e58:	d9c00b15 	stw	r7,44(sp)
10008e5c:	d8802217 	ldw	r2,136(sp)
10008e60:	0081280e 	bge	zero,r2,10009304 <_dtoa_r+0x11b0>
10008e64:	100d883a 	mov	r6,r2
10008e68:	1021883a 	mov	r16,r2
10008e6c:	d8800c15 	stw	r2,48(sp)
10008e70:	d8800615 	stw	r2,24(sp)
10008e74:	003d8806 	br	10008498 <__alt_data_end+0xf8008498>
10008e78:	d8800617 	ldw	r2,24(sp)
10008e7c:	00be9b16 	blt	zero,r2,100088ec <__alt_data_end+0xf80088ec>
10008e80:	10010f1e 	bne	r2,zero,100092c0 <_dtoa_r+0x116c>
10008e84:	880b883a 	mov	r5,r17
10008e88:	000d883a 	mov	r6,zero
10008e8c:	01d00534 	movhi	r7,16404
10008e90:	8009883a 	mov	r4,r16
10008e94:	00180680 	call	10018068 <__muldf3>
10008e98:	900d883a 	mov	r6,r18
10008e9c:	980f883a 	mov	r7,r19
10008ea0:	1009883a 	mov	r4,r2
10008ea4:	180b883a 	mov	r5,r3
10008ea8:	0017e980 	call	10017e98 <__gedf2>
10008eac:	002b883a 	mov	r21,zero
10008eb0:	0023883a 	mov	r17,zero
10008eb4:	1000bf16 	blt	r2,zero,100091b4 <_dtoa_r+0x1060>
10008eb8:	d9802217 	ldw	r6,136(sp)
10008ebc:	ddc00717 	ldw	r23,28(sp)
10008ec0:	018c303a 	nor	r6,zero,r6
10008ec4:	d9800515 	stw	r6,20(sp)
10008ec8:	a80b883a 	mov	r5,r21
10008ecc:	e009883a 	mov	r4,fp
10008ed0:	000b56c0 	call	1000b56c <_Bfree>
10008ed4:	883e4926 	beq	r17,zero,100087fc <__alt_data_end+0xf80087fc>
10008ed8:	003fad06 	br	10008d90 <__alt_data_end+0xf8008d90>
10008edc:	d9c01117 	ldw	r7,68(sp)
10008ee0:	3801bc26 	beq	r7,zero,100095d4 <_dtoa_r+0x1480>
10008ee4:	10810cc4 	addi	r2,r2,1075
10008ee8:	dd400a17 	ldw	r21,40(sp)
10008eec:	dd000817 	ldw	r20,32(sp)
10008ef0:	003f0a06 	br	10008b1c <__alt_data_end+0xf8008b1c>
10008ef4:	00800704 	movi	r2,28
10008ef8:	d9000817 	ldw	r4,32(sp)
10008efc:	a0a9883a 	add	r20,r20,r2
10008f00:	b0ad883a 	add	r22,r22,r2
10008f04:	2089883a 	add	r4,r4,r2
10008f08:	d9000815 	stw	r4,32(sp)
10008f0c:	003f5106 	br	10008c54 <__alt_data_end+0xf8008c54>
10008f10:	d8c00317 	ldw	r3,12(sp)
10008f14:	b8c1fc0e 	bge	r23,r3,10009708 <_dtoa_r+0x15b4>
10008f18:	0027883a 	mov	r19,zero
10008f1c:	b805883a 	mov	r2,r23
10008f20:	003f3e06 	br	10008c1c <__alt_data_end+0xf8008c1c>
10008f24:	880b883a 	mov	r5,r17
10008f28:	e009883a 	mov	r4,fp
10008f2c:	000f883a 	mov	r7,zero
10008f30:	01800284 	movi	r6,10
10008f34:	000b5940 	call	1000b594 <__multadd>
10008f38:	d9000c17 	ldw	r4,48(sp)
10008f3c:	1023883a 	mov	r17,r2
10008f40:	0102040e 	bge	zero,r4,10009754 <_dtoa_r+0x1600>
10008f44:	d9000615 	stw	r4,24(sp)
10008f48:	0500050e 	bge	zero,r20,10008f60 <_dtoa_r+0xe0c>
10008f4c:	880b883a 	mov	r5,r17
10008f50:	a00d883a 	mov	r6,r20
10008f54:	e009883a 	mov	r4,fp
10008f58:	000bd000 	call	1000bd00 <__lshift>
10008f5c:	1023883a 	mov	r17,r2
10008f60:	9801241e 	bne	r19,zero,100093f4 <_dtoa_r+0x12a0>
10008f64:	8829883a 	mov	r20,r17
10008f68:	d9000617 	ldw	r4,24(sp)
10008f6c:	dcc00717 	ldw	r19,28(sp)
10008f70:	9480004c 	andi	r18,r18,1
10008f74:	20bfffc4 	addi	r2,r4,-1
10008f78:	9885883a 	add	r2,r19,r2
10008f7c:	d8800415 	stw	r2,16(sp)
10008f80:	dc800615 	stw	r18,24(sp)
10008f84:	a80b883a 	mov	r5,r21
10008f88:	8009883a 	mov	r4,r16
10008f8c:	0007f2c0 	call	10007f2c <quorem>
10008f90:	880b883a 	mov	r5,r17
10008f94:	8009883a 	mov	r4,r16
10008f98:	102f883a 	mov	r23,r2
10008f9c:	000be480 	call	1000be48 <__mcmp>
10008fa0:	a80b883a 	mov	r5,r21
10008fa4:	a00d883a 	mov	r6,r20
10008fa8:	e009883a 	mov	r4,fp
10008fac:	102d883a 	mov	r22,r2
10008fb0:	000bea80 	call	1000bea8 <__mdiff>
10008fb4:	1007883a 	mov	r3,r2
10008fb8:	10800317 	ldw	r2,12(r2)
10008fbc:	bc800c04 	addi	r18,r23,48
10008fc0:	180b883a 	mov	r5,r3
10008fc4:	10004e1e 	bne	r2,zero,10009100 <_dtoa_r+0xfac>
10008fc8:	8009883a 	mov	r4,r16
10008fcc:	d8c01615 	stw	r3,88(sp)
10008fd0:	000be480 	call	1000be48 <__mcmp>
10008fd4:	d8c01617 	ldw	r3,88(sp)
10008fd8:	e009883a 	mov	r4,fp
10008fdc:	d8801615 	stw	r2,88(sp)
10008fe0:	180b883a 	mov	r5,r3
10008fe4:	000b56c0 	call	1000b56c <_Bfree>
10008fe8:	d8801617 	ldw	r2,88(sp)
10008fec:	1000041e 	bne	r2,zero,10009000 <_dtoa_r+0xeac>
10008ff0:	d9800317 	ldw	r6,12(sp)
10008ff4:	3000021e 	bne	r6,zero,10009000 <_dtoa_r+0xeac>
10008ff8:	d8c00617 	ldw	r3,24(sp)
10008ffc:	18003726 	beq	r3,zero,100090dc <_dtoa_r+0xf88>
10009000:	b0002016 	blt	r22,zero,10009084 <_dtoa_r+0xf30>
10009004:	b000041e 	bne	r22,zero,10009018 <_dtoa_r+0xec4>
10009008:	d9000317 	ldw	r4,12(sp)
1000900c:	2000021e 	bne	r4,zero,10009018 <_dtoa_r+0xec4>
10009010:	d8c00617 	ldw	r3,24(sp)
10009014:	18001b26 	beq	r3,zero,10009084 <_dtoa_r+0xf30>
10009018:	00810716 	blt	zero,r2,10009438 <_dtoa_r+0x12e4>
1000901c:	d8c00417 	ldw	r3,16(sp)
10009020:	9d800044 	addi	r22,r19,1
10009024:	9c800005 	stb	r18,0(r19)
10009028:	b02f883a 	mov	r23,r22
1000902c:	98c10626 	beq	r19,r3,10009448 <_dtoa_r+0x12f4>
10009030:	800b883a 	mov	r5,r16
10009034:	000f883a 	mov	r7,zero
10009038:	01800284 	movi	r6,10
1000903c:	e009883a 	mov	r4,fp
10009040:	000b5940 	call	1000b594 <__multadd>
10009044:	1021883a 	mov	r16,r2
10009048:	000f883a 	mov	r7,zero
1000904c:	01800284 	movi	r6,10
10009050:	880b883a 	mov	r5,r17
10009054:	e009883a 	mov	r4,fp
10009058:	8d002526 	beq	r17,r20,100090f0 <_dtoa_r+0xf9c>
1000905c:	000b5940 	call	1000b594 <__multadd>
10009060:	a00b883a 	mov	r5,r20
10009064:	000f883a 	mov	r7,zero
10009068:	01800284 	movi	r6,10
1000906c:	e009883a 	mov	r4,fp
10009070:	1023883a 	mov	r17,r2
10009074:	000b5940 	call	1000b594 <__multadd>
10009078:	1029883a 	mov	r20,r2
1000907c:	b027883a 	mov	r19,r22
10009080:	003fc006 	br	10008f84 <__alt_data_end+0xf8008f84>
10009084:	9011883a 	mov	r8,r18
10009088:	00800e0e 	bge	zero,r2,100090c4 <_dtoa_r+0xf70>
1000908c:	800b883a 	mov	r5,r16
10009090:	01800044 	movi	r6,1
10009094:	e009883a 	mov	r4,fp
10009098:	da001715 	stw	r8,92(sp)
1000909c:	000bd000 	call	1000bd00 <__lshift>
100090a0:	a80b883a 	mov	r5,r21
100090a4:	1009883a 	mov	r4,r2
100090a8:	1021883a 	mov	r16,r2
100090ac:	000be480 	call	1000be48 <__mcmp>
100090b0:	da001717 	ldw	r8,92(sp)
100090b4:	0081960e 	bge	zero,r2,10009710 <_dtoa_r+0x15bc>
100090b8:	00800e44 	movi	r2,57
100090bc:	40817026 	beq	r8,r2,10009680 <_dtoa_r+0x152c>
100090c0:	ba000c44 	addi	r8,r23,49
100090c4:	8825883a 	mov	r18,r17
100090c8:	9dc00044 	addi	r23,r19,1
100090cc:	9a000005 	stb	r8,0(r19)
100090d0:	a023883a 	mov	r17,r20
100090d4:	dc000915 	stw	r16,36(sp)
100090d8:	003f2406 	br	10008d6c <__alt_data_end+0xf8008d6c>
100090dc:	00800e44 	movi	r2,57
100090e0:	9011883a 	mov	r8,r18
100090e4:	90816626 	beq	r18,r2,10009680 <_dtoa_r+0x152c>
100090e8:	05bff516 	blt	zero,r22,100090c0 <__alt_data_end+0xf80090c0>
100090ec:	003ff506 	br	100090c4 <__alt_data_end+0xf80090c4>
100090f0:	000b5940 	call	1000b594 <__multadd>
100090f4:	1023883a 	mov	r17,r2
100090f8:	1029883a 	mov	r20,r2
100090fc:	003fdf06 	br	1000907c <__alt_data_end+0xf800907c>
10009100:	e009883a 	mov	r4,fp
10009104:	000b56c0 	call	1000b56c <_Bfree>
10009108:	00800044 	movi	r2,1
1000910c:	003fbc06 	br	10009000 <__alt_data_end+0xf8009000>
10009110:	a80b883a 	mov	r5,r21
10009114:	8009883a 	mov	r4,r16
10009118:	000be480 	call	1000be48 <__mcmp>
1000911c:	103edb0e 	bge	r2,zero,10008c8c <__alt_data_end+0xf8008c8c>
10009120:	800b883a 	mov	r5,r16
10009124:	000f883a 	mov	r7,zero
10009128:	01800284 	movi	r6,10
1000912c:	e009883a 	mov	r4,fp
10009130:	000b5940 	call	1000b594 <__multadd>
10009134:	1021883a 	mov	r16,r2
10009138:	d8800517 	ldw	r2,20(sp)
1000913c:	d8c00b17 	ldw	r3,44(sp)
10009140:	10bfffc4 	addi	r2,r2,-1
10009144:	d8800515 	stw	r2,20(sp)
10009148:	183f761e 	bne	r3,zero,10008f24 <__alt_data_end+0xf8008f24>
1000914c:	d9000c17 	ldw	r4,48(sp)
10009150:	0101730e 	bge	zero,r4,10009720 <_dtoa_r+0x15cc>
10009154:	d9000615 	stw	r4,24(sp)
10009158:	003ed006 	br	10008c9c <__alt_data_end+0xf8008c9c>
1000915c:	00800084 	movi	r2,2
10009160:	3081861e 	bne	r6,r2,1000977c <_dtoa_r+0x1628>
10009164:	d8000b15 	stw	zero,44(sp)
10009168:	003f3c06 	br	10008e5c <__alt_data_end+0xf8008e5c>
1000916c:	dc000917 	ldw	r16,36(sp)
10009170:	003e9206 	br	10008bbc <__alt_data_end+0xf8008bbc>
10009174:	d9c00317 	ldw	r7,12(sp)
10009178:	00800084 	movi	r2,2
1000917c:	11fec50e 	bge	r2,r7,10008c94 <__alt_data_end+0xf8008c94>
10009180:	d9000617 	ldw	r4,24(sp)
10009184:	20013c1e 	bne	r4,zero,10009678 <_dtoa_r+0x1524>
10009188:	a80b883a 	mov	r5,r21
1000918c:	000f883a 	mov	r7,zero
10009190:	01800144 	movi	r6,5
10009194:	e009883a 	mov	r4,fp
10009198:	000b5940 	call	1000b594 <__multadd>
1000919c:	100b883a 	mov	r5,r2
100091a0:	8009883a 	mov	r4,r16
100091a4:	102b883a 	mov	r21,r2
100091a8:	000be480 	call	1000be48 <__mcmp>
100091ac:	dc000915 	stw	r16,36(sp)
100091b0:	00bf410e 	bge	zero,r2,10008eb8 <__alt_data_end+0xf8008eb8>
100091b4:	d9c00717 	ldw	r7,28(sp)
100091b8:	00800c44 	movi	r2,49
100091bc:	38800005 	stb	r2,0(r7)
100091c0:	d8800517 	ldw	r2,20(sp)
100091c4:	3dc00044 	addi	r23,r7,1
100091c8:	10800044 	addi	r2,r2,1
100091cc:	d8800515 	stw	r2,20(sp)
100091d0:	003f3d06 	br	10008ec8 <__alt_data_end+0xf8008ec8>
100091d4:	d9800517 	ldw	r6,20(sp)
100091d8:	d9c00717 	ldw	r7,28(sp)
100091dc:	00800c44 	movi	r2,49
100091e0:	31800044 	addi	r6,r6,1
100091e4:	d9800515 	stw	r6,20(sp)
100091e8:	38800005 	stb	r2,0(r7)
100091ec:	003edf06 	br	10008d6c <__alt_data_end+0xf8008d6c>
100091f0:	d8000b15 	stw	zero,44(sp)
100091f4:	003c9f06 	br	10008474 <__alt_data_end+0xf8008474>
100091f8:	903e7e1e 	bne	r18,zero,10008bf4 <__alt_data_end+0xf8008bf4>
100091fc:	00800434 	movhi	r2,16
10009200:	10bfffc4 	addi	r2,r2,-1
10009204:	9884703a 	and	r2,r19,r2
10009208:	1000ea1e 	bne	r2,zero,100095b4 <_dtoa_r+0x1460>
1000920c:	9cdffc2c 	andhi	r19,r19,32752
10009210:	9800e826 	beq	r19,zero,100095b4 <_dtoa_r+0x1460>
10009214:	d9c00817 	ldw	r7,32(sp)
10009218:	b5800044 	addi	r22,r22,1
1000921c:	04c00044 	movi	r19,1
10009220:	39c00044 	addi	r7,r7,1
10009224:	d9c00815 	stw	r7,32(sp)
10009228:	d8800d17 	ldw	r2,52(sp)
1000922c:	103e721e 	bne	r2,zero,10008bf8 <__alt_data_end+0xf8008bf8>
10009230:	00800044 	movi	r2,1
10009234:	003e7906 	br	10008c1c <__alt_data_end+0xf8008c1c>
10009238:	8009883a 	mov	r4,r16
1000923c:	00192500 	call	10019250 <__floatsidf>
10009240:	d9800f17 	ldw	r6,60(sp)
10009244:	d9c01017 	ldw	r7,64(sp)
10009248:	1009883a 	mov	r4,r2
1000924c:	180b883a 	mov	r5,r3
10009250:	00180680 	call	10018068 <__muldf3>
10009254:	000d883a 	mov	r6,zero
10009258:	01d00734 	movhi	r7,16412
1000925c:	1009883a 	mov	r4,r2
10009260:	180b883a 	mov	r5,r3
10009264:	0016b940 	call	10016b94 <__adddf3>
10009268:	047f3034 	movhi	r17,64704
1000926c:	1021883a 	mov	r16,r2
10009270:	1c63883a 	add	r17,r3,r17
10009274:	d9000f17 	ldw	r4,60(sp)
10009278:	d9401017 	ldw	r5,64(sp)
1000927c:	000d883a 	mov	r6,zero
10009280:	01d00534 	movhi	r7,16404
10009284:	00188d40 	call	100188d4 <__subdf3>
10009288:	800d883a 	mov	r6,r16
1000928c:	880f883a 	mov	r7,r17
10009290:	1009883a 	mov	r4,r2
10009294:	180b883a 	mov	r5,r3
10009298:	102b883a 	mov	r21,r2
1000929c:	1829883a 	mov	r20,r3
100092a0:	0017e980 	call	10017e98 <__gedf2>
100092a4:	00806c16 	blt	zero,r2,10009458 <_dtoa_r+0x1304>
100092a8:	89e0003c 	xorhi	r7,r17,32768
100092ac:	800d883a 	mov	r6,r16
100092b0:	a809883a 	mov	r4,r21
100092b4:	a00b883a 	mov	r5,r20
100092b8:	0017f740 	call	10017f74 <__ledf2>
100092bc:	103d7e0e 	bge	r2,zero,100088b8 <__alt_data_end+0xf80088b8>
100092c0:	002b883a 	mov	r21,zero
100092c4:	0023883a 	mov	r17,zero
100092c8:	003efb06 	br	10008eb8 <__alt_data_end+0xf8008eb8>
100092cc:	d8800717 	ldw	r2,28(sp)
100092d0:	003bd006 	br	10008214 <__alt_data_end+0xf8008214>
100092d4:	d9000a17 	ldw	r4,40(sp)
100092d8:	d9800d17 	ldw	r6,52(sp)
100092dc:	dd400a15 	stw	r21,40(sp)
100092e0:	a905c83a 	sub	r2,r21,r4
100092e4:	308d883a 	add	r6,r6,r2
100092e8:	d9800d15 	stw	r6,52(sp)
100092ec:	002b883a 	mov	r21,zero
100092f0:	003e0606 	br	10008b0c <__alt_data_end+0xf8008b0c>
100092f4:	9023883a 	mov	r17,r18
100092f8:	9829883a 	mov	r20,r19
100092fc:	04000084 	movi	r16,2
10009300:	003c9206 	br	1000854c <__alt_data_end+0xf800854c>
10009304:	04000044 	movi	r16,1
10009308:	dc000c15 	stw	r16,48(sp)
1000930c:	dc000615 	stw	r16,24(sp)
10009310:	dc002215 	stw	r16,136(sp)
10009314:	e0001115 	stw	zero,68(fp)
10009318:	000b883a 	mov	r5,zero
1000931c:	003c6906 	br	100084c4 <__alt_data_end+0xf80084c4>
10009320:	3021883a 	mov	r16,r6
10009324:	003ffb06 	br	10009314 <__alt_data_end+0xf8009314>
10009328:	1000021e 	bne	r2,zero,10009334 <_dtoa_r+0x11e0>
1000932c:	4200004c 	andi	r8,r8,1
10009330:	403e7d1e 	bne	r8,zero,10008d28 <__alt_data_end+0xf8008d28>
10009334:	01000c04 	movi	r4,48
10009338:	00000106 	br	10009340 <_dtoa_r+0x11ec>
1000933c:	102f883a 	mov	r23,r2
10009340:	b8bfffc4 	addi	r2,r23,-1
10009344:	10c00007 	ldb	r3,0(r2)
10009348:	193ffc26 	beq	r3,r4,1000933c <__alt_data_end+0xf800933c>
1000934c:	003e8706 	br	10008d6c <__alt_data_end+0xf8008d6c>
10009350:	d8800517 	ldw	r2,20(sp)
10009354:	00a3c83a 	sub	r17,zero,r2
10009358:	8800a426 	beq	r17,zero,100095ec <_dtoa_r+0x1498>
1000935c:	888003cc 	andi	r2,r17,15
10009360:	100490fa 	slli	r2,r2,3
10009364:	00c400b4 	movhi	r3,4098
10009368:	18f28604 	addi	r3,r3,-13800
1000936c:	1885883a 	add	r2,r3,r2
10009370:	11800017 	ldw	r6,0(r2)
10009374:	11c00117 	ldw	r7,4(r2)
10009378:	9009883a 	mov	r4,r18
1000937c:	980b883a 	mov	r5,r19
10009380:	8823d13a 	srai	r17,r17,4
10009384:	00180680 	call	10018068 <__muldf3>
10009388:	d8800f15 	stw	r2,60(sp)
1000938c:	d8c01015 	stw	r3,64(sp)
10009390:	8800e826 	beq	r17,zero,10009734 <_dtoa_r+0x15e0>
10009394:	050400b4 	movhi	r20,4098
10009398:	a5327c04 	addi	r20,r20,-13840
1000939c:	04000084 	movi	r16,2
100093a0:	8980004c 	andi	r6,r17,1
100093a4:	1009883a 	mov	r4,r2
100093a8:	8823d07a 	srai	r17,r17,1
100093ac:	180b883a 	mov	r5,r3
100093b0:	30000426 	beq	r6,zero,100093c4 <_dtoa_r+0x1270>
100093b4:	a1800017 	ldw	r6,0(r20)
100093b8:	a1c00117 	ldw	r7,4(r20)
100093bc:	84000044 	addi	r16,r16,1
100093c0:	00180680 	call	10018068 <__muldf3>
100093c4:	a5000204 	addi	r20,r20,8
100093c8:	883ff51e 	bne	r17,zero,100093a0 <__alt_data_end+0xf80093a0>
100093cc:	d8800f15 	stw	r2,60(sp)
100093d0:	d8c01015 	stw	r3,64(sp)
100093d4:	003c7606 	br	100085b0 <__alt_data_end+0xf80085b0>
100093d8:	00c00c04 	movi	r3,48
100093dc:	10c00005 	stb	r3,0(r2)
100093e0:	d8c00517 	ldw	r3,20(sp)
100093e4:	bd3fffc3 	ldbu	r20,-1(r23)
100093e8:	18c00044 	addi	r3,r3,1
100093ec:	d8c00515 	stw	r3,20(sp)
100093f0:	003db906 	br	10008ad8 <__alt_data_end+0xf8008ad8>
100093f4:	89400117 	ldw	r5,4(r17)
100093f8:	e009883a 	mov	r4,fp
100093fc:	000b4c40 	call	1000b4c4 <_Balloc>
10009400:	89800417 	ldw	r6,16(r17)
10009404:	89400304 	addi	r5,r17,12
10009408:	11000304 	addi	r4,r2,12
1000940c:	31800084 	addi	r6,r6,2
10009410:	318d883a 	add	r6,r6,r6
10009414:	318d883a 	add	r6,r6,r6
10009418:	1027883a 	mov	r19,r2
1000941c:	000b0f80 	call	1000b0f8 <memcpy>
10009420:	01800044 	movi	r6,1
10009424:	980b883a 	mov	r5,r19
10009428:	e009883a 	mov	r4,fp
1000942c:	000bd000 	call	1000bd00 <__lshift>
10009430:	1029883a 	mov	r20,r2
10009434:	003ecc06 	br	10008f68 <__alt_data_end+0xf8008f68>
10009438:	00800e44 	movi	r2,57
1000943c:	90809026 	beq	r18,r2,10009680 <_dtoa_r+0x152c>
10009440:	92000044 	addi	r8,r18,1
10009444:	003f1f06 	br	100090c4 <__alt_data_end+0xf80090c4>
10009448:	9011883a 	mov	r8,r18
1000944c:	8825883a 	mov	r18,r17
10009450:	a023883a 	mov	r17,r20
10009454:	003e2906 	br	10008cfc <__alt_data_end+0xf8008cfc>
10009458:	002b883a 	mov	r21,zero
1000945c:	0023883a 	mov	r17,zero
10009460:	003f5406 	br	100091b4 <__alt_data_end+0xf80091b4>
10009464:	61bfffc4 	addi	r6,r12,-1
10009468:	300490fa 	slli	r2,r6,3
1000946c:	00c400b4 	movhi	r3,4098
10009470:	18f28604 	addi	r3,r3,-13800
10009474:	1885883a 	add	r2,r3,r2
10009478:	11000017 	ldw	r4,0(r2)
1000947c:	11400117 	ldw	r5,4(r2)
10009480:	d8800717 	ldw	r2,28(sp)
10009484:	880f883a 	mov	r7,r17
10009488:	d9801215 	stw	r6,72(sp)
1000948c:	800d883a 	mov	r6,r16
10009490:	db001615 	stw	r12,88(sp)
10009494:	15c00044 	addi	r23,r2,1
10009498:	00180680 	call	10018068 <__muldf3>
1000949c:	d9401017 	ldw	r5,64(sp)
100094a0:	d9000f17 	ldw	r4,60(sp)
100094a4:	d8c01515 	stw	r3,84(sp)
100094a8:	d8801415 	stw	r2,80(sp)
100094ac:	00191d00 	call	100191d0 <__fixdfsi>
100094b0:	1009883a 	mov	r4,r2
100094b4:	1021883a 	mov	r16,r2
100094b8:	00192500 	call	10019250 <__floatsidf>
100094bc:	d9000f17 	ldw	r4,60(sp)
100094c0:	d9401017 	ldw	r5,64(sp)
100094c4:	100d883a 	mov	r6,r2
100094c8:	180f883a 	mov	r7,r3
100094cc:	00188d40 	call	100188d4 <__subdf3>
100094d0:	1829883a 	mov	r20,r3
100094d4:	d8c00717 	ldw	r3,28(sp)
100094d8:	84000c04 	addi	r16,r16,48
100094dc:	1023883a 	mov	r17,r2
100094e0:	1c000005 	stb	r16,0(r3)
100094e4:	db001617 	ldw	r12,88(sp)
100094e8:	00800044 	movi	r2,1
100094ec:	60802226 	beq	r12,r2,10009578 <_dtoa_r+0x1424>
100094f0:	d9c00717 	ldw	r7,28(sp)
100094f4:	8805883a 	mov	r2,r17
100094f8:	b82b883a 	mov	r21,r23
100094fc:	3b19883a 	add	r12,r7,r12
10009500:	6023883a 	mov	r17,r12
10009504:	a007883a 	mov	r3,r20
10009508:	dc800f15 	stw	r18,60(sp)
1000950c:	000d883a 	mov	r6,zero
10009510:	01d00934 	movhi	r7,16420
10009514:	1009883a 	mov	r4,r2
10009518:	180b883a 	mov	r5,r3
1000951c:	00180680 	call	10018068 <__muldf3>
10009520:	180b883a 	mov	r5,r3
10009524:	1009883a 	mov	r4,r2
10009528:	1829883a 	mov	r20,r3
1000952c:	1025883a 	mov	r18,r2
10009530:	00191d00 	call	100191d0 <__fixdfsi>
10009534:	1009883a 	mov	r4,r2
10009538:	1021883a 	mov	r16,r2
1000953c:	00192500 	call	10019250 <__floatsidf>
10009540:	100d883a 	mov	r6,r2
10009544:	180f883a 	mov	r7,r3
10009548:	9009883a 	mov	r4,r18
1000954c:	a00b883a 	mov	r5,r20
10009550:	84000c04 	addi	r16,r16,48
10009554:	00188d40 	call	100188d4 <__subdf3>
10009558:	ad400044 	addi	r21,r21,1
1000955c:	ac3fffc5 	stb	r16,-1(r21)
10009560:	ac7fea1e 	bne	r21,r17,1000950c <__alt_data_end+0xf800950c>
10009564:	1023883a 	mov	r17,r2
10009568:	d8801217 	ldw	r2,72(sp)
1000956c:	dc800f17 	ldw	r18,60(sp)
10009570:	1829883a 	mov	r20,r3
10009574:	b8af883a 	add	r23,r23,r2
10009578:	d9001417 	ldw	r4,80(sp)
1000957c:	d9401517 	ldw	r5,84(sp)
10009580:	000d883a 	mov	r6,zero
10009584:	01cff834 	movhi	r7,16352
10009588:	0016b940 	call	10016b94 <__adddf3>
1000958c:	880d883a 	mov	r6,r17
10009590:	a00f883a 	mov	r7,r20
10009594:	1009883a 	mov	r4,r2
10009598:	180b883a 	mov	r5,r3
1000959c:	0017f740 	call	10017f74 <__ledf2>
100095a0:	10003e0e 	bge	r2,zero,1000969c <_dtoa_r+0x1548>
100095a4:	d9001317 	ldw	r4,76(sp)
100095a8:	bd3fffc3 	ldbu	r20,-1(r23)
100095ac:	d9000515 	stw	r4,20(sp)
100095b0:	003d3b06 	br	10008aa0 <__alt_data_end+0xf8008aa0>
100095b4:	0027883a 	mov	r19,zero
100095b8:	003f1b06 	br	10009228 <__alt_data_end+0xf8009228>
100095bc:	d8800817 	ldw	r2,32(sp)
100095c0:	11e9c83a 	sub	r20,r2,r7
100095c4:	0005883a 	mov	r2,zero
100095c8:	003d5406 	br	10008b1c <__alt_data_end+0xf8008b1c>
100095cc:	00800044 	movi	r2,1
100095d0:	003dc706 	br	10008cf0 <__alt_data_end+0xf8008cf0>
100095d4:	d8c00217 	ldw	r3,8(sp)
100095d8:	00800d84 	movi	r2,54
100095dc:	dd400a17 	ldw	r21,40(sp)
100095e0:	10c5c83a 	sub	r2,r2,r3
100095e4:	dd000817 	ldw	r20,32(sp)
100095e8:	003d4c06 	br	10008b1c <__alt_data_end+0xf8008b1c>
100095ec:	dc800f15 	stw	r18,60(sp)
100095f0:	dcc01015 	stw	r19,64(sp)
100095f4:	04000084 	movi	r16,2
100095f8:	003bed06 	br	100085b0 <__alt_data_end+0xf80085b0>
100095fc:	d9000617 	ldw	r4,24(sp)
10009600:	203f0d26 	beq	r4,zero,10009238 <__alt_data_end+0xf8009238>
10009604:	d9800c17 	ldw	r6,48(sp)
10009608:	01bcab0e 	bge	zero,r6,100088b8 <__alt_data_end+0xf80088b8>
1000960c:	d9401017 	ldw	r5,64(sp)
10009610:	d9000f17 	ldw	r4,60(sp)
10009614:	000d883a 	mov	r6,zero
10009618:	01d00934 	movhi	r7,16420
1000961c:	00180680 	call	10018068 <__muldf3>
10009620:	81000044 	addi	r4,r16,1
10009624:	d8800f15 	stw	r2,60(sp)
10009628:	d8c01015 	stw	r3,64(sp)
1000962c:	00192500 	call	10019250 <__floatsidf>
10009630:	d9800f17 	ldw	r6,60(sp)
10009634:	d9c01017 	ldw	r7,64(sp)
10009638:	1009883a 	mov	r4,r2
1000963c:	180b883a 	mov	r5,r3
10009640:	00180680 	call	10018068 <__muldf3>
10009644:	01d00734 	movhi	r7,16412
10009648:	000d883a 	mov	r6,zero
1000964c:	1009883a 	mov	r4,r2
10009650:	180b883a 	mov	r5,r3
10009654:	0016b940 	call	10016b94 <__adddf3>
10009658:	d9c00517 	ldw	r7,20(sp)
1000965c:	047f3034 	movhi	r17,64704
10009660:	1021883a 	mov	r16,r2
10009664:	39ffffc4 	addi	r7,r7,-1
10009668:	d9c01315 	stw	r7,76(sp)
1000966c:	1c63883a 	add	r17,r3,r17
10009670:	db000c17 	ldw	r12,48(sp)
10009674:	003bea06 	br	10008620 <__alt_data_end+0xf8008620>
10009678:	dc000915 	stw	r16,36(sp)
1000967c:	003e0e06 	br	10008eb8 <__alt_data_end+0xf8008eb8>
10009680:	01000e44 	movi	r4,57
10009684:	8825883a 	mov	r18,r17
10009688:	9dc00044 	addi	r23,r19,1
1000968c:	99000005 	stb	r4,0(r19)
10009690:	a023883a 	mov	r17,r20
10009694:	dc000915 	stw	r16,36(sp)
10009698:	003da406 	br	10008d2c <__alt_data_end+0xf8008d2c>
1000969c:	d9801417 	ldw	r6,80(sp)
100096a0:	d9c01517 	ldw	r7,84(sp)
100096a4:	0009883a 	mov	r4,zero
100096a8:	014ff834 	movhi	r5,16352
100096ac:	00188d40 	call	100188d4 <__subdf3>
100096b0:	880d883a 	mov	r6,r17
100096b4:	a00f883a 	mov	r7,r20
100096b8:	1009883a 	mov	r4,r2
100096bc:	180b883a 	mov	r5,r3
100096c0:	0017e980 	call	10017e98 <__gedf2>
100096c4:	00bc7c0e 	bge	zero,r2,100088b8 <__alt_data_end+0xf80088b8>
100096c8:	01000c04 	movi	r4,48
100096cc:	00000106 	br	100096d4 <_dtoa_r+0x1580>
100096d0:	102f883a 	mov	r23,r2
100096d4:	b8bfffc4 	addi	r2,r23,-1
100096d8:	10c00007 	ldb	r3,0(r2)
100096dc:	193ffc26 	beq	r3,r4,100096d0 <__alt_data_end+0xf80096d0>
100096e0:	d9801317 	ldw	r6,76(sp)
100096e4:	d9800515 	stw	r6,20(sp)
100096e8:	003c4406 	br	100087fc <__alt_data_end+0xf80087fc>
100096ec:	d9801317 	ldw	r6,76(sp)
100096f0:	d9800515 	stw	r6,20(sp)
100096f4:	003cea06 	br	10008aa0 <__alt_data_end+0xf8008aa0>
100096f8:	dd800f17 	ldw	r22,60(sp)
100096fc:	dcc01017 	ldw	r19,64(sp)
10009700:	dc801217 	ldw	r18,72(sp)
10009704:	003c6c06 	br	100088b8 <__alt_data_end+0xf80088b8>
10009708:	903e031e 	bne	r18,zero,10008f18 <__alt_data_end+0xf8008f18>
1000970c:	003ebb06 	br	100091fc <__alt_data_end+0xf80091fc>
10009710:	103e6c1e 	bne	r2,zero,100090c4 <__alt_data_end+0xf80090c4>
10009714:	4080004c 	andi	r2,r8,1
10009718:	103e6a26 	beq	r2,zero,100090c4 <__alt_data_end+0xf80090c4>
1000971c:	003e6606 	br	100090b8 <__alt_data_end+0xf80090b8>
10009720:	d8c00317 	ldw	r3,12(sp)
10009724:	00800084 	movi	r2,2
10009728:	10c02916 	blt	r2,r3,100097d0 <_dtoa_r+0x167c>
1000972c:	d9000c17 	ldw	r4,48(sp)
10009730:	003e8806 	br	10009154 <__alt_data_end+0xf8009154>
10009734:	04000084 	movi	r16,2
10009738:	003b9d06 	br	100085b0 <__alt_data_end+0xf80085b0>
1000973c:	d9001317 	ldw	r4,76(sp)
10009740:	d9000515 	stw	r4,20(sp)
10009744:	003cd606 	br	10008aa0 <__alt_data_end+0xf8008aa0>
10009748:	d8801317 	ldw	r2,76(sp)
1000974c:	d8800515 	stw	r2,20(sp)
10009750:	003c2a06 	br	100087fc <__alt_data_end+0xf80087fc>
10009754:	d9800317 	ldw	r6,12(sp)
10009758:	00800084 	movi	r2,2
1000975c:	11801516 	blt	r2,r6,100097b4 <_dtoa_r+0x1660>
10009760:	d9c00c17 	ldw	r7,48(sp)
10009764:	d9c00615 	stw	r7,24(sp)
10009768:	003df706 	br	10008f48 <__alt_data_end+0xf8008f48>
1000976c:	193d3926 	beq	r3,r4,10008c54 <__alt_data_end+0xf8008c54>
10009770:	00c00f04 	movi	r3,60
10009774:	1885c83a 	sub	r2,r3,r2
10009778:	003ddf06 	br	10008ef8 <__alt_data_end+0xf8008ef8>
1000977c:	e009883a 	mov	r4,fp
10009780:	e0001115 	stw	zero,68(fp)
10009784:	000b883a 	mov	r5,zero
10009788:	000b4c40 	call	1000b4c4 <_Balloc>
1000978c:	d8800715 	stw	r2,28(sp)
10009790:	d8c00717 	ldw	r3,28(sp)
10009794:	00bfffc4 	movi	r2,-1
10009798:	01000044 	movi	r4,1
1000979c:	d8800c15 	stw	r2,48(sp)
100097a0:	e0c01015 	stw	r3,64(fp)
100097a4:	d9000b15 	stw	r4,44(sp)
100097a8:	d8800615 	stw	r2,24(sp)
100097ac:	d8002215 	stw	zero,136(sp)
100097b0:	003c4106 	br	100088b8 <__alt_data_end+0xf80088b8>
100097b4:	d8c00c17 	ldw	r3,48(sp)
100097b8:	d8c00615 	stw	r3,24(sp)
100097bc:	003e7006 	br	10009180 <__alt_data_end+0xf8009180>
100097c0:	04400044 	movi	r17,1
100097c4:	003b2006 	br	10008448 <__alt_data_end+0xf8008448>
100097c8:	000b883a 	mov	r5,zero
100097cc:	003b3d06 	br	100084c4 <__alt_data_end+0xf80084c4>
100097d0:	d8800c17 	ldw	r2,48(sp)
100097d4:	d8800615 	stw	r2,24(sp)
100097d8:	003e6906 	br	10009180 <__alt_data_end+0xf8009180>

100097dc <__sflush_r>:
100097dc:	2880030b 	ldhu	r2,12(r5)
100097e0:	defffb04 	addi	sp,sp,-20
100097e4:	dcc00315 	stw	r19,12(sp)
100097e8:	dc400115 	stw	r17,4(sp)
100097ec:	dfc00415 	stw	ra,16(sp)
100097f0:	dc800215 	stw	r18,8(sp)
100097f4:	dc000015 	stw	r16,0(sp)
100097f8:	10c0020c 	andi	r3,r2,8
100097fc:	2823883a 	mov	r17,r5
10009800:	2027883a 	mov	r19,r4
10009804:	1800311e 	bne	r3,zero,100098cc <__sflush_r+0xf0>
10009808:	28c00117 	ldw	r3,4(r5)
1000980c:	10820014 	ori	r2,r2,2048
10009810:	2880030d 	sth	r2,12(r5)
10009814:	00c04b0e 	bge	zero,r3,10009944 <__sflush_r+0x168>
10009818:	8a000a17 	ldw	r8,40(r17)
1000981c:	40002326 	beq	r8,zero,100098ac <__sflush_r+0xd0>
10009820:	9c000017 	ldw	r16,0(r19)
10009824:	10c4000c 	andi	r3,r2,4096
10009828:	98000015 	stw	zero,0(r19)
1000982c:	18004826 	beq	r3,zero,10009950 <__sflush_r+0x174>
10009830:	89801417 	ldw	r6,80(r17)
10009834:	10c0010c 	andi	r3,r2,4
10009838:	18000626 	beq	r3,zero,10009854 <__sflush_r+0x78>
1000983c:	88c00117 	ldw	r3,4(r17)
10009840:	88800c17 	ldw	r2,48(r17)
10009844:	30cdc83a 	sub	r6,r6,r3
10009848:	10000226 	beq	r2,zero,10009854 <__sflush_r+0x78>
1000984c:	88800f17 	ldw	r2,60(r17)
10009850:	308dc83a 	sub	r6,r6,r2
10009854:	89400717 	ldw	r5,28(r17)
10009858:	000f883a 	mov	r7,zero
1000985c:	9809883a 	mov	r4,r19
10009860:	403ee83a 	callr	r8
10009864:	00ffffc4 	movi	r3,-1
10009868:	10c04426 	beq	r2,r3,1000997c <__sflush_r+0x1a0>
1000986c:	88c0030b 	ldhu	r3,12(r17)
10009870:	89000417 	ldw	r4,16(r17)
10009874:	88000115 	stw	zero,4(r17)
10009878:	197dffcc 	andi	r5,r3,63487
1000987c:	8940030d 	sth	r5,12(r17)
10009880:	89000015 	stw	r4,0(r17)
10009884:	18c4000c 	andi	r3,r3,4096
10009888:	18002c1e 	bne	r3,zero,1000993c <__sflush_r+0x160>
1000988c:	89400c17 	ldw	r5,48(r17)
10009890:	9c000015 	stw	r16,0(r19)
10009894:	28000526 	beq	r5,zero,100098ac <__sflush_r+0xd0>
10009898:	88801004 	addi	r2,r17,64
1000989c:	28800226 	beq	r5,r2,100098a8 <__sflush_r+0xcc>
100098a0:	9809883a 	mov	r4,r19
100098a4:	000a1c80 	call	1000a1c8 <_free_r>
100098a8:	88000c15 	stw	zero,48(r17)
100098ac:	0005883a 	mov	r2,zero
100098b0:	dfc00417 	ldw	ra,16(sp)
100098b4:	dcc00317 	ldw	r19,12(sp)
100098b8:	dc800217 	ldw	r18,8(sp)
100098bc:	dc400117 	ldw	r17,4(sp)
100098c0:	dc000017 	ldw	r16,0(sp)
100098c4:	dec00504 	addi	sp,sp,20
100098c8:	f800283a 	ret
100098cc:	2c800417 	ldw	r18,16(r5)
100098d0:	903ff626 	beq	r18,zero,100098ac <__alt_data_end+0xf80098ac>
100098d4:	2c000017 	ldw	r16,0(r5)
100098d8:	108000cc 	andi	r2,r2,3
100098dc:	2c800015 	stw	r18,0(r5)
100098e0:	84a1c83a 	sub	r16,r16,r18
100098e4:	1000131e 	bne	r2,zero,10009934 <__sflush_r+0x158>
100098e8:	28800517 	ldw	r2,20(r5)
100098ec:	88800215 	stw	r2,8(r17)
100098f0:	04000316 	blt	zero,r16,10009900 <__sflush_r+0x124>
100098f4:	003fed06 	br	100098ac <__alt_data_end+0xf80098ac>
100098f8:	90a5883a 	add	r18,r18,r2
100098fc:	043feb0e 	bge	zero,r16,100098ac <__alt_data_end+0xf80098ac>
10009900:	88800917 	ldw	r2,36(r17)
10009904:	89400717 	ldw	r5,28(r17)
10009908:	800f883a 	mov	r7,r16
1000990c:	900d883a 	mov	r6,r18
10009910:	9809883a 	mov	r4,r19
10009914:	103ee83a 	callr	r2
10009918:	80a1c83a 	sub	r16,r16,r2
1000991c:	00bff616 	blt	zero,r2,100098f8 <__alt_data_end+0xf80098f8>
10009920:	88c0030b 	ldhu	r3,12(r17)
10009924:	00bfffc4 	movi	r2,-1
10009928:	18c01014 	ori	r3,r3,64
1000992c:	88c0030d 	sth	r3,12(r17)
10009930:	003fdf06 	br	100098b0 <__alt_data_end+0xf80098b0>
10009934:	0005883a 	mov	r2,zero
10009938:	003fec06 	br	100098ec <__alt_data_end+0xf80098ec>
1000993c:	88801415 	stw	r2,80(r17)
10009940:	003fd206 	br	1000988c <__alt_data_end+0xf800988c>
10009944:	28c00f17 	ldw	r3,60(r5)
10009948:	00ffb316 	blt	zero,r3,10009818 <__alt_data_end+0xf8009818>
1000994c:	003fd706 	br	100098ac <__alt_data_end+0xf80098ac>
10009950:	89400717 	ldw	r5,28(r17)
10009954:	000d883a 	mov	r6,zero
10009958:	01c00044 	movi	r7,1
1000995c:	9809883a 	mov	r4,r19
10009960:	403ee83a 	callr	r8
10009964:	100d883a 	mov	r6,r2
10009968:	00bfffc4 	movi	r2,-1
1000996c:	30801426 	beq	r6,r2,100099c0 <__sflush_r+0x1e4>
10009970:	8880030b 	ldhu	r2,12(r17)
10009974:	8a000a17 	ldw	r8,40(r17)
10009978:	003fae06 	br	10009834 <__alt_data_end+0xf8009834>
1000997c:	98c00017 	ldw	r3,0(r19)
10009980:	183fba26 	beq	r3,zero,1000986c <__alt_data_end+0xf800986c>
10009984:	01000744 	movi	r4,29
10009988:	19000626 	beq	r3,r4,100099a4 <__sflush_r+0x1c8>
1000998c:	01000584 	movi	r4,22
10009990:	19000426 	beq	r3,r4,100099a4 <__sflush_r+0x1c8>
10009994:	88c0030b 	ldhu	r3,12(r17)
10009998:	18c01014 	ori	r3,r3,64
1000999c:	88c0030d 	sth	r3,12(r17)
100099a0:	003fc306 	br	100098b0 <__alt_data_end+0xf80098b0>
100099a4:	8880030b 	ldhu	r2,12(r17)
100099a8:	88c00417 	ldw	r3,16(r17)
100099ac:	88000115 	stw	zero,4(r17)
100099b0:	10bdffcc 	andi	r2,r2,63487
100099b4:	8880030d 	sth	r2,12(r17)
100099b8:	88c00015 	stw	r3,0(r17)
100099bc:	003fb306 	br	1000988c <__alt_data_end+0xf800988c>
100099c0:	98800017 	ldw	r2,0(r19)
100099c4:	103fea26 	beq	r2,zero,10009970 <__alt_data_end+0xf8009970>
100099c8:	00c00744 	movi	r3,29
100099cc:	10c00226 	beq	r2,r3,100099d8 <__sflush_r+0x1fc>
100099d0:	00c00584 	movi	r3,22
100099d4:	10c0031e 	bne	r2,r3,100099e4 <__sflush_r+0x208>
100099d8:	9c000015 	stw	r16,0(r19)
100099dc:	0005883a 	mov	r2,zero
100099e0:	003fb306 	br	100098b0 <__alt_data_end+0xf80098b0>
100099e4:	88c0030b 	ldhu	r3,12(r17)
100099e8:	3005883a 	mov	r2,r6
100099ec:	18c01014 	ori	r3,r3,64
100099f0:	88c0030d 	sth	r3,12(r17)
100099f4:	003fae06 	br	100098b0 <__alt_data_end+0xf80098b0>

100099f8 <_fflush_r>:
100099f8:	defffd04 	addi	sp,sp,-12
100099fc:	dc000115 	stw	r16,4(sp)
10009a00:	dfc00215 	stw	ra,8(sp)
10009a04:	2021883a 	mov	r16,r4
10009a08:	20000226 	beq	r4,zero,10009a14 <_fflush_r+0x1c>
10009a0c:	20800e17 	ldw	r2,56(r4)
10009a10:	10000c26 	beq	r2,zero,10009a44 <_fflush_r+0x4c>
10009a14:	2880030f 	ldh	r2,12(r5)
10009a18:	1000051e 	bne	r2,zero,10009a30 <_fflush_r+0x38>
10009a1c:	0005883a 	mov	r2,zero
10009a20:	dfc00217 	ldw	ra,8(sp)
10009a24:	dc000117 	ldw	r16,4(sp)
10009a28:	dec00304 	addi	sp,sp,12
10009a2c:	f800283a 	ret
10009a30:	8009883a 	mov	r4,r16
10009a34:	dfc00217 	ldw	ra,8(sp)
10009a38:	dc000117 	ldw	r16,4(sp)
10009a3c:	dec00304 	addi	sp,sp,12
10009a40:	00097dc1 	jmpi	100097dc <__sflush_r>
10009a44:	d9400015 	stw	r5,0(sp)
10009a48:	0009de40 	call	10009de4 <__sinit>
10009a4c:	d9400017 	ldw	r5,0(sp)
10009a50:	003ff006 	br	10009a14 <__alt_data_end+0xf8009a14>

10009a54 <fflush>:
10009a54:	20000526 	beq	r4,zero,10009a6c <fflush+0x18>
10009a58:	008400b4 	movhi	r2,4098
10009a5c:	10ba2504 	addi	r2,r2,-5996
10009a60:	200b883a 	mov	r5,r4
10009a64:	11000017 	ldw	r4,0(r2)
10009a68:	00099f81 	jmpi	100099f8 <_fflush_r>
10009a6c:	008400b4 	movhi	r2,4098
10009a70:	10ba2404 	addi	r2,r2,-6000
10009a74:	11000017 	ldw	r4,0(r2)
10009a78:	01440074 	movhi	r5,4097
10009a7c:	29667e04 	addi	r5,r5,-26120
10009a80:	000aa641 	jmpi	1000aa64 <_fwalk_reent>

10009a84 <__fp_unlock>:
10009a84:	0005883a 	mov	r2,zero
10009a88:	f800283a 	ret

10009a8c <_cleanup_r>:
10009a8c:	01440074 	movhi	r5,4097
10009a90:	294d0204 	addi	r5,r5,13320
10009a94:	000aa641 	jmpi	1000aa64 <_fwalk_reent>

10009a98 <__sinit.part.1>:
10009a98:	defff704 	addi	sp,sp,-36
10009a9c:	00c40074 	movhi	r3,4097
10009aa0:	dfc00815 	stw	ra,32(sp)
10009aa4:	ddc00715 	stw	r23,28(sp)
10009aa8:	dd800615 	stw	r22,24(sp)
10009aac:	dd400515 	stw	r21,20(sp)
10009ab0:	dd000415 	stw	r20,16(sp)
10009ab4:	dcc00315 	stw	r19,12(sp)
10009ab8:	dc800215 	stw	r18,8(sp)
10009abc:	dc400115 	stw	r17,4(sp)
10009ac0:	dc000015 	stw	r16,0(sp)
10009ac4:	18e6a304 	addi	r3,r3,-25972
10009ac8:	24000117 	ldw	r16,4(r4)
10009acc:	20c00f15 	stw	r3,60(r4)
10009ad0:	2080bb04 	addi	r2,r4,748
10009ad4:	00c000c4 	movi	r3,3
10009ad8:	20c0b915 	stw	r3,740(r4)
10009adc:	2080ba15 	stw	r2,744(r4)
10009ae0:	2000b815 	stw	zero,736(r4)
10009ae4:	05c00204 	movi	r23,8
10009ae8:	00800104 	movi	r2,4
10009aec:	2025883a 	mov	r18,r4
10009af0:	b80d883a 	mov	r6,r23
10009af4:	81001704 	addi	r4,r16,92
10009af8:	000b883a 	mov	r5,zero
10009afc:	80000015 	stw	zero,0(r16)
10009b00:	80000115 	stw	zero,4(r16)
10009b04:	80000215 	stw	zero,8(r16)
10009b08:	8080030d 	sth	r2,12(r16)
10009b0c:	80001915 	stw	zero,100(r16)
10009b10:	8000038d 	sth	zero,14(r16)
10009b14:	80000415 	stw	zero,16(r16)
10009b18:	80000515 	stw	zero,20(r16)
10009b1c:	80000615 	stw	zero,24(r16)
10009b20:	000b39c0 	call	1000b39c <memset>
10009b24:	05840074 	movhi	r22,4097
10009b28:	94400217 	ldw	r17,8(r18)
10009b2c:	05440074 	movhi	r21,4097
10009b30:	05040074 	movhi	r20,4097
10009b34:	04c40074 	movhi	r19,4097
10009b38:	b5b41204 	addi	r22,r22,-12216
10009b3c:	ad742904 	addi	r21,r21,-12124
10009b40:	a5344804 	addi	r20,r20,-12000
10009b44:	9cf45f04 	addi	r19,r19,-11908
10009b48:	85800815 	stw	r22,32(r16)
10009b4c:	85400915 	stw	r21,36(r16)
10009b50:	85000a15 	stw	r20,40(r16)
10009b54:	84c00b15 	stw	r19,44(r16)
10009b58:	84000715 	stw	r16,28(r16)
10009b5c:	00800284 	movi	r2,10
10009b60:	8880030d 	sth	r2,12(r17)
10009b64:	00800044 	movi	r2,1
10009b68:	b80d883a 	mov	r6,r23
10009b6c:	89001704 	addi	r4,r17,92
10009b70:	000b883a 	mov	r5,zero
10009b74:	88000015 	stw	zero,0(r17)
10009b78:	88000115 	stw	zero,4(r17)
10009b7c:	88000215 	stw	zero,8(r17)
10009b80:	88001915 	stw	zero,100(r17)
10009b84:	8880038d 	sth	r2,14(r17)
10009b88:	88000415 	stw	zero,16(r17)
10009b8c:	88000515 	stw	zero,20(r17)
10009b90:	88000615 	stw	zero,24(r17)
10009b94:	000b39c0 	call	1000b39c <memset>
10009b98:	94000317 	ldw	r16,12(r18)
10009b9c:	00800484 	movi	r2,18
10009ba0:	8c400715 	stw	r17,28(r17)
10009ba4:	8d800815 	stw	r22,32(r17)
10009ba8:	8d400915 	stw	r21,36(r17)
10009bac:	8d000a15 	stw	r20,40(r17)
10009bb0:	8cc00b15 	stw	r19,44(r17)
10009bb4:	8080030d 	sth	r2,12(r16)
10009bb8:	00800084 	movi	r2,2
10009bbc:	80000015 	stw	zero,0(r16)
10009bc0:	80000115 	stw	zero,4(r16)
10009bc4:	80000215 	stw	zero,8(r16)
10009bc8:	80001915 	stw	zero,100(r16)
10009bcc:	8080038d 	sth	r2,14(r16)
10009bd0:	80000415 	stw	zero,16(r16)
10009bd4:	80000515 	stw	zero,20(r16)
10009bd8:	80000615 	stw	zero,24(r16)
10009bdc:	b80d883a 	mov	r6,r23
10009be0:	000b883a 	mov	r5,zero
10009be4:	81001704 	addi	r4,r16,92
10009be8:	000b39c0 	call	1000b39c <memset>
10009bec:	00800044 	movi	r2,1
10009bf0:	84000715 	stw	r16,28(r16)
10009bf4:	85800815 	stw	r22,32(r16)
10009bf8:	85400915 	stw	r21,36(r16)
10009bfc:	85000a15 	stw	r20,40(r16)
10009c00:	84c00b15 	stw	r19,44(r16)
10009c04:	90800e15 	stw	r2,56(r18)
10009c08:	dfc00817 	ldw	ra,32(sp)
10009c0c:	ddc00717 	ldw	r23,28(sp)
10009c10:	dd800617 	ldw	r22,24(sp)
10009c14:	dd400517 	ldw	r21,20(sp)
10009c18:	dd000417 	ldw	r20,16(sp)
10009c1c:	dcc00317 	ldw	r19,12(sp)
10009c20:	dc800217 	ldw	r18,8(sp)
10009c24:	dc400117 	ldw	r17,4(sp)
10009c28:	dc000017 	ldw	r16,0(sp)
10009c2c:	dec00904 	addi	sp,sp,36
10009c30:	f800283a 	ret

10009c34 <__fp_lock>:
10009c34:	0005883a 	mov	r2,zero
10009c38:	f800283a 	ret

10009c3c <__sfmoreglue>:
10009c3c:	defffc04 	addi	sp,sp,-16
10009c40:	dc800215 	stw	r18,8(sp)
10009c44:	2825883a 	mov	r18,r5
10009c48:	dc000015 	stw	r16,0(sp)
10009c4c:	01401a04 	movi	r5,104
10009c50:	2021883a 	mov	r16,r4
10009c54:	913fffc4 	addi	r4,r18,-1
10009c58:	dfc00315 	stw	ra,12(sp)
10009c5c:	dc400115 	stw	r17,4(sp)
10009c60:	00034380 	call	10003438 <__mulsi3>
10009c64:	8009883a 	mov	r4,r16
10009c68:	11401d04 	addi	r5,r2,116
10009c6c:	1023883a 	mov	r17,r2
10009c70:	00034880 	call	10003488 <_malloc_r>
10009c74:	1021883a 	mov	r16,r2
10009c78:	10000726 	beq	r2,zero,10009c98 <__sfmoreglue+0x5c>
10009c7c:	11000304 	addi	r4,r2,12
10009c80:	10000015 	stw	zero,0(r2)
10009c84:	14800115 	stw	r18,4(r2)
10009c88:	11000215 	stw	r4,8(r2)
10009c8c:	89801a04 	addi	r6,r17,104
10009c90:	000b883a 	mov	r5,zero
10009c94:	000b39c0 	call	1000b39c <memset>
10009c98:	8005883a 	mov	r2,r16
10009c9c:	dfc00317 	ldw	ra,12(sp)
10009ca0:	dc800217 	ldw	r18,8(sp)
10009ca4:	dc400117 	ldw	r17,4(sp)
10009ca8:	dc000017 	ldw	r16,0(sp)
10009cac:	dec00404 	addi	sp,sp,16
10009cb0:	f800283a 	ret

10009cb4 <__sfp>:
10009cb4:	defffb04 	addi	sp,sp,-20
10009cb8:	dc000015 	stw	r16,0(sp)
10009cbc:	040400b4 	movhi	r16,4098
10009cc0:	843a2404 	addi	r16,r16,-6000
10009cc4:	dcc00315 	stw	r19,12(sp)
10009cc8:	2027883a 	mov	r19,r4
10009ccc:	81000017 	ldw	r4,0(r16)
10009cd0:	dfc00415 	stw	ra,16(sp)
10009cd4:	dc800215 	stw	r18,8(sp)
10009cd8:	20800e17 	ldw	r2,56(r4)
10009cdc:	dc400115 	stw	r17,4(sp)
10009ce0:	1000021e 	bne	r2,zero,10009cec <__sfp+0x38>
10009ce4:	0009a980 	call	10009a98 <__sinit.part.1>
10009ce8:	81000017 	ldw	r4,0(r16)
10009cec:	2480b804 	addi	r18,r4,736
10009cf0:	047fffc4 	movi	r17,-1
10009cf4:	91000117 	ldw	r4,4(r18)
10009cf8:	94000217 	ldw	r16,8(r18)
10009cfc:	213fffc4 	addi	r4,r4,-1
10009d00:	20000a16 	blt	r4,zero,10009d2c <__sfp+0x78>
10009d04:	8080030f 	ldh	r2,12(r16)
10009d08:	10000c26 	beq	r2,zero,10009d3c <__sfp+0x88>
10009d0c:	80c01d04 	addi	r3,r16,116
10009d10:	00000206 	br	10009d1c <__sfp+0x68>
10009d14:	18bfe60f 	ldh	r2,-104(r3)
10009d18:	10000826 	beq	r2,zero,10009d3c <__sfp+0x88>
10009d1c:	213fffc4 	addi	r4,r4,-1
10009d20:	1c3ffd04 	addi	r16,r3,-12
10009d24:	18c01a04 	addi	r3,r3,104
10009d28:	247ffa1e 	bne	r4,r17,10009d14 <__alt_data_end+0xf8009d14>
10009d2c:	90800017 	ldw	r2,0(r18)
10009d30:	10001d26 	beq	r2,zero,10009da8 <__sfp+0xf4>
10009d34:	1025883a 	mov	r18,r2
10009d38:	003fee06 	br	10009cf4 <__alt_data_end+0xf8009cf4>
10009d3c:	00bfffc4 	movi	r2,-1
10009d40:	8080038d 	sth	r2,14(r16)
10009d44:	00800044 	movi	r2,1
10009d48:	8080030d 	sth	r2,12(r16)
10009d4c:	80001915 	stw	zero,100(r16)
10009d50:	80000015 	stw	zero,0(r16)
10009d54:	80000215 	stw	zero,8(r16)
10009d58:	80000115 	stw	zero,4(r16)
10009d5c:	80000415 	stw	zero,16(r16)
10009d60:	80000515 	stw	zero,20(r16)
10009d64:	80000615 	stw	zero,24(r16)
10009d68:	01800204 	movi	r6,8
10009d6c:	000b883a 	mov	r5,zero
10009d70:	81001704 	addi	r4,r16,92
10009d74:	000b39c0 	call	1000b39c <memset>
10009d78:	8005883a 	mov	r2,r16
10009d7c:	80000c15 	stw	zero,48(r16)
10009d80:	80000d15 	stw	zero,52(r16)
10009d84:	80001115 	stw	zero,68(r16)
10009d88:	80001215 	stw	zero,72(r16)
10009d8c:	dfc00417 	ldw	ra,16(sp)
10009d90:	dcc00317 	ldw	r19,12(sp)
10009d94:	dc800217 	ldw	r18,8(sp)
10009d98:	dc400117 	ldw	r17,4(sp)
10009d9c:	dc000017 	ldw	r16,0(sp)
10009da0:	dec00504 	addi	sp,sp,20
10009da4:	f800283a 	ret
10009da8:	01400104 	movi	r5,4
10009dac:	9809883a 	mov	r4,r19
10009db0:	0009c3c0 	call	10009c3c <__sfmoreglue>
10009db4:	90800015 	stw	r2,0(r18)
10009db8:	103fde1e 	bne	r2,zero,10009d34 <__alt_data_end+0xf8009d34>
10009dbc:	00800304 	movi	r2,12
10009dc0:	98800015 	stw	r2,0(r19)
10009dc4:	0005883a 	mov	r2,zero
10009dc8:	003ff006 	br	10009d8c <__alt_data_end+0xf8009d8c>

10009dcc <_cleanup>:
10009dcc:	008400b4 	movhi	r2,4098
10009dd0:	10ba2404 	addi	r2,r2,-6000
10009dd4:	11000017 	ldw	r4,0(r2)
10009dd8:	01440074 	movhi	r5,4097
10009ddc:	294d0204 	addi	r5,r5,13320
10009de0:	000aa641 	jmpi	1000aa64 <_fwalk_reent>

10009de4 <__sinit>:
10009de4:	20800e17 	ldw	r2,56(r4)
10009de8:	10000126 	beq	r2,zero,10009df0 <__sinit+0xc>
10009dec:	f800283a 	ret
10009df0:	0009a981 	jmpi	10009a98 <__sinit.part.1>

10009df4 <__sfp_lock_acquire>:
10009df4:	f800283a 	ret

10009df8 <__sfp_lock_release>:
10009df8:	f800283a 	ret

10009dfc <__sinit_lock_acquire>:
10009dfc:	f800283a 	ret

10009e00 <__sinit_lock_release>:
10009e00:	f800283a 	ret

10009e04 <__fp_lock_all>:
10009e04:	008400b4 	movhi	r2,4098
10009e08:	10ba2504 	addi	r2,r2,-5996
10009e0c:	11000017 	ldw	r4,0(r2)
10009e10:	01440074 	movhi	r5,4097
10009e14:	29670d04 	addi	r5,r5,-25548
10009e18:	000a9a01 	jmpi	1000a9a0 <_fwalk>

10009e1c <__fp_unlock_all>:
10009e1c:	008400b4 	movhi	r2,4098
10009e20:	10ba2504 	addi	r2,r2,-5996
10009e24:	11000017 	ldw	r4,0(r2)
10009e28:	01440074 	movhi	r5,4097
10009e2c:	2966a104 	addi	r5,r5,-25980
10009e30:	000a9a01 	jmpi	1000a9a0 <_fwalk>

10009e34 <_fread_r>:
10009e34:	defff404 	addi	sp,sp,-48
10009e38:	dd000615 	stw	r20,24(sp)
10009e3c:	dcc00515 	stw	r19,20(sp)
10009e40:	2029883a 	mov	r20,r4
10009e44:	2827883a 	mov	r19,r5
10009e48:	3809883a 	mov	r4,r7
10009e4c:	300b883a 	mov	r5,r6
10009e50:	ddc00915 	stw	r23,36(sp)
10009e54:	dd400715 	stw	r21,28(sp)
10009e58:	dc000215 	stw	r16,8(sp)
10009e5c:	dfc00b15 	stw	ra,44(sp)
10009e60:	df000a15 	stw	fp,40(sp)
10009e64:	dd800815 	stw	r22,32(sp)
10009e68:	dc800415 	stw	r18,16(sp)
10009e6c:	dc400315 	stw	r17,12(sp)
10009e70:	302f883a 	mov	r23,r6
10009e74:	382b883a 	mov	r21,r7
10009e78:	00034380 	call	10003438 <__mulsi3>
10009e7c:	dc000c17 	ldw	r16,48(sp)
10009e80:	10003826 	beq	r2,zero,10009f64 <_fread_r+0x130>
10009e84:	102d883a 	mov	r22,r2
10009e88:	a0000226 	beq	r20,zero,10009e94 <_fread_r+0x60>
10009e8c:	a0800e17 	ldw	r2,56(r20)
10009e90:	10006e26 	beq	r2,zero,1000a04c <_fread_r+0x218>
10009e94:	8080030b 	ldhu	r2,12(r16)
10009e98:	10c8000c 	andi	r3,r2,8192
10009e9c:	1800061e 	bne	r3,zero,10009eb8 <_fread_r+0x84>
10009ea0:	81001917 	ldw	r4,100(r16)
10009ea4:	00f7ffc4 	movi	r3,-8193
10009ea8:	10880014 	ori	r2,r2,8192
10009eac:	20c6703a 	and	r3,r4,r3
10009eb0:	8080030d 	sth	r2,12(r16)
10009eb4:	80c01915 	stw	r3,100(r16)
10009eb8:	84400117 	ldw	r17,4(r16)
10009ebc:	88005f16 	blt	r17,zero,1000a03c <_fread_r+0x208>
10009ec0:	8809883a 	mov	r4,r17
10009ec4:	1080008c 	andi	r2,r2,2
10009ec8:	1000281e 	bne	r2,zero,10009f6c <_fread_r+0x138>
10009ecc:	b025883a 	mov	r18,r22
10009ed0:	00000b06 	br	10009f00 <_fread_r+0xcc>
10009ed4:	000b0f80 	call	1000b0f8 <memcpy>
10009ed8:	80800017 	ldw	r2,0(r16)
10009edc:	9c67883a 	add	r19,r19,r17
10009ee0:	9465c83a 	sub	r18,r18,r17
10009ee4:	1463883a 	add	r17,r2,r17
10009ee8:	800b883a 	mov	r5,r16
10009eec:	a009883a 	mov	r4,r20
10009ef0:	84400015 	stw	r17,0(r16)
10009ef4:	000cc640 	call	1000cc64 <__srefill_r>
10009ef8:	10004c1e 	bne	r2,zero,1000a02c <_fread_r+0x1f8>
10009efc:	84400117 	ldw	r17,4(r16)
10009f00:	880d883a 	mov	r6,r17
10009f04:	9809883a 	mov	r4,r19
10009f08:	81400017 	ldw	r5,0(r16)
10009f0c:	8cbff136 	bltu	r17,r18,10009ed4 <__alt_data_end+0xf8009ed4>
10009f10:	900d883a 	mov	r6,r18
10009f14:	000b0f80 	call	1000b0f8 <memcpy>
10009f18:	80c00117 	ldw	r3,4(r16)
10009f1c:	81000017 	ldw	r4,0(r16)
10009f20:	a805883a 	mov	r2,r21
10009f24:	1c87c83a 	sub	r3,r3,r18
10009f28:	24a5883a 	add	r18,r4,r18
10009f2c:	80c00115 	stw	r3,4(r16)
10009f30:	84800015 	stw	r18,0(r16)
10009f34:	dfc00b17 	ldw	ra,44(sp)
10009f38:	df000a17 	ldw	fp,40(sp)
10009f3c:	ddc00917 	ldw	r23,36(sp)
10009f40:	dd800817 	ldw	r22,32(sp)
10009f44:	dd400717 	ldw	r21,28(sp)
10009f48:	dd000617 	ldw	r20,24(sp)
10009f4c:	dcc00517 	ldw	r19,20(sp)
10009f50:	dc800417 	ldw	r18,16(sp)
10009f54:	dc400317 	ldw	r17,12(sp)
10009f58:	dc000217 	ldw	r16,8(sp)
10009f5c:	dec00c04 	addi	sp,sp,48
10009f60:	f800283a 	ret
10009f64:	0005883a 	mov	r2,zero
10009f68:	003ff206 	br	10009f34 <__alt_data_end+0xf8009f34>
10009f6c:	b007883a 	mov	r3,r22
10009f70:	2580012e 	bgeu	r4,r22,10009f78 <_fread_r+0x144>
10009f74:	2007883a 	mov	r3,r4
10009f78:	81400017 	ldw	r5,0(r16)
10009f7c:	180d883a 	mov	r6,r3
10009f80:	9809883a 	mov	r4,r19
10009f84:	d8c00115 	stw	r3,4(sp)
10009f88:	000b0f80 	call	1000b0f8 <memcpy>
10009f8c:	d8c00117 	ldw	r3,4(sp)
10009f90:	84400017 	ldw	r17,0(r16)
10009f94:	80800117 	ldw	r2,4(r16)
10009f98:	81400c17 	ldw	r5,48(r16)
10009f9c:	88e3883a 	add	r17,r17,r3
10009fa0:	10c5c83a 	sub	r2,r2,r3
10009fa4:	84400015 	stw	r17,0(r16)
10009fa8:	80800115 	stw	r2,4(r16)
10009fac:	b0e5c83a 	sub	r18,r22,r3
10009fb0:	28002c26 	beq	r5,zero,1000a064 <_fread_r+0x230>
10009fb4:	90002c26 	beq	r18,zero,1000a068 <_fread_r+0x234>
10009fb8:	80801004 	addi	r2,r16,64
10009fbc:	28800526 	beq	r5,r2,10009fd4 <_fread_r+0x1a0>
10009fc0:	a009883a 	mov	r4,r20
10009fc4:	d8c00115 	stw	r3,4(sp)
10009fc8:	000a1c80 	call	1000a1c8 <_free_r>
10009fcc:	d8c00117 	ldw	r3,4(sp)
10009fd0:	84400017 	ldw	r17,0(r16)
10009fd4:	80000c15 	stw	zero,48(r16)
10009fd8:	80800517 	ldw	r2,20(r16)
10009fdc:	87000417 	ldw	fp,16(r16)
10009fe0:	98e7883a 	add	r19,r19,r3
10009fe4:	d8800015 	stw	r2,0(sp)
10009fe8:	00000106 	br	10009ff0 <_fread_r+0x1bc>
10009fec:	90001e26 	beq	r18,zero,1000a068 <_fread_r+0x234>
10009ff0:	84c00415 	stw	r19,16(r16)
10009ff4:	84800515 	stw	r18,20(r16)
10009ff8:	84c00015 	stw	r19,0(r16)
10009ffc:	a009883a 	mov	r4,r20
1000a000:	800b883a 	mov	r5,r16
1000a004:	000cc640 	call	1000cc64 <__srefill_r>
1000a008:	d9000017 	ldw	r4,0(sp)
1000a00c:	80c00117 	ldw	r3,4(r16)
1000a010:	87000415 	stw	fp,16(r16)
1000a014:	81000515 	stw	r4,20(r16)
1000a018:	84400015 	stw	r17,0(r16)
1000a01c:	80000115 	stw	zero,4(r16)
1000a020:	90e5c83a 	sub	r18,r18,r3
1000a024:	98e7883a 	add	r19,r19,r3
1000a028:	103ff026 	beq	r2,zero,10009fec <__alt_data_end+0xf8009fec>
1000a02c:	b80b883a 	mov	r5,r23
1000a030:	b489c83a 	sub	r4,r22,r18
1000a034:	000337c0 	call	1000337c <__udivsi3>
1000a038:	003fbe06 	br	10009f34 <__alt_data_end+0xf8009f34>
1000a03c:	80000115 	stw	zero,4(r16)
1000a040:	0009883a 	mov	r4,zero
1000a044:	0023883a 	mov	r17,zero
1000a048:	003f9e06 	br	10009ec4 <__alt_data_end+0xf8009ec4>
1000a04c:	a009883a 	mov	r4,r20
1000a050:	0009de40 	call	10009de4 <__sinit>
1000a054:	8080030b 	ldhu	r2,12(r16)
1000a058:	10c8000c 	andi	r3,r2,8192
1000a05c:	183f961e 	bne	r3,zero,10009eb8 <__alt_data_end+0xf8009eb8>
1000a060:	003f8f06 	br	10009ea0 <__alt_data_end+0xf8009ea0>
1000a064:	903fdc1e 	bne	r18,zero,10009fd8 <__alt_data_end+0xf8009fd8>
1000a068:	a805883a 	mov	r2,r21
1000a06c:	003fb106 	br	10009f34 <__alt_data_end+0xf8009f34>

1000a070 <fread>:
1000a070:	defffe04 	addi	sp,sp,-8
1000a074:	008400b4 	movhi	r2,4098
1000a078:	d9c00015 	stw	r7,0(sp)
1000a07c:	10ba2504 	addi	r2,r2,-5996
1000a080:	300f883a 	mov	r7,r6
1000a084:	280d883a 	mov	r6,r5
1000a088:	200b883a 	mov	r5,r4
1000a08c:	11000017 	ldw	r4,0(r2)
1000a090:	dfc00115 	stw	ra,4(sp)
1000a094:	0009e340 	call	10009e34 <_fread_r>
1000a098:	dfc00117 	ldw	ra,4(sp)
1000a09c:	dec00204 	addi	sp,sp,8
1000a0a0:	f800283a 	ret

1000a0a4 <_malloc_trim_r>:
1000a0a4:	defffb04 	addi	sp,sp,-20
1000a0a8:	dcc00315 	stw	r19,12(sp)
1000a0ac:	04c400b4 	movhi	r19,4098
1000a0b0:	dc800215 	stw	r18,8(sp)
1000a0b4:	dc400115 	stw	r17,4(sp)
1000a0b8:	dc000015 	stw	r16,0(sp)
1000a0bc:	dfc00415 	stw	ra,16(sp)
1000a0c0:	2821883a 	mov	r16,r5
1000a0c4:	9cf37504 	addi	r19,r19,-12844
1000a0c8:	2025883a 	mov	r18,r4
1000a0cc:	0019b7c0 	call	10019b7c <__malloc_lock>
1000a0d0:	98800217 	ldw	r2,8(r19)
1000a0d4:	14400117 	ldw	r17,4(r2)
1000a0d8:	00bfff04 	movi	r2,-4
1000a0dc:	88a2703a 	and	r17,r17,r2
1000a0e0:	8c21c83a 	sub	r16,r17,r16
1000a0e4:	8403fbc4 	addi	r16,r16,4079
1000a0e8:	8020d33a 	srli	r16,r16,12
1000a0ec:	0083ffc4 	movi	r2,4095
1000a0f0:	843fffc4 	addi	r16,r16,-1
1000a0f4:	8020933a 	slli	r16,r16,12
1000a0f8:	1400060e 	bge	r2,r16,1000a114 <_malloc_trim_r+0x70>
1000a0fc:	000b883a 	mov	r5,zero
1000a100:	9009883a 	mov	r4,r18
1000a104:	0003e700 	call	10003e70 <_sbrk_r>
1000a108:	98c00217 	ldw	r3,8(r19)
1000a10c:	1c47883a 	add	r3,r3,r17
1000a110:	10c00a26 	beq	r2,r3,1000a13c <_malloc_trim_r+0x98>
1000a114:	9009883a 	mov	r4,r18
1000a118:	0019ba00 	call	10019ba0 <__malloc_unlock>
1000a11c:	0005883a 	mov	r2,zero
1000a120:	dfc00417 	ldw	ra,16(sp)
1000a124:	dcc00317 	ldw	r19,12(sp)
1000a128:	dc800217 	ldw	r18,8(sp)
1000a12c:	dc400117 	ldw	r17,4(sp)
1000a130:	dc000017 	ldw	r16,0(sp)
1000a134:	dec00504 	addi	sp,sp,20
1000a138:	f800283a 	ret
1000a13c:	040bc83a 	sub	r5,zero,r16
1000a140:	9009883a 	mov	r4,r18
1000a144:	0003e700 	call	10003e70 <_sbrk_r>
1000a148:	00ffffc4 	movi	r3,-1
1000a14c:	10c00d26 	beq	r2,r3,1000a184 <_malloc_trim_r+0xe0>
1000a150:	00c400b4 	movhi	r3,4098
1000a154:	18c10004 	addi	r3,r3,1024
1000a158:	18800017 	ldw	r2,0(r3)
1000a15c:	99000217 	ldw	r4,8(r19)
1000a160:	8c23c83a 	sub	r17,r17,r16
1000a164:	8c400054 	ori	r17,r17,1
1000a168:	1421c83a 	sub	r16,r2,r16
1000a16c:	24400115 	stw	r17,4(r4)
1000a170:	9009883a 	mov	r4,r18
1000a174:	1c000015 	stw	r16,0(r3)
1000a178:	0019ba00 	call	10019ba0 <__malloc_unlock>
1000a17c:	00800044 	movi	r2,1
1000a180:	003fe706 	br	1000a120 <__alt_data_end+0xf800a120>
1000a184:	000b883a 	mov	r5,zero
1000a188:	9009883a 	mov	r4,r18
1000a18c:	0003e700 	call	10003e70 <_sbrk_r>
1000a190:	99000217 	ldw	r4,8(r19)
1000a194:	014003c4 	movi	r5,15
1000a198:	1107c83a 	sub	r3,r2,r4
1000a19c:	28ffdd0e 	bge	r5,r3,1000a114 <__alt_data_end+0xf800a114>
1000a1a0:	014400b4 	movhi	r5,4098
1000a1a4:	297a2104 	addi	r5,r5,-6012
1000a1a8:	29400017 	ldw	r5,0(r5)
1000a1ac:	18c00054 	ori	r3,r3,1
1000a1b0:	20c00115 	stw	r3,4(r4)
1000a1b4:	00c400b4 	movhi	r3,4098
1000a1b8:	1145c83a 	sub	r2,r2,r5
1000a1bc:	18c10004 	addi	r3,r3,1024
1000a1c0:	18800015 	stw	r2,0(r3)
1000a1c4:	003fd306 	br	1000a114 <__alt_data_end+0xf800a114>

1000a1c8 <_free_r>:
1000a1c8:	28004126 	beq	r5,zero,1000a2d0 <_free_r+0x108>
1000a1cc:	defffd04 	addi	sp,sp,-12
1000a1d0:	dc400115 	stw	r17,4(sp)
1000a1d4:	dc000015 	stw	r16,0(sp)
1000a1d8:	2023883a 	mov	r17,r4
1000a1dc:	2821883a 	mov	r16,r5
1000a1e0:	dfc00215 	stw	ra,8(sp)
1000a1e4:	0019b7c0 	call	10019b7c <__malloc_lock>
1000a1e8:	81ffff17 	ldw	r7,-4(r16)
1000a1ec:	00bfff84 	movi	r2,-2
1000a1f0:	010400b4 	movhi	r4,4098
1000a1f4:	81bffe04 	addi	r6,r16,-8
1000a1f8:	3884703a 	and	r2,r7,r2
1000a1fc:	21337504 	addi	r4,r4,-12844
1000a200:	308b883a 	add	r5,r6,r2
1000a204:	2a400117 	ldw	r9,4(r5)
1000a208:	22000217 	ldw	r8,8(r4)
1000a20c:	00ffff04 	movi	r3,-4
1000a210:	48c6703a 	and	r3,r9,r3
1000a214:	2a005726 	beq	r5,r8,1000a374 <_free_r+0x1ac>
1000a218:	28c00115 	stw	r3,4(r5)
1000a21c:	39c0004c 	andi	r7,r7,1
1000a220:	3800091e 	bne	r7,zero,1000a248 <_free_r+0x80>
1000a224:	823ffe17 	ldw	r8,-8(r16)
1000a228:	22400204 	addi	r9,r4,8
1000a22c:	320dc83a 	sub	r6,r6,r8
1000a230:	31c00217 	ldw	r7,8(r6)
1000a234:	1205883a 	add	r2,r2,r8
1000a238:	3a406526 	beq	r7,r9,1000a3d0 <_free_r+0x208>
1000a23c:	32000317 	ldw	r8,12(r6)
1000a240:	3a000315 	stw	r8,12(r7)
1000a244:	41c00215 	stw	r7,8(r8)
1000a248:	28cf883a 	add	r7,r5,r3
1000a24c:	39c00117 	ldw	r7,4(r7)
1000a250:	39c0004c 	andi	r7,r7,1
1000a254:	38003a26 	beq	r7,zero,1000a340 <_free_r+0x178>
1000a258:	10c00054 	ori	r3,r2,1
1000a25c:	30c00115 	stw	r3,4(r6)
1000a260:	3087883a 	add	r3,r6,r2
1000a264:	18800015 	stw	r2,0(r3)
1000a268:	00c07fc4 	movi	r3,511
1000a26c:	18801936 	bltu	r3,r2,1000a2d4 <_free_r+0x10c>
1000a270:	1004d0fa 	srli	r2,r2,3
1000a274:	01c00044 	movi	r7,1
1000a278:	21400117 	ldw	r5,4(r4)
1000a27c:	10c00044 	addi	r3,r2,1
1000a280:	18c7883a 	add	r3,r3,r3
1000a284:	1005d0ba 	srai	r2,r2,2
1000a288:	18c7883a 	add	r3,r3,r3
1000a28c:	18c7883a 	add	r3,r3,r3
1000a290:	1907883a 	add	r3,r3,r4
1000a294:	3884983a 	sll	r2,r7,r2
1000a298:	19c00017 	ldw	r7,0(r3)
1000a29c:	1a3ffe04 	addi	r8,r3,-8
1000a2a0:	1144b03a 	or	r2,r2,r5
1000a2a4:	32000315 	stw	r8,12(r6)
1000a2a8:	31c00215 	stw	r7,8(r6)
1000a2ac:	20800115 	stw	r2,4(r4)
1000a2b0:	19800015 	stw	r6,0(r3)
1000a2b4:	39800315 	stw	r6,12(r7)
1000a2b8:	8809883a 	mov	r4,r17
1000a2bc:	dfc00217 	ldw	ra,8(sp)
1000a2c0:	dc400117 	ldw	r17,4(sp)
1000a2c4:	dc000017 	ldw	r16,0(sp)
1000a2c8:	dec00304 	addi	sp,sp,12
1000a2cc:	0019ba01 	jmpi	10019ba0 <__malloc_unlock>
1000a2d0:	f800283a 	ret
1000a2d4:	100ad27a 	srli	r5,r2,9
1000a2d8:	00c00104 	movi	r3,4
1000a2dc:	19404a36 	bltu	r3,r5,1000a408 <_free_r+0x240>
1000a2e0:	100ad1ba 	srli	r5,r2,6
1000a2e4:	28c00e44 	addi	r3,r5,57
1000a2e8:	18c7883a 	add	r3,r3,r3
1000a2ec:	29400e04 	addi	r5,r5,56
1000a2f0:	18c7883a 	add	r3,r3,r3
1000a2f4:	18c7883a 	add	r3,r3,r3
1000a2f8:	1909883a 	add	r4,r3,r4
1000a2fc:	20c00017 	ldw	r3,0(r4)
1000a300:	01c400b4 	movhi	r7,4098
1000a304:	213ffe04 	addi	r4,r4,-8
1000a308:	39f37504 	addi	r7,r7,-12844
1000a30c:	20c04426 	beq	r4,r3,1000a420 <_free_r+0x258>
1000a310:	01ffff04 	movi	r7,-4
1000a314:	19400117 	ldw	r5,4(r3)
1000a318:	29ca703a 	and	r5,r5,r7
1000a31c:	1140022e 	bgeu	r2,r5,1000a328 <_free_r+0x160>
1000a320:	18c00217 	ldw	r3,8(r3)
1000a324:	20fffb1e 	bne	r4,r3,1000a314 <__alt_data_end+0xf800a314>
1000a328:	19000317 	ldw	r4,12(r3)
1000a32c:	31000315 	stw	r4,12(r6)
1000a330:	30c00215 	stw	r3,8(r6)
1000a334:	21800215 	stw	r6,8(r4)
1000a338:	19800315 	stw	r6,12(r3)
1000a33c:	003fde06 	br	1000a2b8 <__alt_data_end+0xf800a2b8>
1000a340:	29c00217 	ldw	r7,8(r5)
1000a344:	10c5883a 	add	r2,r2,r3
1000a348:	00c400b4 	movhi	r3,4098
1000a34c:	18f37704 	addi	r3,r3,-12836
1000a350:	38c03b26 	beq	r7,r3,1000a440 <_free_r+0x278>
1000a354:	2a000317 	ldw	r8,12(r5)
1000a358:	11400054 	ori	r5,r2,1
1000a35c:	3087883a 	add	r3,r6,r2
1000a360:	3a000315 	stw	r8,12(r7)
1000a364:	41c00215 	stw	r7,8(r8)
1000a368:	31400115 	stw	r5,4(r6)
1000a36c:	18800015 	stw	r2,0(r3)
1000a370:	003fbd06 	br	1000a268 <__alt_data_end+0xf800a268>
1000a374:	39c0004c 	andi	r7,r7,1
1000a378:	10c5883a 	add	r2,r2,r3
1000a37c:	3800071e 	bne	r7,zero,1000a39c <_free_r+0x1d4>
1000a380:	81fffe17 	ldw	r7,-8(r16)
1000a384:	31cdc83a 	sub	r6,r6,r7
1000a388:	30c00317 	ldw	r3,12(r6)
1000a38c:	31400217 	ldw	r5,8(r6)
1000a390:	11c5883a 	add	r2,r2,r7
1000a394:	28c00315 	stw	r3,12(r5)
1000a398:	19400215 	stw	r5,8(r3)
1000a39c:	10c00054 	ori	r3,r2,1
1000a3a0:	30c00115 	stw	r3,4(r6)
1000a3a4:	00c400b4 	movhi	r3,4098
1000a3a8:	18fa2204 	addi	r3,r3,-6008
1000a3ac:	18c00017 	ldw	r3,0(r3)
1000a3b0:	21800215 	stw	r6,8(r4)
1000a3b4:	10ffc036 	bltu	r2,r3,1000a2b8 <__alt_data_end+0xf800a2b8>
1000a3b8:	008400b4 	movhi	r2,4098
1000a3bc:	1080f404 	addi	r2,r2,976
1000a3c0:	11400017 	ldw	r5,0(r2)
1000a3c4:	8809883a 	mov	r4,r17
1000a3c8:	000a0a40 	call	1000a0a4 <_malloc_trim_r>
1000a3cc:	003fba06 	br	1000a2b8 <__alt_data_end+0xf800a2b8>
1000a3d0:	28c9883a 	add	r4,r5,r3
1000a3d4:	21000117 	ldw	r4,4(r4)
1000a3d8:	2100004c 	andi	r4,r4,1
1000a3dc:	2000391e 	bne	r4,zero,1000a4c4 <_free_r+0x2fc>
1000a3e0:	29c00217 	ldw	r7,8(r5)
1000a3e4:	29000317 	ldw	r4,12(r5)
1000a3e8:	1885883a 	add	r2,r3,r2
1000a3ec:	10c00054 	ori	r3,r2,1
1000a3f0:	39000315 	stw	r4,12(r7)
1000a3f4:	21c00215 	stw	r7,8(r4)
1000a3f8:	30c00115 	stw	r3,4(r6)
1000a3fc:	308d883a 	add	r6,r6,r2
1000a400:	30800015 	stw	r2,0(r6)
1000a404:	003fac06 	br	1000a2b8 <__alt_data_end+0xf800a2b8>
1000a408:	00c00504 	movi	r3,20
1000a40c:	19401536 	bltu	r3,r5,1000a464 <_free_r+0x29c>
1000a410:	28c01704 	addi	r3,r5,92
1000a414:	18c7883a 	add	r3,r3,r3
1000a418:	294016c4 	addi	r5,r5,91
1000a41c:	003fb406 	br	1000a2f0 <__alt_data_end+0xf800a2f0>
1000a420:	280bd0ba 	srai	r5,r5,2
1000a424:	00c00044 	movi	r3,1
1000a428:	38800117 	ldw	r2,4(r7)
1000a42c:	194a983a 	sll	r5,r3,r5
1000a430:	2007883a 	mov	r3,r4
1000a434:	2884b03a 	or	r2,r5,r2
1000a438:	38800115 	stw	r2,4(r7)
1000a43c:	003fbb06 	br	1000a32c <__alt_data_end+0xf800a32c>
1000a440:	21800515 	stw	r6,20(r4)
1000a444:	21800415 	stw	r6,16(r4)
1000a448:	10c00054 	ori	r3,r2,1
1000a44c:	31c00315 	stw	r7,12(r6)
1000a450:	31c00215 	stw	r7,8(r6)
1000a454:	30c00115 	stw	r3,4(r6)
1000a458:	308d883a 	add	r6,r6,r2
1000a45c:	30800015 	stw	r2,0(r6)
1000a460:	003f9506 	br	1000a2b8 <__alt_data_end+0xf800a2b8>
1000a464:	00c01504 	movi	r3,84
1000a468:	19400536 	bltu	r3,r5,1000a480 <_free_r+0x2b8>
1000a46c:	100ad33a 	srli	r5,r2,12
1000a470:	28c01bc4 	addi	r3,r5,111
1000a474:	18c7883a 	add	r3,r3,r3
1000a478:	29401b84 	addi	r5,r5,110
1000a47c:	003f9c06 	br	1000a2f0 <__alt_data_end+0xf800a2f0>
1000a480:	00c05504 	movi	r3,340
1000a484:	19400536 	bltu	r3,r5,1000a49c <_free_r+0x2d4>
1000a488:	100ad3fa 	srli	r5,r2,15
1000a48c:	28c01e04 	addi	r3,r5,120
1000a490:	18c7883a 	add	r3,r3,r3
1000a494:	29401dc4 	addi	r5,r5,119
1000a498:	003f9506 	br	1000a2f0 <__alt_data_end+0xf800a2f0>
1000a49c:	00c15504 	movi	r3,1364
1000a4a0:	19400536 	bltu	r3,r5,1000a4b8 <_free_r+0x2f0>
1000a4a4:	100ad4ba 	srli	r5,r2,18
1000a4a8:	28c01f44 	addi	r3,r5,125
1000a4ac:	18c7883a 	add	r3,r3,r3
1000a4b0:	29401f04 	addi	r5,r5,124
1000a4b4:	003f8e06 	br	1000a2f0 <__alt_data_end+0xf800a2f0>
1000a4b8:	00c03f84 	movi	r3,254
1000a4bc:	01401f84 	movi	r5,126
1000a4c0:	003f8b06 	br	1000a2f0 <__alt_data_end+0xf800a2f0>
1000a4c4:	10c00054 	ori	r3,r2,1
1000a4c8:	30c00115 	stw	r3,4(r6)
1000a4cc:	308d883a 	add	r6,r6,r2
1000a4d0:	30800015 	stw	r2,0(r6)
1000a4d4:	003f7806 	br	1000a2b8 <__alt_data_end+0xf800a2b8>

1000a4d8 <__sfvwrite_r>:
1000a4d8:	30800217 	ldw	r2,8(r6)
1000a4dc:	10006726 	beq	r2,zero,1000a67c <__sfvwrite_r+0x1a4>
1000a4e0:	28c0030b 	ldhu	r3,12(r5)
1000a4e4:	defff404 	addi	sp,sp,-48
1000a4e8:	dd400715 	stw	r21,28(sp)
1000a4ec:	dd000615 	stw	r20,24(sp)
1000a4f0:	dc000215 	stw	r16,8(sp)
1000a4f4:	dfc00b15 	stw	ra,44(sp)
1000a4f8:	df000a15 	stw	fp,40(sp)
1000a4fc:	ddc00915 	stw	r23,36(sp)
1000a500:	dd800815 	stw	r22,32(sp)
1000a504:	dcc00515 	stw	r19,20(sp)
1000a508:	dc800415 	stw	r18,16(sp)
1000a50c:	dc400315 	stw	r17,12(sp)
1000a510:	1880020c 	andi	r2,r3,8
1000a514:	2821883a 	mov	r16,r5
1000a518:	202b883a 	mov	r21,r4
1000a51c:	3029883a 	mov	r20,r6
1000a520:	10002726 	beq	r2,zero,1000a5c0 <__sfvwrite_r+0xe8>
1000a524:	28800417 	ldw	r2,16(r5)
1000a528:	10002526 	beq	r2,zero,1000a5c0 <__sfvwrite_r+0xe8>
1000a52c:	1880008c 	andi	r2,r3,2
1000a530:	a4400017 	ldw	r17,0(r20)
1000a534:	10002a26 	beq	r2,zero,1000a5e0 <__sfvwrite_r+0x108>
1000a538:	05a00034 	movhi	r22,32768
1000a53c:	0027883a 	mov	r19,zero
1000a540:	0025883a 	mov	r18,zero
1000a544:	b5bf0004 	addi	r22,r22,-1024
1000a548:	980d883a 	mov	r6,r19
1000a54c:	a809883a 	mov	r4,r21
1000a550:	90004626 	beq	r18,zero,1000a66c <__sfvwrite_r+0x194>
1000a554:	900f883a 	mov	r7,r18
1000a558:	b480022e 	bgeu	r22,r18,1000a564 <__sfvwrite_r+0x8c>
1000a55c:	01e00034 	movhi	r7,32768
1000a560:	39ff0004 	addi	r7,r7,-1024
1000a564:	80800917 	ldw	r2,36(r16)
1000a568:	81400717 	ldw	r5,28(r16)
1000a56c:	103ee83a 	callr	r2
1000a570:	00805a0e 	bge	zero,r2,1000a6dc <__sfvwrite_r+0x204>
1000a574:	a0c00217 	ldw	r3,8(r20)
1000a578:	98a7883a 	add	r19,r19,r2
1000a57c:	90a5c83a 	sub	r18,r18,r2
1000a580:	1885c83a 	sub	r2,r3,r2
1000a584:	a0800215 	stw	r2,8(r20)
1000a588:	103fef1e 	bne	r2,zero,1000a548 <__alt_data_end+0xf800a548>
1000a58c:	0005883a 	mov	r2,zero
1000a590:	dfc00b17 	ldw	ra,44(sp)
1000a594:	df000a17 	ldw	fp,40(sp)
1000a598:	ddc00917 	ldw	r23,36(sp)
1000a59c:	dd800817 	ldw	r22,32(sp)
1000a5a0:	dd400717 	ldw	r21,28(sp)
1000a5a4:	dd000617 	ldw	r20,24(sp)
1000a5a8:	dcc00517 	ldw	r19,20(sp)
1000a5ac:	dc800417 	ldw	r18,16(sp)
1000a5b0:	dc400317 	ldw	r17,12(sp)
1000a5b4:	dc000217 	ldw	r16,8(sp)
1000a5b8:	dec00c04 	addi	sp,sp,48
1000a5bc:	f800283a 	ret
1000a5c0:	800b883a 	mov	r5,r16
1000a5c4:	a809883a 	mov	r4,r21
1000a5c8:	0007dd80 	call	10007dd8 <__swsetup_r>
1000a5cc:	1000ee1e 	bne	r2,zero,1000a988 <__sfvwrite_r+0x4b0>
1000a5d0:	80c0030b 	ldhu	r3,12(r16)
1000a5d4:	a4400017 	ldw	r17,0(r20)
1000a5d8:	1880008c 	andi	r2,r3,2
1000a5dc:	103fd61e 	bne	r2,zero,1000a538 <__alt_data_end+0xf800a538>
1000a5e0:	1880004c 	andi	r2,r3,1
1000a5e4:	1000421e 	bne	r2,zero,1000a6f0 <__sfvwrite_r+0x218>
1000a5e8:	0039883a 	mov	fp,zero
1000a5ec:	0025883a 	mov	r18,zero
1000a5f0:	90001a26 	beq	r18,zero,1000a65c <__sfvwrite_r+0x184>
1000a5f4:	1880800c 	andi	r2,r3,512
1000a5f8:	84c00217 	ldw	r19,8(r16)
1000a5fc:	10002126 	beq	r2,zero,1000a684 <__sfvwrite_r+0x1ac>
1000a600:	982f883a 	mov	r23,r19
1000a604:	94c09636 	bltu	r18,r19,1000a860 <__sfvwrite_r+0x388>
1000a608:	1881200c 	andi	r2,r3,1152
1000a60c:	1000a11e 	bne	r2,zero,1000a894 <__sfvwrite_r+0x3bc>
1000a610:	81000017 	ldw	r4,0(r16)
1000a614:	b80d883a 	mov	r6,r23
1000a618:	e00b883a 	mov	r5,fp
1000a61c:	000b2400 	call	1000b240 <memmove>
1000a620:	80c00217 	ldw	r3,8(r16)
1000a624:	81000017 	ldw	r4,0(r16)
1000a628:	9005883a 	mov	r2,r18
1000a62c:	1ce7c83a 	sub	r19,r3,r19
1000a630:	25cf883a 	add	r7,r4,r23
1000a634:	84c00215 	stw	r19,8(r16)
1000a638:	81c00015 	stw	r7,0(r16)
1000a63c:	a0c00217 	ldw	r3,8(r20)
1000a640:	e0b9883a 	add	fp,fp,r2
1000a644:	90a5c83a 	sub	r18,r18,r2
1000a648:	18a7c83a 	sub	r19,r3,r2
1000a64c:	a4c00215 	stw	r19,8(r20)
1000a650:	983fce26 	beq	r19,zero,1000a58c <__alt_data_end+0xf800a58c>
1000a654:	80c0030b 	ldhu	r3,12(r16)
1000a658:	903fe61e 	bne	r18,zero,1000a5f4 <__alt_data_end+0xf800a5f4>
1000a65c:	8f000017 	ldw	fp,0(r17)
1000a660:	8c800117 	ldw	r18,4(r17)
1000a664:	8c400204 	addi	r17,r17,8
1000a668:	003fe106 	br	1000a5f0 <__alt_data_end+0xf800a5f0>
1000a66c:	8cc00017 	ldw	r19,0(r17)
1000a670:	8c800117 	ldw	r18,4(r17)
1000a674:	8c400204 	addi	r17,r17,8
1000a678:	003fb306 	br	1000a548 <__alt_data_end+0xf800a548>
1000a67c:	0005883a 	mov	r2,zero
1000a680:	f800283a 	ret
1000a684:	81000017 	ldw	r4,0(r16)
1000a688:	80800417 	ldw	r2,16(r16)
1000a68c:	11005a36 	bltu	r2,r4,1000a7f8 <__sfvwrite_r+0x320>
1000a690:	85c00517 	ldw	r23,20(r16)
1000a694:	95c05836 	bltu	r18,r23,1000a7f8 <__sfvwrite_r+0x320>
1000a698:	00a00034 	movhi	r2,32768
1000a69c:	10bfffc4 	addi	r2,r2,-1
1000a6a0:	9009883a 	mov	r4,r18
1000a6a4:	1480012e 	bgeu	r2,r18,1000a6ac <__sfvwrite_r+0x1d4>
1000a6a8:	1009883a 	mov	r4,r2
1000a6ac:	b80b883a 	mov	r5,r23
1000a6b0:	00032840 	call	10003284 <__divsi3>
1000a6b4:	b80b883a 	mov	r5,r23
1000a6b8:	1009883a 	mov	r4,r2
1000a6bc:	00034380 	call	10003438 <__mulsi3>
1000a6c0:	81400717 	ldw	r5,28(r16)
1000a6c4:	80c00917 	ldw	r3,36(r16)
1000a6c8:	100f883a 	mov	r7,r2
1000a6cc:	e00d883a 	mov	r6,fp
1000a6d0:	a809883a 	mov	r4,r21
1000a6d4:	183ee83a 	callr	r3
1000a6d8:	00bfd816 	blt	zero,r2,1000a63c <__alt_data_end+0xf800a63c>
1000a6dc:	8080030b 	ldhu	r2,12(r16)
1000a6e0:	10801014 	ori	r2,r2,64
1000a6e4:	8080030d 	sth	r2,12(r16)
1000a6e8:	00bfffc4 	movi	r2,-1
1000a6ec:	003fa806 	br	1000a590 <__alt_data_end+0xf800a590>
1000a6f0:	0027883a 	mov	r19,zero
1000a6f4:	0011883a 	mov	r8,zero
1000a6f8:	0039883a 	mov	fp,zero
1000a6fc:	0025883a 	mov	r18,zero
1000a700:	90001f26 	beq	r18,zero,1000a780 <__sfvwrite_r+0x2a8>
1000a704:	40005a26 	beq	r8,zero,1000a870 <__sfvwrite_r+0x398>
1000a708:	982d883a 	mov	r22,r19
1000a70c:	94c0012e 	bgeu	r18,r19,1000a714 <__sfvwrite_r+0x23c>
1000a710:	902d883a 	mov	r22,r18
1000a714:	81000017 	ldw	r4,0(r16)
1000a718:	80800417 	ldw	r2,16(r16)
1000a71c:	b02f883a 	mov	r23,r22
1000a720:	81c00517 	ldw	r7,20(r16)
1000a724:	1100032e 	bgeu	r2,r4,1000a734 <__sfvwrite_r+0x25c>
1000a728:	80c00217 	ldw	r3,8(r16)
1000a72c:	38c7883a 	add	r3,r7,r3
1000a730:	1d801816 	blt	r3,r22,1000a794 <__sfvwrite_r+0x2bc>
1000a734:	b1c03e16 	blt	r22,r7,1000a830 <__sfvwrite_r+0x358>
1000a738:	80800917 	ldw	r2,36(r16)
1000a73c:	81400717 	ldw	r5,28(r16)
1000a740:	e00d883a 	mov	r6,fp
1000a744:	da000115 	stw	r8,4(sp)
1000a748:	a809883a 	mov	r4,r21
1000a74c:	103ee83a 	callr	r2
1000a750:	102f883a 	mov	r23,r2
1000a754:	da000117 	ldw	r8,4(sp)
1000a758:	00bfe00e 	bge	zero,r2,1000a6dc <__alt_data_end+0xf800a6dc>
1000a75c:	9de7c83a 	sub	r19,r19,r23
1000a760:	98001f26 	beq	r19,zero,1000a7e0 <__sfvwrite_r+0x308>
1000a764:	a0800217 	ldw	r2,8(r20)
1000a768:	e5f9883a 	add	fp,fp,r23
1000a76c:	95e5c83a 	sub	r18,r18,r23
1000a770:	15efc83a 	sub	r23,r2,r23
1000a774:	a5c00215 	stw	r23,8(r20)
1000a778:	b83f8426 	beq	r23,zero,1000a58c <__alt_data_end+0xf800a58c>
1000a77c:	903fe11e 	bne	r18,zero,1000a704 <__alt_data_end+0xf800a704>
1000a780:	8f000017 	ldw	fp,0(r17)
1000a784:	8c800117 	ldw	r18,4(r17)
1000a788:	0011883a 	mov	r8,zero
1000a78c:	8c400204 	addi	r17,r17,8
1000a790:	003fdb06 	br	1000a700 <__alt_data_end+0xf800a700>
1000a794:	180d883a 	mov	r6,r3
1000a798:	e00b883a 	mov	r5,fp
1000a79c:	da000115 	stw	r8,4(sp)
1000a7a0:	d8c00015 	stw	r3,0(sp)
1000a7a4:	000b2400 	call	1000b240 <memmove>
1000a7a8:	d8c00017 	ldw	r3,0(sp)
1000a7ac:	80800017 	ldw	r2,0(r16)
1000a7b0:	800b883a 	mov	r5,r16
1000a7b4:	a809883a 	mov	r4,r21
1000a7b8:	10c5883a 	add	r2,r2,r3
1000a7bc:	80800015 	stw	r2,0(r16)
1000a7c0:	d8c00015 	stw	r3,0(sp)
1000a7c4:	00099f80 	call	100099f8 <_fflush_r>
1000a7c8:	d8c00017 	ldw	r3,0(sp)
1000a7cc:	da000117 	ldw	r8,4(sp)
1000a7d0:	103fc21e 	bne	r2,zero,1000a6dc <__alt_data_end+0xf800a6dc>
1000a7d4:	182f883a 	mov	r23,r3
1000a7d8:	9de7c83a 	sub	r19,r19,r23
1000a7dc:	983fe11e 	bne	r19,zero,1000a764 <__alt_data_end+0xf800a764>
1000a7e0:	800b883a 	mov	r5,r16
1000a7e4:	a809883a 	mov	r4,r21
1000a7e8:	00099f80 	call	100099f8 <_fflush_r>
1000a7ec:	103fbb1e 	bne	r2,zero,1000a6dc <__alt_data_end+0xf800a6dc>
1000a7f0:	0011883a 	mov	r8,zero
1000a7f4:	003fdb06 	br	1000a764 <__alt_data_end+0xf800a764>
1000a7f8:	94c0012e 	bgeu	r18,r19,1000a800 <__sfvwrite_r+0x328>
1000a7fc:	9027883a 	mov	r19,r18
1000a800:	980d883a 	mov	r6,r19
1000a804:	e00b883a 	mov	r5,fp
1000a808:	000b2400 	call	1000b240 <memmove>
1000a80c:	80800217 	ldw	r2,8(r16)
1000a810:	80c00017 	ldw	r3,0(r16)
1000a814:	14c5c83a 	sub	r2,r2,r19
1000a818:	1cc7883a 	add	r3,r3,r19
1000a81c:	80800215 	stw	r2,8(r16)
1000a820:	80c00015 	stw	r3,0(r16)
1000a824:	10004326 	beq	r2,zero,1000a934 <__sfvwrite_r+0x45c>
1000a828:	9805883a 	mov	r2,r19
1000a82c:	003f8306 	br	1000a63c <__alt_data_end+0xf800a63c>
1000a830:	b00d883a 	mov	r6,r22
1000a834:	e00b883a 	mov	r5,fp
1000a838:	da000115 	stw	r8,4(sp)
1000a83c:	000b2400 	call	1000b240 <memmove>
1000a840:	80800217 	ldw	r2,8(r16)
1000a844:	80c00017 	ldw	r3,0(r16)
1000a848:	da000117 	ldw	r8,4(sp)
1000a84c:	1585c83a 	sub	r2,r2,r22
1000a850:	1dad883a 	add	r22,r3,r22
1000a854:	80800215 	stw	r2,8(r16)
1000a858:	85800015 	stw	r22,0(r16)
1000a85c:	003fbf06 	br	1000a75c <__alt_data_end+0xf800a75c>
1000a860:	81000017 	ldw	r4,0(r16)
1000a864:	9027883a 	mov	r19,r18
1000a868:	902f883a 	mov	r23,r18
1000a86c:	003f6906 	br	1000a614 <__alt_data_end+0xf800a614>
1000a870:	900d883a 	mov	r6,r18
1000a874:	01400284 	movi	r5,10
1000a878:	e009883a 	mov	r4,fp
1000a87c:	000b0140 	call	1000b014 <memchr>
1000a880:	10003e26 	beq	r2,zero,1000a97c <__sfvwrite_r+0x4a4>
1000a884:	10800044 	addi	r2,r2,1
1000a888:	1727c83a 	sub	r19,r2,fp
1000a88c:	02000044 	movi	r8,1
1000a890:	003f9d06 	br	1000a708 <__alt_data_end+0xf800a708>
1000a894:	80800517 	ldw	r2,20(r16)
1000a898:	81400417 	ldw	r5,16(r16)
1000a89c:	81c00017 	ldw	r7,0(r16)
1000a8a0:	10a7883a 	add	r19,r2,r2
1000a8a4:	9885883a 	add	r2,r19,r2
1000a8a8:	1026d7fa 	srli	r19,r2,31
1000a8ac:	396dc83a 	sub	r22,r7,r5
1000a8b0:	b1000044 	addi	r4,r22,1
1000a8b4:	9885883a 	add	r2,r19,r2
1000a8b8:	1027d07a 	srai	r19,r2,1
1000a8bc:	2485883a 	add	r2,r4,r18
1000a8c0:	980d883a 	mov	r6,r19
1000a8c4:	9880022e 	bgeu	r19,r2,1000a8d0 <__sfvwrite_r+0x3f8>
1000a8c8:	1027883a 	mov	r19,r2
1000a8cc:	100d883a 	mov	r6,r2
1000a8d0:	18c1000c 	andi	r3,r3,1024
1000a8d4:	18001c26 	beq	r3,zero,1000a948 <__sfvwrite_r+0x470>
1000a8d8:	300b883a 	mov	r5,r6
1000a8dc:	a809883a 	mov	r4,r21
1000a8e0:	00034880 	call	10003488 <_malloc_r>
1000a8e4:	102f883a 	mov	r23,r2
1000a8e8:	10002926 	beq	r2,zero,1000a990 <__sfvwrite_r+0x4b8>
1000a8ec:	81400417 	ldw	r5,16(r16)
1000a8f0:	b00d883a 	mov	r6,r22
1000a8f4:	1009883a 	mov	r4,r2
1000a8f8:	000b0f80 	call	1000b0f8 <memcpy>
1000a8fc:	8080030b 	ldhu	r2,12(r16)
1000a900:	00fedfc4 	movi	r3,-1153
1000a904:	10c4703a 	and	r2,r2,r3
1000a908:	10802014 	ori	r2,r2,128
1000a90c:	8080030d 	sth	r2,12(r16)
1000a910:	bd89883a 	add	r4,r23,r22
1000a914:	9d8fc83a 	sub	r7,r19,r22
1000a918:	85c00415 	stw	r23,16(r16)
1000a91c:	84c00515 	stw	r19,20(r16)
1000a920:	81000015 	stw	r4,0(r16)
1000a924:	9027883a 	mov	r19,r18
1000a928:	81c00215 	stw	r7,8(r16)
1000a92c:	902f883a 	mov	r23,r18
1000a930:	003f3806 	br	1000a614 <__alt_data_end+0xf800a614>
1000a934:	800b883a 	mov	r5,r16
1000a938:	a809883a 	mov	r4,r21
1000a93c:	00099f80 	call	100099f8 <_fflush_r>
1000a940:	103fb926 	beq	r2,zero,1000a828 <__alt_data_end+0xf800a828>
1000a944:	003f6506 	br	1000a6dc <__alt_data_end+0xf800a6dc>
1000a948:	a809883a 	mov	r4,r21
1000a94c:	000c6e40 	call	1000c6e4 <_realloc_r>
1000a950:	102f883a 	mov	r23,r2
1000a954:	103fee1e 	bne	r2,zero,1000a910 <__alt_data_end+0xf800a910>
1000a958:	81400417 	ldw	r5,16(r16)
1000a95c:	a809883a 	mov	r4,r21
1000a960:	000a1c80 	call	1000a1c8 <_free_r>
1000a964:	8080030b 	ldhu	r2,12(r16)
1000a968:	00ffdfc4 	movi	r3,-129
1000a96c:	1884703a 	and	r2,r3,r2
1000a970:	00c00304 	movi	r3,12
1000a974:	a8c00015 	stw	r3,0(r21)
1000a978:	003f5906 	br	1000a6e0 <__alt_data_end+0xf800a6e0>
1000a97c:	94c00044 	addi	r19,r18,1
1000a980:	02000044 	movi	r8,1
1000a984:	003f6006 	br	1000a708 <__alt_data_end+0xf800a708>
1000a988:	00bfffc4 	movi	r2,-1
1000a98c:	003f0006 	br	1000a590 <__alt_data_end+0xf800a590>
1000a990:	00800304 	movi	r2,12
1000a994:	a8800015 	stw	r2,0(r21)
1000a998:	8080030b 	ldhu	r2,12(r16)
1000a99c:	003f5006 	br	1000a6e0 <__alt_data_end+0xf800a6e0>

1000a9a0 <_fwalk>:
1000a9a0:	defff704 	addi	sp,sp,-36
1000a9a4:	dd000415 	stw	r20,16(sp)
1000a9a8:	dfc00815 	stw	ra,32(sp)
1000a9ac:	ddc00715 	stw	r23,28(sp)
1000a9b0:	dd800615 	stw	r22,24(sp)
1000a9b4:	dd400515 	stw	r21,20(sp)
1000a9b8:	dcc00315 	stw	r19,12(sp)
1000a9bc:	dc800215 	stw	r18,8(sp)
1000a9c0:	dc400115 	stw	r17,4(sp)
1000a9c4:	dc000015 	stw	r16,0(sp)
1000a9c8:	2500b804 	addi	r20,r4,736
1000a9cc:	a0002326 	beq	r20,zero,1000aa5c <_fwalk+0xbc>
1000a9d0:	282b883a 	mov	r21,r5
1000a9d4:	002f883a 	mov	r23,zero
1000a9d8:	05800044 	movi	r22,1
1000a9dc:	04ffffc4 	movi	r19,-1
1000a9e0:	a4400117 	ldw	r17,4(r20)
1000a9e4:	a4800217 	ldw	r18,8(r20)
1000a9e8:	8c7fffc4 	addi	r17,r17,-1
1000a9ec:	88000d16 	blt	r17,zero,1000aa24 <_fwalk+0x84>
1000a9f0:	94000304 	addi	r16,r18,12
1000a9f4:	94800384 	addi	r18,r18,14
1000a9f8:	8080000b 	ldhu	r2,0(r16)
1000a9fc:	8c7fffc4 	addi	r17,r17,-1
1000aa00:	813ffd04 	addi	r4,r16,-12
1000aa04:	b080042e 	bgeu	r22,r2,1000aa18 <_fwalk+0x78>
1000aa08:	9080000f 	ldh	r2,0(r18)
1000aa0c:	14c00226 	beq	r2,r19,1000aa18 <_fwalk+0x78>
1000aa10:	a83ee83a 	callr	r21
1000aa14:	b8aeb03a 	or	r23,r23,r2
1000aa18:	84001a04 	addi	r16,r16,104
1000aa1c:	94801a04 	addi	r18,r18,104
1000aa20:	8cfff51e 	bne	r17,r19,1000a9f8 <__alt_data_end+0xf800a9f8>
1000aa24:	a5000017 	ldw	r20,0(r20)
1000aa28:	a03fed1e 	bne	r20,zero,1000a9e0 <__alt_data_end+0xf800a9e0>
1000aa2c:	b805883a 	mov	r2,r23
1000aa30:	dfc00817 	ldw	ra,32(sp)
1000aa34:	ddc00717 	ldw	r23,28(sp)
1000aa38:	dd800617 	ldw	r22,24(sp)
1000aa3c:	dd400517 	ldw	r21,20(sp)
1000aa40:	dd000417 	ldw	r20,16(sp)
1000aa44:	dcc00317 	ldw	r19,12(sp)
1000aa48:	dc800217 	ldw	r18,8(sp)
1000aa4c:	dc400117 	ldw	r17,4(sp)
1000aa50:	dc000017 	ldw	r16,0(sp)
1000aa54:	dec00904 	addi	sp,sp,36
1000aa58:	f800283a 	ret
1000aa5c:	002f883a 	mov	r23,zero
1000aa60:	003ff206 	br	1000aa2c <__alt_data_end+0xf800aa2c>

1000aa64 <_fwalk_reent>:
1000aa64:	defff704 	addi	sp,sp,-36
1000aa68:	dd000415 	stw	r20,16(sp)
1000aa6c:	dfc00815 	stw	ra,32(sp)
1000aa70:	ddc00715 	stw	r23,28(sp)
1000aa74:	dd800615 	stw	r22,24(sp)
1000aa78:	dd400515 	stw	r21,20(sp)
1000aa7c:	dcc00315 	stw	r19,12(sp)
1000aa80:	dc800215 	stw	r18,8(sp)
1000aa84:	dc400115 	stw	r17,4(sp)
1000aa88:	dc000015 	stw	r16,0(sp)
1000aa8c:	2500b804 	addi	r20,r4,736
1000aa90:	a0002326 	beq	r20,zero,1000ab20 <_fwalk_reent+0xbc>
1000aa94:	282b883a 	mov	r21,r5
1000aa98:	2027883a 	mov	r19,r4
1000aa9c:	002f883a 	mov	r23,zero
1000aaa0:	05800044 	movi	r22,1
1000aaa4:	04bfffc4 	movi	r18,-1
1000aaa8:	a4400117 	ldw	r17,4(r20)
1000aaac:	a4000217 	ldw	r16,8(r20)
1000aab0:	8c7fffc4 	addi	r17,r17,-1
1000aab4:	88000c16 	blt	r17,zero,1000aae8 <_fwalk_reent+0x84>
1000aab8:	84000304 	addi	r16,r16,12
1000aabc:	8080000b 	ldhu	r2,0(r16)
1000aac0:	8c7fffc4 	addi	r17,r17,-1
1000aac4:	817ffd04 	addi	r5,r16,-12
1000aac8:	b080052e 	bgeu	r22,r2,1000aae0 <_fwalk_reent+0x7c>
1000aacc:	8080008f 	ldh	r2,2(r16)
1000aad0:	9809883a 	mov	r4,r19
1000aad4:	14800226 	beq	r2,r18,1000aae0 <_fwalk_reent+0x7c>
1000aad8:	a83ee83a 	callr	r21
1000aadc:	b8aeb03a 	or	r23,r23,r2
1000aae0:	84001a04 	addi	r16,r16,104
1000aae4:	8cbff51e 	bne	r17,r18,1000aabc <__alt_data_end+0xf800aabc>
1000aae8:	a5000017 	ldw	r20,0(r20)
1000aaec:	a03fee1e 	bne	r20,zero,1000aaa8 <__alt_data_end+0xf800aaa8>
1000aaf0:	b805883a 	mov	r2,r23
1000aaf4:	dfc00817 	ldw	ra,32(sp)
1000aaf8:	ddc00717 	ldw	r23,28(sp)
1000aafc:	dd800617 	ldw	r22,24(sp)
1000ab00:	dd400517 	ldw	r21,20(sp)
1000ab04:	dd000417 	ldw	r20,16(sp)
1000ab08:	dcc00317 	ldw	r19,12(sp)
1000ab0c:	dc800217 	ldw	r18,8(sp)
1000ab10:	dc400117 	ldw	r17,4(sp)
1000ab14:	dc000017 	ldw	r16,0(sp)
1000ab18:	dec00904 	addi	sp,sp,36
1000ab1c:	f800283a 	ret
1000ab20:	002f883a 	mov	r23,zero
1000ab24:	003ff206 	br	1000aaf0 <__alt_data_end+0xf800aaf0>

1000ab28 <iswspace>:
1000ab28:	00803fc4 	movi	r2,255
1000ab2c:	11000836 	bltu	r2,r4,1000ab50 <iswspace+0x28>
1000ab30:	008400b4 	movhi	r2,4098
1000ab34:	10ba2304 	addi	r2,r2,-6004
1000ab38:	10800017 	ldw	r2,0(r2)
1000ab3c:	1109883a 	add	r4,r2,r4
1000ab40:	20800043 	ldbu	r2,1(r4)
1000ab44:	1080020c 	andi	r2,r2,8
1000ab48:	10803fcc 	andi	r2,r2,255
1000ab4c:	f800283a 	ret
1000ab50:	0005883a 	mov	r2,zero
1000ab54:	f800283a 	ret

1000ab58 <_setlocale_r>:
1000ab58:	30001b26 	beq	r6,zero,1000abc8 <_setlocale_r+0x70>
1000ab5c:	014400b4 	movhi	r5,4098
1000ab60:	defffe04 	addi	sp,sp,-8
1000ab64:	29726c04 	addi	r5,r5,-13904
1000ab68:	3009883a 	mov	r4,r6
1000ab6c:	dc000015 	stw	r16,0(sp)
1000ab70:	dfc00115 	stw	ra,4(sp)
1000ab74:	3021883a 	mov	r16,r6
1000ab78:	000d1840 	call	1000d184 <strcmp>
1000ab7c:	1000061e 	bne	r2,zero,1000ab98 <_setlocale_r+0x40>
1000ab80:	008400b4 	movhi	r2,4098
1000ab84:	10b26b04 	addi	r2,r2,-13908
1000ab88:	dfc00117 	ldw	ra,4(sp)
1000ab8c:	dc000017 	ldw	r16,0(sp)
1000ab90:	dec00204 	addi	sp,sp,8
1000ab94:	f800283a 	ret
1000ab98:	014400b4 	movhi	r5,4098
1000ab9c:	29726b04 	addi	r5,r5,-13908
1000aba0:	8009883a 	mov	r4,r16
1000aba4:	000d1840 	call	1000d184 <strcmp>
1000aba8:	103ff526 	beq	r2,zero,1000ab80 <__alt_data_end+0xf800ab80>
1000abac:	014400b4 	movhi	r5,4098
1000abb0:	2971ab04 	addi	r5,r5,-14676
1000abb4:	8009883a 	mov	r4,r16
1000abb8:	000d1840 	call	1000d184 <strcmp>
1000abbc:	103ff026 	beq	r2,zero,1000ab80 <__alt_data_end+0xf800ab80>
1000abc0:	0005883a 	mov	r2,zero
1000abc4:	003ff006 	br	1000ab88 <__alt_data_end+0xf800ab88>
1000abc8:	008400b4 	movhi	r2,4098
1000abcc:	10b26b04 	addi	r2,r2,-13908
1000abd0:	f800283a 	ret

1000abd4 <__locale_charset>:
1000abd4:	008400b4 	movhi	r2,4098
1000abd8:	10b58804 	addi	r2,r2,-10720
1000abdc:	f800283a 	ret

1000abe0 <__locale_mb_cur_max>:
1000abe0:	008400b4 	movhi	r2,4098
1000abe4:	10ba2604 	addi	r2,r2,-5992
1000abe8:	10800017 	ldw	r2,0(r2)
1000abec:	f800283a 	ret

1000abf0 <__locale_msgcharset>:
1000abf0:	008400b4 	movhi	r2,4098
1000abf4:	10b58004 	addi	r2,r2,-10752
1000abf8:	f800283a 	ret

1000abfc <__locale_cjk_lang>:
1000abfc:	0005883a 	mov	r2,zero
1000ac00:	f800283a 	ret

1000ac04 <_localeconv_r>:
1000ac04:	008400b4 	movhi	r2,4098
1000ac08:	10b59004 	addi	r2,r2,-10688
1000ac0c:	f800283a 	ret

1000ac10 <setlocale>:
1000ac10:	008400b4 	movhi	r2,4098
1000ac14:	10ba2504 	addi	r2,r2,-5996
1000ac18:	280d883a 	mov	r6,r5
1000ac1c:	200b883a 	mov	r5,r4
1000ac20:	11000017 	ldw	r4,0(r2)
1000ac24:	000ab581 	jmpi	1000ab58 <_setlocale_r>

1000ac28 <localeconv>:
1000ac28:	008400b4 	movhi	r2,4098
1000ac2c:	10b59004 	addi	r2,r2,-10688
1000ac30:	f800283a 	ret

1000ac34 <__smakebuf_r>:
1000ac34:	2880030b 	ldhu	r2,12(r5)
1000ac38:	10c0008c 	andi	r3,r2,2
1000ac3c:	1800411e 	bne	r3,zero,1000ad44 <__smakebuf_r+0x110>
1000ac40:	deffec04 	addi	sp,sp,-80
1000ac44:	dc000f15 	stw	r16,60(sp)
1000ac48:	2821883a 	mov	r16,r5
1000ac4c:	2940038f 	ldh	r5,14(r5)
1000ac50:	dc401015 	stw	r17,64(sp)
1000ac54:	dfc01315 	stw	ra,76(sp)
1000ac58:	dcc01215 	stw	r19,72(sp)
1000ac5c:	dc801115 	stw	r18,68(sp)
1000ac60:	2023883a 	mov	r17,r4
1000ac64:	28001c16 	blt	r5,zero,1000acd8 <__smakebuf_r+0xa4>
1000ac68:	d80d883a 	mov	r6,sp
1000ac6c:	00137140 	call	10013714 <_fstat_r>
1000ac70:	10001816 	blt	r2,zero,1000acd4 <__smakebuf_r+0xa0>
1000ac74:	d8800117 	ldw	r2,4(sp)
1000ac78:	00e00014 	movui	r3,32768
1000ac7c:	10bc000c 	andi	r2,r2,61440
1000ac80:	14c80020 	cmpeqi	r19,r2,8192
1000ac84:	10c03726 	beq	r2,r3,1000ad64 <__smakebuf_r+0x130>
1000ac88:	80c0030b 	ldhu	r3,12(r16)
1000ac8c:	18c20014 	ori	r3,r3,2048
1000ac90:	80c0030d 	sth	r3,12(r16)
1000ac94:	00c80004 	movi	r3,8192
1000ac98:	10c0521e 	bne	r2,r3,1000ade4 <__smakebuf_r+0x1b0>
1000ac9c:	8140038f 	ldh	r5,14(r16)
1000aca0:	8809883a 	mov	r4,r17
1000aca4:	001431c0 	call	1001431c <_isatty_r>
1000aca8:	10004c26 	beq	r2,zero,1000addc <__smakebuf_r+0x1a8>
1000acac:	8080030b 	ldhu	r2,12(r16)
1000acb0:	80c010c4 	addi	r3,r16,67
1000acb4:	80c00015 	stw	r3,0(r16)
1000acb8:	10800054 	ori	r2,r2,1
1000acbc:	8080030d 	sth	r2,12(r16)
1000acc0:	00800044 	movi	r2,1
1000acc4:	80c00415 	stw	r3,16(r16)
1000acc8:	80800515 	stw	r2,20(r16)
1000accc:	04810004 	movi	r18,1024
1000acd0:	00000706 	br	1000acf0 <__smakebuf_r+0xbc>
1000acd4:	8080030b 	ldhu	r2,12(r16)
1000acd8:	10c0200c 	andi	r3,r2,128
1000acdc:	18001f1e 	bne	r3,zero,1000ad5c <__smakebuf_r+0x128>
1000ace0:	04810004 	movi	r18,1024
1000ace4:	10820014 	ori	r2,r2,2048
1000ace8:	8080030d 	sth	r2,12(r16)
1000acec:	0027883a 	mov	r19,zero
1000acf0:	900b883a 	mov	r5,r18
1000acf4:	8809883a 	mov	r4,r17
1000acf8:	00034880 	call	10003488 <_malloc_r>
1000acfc:	10002c26 	beq	r2,zero,1000adb0 <__smakebuf_r+0x17c>
1000ad00:	80c0030b 	ldhu	r3,12(r16)
1000ad04:	01040074 	movhi	r4,4097
1000ad08:	2126a304 	addi	r4,r4,-25972
1000ad0c:	89000f15 	stw	r4,60(r17)
1000ad10:	18c02014 	ori	r3,r3,128
1000ad14:	80c0030d 	sth	r3,12(r16)
1000ad18:	80800015 	stw	r2,0(r16)
1000ad1c:	80800415 	stw	r2,16(r16)
1000ad20:	84800515 	stw	r18,20(r16)
1000ad24:	98001a1e 	bne	r19,zero,1000ad90 <__smakebuf_r+0x15c>
1000ad28:	dfc01317 	ldw	ra,76(sp)
1000ad2c:	dcc01217 	ldw	r19,72(sp)
1000ad30:	dc801117 	ldw	r18,68(sp)
1000ad34:	dc401017 	ldw	r17,64(sp)
1000ad38:	dc000f17 	ldw	r16,60(sp)
1000ad3c:	dec01404 	addi	sp,sp,80
1000ad40:	f800283a 	ret
1000ad44:	288010c4 	addi	r2,r5,67
1000ad48:	28800015 	stw	r2,0(r5)
1000ad4c:	28800415 	stw	r2,16(r5)
1000ad50:	00800044 	movi	r2,1
1000ad54:	28800515 	stw	r2,20(r5)
1000ad58:	f800283a 	ret
1000ad5c:	04801004 	movi	r18,64
1000ad60:	003fe006 	br	1000ace4 <__alt_data_end+0xf800ace4>
1000ad64:	81000a17 	ldw	r4,40(r16)
1000ad68:	00c40074 	movhi	r3,4097
1000ad6c:	18f44804 	addi	r3,r3,-12000
1000ad70:	20ffc51e 	bne	r4,r3,1000ac88 <__alt_data_end+0xf800ac88>
1000ad74:	8080030b 	ldhu	r2,12(r16)
1000ad78:	04810004 	movi	r18,1024
1000ad7c:	84801315 	stw	r18,76(r16)
1000ad80:	1484b03a 	or	r2,r2,r18
1000ad84:	8080030d 	sth	r2,12(r16)
1000ad88:	0027883a 	mov	r19,zero
1000ad8c:	003fd806 	br	1000acf0 <__alt_data_end+0xf800acf0>
1000ad90:	8140038f 	ldh	r5,14(r16)
1000ad94:	8809883a 	mov	r4,r17
1000ad98:	001431c0 	call	1001431c <_isatty_r>
1000ad9c:	103fe226 	beq	r2,zero,1000ad28 <__alt_data_end+0xf800ad28>
1000ada0:	8080030b 	ldhu	r2,12(r16)
1000ada4:	10800054 	ori	r2,r2,1
1000ada8:	8080030d 	sth	r2,12(r16)
1000adac:	003fde06 	br	1000ad28 <__alt_data_end+0xf800ad28>
1000adb0:	8080030b 	ldhu	r2,12(r16)
1000adb4:	10c0800c 	andi	r3,r2,512
1000adb8:	183fdb1e 	bne	r3,zero,1000ad28 <__alt_data_end+0xf800ad28>
1000adbc:	10800094 	ori	r2,r2,2
1000adc0:	80c010c4 	addi	r3,r16,67
1000adc4:	8080030d 	sth	r2,12(r16)
1000adc8:	00800044 	movi	r2,1
1000adcc:	80c00015 	stw	r3,0(r16)
1000add0:	80c00415 	stw	r3,16(r16)
1000add4:	80800515 	stw	r2,20(r16)
1000add8:	003fd306 	br	1000ad28 <__alt_data_end+0xf800ad28>
1000addc:	04810004 	movi	r18,1024
1000ade0:	003fc306 	br	1000acf0 <__alt_data_end+0xf800acf0>
1000ade4:	0027883a 	mov	r19,zero
1000ade8:	04810004 	movi	r18,1024
1000adec:	003fc006 	br	1000acf0 <__alt_data_end+0xf800acf0>

1000adf0 <_mbrtowc_r>:
1000adf0:	defff704 	addi	sp,sp,-36
1000adf4:	008400b4 	movhi	r2,4098
1000adf8:	dc800715 	stw	r18,28(sp)
1000adfc:	dc400615 	stw	r17,24(sp)
1000ae00:	dc000515 	stw	r16,20(sp)
1000ae04:	10ba2704 	addi	r2,r2,-5988
1000ae08:	dfc00815 	stw	ra,32(sp)
1000ae0c:	2021883a 	mov	r16,r4
1000ae10:	dc400917 	ldw	r17,36(sp)
1000ae14:	14800017 	ldw	r18,0(r2)
1000ae18:	30001626 	beq	r6,zero,1000ae74 <_mbrtowc_r+0x84>
1000ae1c:	d9400215 	stw	r5,8(sp)
1000ae20:	d9800315 	stw	r6,12(sp)
1000ae24:	d9c00415 	stw	r7,16(sp)
1000ae28:	000abd40 	call	1000abd4 <__locale_charset>
1000ae2c:	d9c00417 	ldw	r7,16(sp)
1000ae30:	d9800317 	ldw	r6,12(sp)
1000ae34:	d9400217 	ldw	r5,8(sp)
1000ae38:	d8800015 	stw	r2,0(sp)
1000ae3c:	dc400115 	stw	r17,4(sp)
1000ae40:	8009883a 	mov	r4,r16
1000ae44:	903ee83a 	callr	r18
1000ae48:	00ffffc4 	movi	r3,-1
1000ae4c:	10c0031e 	bne	r2,r3,1000ae5c <_mbrtowc_r+0x6c>
1000ae50:	88000015 	stw	zero,0(r17)
1000ae54:	00c02284 	movi	r3,138
1000ae58:	80c00015 	stw	r3,0(r16)
1000ae5c:	dfc00817 	ldw	ra,32(sp)
1000ae60:	dc800717 	ldw	r18,28(sp)
1000ae64:	dc400617 	ldw	r17,24(sp)
1000ae68:	dc000517 	ldw	r16,20(sp)
1000ae6c:	dec00904 	addi	sp,sp,36
1000ae70:	f800283a 	ret
1000ae74:	000abd40 	call	1000abd4 <__locale_charset>
1000ae78:	018400b4 	movhi	r6,4098
1000ae7c:	31b1ab04 	addi	r6,r6,-14676
1000ae80:	dc400115 	stw	r17,4(sp)
1000ae84:	d8800015 	stw	r2,0(sp)
1000ae88:	01c00044 	movi	r7,1
1000ae8c:	000b883a 	mov	r5,zero
1000ae90:	8009883a 	mov	r4,r16
1000ae94:	903ee83a 	callr	r18
1000ae98:	003feb06 	br	1000ae48 <__alt_data_end+0xf800ae48>

1000ae9c <mbrtowc>:
1000ae9c:	defff704 	addi	sp,sp,-36
1000aea0:	008400b4 	movhi	r2,4098
1000aea4:	dc800415 	stw	r18,16(sp)
1000aea8:	dc400315 	stw	r17,12(sp)
1000aeac:	10ba2504 	addi	r2,r2,-5996
1000aeb0:	dfc00815 	stw	ra,32(sp)
1000aeb4:	dd400715 	stw	r21,28(sp)
1000aeb8:	dd000615 	stw	r20,24(sp)
1000aebc:	dcc00515 	stw	r19,20(sp)
1000aec0:	dc000215 	stw	r16,8(sp)
1000aec4:	3825883a 	mov	r18,r7
1000aec8:	14400017 	ldw	r17,0(r2)
1000aecc:	28001c26 	beq	r5,zero,1000af40 <mbrtowc+0xa4>
1000aed0:	008400b4 	movhi	r2,4098
1000aed4:	10ba2704 	addi	r2,r2,-5988
1000aed8:	15400017 	ldw	r21,0(r2)
1000aedc:	2821883a 	mov	r16,r5
1000aee0:	2027883a 	mov	r19,r4
1000aee4:	3029883a 	mov	r20,r6
1000aee8:	000abd40 	call	1000abd4 <__locale_charset>
1000aeec:	d8800015 	stw	r2,0(sp)
1000aef0:	dc800115 	stw	r18,4(sp)
1000aef4:	a00f883a 	mov	r7,r20
1000aef8:	800d883a 	mov	r6,r16
1000aefc:	980b883a 	mov	r5,r19
1000af00:	8809883a 	mov	r4,r17
1000af04:	a83ee83a 	callr	r21
1000af08:	00ffffc4 	movi	r3,-1
1000af0c:	10c0031e 	bne	r2,r3,1000af1c <mbrtowc+0x80>
1000af10:	90000015 	stw	zero,0(r18)
1000af14:	00c02284 	movi	r3,138
1000af18:	88c00015 	stw	r3,0(r17)
1000af1c:	dfc00817 	ldw	ra,32(sp)
1000af20:	dd400717 	ldw	r21,28(sp)
1000af24:	dd000617 	ldw	r20,24(sp)
1000af28:	dcc00517 	ldw	r19,20(sp)
1000af2c:	dc800417 	ldw	r18,16(sp)
1000af30:	dc400317 	ldw	r17,12(sp)
1000af34:	dc000217 	ldw	r16,8(sp)
1000af38:	dec00904 	addi	sp,sp,36
1000af3c:	f800283a 	ret
1000af40:	008400b4 	movhi	r2,4098
1000af44:	10ba2704 	addi	r2,r2,-5988
1000af48:	14000017 	ldw	r16,0(r2)
1000af4c:	000abd40 	call	1000abd4 <__locale_charset>
1000af50:	018400b4 	movhi	r6,4098
1000af54:	31b1ab04 	addi	r6,r6,-14676
1000af58:	dc800115 	stw	r18,4(sp)
1000af5c:	d8800015 	stw	r2,0(sp)
1000af60:	01c00044 	movi	r7,1
1000af64:	000b883a 	mov	r5,zero
1000af68:	8809883a 	mov	r4,r17
1000af6c:	803ee83a 	callr	r16
1000af70:	003fe506 	br	1000af08 <__alt_data_end+0xf800af08>

1000af74 <__ascii_mbtowc>:
1000af74:	deffff04 	addi	sp,sp,-4
1000af78:	28000826 	beq	r5,zero,1000af9c <__ascii_mbtowc+0x28>
1000af7c:	30000926 	beq	r6,zero,1000afa4 <__ascii_mbtowc+0x30>
1000af80:	38000b26 	beq	r7,zero,1000afb0 <__ascii_mbtowc+0x3c>
1000af84:	30800003 	ldbu	r2,0(r6)
1000af88:	28800015 	stw	r2,0(r5)
1000af8c:	30800003 	ldbu	r2,0(r6)
1000af90:	1004c03a 	cmpne	r2,r2,zero
1000af94:	dec00104 	addi	sp,sp,4
1000af98:	f800283a 	ret
1000af9c:	d80b883a 	mov	r5,sp
1000afa0:	303ff71e 	bne	r6,zero,1000af80 <__alt_data_end+0xf800af80>
1000afa4:	0005883a 	mov	r2,zero
1000afa8:	dec00104 	addi	sp,sp,4
1000afac:	f800283a 	ret
1000afb0:	00bfff84 	movi	r2,-2
1000afb4:	003ff706 	br	1000af94 <__alt_data_end+0xf800af94>

1000afb8 <_mbtowc_r>:
1000afb8:	008400b4 	movhi	r2,4098
1000afbc:	defff804 	addi	sp,sp,-32
1000afc0:	10ba2704 	addi	r2,r2,-5988
1000afc4:	dfc00715 	stw	ra,28(sp)
1000afc8:	dc000615 	stw	r16,24(sp)
1000afcc:	14000017 	ldw	r16,0(r2)
1000afd0:	d9000215 	stw	r4,8(sp)
1000afd4:	d9400315 	stw	r5,12(sp)
1000afd8:	d9800415 	stw	r6,16(sp)
1000afdc:	d9c00515 	stw	r7,20(sp)
1000afe0:	000abd40 	call	1000abd4 <__locale_charset>
1000afe4:	d8800015 	stw	r2,0(sp)
1000afe8:	d8800817 	ldw	r2,32(sp)
1000afec:	d9c00517 	ldw	r7,20(sp)
1000aff0:	d9800417 	ldw	r6,16(sp)
1000aff4:	d9400317 	ldw	r5,12(sp)
1000aff8:	d9000217 	ldw	r4,8(sp)
1000affc:	d8800115 	stw	r2,4(sp)
1000b000:	803ee83a 	callr	r16
1000b004:	dfc00717 	ldw	ra,28(sp)
1000b008:	dc000617 	ldw	r16,24(sp)
1000b00c:	dec00804 	addi	sp,sp,32
1000b010:	f800283a 	ret

1000b014 <memchr>:
1000b014:	208000cc 	andi	r2,r4,3
1000b018:	280f883a 	mov	r7,r5
1000b01c:	10003426 	beq	r2,zero,1000b0f0 <memchr+0xdc>
1000b020:	30bfffc4 	addi	r2,r6,-1
1000b024:	30001a26 	beq	r6,zero,1000b090 <memchr+0x7c>
1000b028:	20c00003 	ldbu	r3,0(r4)
1000b02c:	29803fcc 	andi	r6,r5,255
1000b030:	30c0051e 	bne	r6,r3,1000b048 <memchr+0x34>
1000b034:	00001806 	br	1000b098 <memchr+0x84>
1000b038:	10001526 	beq	r2,zero,1000b090 <memchr+0x7c>
1000b03c:	20c00003 	ldbu	r3,0(r4)
1000b040:	10bfffc4 	addi	r2,r2,-1
1000b044:	30c01426 	beq	r6,r3,1000b098 <memchr+0x84>
1000b048:	21000044 	addi	r4,r4,1
1000b04c:	20c000cc 	andi	r3,r4,3
1000b050:	183ff91e 	bne	r3,zero,1000b038 <__alt_data_end+0xf800b038>
1000b054:	020000c4 	movi	r8,3
1000b058:	40801136 	bltu	r8,r2,1000b0a0 <memchr+0x8c>
1000b05c:	10000c26 	beq	r2,zero,1000b090 <memchr+0x7c>
1000b060:	20c00003 	ldbu	r3,0(r4)
1000b064:	29403fcc 	andi	r5,r5,255
1000b068:	28c00b26 	beq	r5,r3,1000b098 <memchr+0x84>
1000b06c:	20c00044 	addi	r3,r4,1
1000b070:	39803fcc 	andi	r6,r7,255
1000b074:	2089883a 	add	r4,r4,r2
1000b078:	00000306 	br	1000b088 <memchr+0x74>
1000b07c:	18c00044 	addi	r3,r3,1
1000b080:	197fffc3 	ldbu	r5,-1(r3)
1000b084:	31400526 	beq	r6,r5,1000b09c <memchr+0x88>
1000b088:	1805883a 	mov	r2,r3
1000b08c:	20fffb1e 	bne	r4,r3,1000b07c <__alt_data_end+0xf800b07c>
1000b090:	0005883a 	mov	r2,zero
1000b094:	f800283a 	ret
1000b098:	2005883a 	mov	r2,r4
1000b09c:	f800283a 	ret
1000b0a0:	28c03fcc 	andi	r3,r5,255
1000b0a4:	1812923a 	slli	r9,r3,8
1000b0a8:	02ffbff4 	movhi	r11,65279
1000b0ac:	02a02074 	movhi	r10,32897
1000b0b0:	48d2b03a 	or	r9,r9,r3
1000b0b4:	4806943a 	slli	r3,r9,16
1000b0b8:	5affbfc4 	addi	r11,r11,-257
1000b0bc:	52a02004 	addi	r10,r10,-32640
1000b0c0:	48d2b03a 	or	r9,r9,r3
1000b0c4:	20c00017 	ldw	r3,0(r4)
1000b0c8:	48c6f03a 	xor	r3,r9,r3
1000b0cc:	1acd883a 	add	r6,r3,r11
1000b0d0:	00c6303a 	nor	r3,zero,r3
1000b0d4:	30c6703a 	and	r3,r6,r3
1000b0d8:	1a86703a 	and	r3,r3,r10
1000b0dc:	183fe01e 	bne	r3,zero,1000b060 <__alt_data_end+0xf800b060>
1000b0e0:	10bfff04 	addi	r2,r2,-4
1000b0e4:	21000104 	addi	r4,r4,4
1000b0e8:	40bff636 	bltu	r8,r2,1000b0c4 <__alt_data_end+0xf800b0c4>
1000b0ec:	003fdb06 	br	1000b05c <__alt_data_end+0xf800b05c>
1000b0f0:	3005883a 	mov	r2,r6
1000b0f4:	003fd706 	br	1000b054 <__alt_data_end+0xf800b054>

1000b0f8 <memcpy>:
1000b0f8:	defffd04 	addi	sp,sp,-12
1000b0fc:	dfc00215 	stw	ra,8(sp)
1000b100:	dc400115 	stw	r17,4(sp)
1000b104:	dc000015 	stw	r16,0(sp)
1000b108:	00c003c4 	movi	r3,15
1000b10c:	2005883a 	mov	r2,r4
1000b110:	1980452e 	bgeu	r3,r6,1000b228 <memcpy+0x130>
1000b114:	2906b03a 	or	r3,r5,r4
1000b118:	18c000cc 	andi	r3,r3,3
1000b11c:	1800441e 	bne	r3,zero,1000b230 <memcpy+0x138>
1000b120:	347ffc04 	addi	r17,r6,-16
1000b124:	8822d13a 	srli	r17,r17,4
1000b128:	28c00104 	addi	r3,r5,4
1000b12c:	23400104 	addi	r13,r4,4
1000b130:	8820913a 	slli	r16,r17,4
1000b134:	2b000204 	addi	r12,r5,8
1000b138:	22c00204 	addi	r11,r4,8
1000b13c:	84000504 	addi	r16,r16,20
1000b140:	2a800304 	addi	r10,r5,12
1000b144:	22400304 	addi	r9,r4,12
1000b148:	2c21883a 	add	r16,r5,r16
1000b14c:	2811883a 	mov	r8,r5
1000b150:	200f883a 	mov	r7,r4
1000b154:	41000017 	ldw	r4,0(r8)
1000b158:	1fc00017 	ldw	ra,0(r3)
1000b15c:	63c00017 	ldw	r15,0(r12)
1000b160:	39000015 	stw	r4,0(r7)
1000b164:	53800017 	ldw	r14,0(r10)
1000b168:	6fc00015 	stw	ra,0(r13)
1000b16c:	5bc00015 	stw	r15,0(r11)
1000b170:	4b800015 	stw	r14,0(r9)
1000b174:	18c00404 	addi	r3,r3,16
1000b178:	39c00404 	addi	r7,r7,16
1000b17c:	42000404 	addi	r8,r8,16
1000b180:	6b400404 	addi	r13,r13,16
1000b184:	63000404 	addi	r12,r12,16
1000b188:	5ac00404 	addi	r11,r11,16
1000b18c:	52800404 	addi	r10,r10,16
1000b190:	4a400404 	addi	r9,r9,16
1000b194:	1c3fef1e 	bne	r3,r16,1000b154 <__alt_data_end+0xf800b154>
1000b198:	89c00044 	addi	r7,r17,1
1000b19c:	380e913a 	slli	r7,r7,4
1000b1a0:	310003cc 	andi	r4,r6,15
1000b1a4:	02c000c4 	movi	r11,3
1000b1a8:	11c7883a 	add	r3,r2,r7
1000b1ac:	29cb883a 	add	r5,r5,r7
1000b1b0:	5900212e 	bgeu	r11,r4,1000b238 <memcpy+0x140>
1000b1b4:	1813883a 	mov	r9,r3
1000b1b8:	2811883a 	mov	r8,r5
1000b1bc:	200f883a 	mov	r7,r4
1000b1c0:	42800017 	ldw	r10,0(r8)
1000b1c4:	4a400104 	addi	r9,r9,4
1000b1c8:	39ffff04 	addi	r7,r7,-4
1000b1cc:	4abfff15 	stw	r10,-4(r9)
1000b1d0:	42000104 	addi	r8,r8,4
1000b1d4:	59fffa36 	bltu	r11,r7,1000b1c0 <__alt_data_end+0xf800b1c0>
1000b1d8:	213fff04 	addi	r4,r4,-4
1000b1dc:	2008d0ba 	srli	r4,r4,2
1000b1e0:	318000cc 	andi	r6,r6,3
1000b1e4:	21000044 	addi	r4,r4,1
1000b1e8:	2109883a 	add	r4,r4,r4
1000b1ec:	2109883a 	add	r4,r4,r4
1000b1f0:	1907883a 	add	r3,r3,r4
1000b1f4:	290b883a 	add	r5,r5,r4
1000b1f8:	30000626 	beq	r6,zero,1000b214 <memcpy+0x11c>
1000b1fc:	198d883a 	add	r6,r3,r6
1000b200:	29c00003 	ldbu	r7,0(r5)
1000b204:	18c00044 	addi	r3,r3,1
1000b208:	29400044 	addi	r5,r5,1
1000b20c:	19ffffc5 	stb	r7,-1(r3)
1000b210:	19bffb1e 	bne	r3,r6,1000b200 <__alt_data_end+0xf800b200>
1000b214:	dfc00217 	ldw	ra,8(sp)
1000b218:	dc400117 	ldw	r17,4(sp)
1000b21c:	dc000017 	ldw	r16,0(sp)
1000b220:	dec00304 	addi	sp,sp,12
1000b224:	f800283a 	ret
1000b228:	2007883a 	mov	r3,r4
1000b22c:	003ff206 	br	1000b1f8 <__alt_data_end+0xf800b1f8>
1000b230:	2007883a 	mov	r3,r4
1000b234:	003ff106 	br	1000b1fc <__alt_data_end+0xf800b1fc>
1000b238:	200d883a 	mov	r6,r4
1000b23c:	003fee06 	br	1000b1f8 <__alt_data_end+0xf800b1f8>

1000b240 <memmove>:
1000b240:	2005883a 	mov	r2,r4
1000b244:	29000b2e 	bgeu	r5,r4,1000b274 <memmove+0x34>
1000b248:	298f883a 	add	r7,r5,r6
1000b24c:	21c0092e 	bgeu	r4,r7,1000b274 <memmove+0x34>
1000b250:	2187883a 	add	r3,r4,r6
1000b254:	198bc83a 	sub	r5,r3,r6
1000b258:	30004826 	beq	r6,zero,1000b37c <memmove+0x13c>
1000b25c:	39ffffc4 	addi	r7,r7,-1
1000b260:	39000003 	ldbu	r4,0(r7)
1000b264:	18ffffc4 	addi	r3,r3,-1
1000b268:	19000005 	stb	r4,0(r3)
1000b26c:	28fffb1e 	bne	r5,r3,1000b25c <__alt_data_end+0xf800b25c>
1000b270:	f800283a 	ret
1000b274:	00c003c4 	movi	r3,15
1000b278:	1980412e 	bgeu	r3,r6,1000b380 <memmove+0x140>
1000b27c:	2886b03a 	or	r3,r5,r2
1000b280:	18c000cc 	andi	r3,r3,3
1000b284:	1800401e 	bne	r3,zero,1000b388 <memmove+0x148>
1000b288:	33fffc04 	addi	r15,r6,-16
1000b28c:	781ed13a 	srli	r15,r15,4
1000b290:	28c00104 	addi	r3,r5,4
1000b294:	13400104 	addi	r13,r2,4
1000b298:	781c913a 	slli	r14,r15,4
1000b29c:	2b000204 	addi	r12,r5,8
1000b2a0:	12c00204 	addi	r11,r2,8
1000b2a4:	73800504 	addi	r14,r14,20
1000b2a8:	2a800304 	addi	r10,r5,12
1000b2ac:	12400304 	addi	r9,r2,12
1000b2b0:	2b9d883a 	add	r14,r5,r14
1000b2b4:	2811883a 	mov	r8,r5
1000b2b8:	100f883a 	mov	r7,r2
1000b2bc:	41000017 	ldw	r4,0(r8)
1000b2c0:	39c00404 	addi	r7,r7,16
1000b2c4:	18c00404 	addi	r3,r3,16
1000b2c8:	393ffc15 	stw	r4,-16(r7)
1000b2cc:	193ffc17 	ldw	r4,-16(r3)
1000b2d0:	6b400404 	addi	r13,r13,16
1000b2d4:	5ac00404 	addi	r11,r11,16
1000b2d8:	693ffc15 	stw	r4,-16(r13)
1000b2dc:	61000017 	ldw	r4,0(r12)
1000b2e0:	4a400404 	addi	r9,r9,16
1000b2e4:	42000404 	addi	r8,r8,16
1000b2e8:	593ffc15 	stw	r4,-16(r11)
1000b2ec:	51000017 	ldw	r4,0(r10)
1000b2f0:	63000404 	addi	r12,r12,16
1000b2f4:	52800404 	addi	r10,r10,16
1000b2f8:	493ffc15 	stw	r4,-16(r9)
1000b2fc:	1bbfef1e 	bne	r3,r14,1000b2bc <__alt_data_end+0xf800b2bc>
1000b300:	79000044 	addi	r4,r15,1
1000b304:	2008913a 	slli	r4,r4,4
1000b308:	328003cc 	andi	r10,r6,15
1000b30c:	02c000c4 	movi	r11,3
1000b310:	1107883a 	add	r3,r2,r4
1000b314:	290b883a 	add	r5,r5,r4
1000b318:	5a801e2e 	bgeu	r11,r10,1000b394 <memmove+0x154>
1000b31c:	1813883a 	mov	r9,r3
1000b320:	2811883a 	mov	r8,r5
1000b324:	500f883a 	mov	r7,r10
1000b328:	41000017 	ldw	r4,0(r8)
1000b32c:	4a400104 	addi	r9,r9,4
1000b330:	39ffff04 	addi	r7,r7,-4
1000b334:	493fff15 	stw	r4,-4(r9)
1000b338:	42000104 	addi	r8,r8,4
1000b33c:	59fffa36 	bltu	r11,r7,1000b328 <__alt_data_end+0xf800b328>
1000b340:	513fff04 	addi	r4,r10,-4
1000b344:	2008d0ba 	srli	r4,r4,2
1000b348:	318000cc 	andi	r6,r6,3
1000b34c:	21000044 	addi	r4,r4,1
1000b350:	2109883a 	add	r4,r4,r4
1000b354:	2109883a 	add	r4,r4,r4
1000b358:	1907883a 	add	r3,r3,r4
1000b35c:	290b883a 	add	r5,r5,r4
1000b360:	30000b26 	beq	r6,zero,1000b390 <memmove+0x150>
1000b364:	198d883a 	add	r6,r3,r6
1000b368:	29c00003 	ldbu	r7,0(r5)
1000b36c:	18c00044 	addi	r3,r3,1
1000b370:	29400044 	addi	r5,r5,1
1000b374:	19ffffc5 	stb	r7,-1(r3)
1000b378:	19bffb1e 	bne	r3,r6,1000b368 <__alt_data_end+0xf800b368>
1000b37c:	f800283a 	ret
1000b380:	1007883a 	mov	r3,r2
1000b384:	003ff606 	br	1000b360 <__alt_data_end+0xf800b360>
1000b388:	1007883a 	mov	r3,r2
1000b38c:	003ff506 	br	1000b364 <__alt_data_end+0xf800b364>
1000b390:	f800283a 	ret
1000b394:	500d883a 	mov	r6,r10
1000b398:	003ff106 	br	1000b360 <__alt_data_end+0xf800b360>

1000b39c <memset>:
1000b39c:	20c000cc 	andi	r3,r4,3
1000b3a0:	2005883a 	mov	r2,r4
1000b3a4:	18004426 	beq	r3,zero,1000b4b8 <memset+0x11c>
1000b3a8:	31ffffc4 	addi	r7,r6,-1
1000b3ac:	30004026 	beq	r6,zero,1000b4b0 <memset+0x114>
1000b3b0:	2813883a 	mov	r9,r5
1000b3b4:	200d883a 	mov	r6,r4
1000b3b8:	2007883a 	mov	r3,r4
1000b3bc:	00000406 	br	1000b3d0 <memset+0x34>
1000b3c0:	3a3fffc4 	addi	r8,r7,-1
1000b3c4:	31800044 	addi	r6,r6,1
1000b3c8:	38003926 	beq	r7,zero,1000b4b0 <memset+0x114>
1000b3cc:	400f883a 	mov	r7,r8
1000b3d0:	18c00044 	addi	r3,r3,1
1000b3d4:	32400005 	stb	r9,0(r6)
1000b3d8:	1a0000cc 	andi	r8,r3,3
1000b3dc:	403ff81e 	bne	r8,zero,1000b3c0 <__alt_data_end+0xf800b3c0>
1000b3e0:	010000c4 	movi	r4,3
1000b3e4:	21c02d2e 	bgeu	r4,r7,1000b49c <memset+0x100>
1000b3e8:	29003fcc 	andi	r4,r5,255
1000b3ec:	200c923a 	slli	r6,r4,8
1000b3f0:	3108b03a 	or	r4,r6,r4
1000b3f4:	200c943a 	slli	r6,r4,16
1000b3f8:	218cb03a 	or	r6,r4,r6
1000b3fc:	010003c4 	movi	r4,15
1000b400:	21c0182e 	bgeu	r4,r7,1000b464 <memset+0xc8>
1000b404:	3b3ffc04 	addi	r12,r7,-16
1000b408:	6018d13a 	srli	r12,r12,4
1000b40c:	1a000104 	addi	r8,r3,4
1000b410:	1ac00204 	addi	r11,r3,8
1000b414:	6008913a 	slli	r4,r12,4
1000b418:	1a800304 	addi	r10,r3,12
1000b41c:	1813883a 	mov	r9,r3
1000b420:	21000504 	addi	r4,r4,20
1000b424:	1909883a 	add	r4,r3,r4
1000b428:	49800015 	stw	r6,0(r9)
1000b42c:	41800015 	stw	r6,0(r8)
1000b430:	59800015 	stw	r6,0(r11)
1000b434:	51800015 	stw	r6,0(r10)
1000b438:	42000404 	addi	r8,r8,16
1000b43c:	4a400404 	addi	r9,r9,16
1000b440:	5ac00404 	addi	r11,r11,16
1000b444:	52800404 	addi	r10,r10,16
1000b448:	413ff71e 	bne	r8,r4,1000b428 <__alt_data_end+0xf800b428>
1000b44c:	63000044 	addi	r12,r12,1
1000b450:	6018913a 	slli	r12,r12,4
1000b454:	39c003cc 	andi	r7,r7,15
1000b458:	010000c4 	movi	r4,3
1000b45c:	1b07883a 	add	r3,r3,r12
1000b460:	21c00e2e 	bgeu	r4,r7,1000b49c <memset+0x100>
1000b464:	1813883a 	mov	r9,r3
1000b468:	3811883a 	mov	r8,r7
1000b46c:	010000c4 	movi	r4,3
1000b470:	49800015 	stw	r6,0(r9)
1000b474:	423fff04 	addi	r8,r8,-4
1000b478:	4a400104 	addi	r9,r9,4
1000b47c:	223ffc36 	bltu	r4,r8,1000b470 <__alt_data_end+0xf800b470>
1000b480:	393fff04 	addi	r4,r7,-4
1000b484:	2008d0ba 	srli	r4,r4,2
1000b488:	39c000cc 	andi	r7,r7,3
1000b48c:	21000044 	addi	r4,r4,1
1000b490:	2109883a 	add	r4,r4,r4
1000b494:	2109883a 	add	r4,r4,r4
1000b498:	1907883a 	add	r3,r3,r4
1000b49c:	38000526 	beq	r7,zero,1000b4b4 <memset+0x118>
1000b4a0:	19cf883a 	add	r7,r3,r7
1000b4a4:	19400005 	stb	r5,0(r3)
1000b4a8:	18c00044 	addi	r3,r3,1
1000b4ac:	38fffd1e 	bne	r7,r3,1000b4a4 <__alt_data_end+0xf800b4a4>
1000b4b0:	f800283a 	ret
1000b4b4:	f800283a 	ret
1000b4b8:	2007883a 	mov	r3,r4
1000b4bc:	300f883a 	mov	r7,r6
1000b4c0:	003fc706 	br	1000b3e0 <__alt_data_end+0xf800b3e0>

1000b4c4 <_Balloc>:
1000b4c4:	20801317 	ldw	r2,76(r4)
1000b4c8:	defffc04 	addi	sp,sp,-16
1000b4cc:	dc400115 	stw	r17,4(sp)
1000b4d0:	dc000015 	stw	r16,0(sp)
1000b4d4:	dfc00315 	stw	ra,12(sp)
1000b4d8:	dc800215 	stw	r18,8(sp)
1000b4dc:	2023883a 	mov	r17,r4
1000b4e0:	2821883a 	mov	r16,r5
1000b4e4:	10000f26 	beq	r2,zero,1000b524 <_Balloc+0x60>
1000b4e8:	8407883a 	add	r3,r16,r16
1000b4ec:	18c7883a 	add	r3,r3,r3
1000b4f0:	10c7883a 	add	r3,r2,r3
1000b4f4:	18800017 	ldw	r2,0(r3)
1000b4f8:	10001126 	beq	r2,zero,1000b540 <_Balloc+0x7c>
1000b4fc:	11000017 	ldw	r4,0(r2)
1000b500:	19000015 	stw	r4,0(r3)
1000b504:	10000415 	stw	zero,16(r2)
1000b508:	10000315 	stw	zero,12(r2)
1000b50c:	dfc00317 	ldw	ra,12(sp)
1000b510:	dc800217 	ldw	r18,8(sp)
1000b514:	dc400117 	ldw	r17,4(sp)
1000b518:	dc000017 	ldw	r16,0(sp)
1000b51c:	dec00404 	addi	sp,sp,16
1000b520:	f800283a 	ret
1000b524:	01800844 	movi	r6,33
1000b528:	01400104 	movi	r5,4
1000b52c:	001332c0 	call	1001332c <_calloc_r>
1000b530:	88801315 	stw	r2,76(r17)
1000b534:	103fec1e 	bne	r2,zero,1000b4e8 <__alt_data_end+0xf800b4e8>
1000b538:	0005883a 	mov	r2,zero
1000b53c:	003ff306 	br	1000b50c <__alt_data_end+0xf800b50c>
1000b540:	01400044 	movi	r5,1
1000b544:	2c24983a 	sll	r18,r5,r16
1000b548:	8809883a 	mov	r4,r17
1000b54c:	91800144 	addi	r6,r18,5
1000b550:	318d883a 	add	r6,r6,r6
1000b554:	318d883a 	add	r6,r6,r6
1000b558:	001332c0 	call	1001332c <_calloc_r>
1000b55c:	103ff626 	beq	r2,zero,1000b538 <__alt_data_end+0xf800b538>
1000b560:	14000115 	stw	r16,4(r2)
1000b564:	14800215 	stw	r18,8(r2)
1000b568:	003fe606 	br	1000b504 <__alt_data_end+0xf800b504>

1000b56c <_Bfree>:
1000b56c:	28000826 	beq	r5,zero,1000b590 <_Bfree+0x24>
1000b570:	28c00117 	ldw	r3,4(r5)
1000b574:	20801317 	ldw	r2,76(r4)
1000b578:	18c7883a 	add	r3,r3,r3
1000b57c:	18c7883a 	add	r3,r3,r3
1000b580:	10c5883a 	add	r2,r2,r3
1000b584:	10c00017 	ldw	r3,0(r2)
1000b588:	28c00015 	stw	r3,0(r5)
1000b58c:	11400015 	stw	r5,0(r2)
1000b590:	f800283a 	ret

1000b594 <__multadd>:
1000b594:	defff704 	addi	sp,sp,-36
1000b598:	dc800215 	stw	r18,8(sp)
1000b59c:	2c800417 	ldw	r18,16(r5)
1000b5a0:	dd800615 	stw	r22,24(sp)
1000b5a4:	dd400515 	stw	r21,20(sp)
1000b5a8:	dd000415 	stw	r20,16(sp)
1000b5ac:	dcc00315 	stw	r19,12(sp)
1000b5b0:	dc400115 	stw	r17,4(sp)
1000b5b4:	dc000015 	stw	r16,0(sp)
1000b5b8:	dfc00815 	stw	ra,32(sp)
1000b5bc:	ddc00715 	stw	r23,28(sp)
1000b5c0:	2827883a 	mov	r19,r5
1000b5c4:	2029883a 	mov	r20,r4
1000b5c8:	3023883a 	mov	r17,r6
1000b5cc:	3821883a 	mov	r16,r7
1000b5d0:	2d400504 	addi	r21,r5,20
1000b5d4:	002d883a 	mov	r22,zero
1000b5d8:	adc00017 	ldw	r23,0(r21)
1000b5dc:	880b883a 	mov	r5,r17
1000b5e0:	ad400104 	addi	r21,r21,4
1000b5e4:	b93fffcc 	andi	r4,r23,65535
1000b5e8:	00034380 	call	10003438 <__mulsi3>
1000b5ec:	b808d43a 	srli	r4,r23,16
1000b5f0:	880b883a 	mov	r5,r17
1000b5f4:	1421883a 	add	r16,r2,r16
1000b5f8:	00034380 	call	10003438 <__mulsi3>
1000b5fc:	800ed43a 	srli	r7,r16,16
1000b600:	80ffffcc 	andi	r3,r16,65535
1000b604:	b5800044 	addi	r22,r22,1
1000b608:	11c5883a 	add	r2,r2,r7
1000b60c:	100e943a 	slli	r7,r2,16
1000b610:	1020d43a 	srli	r16,r2,16
1000b614:	38c7883a 	add	r3,r7,r3
1000b618:	a8ffff15 	stw	r3,-4(r21)
1000b61c:	b4bfee16 	blt	r22,r18,1000b5d8 <__alt_data_end+0xf800b5d8>
1000b620:	80000926 	beq	r16,zero,1000b648 <__multadd+0xb4>
1000b624:	98800217 	ldw	r2,8(r19)
1000b628:	9080130e 	bge	r18,r2,1000b678 <__multadd+0xe4>
1000b62c:	90800144 	addi	r2,r18,5
1000b630:	1085883a 	add	r2,r2,r2
1000b634:	1085883a 	add	r2,r2,r2
1000b638:	9885883a 	add	r2,r19,r2
1000b63c:	14000015 	stw	r16,0(r2)
1000b640:	94800044 	addi	r18,r18,1
1000b644:	9c800415 	stw	r18,16(r19)
1000b648:	9805883a 	mov	r2,r19
1000b64c:	dfc00817 	ldw	ra,32(sp)
1000b650:	ddc00717 	ldw	r23,28(sp)
1000b654:	dd800617 	ldw	r22,24(sp)
1000b658:	dd400517 	ldw	r21,20(sp)
1000b65c:	dd000417 	ldw	r20,16(sp)
1000b660:	dcc00317 	ldw	r19,12(sp)
1000b664:	dc800217 	ldw	r18,8(sp)
1000b668:	dc400117 	ldw	r17,4(sp)
1000b66c:	dc000017 	ldw	r16,0(sp)
1000b670:	dec00904 	addi	sp,sp,36
1000b674:	f800283a 	ret
1000b678:	99400117 	ldw	r5,4(r19)
1000b67c:	a009883a 	mov	r4,r20
1000b680:	29400044 	addi	r5,r5,1
1000b684:	000b4c40 	call	1000b4c4 <_Balloc>
1000b688:	99800417 	ldw	r6,16(r19)
1000b68c:	99400304 	addi	r5,r19,12
1000b690:	11000304 	addi	r4,r2,12
1000b694:	31800084 	addi	r6,r6,2
1000b698:	318d883a 	add	r6,r6,r6
1000b69c:	318d883a 	add	r6,r6,r6
1000b6a0:	1023883a 	mov	r17,r2
1000b6a4:	000b0f80 	call	1000b0f8 <memcpy>
1000b6a8:	98000a26 	beq	r19,zero,1000b6d4 <__multadd+0x140>
1000b6ac:	98c00117 	ldw	r3,4(r19)
1000b6b0:	a0801317 	ldw	r2,76(r20)
1000b6b4:	18c7883a 	add	r3,r3,r3
1000b6b8:	18c7883a 	add	r3,r3,r3
1000b6bc:	10c5883a 	add	r2,r2,r3
1000b6c0:	10c00017 	ldw	r3,0(r2)
1000b6c4:	98c00015 	stw	r3,0(r19)
1000b6c8:	14c00015 	stw	r19,0(r2)
1000b6cc:	8827883a 	mov	r19,r17
1000b6d0:	003fd606 	br	1000b62c <__alt_data_end+0xf800b62c>
1000b6d4:	8827883a 	mov	r19,r17
1000b6d8:	003fd406 	br	1000b62c <__alt_data_end+0xf800b62c>

1000b6dc <__s2b>:
1000b6dc:	defff904 	addi	sp,sp,-28
1000b6e0:	dc400115 	stw	r17,4(sp)
1000b6e4:	dc000015 	stw	r16,0(sp)
1000b6e8:	2023883a 	mov	r17,r4
1000b6ec:	2821883a 	mov	r16,r5
1000b6f0:	39000204 	addi	r4,r7,8
1000b6f4:	01400244 	movi	r5,9
1000b6f8:	dcc00315 	stw	r19,12(sp)
1000b6fc:	dc800215 	stw	r18,8(sp)
1000b700:	dfc00615 	stw	ra,24(sp)
1000b704:	dd400515 	stw	r21,20(sp)
1000b708:	dd000415 	stw	r20,16(sp)
1000b70c:	3825883a 	mov	r18,r7
1000b710:	3027883a 	mov	r19,r6
1000b714:	00032840 	call	10003284 <__divsi3>
1000b718:	00c00044 	movi	r3,1
1000b71c:	000b883a 	mov	r5,zero
1000b720:	1880030e 	bge	r3,r2,1000b730 <__s2b+0x54>
1000b724:	18c7883a 	add	r3,r3,r3
1000b728:	29400044 	addi	r5,r5,1
1000b72c:	18bffd16 	blt	r3,r2,1000b724 <__alt_data_end+0xf800b724>
1000b730:	8809883a 	mov	r4,r17
1000b734:	000b4c40 	call	1000b4c4 <_Balloc>
1000b738:	d8c00717 	ldw	r3,28(sp)
1000b73c:	10c00515 	stw	r3,20(r2)
1000b740:	00c00044 	movi	r3,1
1000b744:	10c00415 	stw	r3,16(r2)
1000b748:	00c00244 	movi	r3,9
1000b74c:	1cc0210e 	bge	r3,r19,1000b7d4 <__s2b+0xf8>
1000b750:	80eb883a 	add	r21,r16,r3
1000b754:	a829883a 	mov	r20,r21
1000b758:	84e1883a 	add	r16,r16,r19
1000b75c:	a1c00007 	ldb	r7,0(r20)
1000b760:	01800284 	movi	r6,10
1000b764:	a5000044 	addi	r20,r20,1
1000b768:	100b883a 	mov	r5,r2
1000b76c:	39fff404 	addi	r7,r7,-48
1000b770:	8809883a 	mov	r4,r17
1000b774:	000b5940 	call	1000b594 <__multadd>
1000b778:	a43ff81e 	bne	r20,r16,1000b75c <__alt_data_end+0xf800b75c>
1000b77c:	ace1883a 	add	r16,r21,r19
1000b780:	843ffe04 	addi	r16,r16,-8
1000b784:	9c800a0e 	bge	r19,r18,1000b7b0 <__s2b+0xd4>
1000b788:	94e5c83a 	sub	r18,r18,r19
1000b78c:	84a5883a 	add	r18,r16,r18
1000b790:	81c00007 	ldb	r7,0(r16)
1000b794:	01800284 	movi	r6,10
1000b798:	84000044 	addi	r16,r16,1
1000b79c:	100b883a 	mov	r5,r2
1000b7a0:	39fff404 	addi	r7,r7,-48
1000b7a4:	8809883a 	mov	r4,r17
1000b7a8:	000b5940 	call	1000b594 <__multadd>
1000b7ac:	84bff81e 	bne	r16,r18,1000b790 <__alt_data_end+0xf800b790>
1000b7b0:	dfc00617 	ldw	ra,24(sp)
1000b7b4:	dd400517 	ldw	r21,20(sp)
1000b7b8:	dd000417 	ldw	r20,16(sp)
1000b7bc:	dcc00317 	ldw	r19,12(sp)
1000b7c0:	dc800217 	ldw	r18,8(sp)
1000b7c4:	dc400117 	ldw	r17,4(sp)
1000b7c8:	dc000017 	ldw	r16,0(sp)
1000b7cc:	dec00704 	addi	sp,sp,28
1000b7d0:	f800283a 	ret
1000b7d4:	84000284 	addi	r16,r16,10
1000b7d8:	1827883a 	mov	r19,r3
1000b7dc:	003fe906 	br	1000b784 <__alt_data_end+0xf800b784>

1000b7e0 <__hi0bits>:
1000b7e0:	20bfffec 	andhi	r2,r4,65535
1000b7e4:	1000141e 	bne	r2,zero,1000b838 <__hi0bits+0x58>
1000b7e8:	2008943a 	slli	r4,r4,16
1000b7ec:	00800404 	movi	r2,16
1000b7f0:	20ffc02c 	andhi	r3,r4,65280
1000b7f4:	1800021e 	bne	r3,zero,1000b800 <__hi0bits+0x20>
1000b7f8:	2008923a 	slli	r4,r4,8
1000b7fc:	10800204 	addi	r2,r2,8
1000b800:	20fc002c 	andhi	r3,r4,61440
1000b804:	1800021e 	bne	r3,zero,1000b810 <__hi0bits+0x30>
1000b808:	2008913a 	slli	r4,r4,4
1000b80c:	10800104 	addi	r2,r2,4
1000b810:	20f0002c 	andhi	r3,r4,49152
1000b814:	1800031e 	bne	r3,zero,1000b824 <__hi0bits+0x44>
1000b818:	2109883a 	add	r4,r4,r4
1000b81c:	10800084 	addi	r2,r2,2
1000b820:	2109883a 	add	r4,r4,r4
1000b824:	20000316 	blt	r4,zero,1000b834 <__hi0bits+0x54>
1000b828:	2110002c 	andhi	r4,r4,16384
1000b82c:	2000041e 	bne	r4,zero,1000b840 <__hi0bits+0x60>
1000b830:	00800804 	movi	r2,32
1000b834:	f800283a 	ret
1000b838:	0005883a 	mov	r2,zero
1000b83c:	003fec06 	br	1000b7f0 <__alt_data_end+0xf800b7f0>
1000b840:	10800044 	addi	r2,r2,1
1000b844:	f800283a 	ret

1000b848 <__lo0bits>:
1000b848:	20c00017 	ldw	r3,0(r4)
1000b84c:	188001cc 	andi	r2,r3,7
1000b850:	10000826 	beq	r2,zero,1000b874 <__lo0bits+0x2c>
1000b854:	1880004c 	andi	r2,r3,1
1000b858:	1000211e 	bne	r2,zero,1000b8e0 <__lo0bits+0x98>
1000b85c:	1880008c 	andi	r2,r3,2
1000b860:	1000211e 	bne	r2,zero,1000b8e8 <__lo0bits+0xa0>
1000b864:	1806d0ba 	srli	r3,r3,2
1000b868:	00800084 	movi	r2,2
1000b86c:	20c00015 	stw	r3,0(r4)
1000b870:	f800283a 	ret
1000b874:	18bfffcc 	andi	r2,r3,65535
1000b878:	10001326 	beq	r2,zero,1000b8c8 <__lo0bits+0x80>
1000b87c:	0005883a 	mov	r2,zero
1000b880:	19403fcc 	andi	r5,r3,255
1000b884:	2800021e 	bne	r5,zero,1000b890 <__lo0bits+0x48>
1000b888:	1806d23a 	srli	r3,r3,8
1000b88c:	10800204 	addi	r2,r2,8
1000b890:	194003cc 	andi	r5,r3,15
1000b894:	2800021e 	bne	r5,zero,1000b8a0 <__lo0bits+0x58>
1000b898:	1806d13a 	srli	r3,r3,4
1000b89c:	10800104 	addi	r2,r2,4
1000b8a0:	194000cc 	andi	r5,r3,3
1000b8a4:	2800021e 	bne	r5,zero,1000b8b0 <__lo0bits+0x68>
1000b8a8:	1806d0ba 	srli	r3,r3,2
1000b8ac:	10800084 	addi	r2,r2,2
1000b8b0:	1940004c 	andi	r5,r3,1
1000b8b4:	2800081e 	bne	r5,zero,1000b8d8 <__lo0bits+0x90>
1000b8b8:	1806d07a 	srli	r3,r3,1
1000b8bc:	1800051e 	bne	r3,zero,1000b8d4 <__lo0bits+0x8c>
1000b8c0:	00800804 	movi	r2,32
1000b8c4:	f800283a 	ret
1000b8c8:	1806d43a 	srli	r3,r3,16
1000b8cc:	00800404 	movi	r2,16
1000b8d0:	003feb06 	br	1000b880 <__alt_data_end+0xf800b880>
1000b8d4:	10800044 	addi	r2,r2,1
1000b8d8:	20c00015 	stw	r3,0(r4)
1000b8dc:	f800283a 	ret
1000b8e0:	0005883a 	mov	r2,zero
1000b8e4:	f800283a 	ret
1000b8e8:	1806d07a 	srli	r3,r3,1
1000b8ec:	00800044 	movi	r2,1
1000b8f0:	20c00015 	stw	r3,0(r4)
1000b8f4:	f800283a 	ret

1000b8f8 <__i2b>:
1000b8f8:	defffd04 	addi	sp,sp,-12
1000b8fc:	dc000015 	stw	r16,0(sp)
1000b900:	04000044 	movi	r16,1
1000b904:	dc400115 	stw	r17,4(sp)
1000b908:	2823883a 	mov	r17,r5
1000b90c:	800b883a 	mov	r5,r16
1000b910:	dfc00215 	stw	ra,8(sp)
1000b914:	000b4c40 	call	1000b4c4 <_Balloc>
1000b918:	14400515 	stw	r17,20(r2)
1000b91c:	14000415 	stw	r16,16(r2)
1000b920:	dfc00217 	ldw	ra,8(sp)
1000b924:	dc400117 	ldw	r17,4(sp)
1000b928:	dc000017 	ldw	r16,0(sp)
1000b92c:	dec00304 	addi	sp,sp,12
1000b930:	f800283a 	ret

1000b934 <__multiply>:
1000b934:	deffef04 	addi	sp,sp,-68
1000b938:	dc400815 	stw	r17,32(sp)
1000b93c:	dc000715 	stw	r16,28(sp)
1000b940:	34400417 	ldw	r17,16(r6)
1000b944:	2c000417 	ldw	r16,16(r5)
1000b948:	dd800d15 	stw	r22,52(sp)
1000b94c:	dc800915 	stw	r18,36(sp)
1000b950:	dfc01015 	stw	ra,64(sp)
1000b954:	df000f15 	stw	fp,60(sp)
1000b958:	ddc00e15 	stw	r23,56(sp)
1000b95c:	dd400c15 	stw	r21,48(sp)
1000b960:	dd000b15 	stw	r20,44(sp)
1000b964:	dcc00a15 	stw	r19,40(sp)
1000b968:	2825883a 	mov	r18,r5
1000b96c:	302d883a 	mov	r22,r6
1000b970:	8440050e 	bge	r16,r17,1000b988 <__multiply+0x54>
1000b974:	8007883a 	mov	r3,r16
1000b978:	3025883a 	mov	r18,r6
1000b97c:	8821883a 	mov	r16,r17
1000b980:	282d883a 	mov	r22,r5
1000b984:	1823883a 	mov	r17,r3
1000b988:	90800217 	ldw	r2,8(r18)
1000b98c:	8447883a 	add	r3,r16,r17
1000b990:	d8c00215 	stw	r3,8(sp)
1000b994:	91400117 	ldw	r5,4(r18)
1000b998:	10c0010e 	bge	r2,r3,1000b9a0 <__multiply+0x6c>
1000b99c:	29400044 	addi	r5,r5,1
1000b9a0:	000b4c40 	call	1000b4c4 <_Balloc>
1000b9a4:	d8c00217 	ldw	r3,8(sp)
1000b9a8:	d8800615 	stw	r2,24(sp)
1000b9ac:	18eb883a 	add	r21,r3,r3
1000b9b0:	ad6b883a 	add	r21,r21,r21
1000b9b4:	10c00504 	addi	r3,r2,20
1000b9b8:	1d6b883a 	add	r21,r3,r21
1000b9bc:	d8c00115 	stw	r3,4(sp)
1000b9c0:	dd400315 	stw	r21,12(sp)
1000b9c4:	1805883a 	mov	r2,r3
1000b9c8:	1d40042e 	bgeu	r3,r21,1000b9dc <__multiply+0xa8>
1000b9cc:	d8c00317 	ldw	r3,12(sp)
1000b9d0:	10000015 	stw	zero,0(r2)
1000b9d4:	10800104 	addi	r2,r2,4
1000b9d8:	10fffc36 	bltu	r2,r3,1000b9cc <__alt_data_end+0xf800b9cc>
1000b9dc:	8c63883a 	add	r17,r17,r17
1000b9e0:	b5800504 	addi	r22,r22,20
1000b9e4:	8c63883a 	add	r17,r17,r17
1000b9e8:	94800504 	addi	r18,r18,20
1000b9ec:	8421883a 	add	r16,r16,r16
1000b9f0:	b463883a 	add	r17,r22,r17
1000b9f4:	8421883a 	add	r16,r16,r16
1000b9f8:	dd800015 	stw	r22,0(sp)
1000b9fc:	dc800415 	stw	r18,16(sp)
1000ba00:	dc400515 	stw	r17,20(sp)
1000ba04:	9429883a 	add	r20,r18,r16
1000ba08:	b4404f2e 	bgeu	r22,r17,1000bb48 <__multiply+0x214>
1000ba0c:	d8c00017 	ldw	r3,0(sp)
1000ba10:	1c800017 	ldw	r18,0(r3)
1000ba14:	947fffcc 	andi	r17,r18,65535
1000ba18:	88001e26 	beq	r17,zero,1000ba94 <__multiply+0x160>
1000ba1c:	dd800117 	ldw	r22,4(sp)
1000ba20:	dd400417 	ldw	r21,16(sp)
1000ba24:	0027883a 	mov	r19,zero
1000ba28:	ac800017 	ldw	r18,0(r21)
1000ba2c:	b4000017 	ldw	r16,0(r22)
1000ba30:	880b883a 	mov	r5,r17
1000ba34:	913fffcc 	andi	r4,r18,65535
1000ba38:	00034380 	call	10003438 <__mulsi3>
1000ba3c:	9008d43a 	srli	r4,r18,16
1000ba40:	84bfffcc 	andi	r18,r16,65535
1000ba44:	1485883a 	add	r2,r2,r18
1000ba48:	14e5883a 	add	r18,r2,r19
1000ba4c:	8020d43a 	srli	r16,r16,16
1000ba50:	9026d43a 	srli	r19,r18,16
1000ba54:	880b883a 	mov	r5,r17
1000ba58:	00034380 	call	10003438 <__mulsi3>
1000ba5c:	1405883a 	add	r2,r2,r16
1000ba60:	14e1883a 	add	r16,r2,r19
1000ba64:	90ffffcc 	andi	r3,r18,65535
1000ba68:	8024943a 	slli	r18,r16,16
1000ba6c:	ad400104 	addi	r21,r21,4
1000ba70:	b005883a 	mov	r2,r22
1000ba74:	90c6b03a 	or	r3,r18,r3
1000ba78:	b0c00015 	stw	r3,0(r22)
1000ba7c:	8026d43a 	srli	r19,r16,16
1000ba80:	b5800104 	addi	r22,r22,4
1000ba84:	ad3fe836 	bltu	r21,r20,1000ba28 <__alt_data_end+0xf800ba28>
1000ba88:	d8c00017 	ldw	r3,0(sp)
1000ba8c:	14c00115 	stw	r19,4(r2)
1000ba90:	1c800017 	ldw	r18,0(r3)
1000ba94:	9024d43a 	srli	r18,r18,16
1000ba98:	90002226 	beq	r18,zero,1000bb24 <__multiply+0x1f0>
1000ba9c:	d8c00117 	ldw	r3,4(sp)
1000baa0:	dd800417 	ldw	r22,16(sp)
1000baa4:	002f883a 	mov	r23,zero
1000baa8:	1f000017 	ldw	fp,0(r3)
1000baac:	1823883a 	mov	r17,r3
1000bab0:	182b883a 	mov	r21,r3
1000bab4:	e021883a 	mov	r16,fp
1000bab8:	00000106 	br	1000bac0 <__multiply+0x18c>
1000babc:	982b883a 	mov	r21,r19
1000bac0:	b100000b 	ldhu	r4,0(r22)
1000bac4:	8020d43a 	srli	r16,r16,16
1000bac8:	900b883a 	mov	r5,r18
1000bacc:	00034380 	call	10003438 <__mulsi3>
1000bad0:	1405883a 	add	r2,r2,r16
1000bad4:	15ef883a 	add	r23,r2,r23
1000bad8:	b804943a 	slli	r2,r23,16
1000badc:	e0ffffcc 	andi	r3,fp,65535
1000bae0:	8c400104 	addi	r17,r17,4
1000bae4:	10c6b03a 	or	r3,r2,r3
1000bae8:	88ffff15 	stw	r3,-4(r17)
1000baec:	b5800104 	addi	r22,r22,4
1000baf0:	b13fff17 	ldw	r4,-4(r22)
1000baf4:	acc00104 	addi	r19,r21,4
1000baf8:	900b883a 	mov	r5,r18
1000bafc:	2008d43a 	srli	r4,r4,16
1000bb00:	9c000017 	ldw	r16,0(r19)
1000bb04:	00034380 	call	10003438 <__mulsi3>
1000bb08:	b806d43a 	srli	r3,r23,16
1000bb0c:	813fffcc 	andi	r4,r16,65535
1000bb10:	1105883a 	add	r2,r2,r4
1000bb14:	10f9883a 	add	fp,r2,r3
1000bb18:	e02ed43a 	srli	r23,fp,16
1000bb1c:	b53fe736 	bltu	r22,r20,1000babc <__alt_data_end+0xf800babc>
1000bb20:	af000115 	stw	fp,4(r21)
1000bb24:	d8c00017 	ldw	r3,0(sp)
1000bb28:	d9000517 	ldw	r4,20(sp)
1000bb2c:	18c00104 	addi	r3,r3,4
1000bb30:	d8c00015 	stw	r3,0(sp)
1000bb34:	d8c00117 	ldw	r3,4(sp)
1000bb38:	18c00104 	addi	r3,r3,4
1000bb3c:	d8c00115 	stw	r3,4(sp)
1000bb40:	d8c00017 	ldw	r3,0(sp)
1000bb44:	193fb136 	bltu	r3,r4,1000ba0c <__alt_data_end+0xf800ba0c>
1000bb48:	d8c00217 	ldw	r3,8(sp)
1000bb4c:	00c00c0e 	bge	zero,r3,1000bb80 <__multiply+0x24c>
1000bb50:	d8c00317 	ldw	r3,12(sp)
1000bb54:	18bfff17 	ldw	r2,-4(r3)
1000bb58:	1d7fff04 	addi	r21,r3,-4
1000bb5c:	10000326 	beq	r2,zero,1000bb6c <__multiply+0x238>
1000bb60:	00000706 	br	1000bb80 <__multiply+0x24c>
1000bb64:	a8800017 	ldw	r2,0(r21)
1000bb68:	1000051e 	bne	r2,zero,1000bb80 <__multiply+0x24c>
1000bb6c:	d8c00217 	ldw	r3,8(sp)
1000bb70:	ad7fff04 	addi	r21,r21,-4
1000bb74:	18ffffc4 	addi	r3,r3,-1
1000bb78:	d8c00215 	stw	r3,8(sp)
1000bb7c:	183ff91e 	bne	r3,zero,1000bb64 <__alt_data_end+0xf800bb64>
1000bb80:	d8c00617 	ldw	r3,24(sp)
1000bb84:	d9000217 	ldw	r4,8(sp)
1000bb88:	1805883a 	mov	r2,r3
1000bb8c:	19000415 	stw	r4,16(r3)
1000bb90:	dfc01017 	ldw	ra,64(sp)
1000bb94:	df000f17 	ldw	fp,60(sp)
1000bb98:	ddc00e17 	ldw	r23,56(sp)
1000bb9c:	dd800d17 	ldw	r22,52(sp)
1000bba0:	dd400c17 	ldw	r21,48(sp)
1000bba4:	dd000b17 	ldw	r20,44(sp)
1000bba8:	dcc00a17 	ldw	r19,40(sp)
1000bbac:	dc800917 	ldw	r18,36(sp)
1000bbb0:	dc400817 	ldw	r17,32(sp)
1000bbb4:	dc000717 	ldw	r16,28(sp)
1000bbb8:	dec01104 	addi	sp,sp,68
1000bbbc:	f800283a 	ret

1000bbc0 <__pow5mult>:
1000bbc0:	defffa04 	addi	sp,sp,-24
1000bbc4:	dcc00315 	stw	r19,12(sp)
1000bbc8:	dc000015 	stw	r16,0(sp)
1000bbcc:	dfc00515 	stw	ra,20(sp)
1000bbd0:	dd000415 	stw	r20,16(sp)
1000bbd4:	dc800215 	stw	r18,8(sp)
1000bbd8:	dc400115 	stw	r17,4(sp)
1000bbdc:	308000cc 	andi	r2,r6,3
1000bbe0:	3021883a 	mov	r16,r6
1000bbe4:	2027883a 	mov	r19,r4
1000bbe8:	10002f1e 	bne	r2,zero,1000bca8 <__pow5mult+0xe8>
1000bbec:	2825883a 	mov	r18,r5
1000bbf0:	8021d0ba 	srai	r16,r16,2
1000bbf4:	80001a26 	beq	r16,zero,1000bc60 <__pow5mult+0xa0>
1000bbf8:	9c401217 	ldw	r17,72(r19)
1000bbfc:	8800061e 	bne	r17,zero,1000bc18 <__pow5mult+0x58>
1000bc00:	00003406 	br	1000bcd4 <__pow5mult+0x114>
1000bc04:	8021d07a 	srai	r16,r16,1
1000bc08:	80001526 	beq	r16,zero,1000bc60 <__pow5mult+0xa0>
1000bc0c:	88800017 	ldw	r2,0(r17)
1000bc10:	10001c26 	beq	r2,zero,1000bc84 <__pow5mult+0xc4>
1000bc14:	1023883a 	mov	r17,r2
1000bc18:	8080004c 	andi	r2,r16,1
1000bc1c:	103ff926 	beq	r2,zero,1000bc04 <__alt_data_end+0xf800bc04>
1000bc20:	880d883a 	mov	r6,r17
1000bc24:	900b883a 	mov	r5,r18
1000bc28:	9809883a 	mov	r4,r19
1000bc2c:	000b9340 	call	1000b934 <__multiply>
1000bc30:	90001b26 	beq	r18,zero,1000bca0 <__pow5mult+0xe0>
1000bc34:	91000117 	ldw	r4,4(r18)
1000bc38:	98c01317 	ldw	r3,76(r19)
1000bc3c:	8021d07a 	srai	r16,r16,1
1000bc40:	2109883a 	add	r4,r4,r4
1000bc44:	2109883a 	add	r4,r4,r4
1000bc48:	1907883a 	add	r3,r3,r4
1000bc4c:	19000017 	ldw	r4,0(r3)
1000bc50:	91000015 	stw	r4,0(r18)
1000bc54:	1c800015 	stw	r18,0(r3)
1000bc58:	1025883a 	mov	r18,r2
1000bc5c:	803feb1e 	bne	r16,zero,1000bc0c <__alt_data_end+0xf800bc0c>
1000bc60:	9005883a 	mov	r2,r18
1000bc64:	dfc00517 	ldw	ra,20(sp)
1000bc68:	dd000417 	ldw	r20,16(sp)
1000bc6c:	dcc00317 	ldw	r19,12(sp)
1000bc70:	dc800217 	ldw	r18,8(sp)
1000bc74:	dc400117 	ldw	r17,4(sp)
1000bc78:	dc000017 	ldw	r16,0(sp)
1000bc7c:	dec00604 	addi	sp,sp,24
1000bc80:	f800283a 	ret
1000bc84:	880d883a 	mov	r6,r17
1000bc88:	880b883a 	mov	r5,r17
1000bc8c:	9809883a 	mov	r4,r19
1000bc90:	000b9340 	call	1000b934 <__multiply>
1000bc94:	88800015 	stw	r2,0(r17)
1000bc98:	10000015 	stw	zero,0(r2)
1000bc9c:	003fdd06 	br	1000bc14 <__alt_data_end+0xf800bc14>
1000bca0:	1025883a 	mov	r18,r2
1000bca4:	003fd706 	br	1000bc04 <__alt_data_end+0xf800bc04>
1000bca8:	10bfffc4 	addi	r2,r2,-1
1000bcac:	1085883a 	add	r2,r2,r2
1000bcb0:	00c400b4 	movhi	r3,4098
1000bcb4:	18f26f04 	addi	r3,r3,-13892
1000bcb8:	1085883a 	add	r2,r2,r2
1000bcbc:	1885883a 	add	r2,r3,r2
1000bcc0:	11800017 	ldw	r6,0(r2)
1000bcc4:	000f883a 	mov	r7,zero
1000bcc8:	000b5940 	call	1000b594 <__multadd>
1000bccc:	1025883a 	mov	r18,r2
1000bcd0:	003fc706 	br	1000bbf0 <__alt_data_end+0xf800bbf0>
1000bcd4:	05000044 	movi	r20,1
1000bcd8:	a00b883a 	mov	r5,r20
1000bcdc:	9809883a 	mov	r4,r19
1000bce0:	000b4c40 	call	1000b4c4 <_Balloc>
1000bce4:	1023883a 	mov	r17,r2
1000bce8:	00809c44 	movi	r2,625
1000bcec:	88800515 	stw	r2,20(r17)
1000bcf0:	8d000415 	stw	r20,16(r17)
1000bcf4:	9c401215 	stw	r17,72(r19)
1000bcf8:	88000015 	stw	zero,0(r17)
1000bcfc:	003fc606 	br	1000bc18 <__alt_data_end+0xf800bc18>

1000bd00 <__lshift>:
1000bd00:	defff904 	addi	sp,sp,-28
1000bd04:	dd400515 	stw	r21,20(sp)
1000bd08:	dcc00315 	stw	r19,12(sp)
1000bd0c:	302bd17a 	srai	r21,r6,5
1000bd10:	2cc00417 	ldw	r19,16(r5)
1000bd14:	28800217 	ldw	r2,8(r5)
1000bd18:	dd000415 	stw	r20,16(sp)
1000bd1c:	ace7883a 	add	r19,r21,r19
1000bd20:	dc800215 	stw	r18,8(sp)
1000bd24:	dc400115 	stw	r17,4(sp)
1000bd28:	dc000015 	stw	r16,0(sp)
1000bd2c:	dfc00615 	stw	ra,24(sp)
1000bd30:	9c000044 	addi	r16,r19,1
1000bd34:	2823883a 	mov	r17,r5
1000bd38:	3029883a 	mov	r20,r6
1000bd3c:	2025883a 	mov	r18,r4
1000bd40:	29400117 	ldw	r5,4(r5)
1000bd44:	1400030e 	bge	r2,r16,1000bd54 <__lshift+0x54>
1000bd48:	1085883a 	add	r2,r2,r2
1000bd4c:	29400044 	addi	r5,r5,1
1000bd50:	143ffd16 	blt	r2,r16,1000bd48 <__alt_data_end+0xf800bd48>
1000bd54:	9009883a 	mov	r4,r18
1000bd58:	000b4c40 	call	1000b4c4 <_Balloc>
1000bd5c:	10c00504 	addi	r3,r2,20
1000bd60:	0540070e 	bge	zero,r21,1000bd80 <__lshift+0x80>
1000bd64:	ad6b883a 	add	r21,r21,r21
1000bd68:	ad6b883a 	add	r21,r21,r21
1000bd6c:	1809883a 	mov	r4,r3
1000bd70:	1d47883a 	add	r3,r3,r21
1000bd74:	20000015 	stw	zero,0(r4)
1000bd78:	21000104 	addi	r4,r4,4
1000bd7c:	193ffd1e 	bne	r3,r4,1000bd74 <__alt_data_end+0xf800bd74>
1000bd80:	8a000417 	ldw	r8,16(r17)
1000bd84:	89000504 	addi	r4,r17,20
1000bd88:	a18007cc 	andi	r6,r20,31
1000bd8c:	4211883a 	add	r8,r8,r8
1000bd90:	4211883a 	add	r8,r8,r8
1000bd94:	2211883a 	add	r8,r4,r8
1000bd98:	30002326 	beq	r6,zero,1000be28 <__lshift+0x128>
1000bd9c:	02400804 	movi	r9,32
1000bda0:	4993c83a 	sub	r9,r9,r6
1000bda4:	000b883a 	mov	r5,zero
1000bda8:	21c00017 	ldw	r7,0(r4)
1000bdac:	1815883a 	mov	r10,r3
1000bdb0:	18c00104 	addi	r3,r3,4
1000bdb4:	398e983a 	sll	r7,r7,r6
1000bdb8:	21000104 	addi	r4,r4,4
1000bdbc:	394ab03a 	or	r5,r7,r5
1000bdc0:	197fff15 	stw	r5,-4(r3)
1000bdc4:	217fff17 	ldw	r5,-4(r4)
1000bdc8:	2a4ad83a 	srl	r5,r5,r9
1000bdcc:	223ff636 	bltu	r4,r8,1000bda8 <__alt_data_end+0xf800bda8>
1000bdd0:	51400115 	stw	r5,4(r10)
1000bdd4:	28001a1e 	bne	r5,zero,1000be40 <__lshift+0x140>
1000bdd8:	843fffc4 	addi	r16,r16,-1
1000bddc:	14000415 	stw	r16,16(r2)
1000bde0:	88000826 	beq	r17,zero,1000be04 <__lshift+0x104>
1000bde4:	89000117 	ldw	r4,4(r17)
1000bde8:	90c01317 	ldw	r3,76(r18)
1000bdec:	2109883a 	add	r4,r4,r4
1000bdf0:	2109883a 	add	r4,r4,r4
1000bdf4:	1907883a 	add	r3,r3,r4
1000bdf8:	19000017 	ldw	r4,0(r3)
1000bdfc:	89000015 	stw	r4,0(r17)
1000be00:	1c400015 	stw	r17,0(r3)
1000be04:	dfc00617 	ldw	ra,24(sp)
1000be08:	dd400517 	ldw	r21,20(sp)
1000be0c:	dd000417 	ldw	r20,16(sp)
1000be10:	dcc00317 	ldw	r19,12(sp)
1000be14:	dc800217 	ldw	r18,8(sp)
1000be18:	dc400117 	ldw	r17,4(sp)
1000be1c:	dc000017 	ldw	r16,0(sp)
1000be20:	dec00704 	addi	sp,sp,28
1000be24:	f800283a 	ret
1000be28:	21400017 	ldw	r5,0(r4)
1000be2c:	18c00104 	addi	r3,r3,4
1000be30:	21000104 	addi	r4,r4,4
1000be34:	197fff15 	stw	r5,-4(r3)
1000be38:	223ffb36 	bltu	r4,r8,1000be28 <__alt_data_end+0xf800be28>
1000be3c:	003fe606 	br	1000bdd8 <__alt_data_end+0xf800bdd8>
1000be40:	9c000084 	addi	r16,r19,2
1000be44:	003fe406 	br	1000bdd8 <__alt_data_end+0xf800bdd8>

1000be48 <__mcmp>:
1000be48:	20800417 	ldw	r2,16(r4)
1000be4c:	28c00417 	ldw	r3,16(r5)
1000be50:	10c5c83a 	sub	r2,r2,r3
1000be54:	1000111e 	bne	r2,zero,1000be9c <__mcmp+0x54>
1000be58:	18c7883a 	add	r3,r3,r3
1000be5c:	18c7883a 	add	r3,r3,r3
1000be60:	21000504 	addi	r4,r4,20
1000be64:	29400504 	addi	r5,r5,20
1000be68:	20c5883a 	add	r2,r4,r3
1000be6c:	28cb883a 	add	r5,r5,r3
1000be70:	00000106 	br	1000be78 <__mcmp+0x30>
1000be74:	20800a2e 	bgeu	r4,r2,1000bea0 <__mcmp+0x58>
1000be78:	10bfff04 	addi	r2,r2,-4
1000be7c:	297fff04 	addi	r5,r5,-4
1000be80:	11800017 	ldw	r6,0(r2)
1000be84:	28c00017 	ldw	r3,0(r5)
1000be88:	30fffa26 	beq	r6,r3,1000be74 <__alt_data_end+0xf800be74>
1000be8c:	30c00236 	bltu	r6,r3,1000be98 <__mcmp+0x50>
1000be90:	00800044 	movi	r2,1
1000be94:	f800283a 	ret
1000be98:	00bfffc4 	movi	r2,-1
1000be9c:	f800283a 	ret
1000bea0:	0005883a 	mov	r2,zero
1000bea4:	f800283a 	ret

1000bea8 <__mdiff>:
1000bea8:	28c00417 	ldw	r3,16(r5)
1000beac:	30800417 	ldw	r2,16(r6)
1000beb0:	defffa04 	addi	sp,sp,-24
1000beb4:	dcc00315 	stw	r19,12(sp)
1000beb8:	dc800215 	stw	r18,8(sp)
1000bebc:	dfc00515 	stw	ra,20(sp)
1000bec0:	dd000415 	stw	r20,16(sp)
1000bec4:	dc400115 	stw	r17,4(sp)
1000bec8:	dc000015 	stw	r16,0(sp)
1000becc:	1887c83a 	sub	r3,r3,r2
1000bed0:	2825883a 	mov	r18,r5
1000bed4:	3027883a 	mov	r19,r6
1000bed8:	1800141e 	bne	r3,zero,1000bf2c <__mdiff+0x84>
1000bedc:	1085883a 	add	r2,r2,r2
1000bee0:	1085883a 	add	r2,r2,r2
1000bee4:	2a000504 	addi	r8,r5,20
1000bee8:	34000504 	addi	r16,r6,20
1000beec:	4087883a 	add	r3,r8,r2
1000bef0:	8085883a 	add	r2,r16,r2
1000bef4:	00000106 	br	1000befc <__mdiff+0x54>
1000bef8:	40c0592e 	bgeu	r8,r3,1000c060 <__mdiff+0x1b8>
1000befc:	18ffff04 	addi	r3,r3,-4
1000bf00:	10bfff04 	addi	r2,r2,-4
1000bf04:	19c00017 	ldw	r7,0(r3)
1000bf08:	11400017 	ldw	r5,0(r2)
1000bf0c:	397ffa26 	beq	r7,r5,1000bef8 <__alt_data_end+0xf800bef8>
1000bf10:	3940592e 	bgeu	r7,r5,1000c078 <__mdiff+0x1d0>
1000bf14:	9005883a 	mov	r2,r18
1000bf18:	4023883a 	mov	r17,r8
1000bf1c:	9825883a 	mov	r18,r19
1000bf20:	05000044 	movi	r20,1
1000bf24:	1027883a 	mov	r19,r2
1000bf28:	00000406 	br	1000bf3c <__mdiff+0x94>
1000bf2c:	18005616 	blt	r3,zero,1000c088 <__mdiff+0x1e0>
1000bf30:	34400504 	addi	r17,r6,20
1000bf34:	2c000504 	addi	r16,r5,20
1000bf38:	0029883a 	mov	r20,zero
1000bf3c:	91400117 	ldw	r5,4(r18)
1000bf40:	000b4c40 	call	1000b4c4 <_Balloc>
1000bf44:	92400417 	ldw	r9,16(r18)
1000bf48:	9b000417 	ldw	r12,16(r19)
1000bf4c:	12c00504 	addi	r11,r2,20
1000bf50:	4a51883a 	add	r8,r9,r9
1000bf54:	6319883a 	add	r12,r12,r12
1000bf58:	4211883a 	add	r8,r8,r8
1000bf5c:	6319883a 	add	r12,r12,r12
1000bf60:	15000315 	stw	r20,12(r2)
1000bf64:	8211883a 	add	r8,r16,r8
1000bf68:	8b19883a 	add	r12,r17,r12
1000bf6c:	0007883a 	mov	r3,zero
1000bf70:	81400017 	ldw	r5,0(r16)
1000bf74:	89c00017 	ldw	r7,0(r17)
1000bf78:	59800104 	addi	r6,r11,4
1000bf7c:	293fffcc 	andi	r4,r5,65535
1000bf80:	20c7883a 	add	r3,r4,r3
1000bf84:	393fffcc 	andi	r4,r7,65535
1000bf88:	1909c83a 	sub	r4,r3,r4
1000bf8c:	280ad43a 	srli	r5,r5,16
1000bf90:	380ed43a 	srli	r7,r7,16
1000bf94:	2007d43a 	srai	r3,r4,16
1000bf98:	213fffcc 	andi	r4,r4,65535
1000bf9c:	29cbc83a 	sub	r5,r5,r7
1000bfa0:	28c7883a 	add	r3,r5,r3
1000bfa4:	180a943a 	slli	r5,r3,16
1000bfa8:	8c400104 	addi	r17,r17,4
1000bfac:	84000104 	addi	r16,r16,4
1000bfb0:	2908b03a 	or	r4,r5,r4
1000bfb4:	59000015 	stw	r4,0(r11)
1000bfb8:	1807d43a 	srai	r3,r3,16
1000bfbc:	3015883a 	mov	r10,r6
1000bfc0:	3017883a 	mov	r11,r6
1000bfc4:	8b3fea36 	bltu	r17,r12,1000bf70 <__alt_data_end+0xf800bf70>
1000bfc8:	8200162e 	bgeu	r16,r8,1000c024 <__mdiff+0x17c>
1000bfcc:	8017883a 	mov	r11,r16
1000bfd0:	59400017 	ldw	r5,0(r11)
1000bfd4:	31800104 	addi	r6,r6,4
1000bfd8:	5ac00104 	addi	r11,r11,4
1000bfdc:	293fffcc 	andi	r4,r5,65535
1000bfe0:	20c7883a 	add	r3,r4,r3
1000bfe4:	280ed43a 	srli	r7,r5,16
1000bfe8:	180bd43a 	srai	r5,r3,16
1000bfec:	193fffcc 	andi	r4,r3,65535
1000bff0:	3947883a 	add	r3,r7,r5
1000bff4:	180a943a 	slli	r5,r3,16
1000bff8:	1807d43a 	srai	r3,r3,16
1000bffc:	2908b03a 	or	r4,r5,r4
1000c000:	313fff15 	stw	r4,-4(r6)
1000c004:	5a3ff236 	bltu	r11,r8,1000bfd0 <__alt_data_end+0xf800bfd0>
1000c008:	0406303a 	nor	r3,zero,r16
1000c00c:	1a07883a 	add	r3,r3,r8
1000c010:	1806d0ba 	srli	r3,r3,2
1000c014:	18c00044 	addi	r3,r3,1
1000c018:	18c7883a 	add	r3,r3,r3
1000c01c:	18c7883a 	add	r3,r3,r3
1000c020:	50d5883a 	add	r10,r10,r3
1000c024:	50ffff04 	addi	r3,r10,-4
1000c028:	2000041e 	bne	r4,zero,1000c03c <__mdiff+0x194>
1000c02c:	18ffff04 	addi	r3,r3,-4
1000c030:	19000017 	ldw	r4,0(r3)
1000c034:	4a7fffc4 	addi	r9,r9,-1
1000c038:	203ffc26 	beq	r4,zero,1000c02c <__alt_data_end+0xf800c02c>
1000c03c:	12400415 	stw	r9,16(r2)
1000c040:	dfc00517 	ldw	ra,20(sp)
1000c044:	dd000417 	ldw	r20,16(sp)
1000c048:	dcc00317 	ldw	r19,12(sp)
1000c04c:	dc800217 	ldw	r18,8(sp)
1000c050:	dc400117 	ldw	r17,4(sp)
1000c054:	dc000017 	ldw	r16,0(sp)
1000c058:	dec00604 	addi	sp,sp,24
1000c05c:	f800283a 	ret
1000c060:	000b883a 	mov	r5,zero
1000c064:	000b4c40 	call	1000b4c4 <_Balloc>
1000c068:	00c00044 	movi	r3,1
1000c06c:	10c00415 	stw	r3,16(r2)
1000c070:	10000515 	stw	zero,20(r2)
1000c074:	003ff206 	br	1000c040 <__alt_data_end+0xf800c040>
1000c078:	8023883a 	mov	r17,r16
1000c07c:	0029883a 	mov	r20,zero
1000c080:	4021883a 	mov	r16,r8
1000c084:	003fad06 	br	1000bf3c <__alt_data_end+0xf800bf3c>
1000c088:	9005883a 	mov	r2,r18
1000c08c:	94400504 	addi	r17,r18,20
1000c090:	9c000504 	addi	r16,r19,20
1000c094:	9825883a 	mov	r18,r19
1000c098:	05000044 	movi	r20,1
1000c09c:	1027883a 	mov	r19,r2
1000c0a0:	003fa606 	br	1000bf3c <__alt_data_end+0xf800bf3c>

1000c0a4 <__ulp>:
1000c0a4:	295ffc2c 	andhi	r5,r5,32752
1000c0a8:	00bf3034 	movhi	r2,64704
1000c0ac:	2887883a 	add	r3,r5,r2
1000c0b0:	00c0020e 	bge	zero,r3,1000c0bc <__ulp+0x18>
1000c0b4:	0005883a 	mov	r2,zero
1000c0b8:	f800283a 	ret
1000c0bc:	00c7c83a 	sub	r3,zero,r3
1000c0c0:	1807d53a 	srai	r3,r3,20
1000c0c4:	008004c4 	movi	r2,19
1000c0c8:	10c00b0e 	bge	r2,r3,1000c0f8 <__ulp+0x54>
1000c0cc:	18bffb04 	addi	r2,r3,-20
1000c0d0:	01000784 	movi	r4,30
1000c0d4:	0007883a 	mov	r3,zero
1000c0d8:	20800516 	blt	r4,r2,1000c0f0 <__ulp+0x4c>
1000c0dc:	010007c4 	movi	r4,31
1000c0e0:	2089c83a 	sub	r4,r4,r2
1000c0e4:	00800044 	movi	r2,1
1000c0e8:	1104983a 	sll	r2,r2,r4
1000c0ec:	f800283a 	ret
1000c0f0:	00800044 	movi	r2,1
1000c0f4:	f800283a 	ret
1000c0f8:	01400234 	movhi	r5,8
1000c0fc:	28c7d83a 	sra	r3,r5,r3
1000c100:	0005883a 	mov	r2,zero
1000c104:	f800283a 	ret

1000c108 <__b2d>:
1000c108:	defffa04 	addi	sp,sp,-24
1000c10c:	dc000015 	stw	r16,0(sp)
1000c110:	24000417 	ldw	r16,16(r4)
1000c114:	dc400115 	stw	r17,4(sp)
1000c118:	24400504 	addi	r17,r4,20
1000c11c:	8421883a 	add	r16,r16,r16
1000c120:	8421883a 	add	r16,r16,r16
1000c124:	8c21883a 	add	r16,r17,r16
1000c128:	dc800215 	stw	r18,8(sp)
1000c12c:	84bfff17 	ldw	r18,-4(r16)
1000c130:	dd000415 	stw	r20,16(sp)
1000c134:	dcc00315 	stw	r19,12(sp)
1000c138:	9009883a 	mov	r4,r18
1000c13c:	2829883a 	mov	r20,r5
1000c140:	dfc00515 	stw	ra,20(sp)
1000c144:	000b7e00 	call	1000b7e0 <__hi0bits>
1000c148:	00c00804 	movi	r3,32
1000c14c:	1889c83a 	sub	r4,r3,r2
1000c150:	a1000015 	stw	r4,0(r20)
1000c154:	01000284 	movi	r4,10
1000c158:	84ffff04 	addi	r19,r16,-4
1000c15c:	20801216 	blt	r4,r2,1000c1a8 <__b2d+0xa0>
1000c160:	018002c4 	movi	r6,11
1000c164:	308dc83a 	sub	r6,r6,r2
1000c168:	9186d83a 	srl	r3,r18,r6
1000c16c:	18cffc34 	orhi	r3,r3,16368
1000c170:	8cc0212e 	bgeu	r17,r19,1000c1f8 <__b2d+0xf0>
1000c174:	813ffe17 	ldw	r4,-8(r16)
1000c178:	218cd83a 	srl	r6,r4,r6
1000c17c:	10800544 	addi	r2,r2,21
1000c180:	9084983a 	sll	r2,r18,r2
1000c184:	1184b03a 	or	r2,r2,r6
1000c188:	dfc00517 	ldw	ra,20(sp)
1000c18c:	dd000417 	ldw	r20,16(sp)
1000c190:	dcc00317 	ldw	r19,12(sp)
1000c194:	dc800217 	ldw	r18,8(sp)
1000c198:	dc400117 	ldw	r17,4(sp)
1000c19c:	dc000017 	ldw	r16,0(sp)
1000c1a0:	dec00604 	addi	sp,sp,24
1000c1a4:	f800283a 	ret
1000c1a8:	8cc00f2e 	bgeu	r17,r19,1000c1e8 <__b2d+0xe0>
1000c1ac:	117ffd44 	addi	r5,r2,-11
1000c1b0:	80bffe17 	ldw	r2,-8(r16)
1000c1b4:	28000e26 	beq	r5,zero,1000c1f0 <__b2d+0xe8>
1000c1b8:	1949c83a 	sub	r4,r3,r5
1000c1bc:	9164983a 	sll	r18,r18,r5
1000c1c0:	1106d83a 	srl	r3,r2,r4
1000c1c4:	81bffe04 	addi	r6,r16,-8
1000c1c8:	948ffc34 	orhi	r18,r18,16368
1000c1cc:	90c6b03a 	or	r3,r18,r3
1000c1d0:	89800e2e 	bgeu	r17,r6,1000c20c <__b2d+0x104>
1000c1d4:	81bffd17 	ldw	r6,-12(r16)
1000c1d8:	1144983a 	sll	r2,r2,r5
1000c1dc:	310ad83a 	srl	r5,r6,r4
1000c1e0:	2884b03a 	or	r2,r5,r2
1000c1e4:	003fe806 	br	1000c188 <__alt_data_end+0xf800c188>
1000c1e8:	10bffd44 	addi	r2,r2,-11
1000c1ec:	1000041e 	bne	r2,zero,1000c200 <__b2d+0xf8>
1000c1f0:	90cffc34 	orhi	r3,r18,16368
1000c1f4:	003fe406 	br	1000c188 <__alt_data_end+0xf800c188>
1000c1f8:	000d883a 	mov	r6,zero
1000c1fc:	003fdf06 	br	1000c17c <__alt_data_end+0xf800c17c>
1000c200:	90a4983a 	sll	r18,r18,r2
1000c204:	0005883a 	mov	r2,zero
1000c208:	003ff906 	br	1000c1f0 <__alt_data_end+0xf800c1f0>
1000c20c:	1144983a 	sll	r2,r2,r5
1000c210:	003fdd06 	br	1000c188 <__alt_data_end+0xf800c188>

1000c214 <__d2b>:
1000c214:	defff804 	addi	sp,sp,-32
1000c218:	dc000215 	stw	r16,8(sp)
1000c21c:	3021883a 	mov	r16,r6
1000c220:	dc400315 	stw	r17,12(sp)
1000c224:	8022907a 	slli	r17,r16,1
1000c228:	dd000615 	stw	r20,24(sp)
1000c22c:	2829883a 	mov	r20,r5
1000c230:	01400044 	movi	r5,1
1000c234:	dcc00515 	stw	r19,20(sp)
1000c238:	dc800415 	stw	r18,16(sp)
1000c23c:	dfc00715 	stw	ra,28(sp)
1000c240:	3825883a 	mov	r18,r7
1000c244:	8822d57a 	srli	r17,r17,21
1000c248:	000b4c40 	call	1000b4c4 <_Balloc>
1000c24c:	1027883a 	mov	r19,r2
1000c250:	00800434 	movhi	r2,16
1000c254:	10bfffc4 	addi	r2,r2,-1
1000c258:	808c703a 	and	r6,r16,r2
1000c25c:	88000126 	beq	r17,zero,1000c264 <__d2b+0x50>
1000c260:	31800434 	orhi	r6,r6,16
1000c264:	d9800015 	stw	r6,0(sp)
1000c268:	a0002426 	beq	r20,zero,1000c2fc <__d2b+0xe8>
1000c26c:	d9000104 	addi	r4,sp,4
1000c270:	dd000115 	stw	r20,4(sp)
1000c274:	000b8480 	call	1000b848 <__lo0bits>
1000c278:	d8c00017 	ldw	r3,0(sp)
1000c27c:	10002f1e 	bne	r2,zero,1000c33c <__d2b+0x128>
1000c280:	d9000117 	ldw	r4,4(sp)
1000c284:	99000515 	stw	r4,20(r19)
1000c288:	1821003a 	cmpeq	r16,r3,zero
1000c28c:	01000084 	movi	r4,2
1000c290:	2421c83a 	sub	r16,r4,r16
1000c294:	98c00615 	stw	r3,24(r19)
1000c298:	9c000415 	stw	r16,16(r19)
1000c29c:	88001f1e 	bne	r17,zero,1000c31c <__d2b+0x108>
1000c2a0:	10bef384 	addi	r2,r2,-1074
1000c2a4:	90800015 	stw	r2,0(r18)
1000c2a8:	00900034 	movhi	r2,16384
1000c2ac:	10bfffc4 	addi	r2,r2,-1
1000c2b0:	8085883a 	add	r2,r16,r2
1000c2b4:	1085883a 	add	r2,r2,r2
1000c2b8:	1085883a 	add	r2,r2,r2
1000c2bc:	9885883a 	add	r2,r19,r2
1000c2c0:	11000517 	ldw	r4,20(r2)
1000c2c4:	8020917a 	slli	r16,r16,5
1000c2c8:	000b7e00 	call	1000b7e0 <__hi0bits>
1000c2cc:	d8c00817 	ldw	r3,32(sp)
1000c2d0:	8085c83a 	sub	r2,r16,r2
1000c2d4:	18800015 	stw	r2,0(r3)
1000c2d8:	9805883a 	mov	r2,r19
1000c2dc:	dfc00717 	ldw	ra,28(sp)
1000c2e0:	dd000617 	ldw	r20,24(sp)
1000c2e4:	dcc00517 	ldw	r19,20(sp)
1000c2e8:	dc800417 	ldw	r18,16(sp)
1000c2ec:	dc400317 	ldw	r17,12(sp)
1000c2f0:	dc000217 	ldw	r16,8(sp)
1000c2f4:	dec00804 	addi	sp,sp,32
1000c2f8:	f800283a 	ret
1000c2fc:	d809883a 	mov	r4,sp
1000c300:	000b8480 	call	1000b848 <__lo0bits>
1000c304:	d8c00017 	ldw	r3,0(sp)
1000c308:	04000044 	movi	r16,1
1000c30c:	9c000415 	stw	r16,16(r19)
1000c310:	98c00515 	stw	r3,20(r19)
1000c314:	10800804 	addi	r2,r2,32
1000c318:	883fe126 	beq	r17,zero,1000c2a0 <__alt_data_end+0xf800c2a0>
1000c31c:	00c00d44 	movi	r3,53
1000c320:	8c7ef344 	addi	r17,r17,-1075
1000c324:	88a3883a 	add	r17,r17,r2
1000c328:	1885c83a 	sub	r2,r3,r2
1000c32c:	d8c00817 	ldw	r3,32(sp)
1000c330:	94400015 	stw	r17,0(r18)
1000c334:	18800015 	stw	r2,0(r3)
1000c338:	003fe706 	br	1000c2d8 <__alt_data_end+0xf800c2d8>
1000c33c:	01000804 	movi	r4,32
1000c340:	2089c83a 	sub	r4,r4,r2
1000c344:	1908983a 	sll	r4,r3,r4
1000c348:	d9400117 	ldw	r5,4(sp)
1000c34c:	1886d83a 	srl	r3,r3,r2
1000c350:	2148b03a 	or	r4,r4,r5
1000c354:	99000515 	stw	r4,20(r19)
1000c358:	d8c00015 	stw	r3,0(sp)
1000c35c:	003fca06 	br	1000c288 <__alt_data_end+0xf800c288>

1000c360 <__ratio>:
1000c360:	defff904 	addi	sp,sp,-28
1000c364:	dc400315 	stw	r17,12(sp)
1000c368:	2823883a 	mov	r17,r5
1000c36c:	d9400104 	addi	r5,sp,4
1000c370:	dfc00615 	stw	ra,24(sp)
1000c374:	dcc00515 	stw	r19,20(sp)
1000c378:	dc800415 	stw	r18,16(sp)
1000c37c:	2027883a 	mov	r19,r4
1000c380:	dc000215 	stw	r16,8(sp)
1000c384:	000c1080 	call	1000c108 <__b2d>
1000c388:	d80b883a 	mov	r5,sp
1000c38c:	8809883a 	mov	r4,r17
1000c390:	1025883a 	mov	r18,r2
1000c394:	1821883a 	mov	r16,r3
1000c398:	000c1080 	call	1000c108 <__b2d>
1000c39c:	8a000417 	ldw	r8,16(r17)
1000c3a0:	99000417 	ldw	r4,16(r19)
1000c3a4:	d9400117 	ldw	r5,4(sp)
1000c3a8:	2209c83a 	sub	r4,r4,r8
1000c3ac:	2010917a 	slli	r8,r4,5
1000c3b0:	d9000017 	ldw	r4,0(sp)
1000c3b4:	2909c83a 	sub	r4,r5,r4
1000c3b8:	4109883a 	add	r4,r8,r4
1000c3bc:	01000e0e 	bge	zero,r4,1000c3f8 <__ratio+0x98>
1000c3c0:	2008953a 	slli	r4,r4,20
1000c3c4:	2421883a 	add	r16,r4,r16
1000c3c8:	100d883a 	mov	r6,r2
1000c3cc:	180f883a 	mov	r7,r3
1000c3d0:	9009883a 	mov	r4,r18
1000c3d4:	800b883a 	mov	r5,r16
1000c3d8:	00174400 	call	10017440 <__divdf3>
1000c3dc:	dfc00617 	ldw	ra,24(sp)
1000c3e0:	dcc00517 	ldw	r19,20(sp)
1000c3e4:	dc800417 	ldw	r18,16(sp)
1000c3e8:	dc400317 	ldw	r17,12(sp)
1000c3ec:	dc000217 	ldw	r16,8(sp)
1000c3f0:	dec00704 	addi	sp,sp,28
1000c3f4:	f800283a 	ret
1000c3f8:	2008953a 	slli	r4,r4,20
1000c3fc:	1907c83a 	sub	r3,r3,r4
1000c400:	003ff106 	br	1000c3c8 <__alt_data_end+0xf800c3c8>

1000c404 <_mprec_log10>:
1000c404:	defffe04 	addi	sp,sp,-8
1000c408:	dc000015 	stw	r16,0(sp)
1000c40c:	dfc00115 	stw	ra,4(sp)
1000c410:	008005c4 	movi	r2,23
1000c414:	2021883a 	mov	r16,r4
1000c418:	11000d0e 	bge	r2,r4,1000c450 <_mprec_log10+0x4c>
1000c41c:	0005883a 	mov	r2,zero
1000c420:	00cffc34 	movhi	r3,16368
1000c424:	843fffc4 	addi	r16,r16,-1
1000c428:	000d883a 	mov	r6,zero
1000c42c:	01d00934 	movhi	r7,16420
1000c430:	1009883a 	mov	r4,r2
1000c434:	180b883a 	mov	r5,r3
1000c438:	00180680 	call	10018068 <__muldf3>
1000c43c:	803ff91e 	bne	r16,zero,1000c424 <__alt_data_end+0xf800c424>
1000c440:	dfc00117 	ldw	ra,4(sp)
1000c444:	dc000017 	ldw	r16,0(sp)
1000c448:	dec00204 	addi	sp,sp,8
1000c44c:	f800283a 	ret
1000c450:	202090fa 	slli	r16,r4,3
1000c454:	008400b4 	movhi	r2,4098
1000c458:	10b28604 	addi	r2,r2,-13800
1000c45c:	1421883a 	add	r16,r2,r16
1000c460:	80800017 	ldw	r2,0(r16)
1000c464:	80c00117 	ldw	r3,4(r16)
1000c468:	dfc00117 	ldw	ra,4(sp)
1000c46c:	dc000017 	ldw	r16,0(sp)
1000c470:	dec00204 	addi	sp,sp,8
1000c474:	f800283a 	ret

1000c478 <__copybits>:
1000c478:	297fffc4 	addi	r5,r5,-1
1000c47c:	280fd17a 	srai	r7,r5,5
1000c480:	30c00417 	ldw	r3,16(r6)
1000c484:	30800504 	addi	r2,r6,20
1000c488:	39c00044 	addi	r7,r7,1
1000c48c:	18c7883a 	add	r3,r3,r3
1000c490:	39cf883a 	add	r7,r7,r7
1000c494:	18c7883a 	add	r3,r3,r3
1000c498:	39cf883a 	add	r7,r7,r7
1000c49c:	10c7883a 	add	r3,r2,r3
1000c4a0:	21cf883a 	add	r7,r4,r7
1000c4a4:	10c00d2e 	bgeu	r2,r3,1000c4dc <__copybits+0x64>
1000c4a8:	200b883a 	mov	r5,r4
1000c4ac:	12000017 	ldw	r8,0(r2)
1000c4b0:	29400104 	addi	r5,r5,4
1000c4b4:	10800104 	addi	r2,r2,4
1000c4b8:	2a3fff15 	stw	r8,-4(r5)
1000c4bc:	10fffb36 	bltu	r2,r3,1000c4ac <__alt_data_end+0xf800c4ac>
1000c4c0:	1985c83a 	sub	r2,r3,r6
1000c4c4:	10bffac4 	addi	r2,r2,-21
1000c4c8:	1004d0ba 	srli	r2,r2,2
1000c4cc:	10800044 	addi	r2,r2,1
1000c4d0:	1085883a 	add	r2,r2,r2
1000c4d4:	1085883a 	add	r2,r2,r2
1000c4d8:	2089883a 	add	r4,r4,r2
1000c4dc:	21c0032e 	bgeu	r4,r7,1000c4ec <__copybits+0x74>
1000c4e0:	20000015 	stw	zero,0(r4)
1000c4e4:	21000104 	addi	r4,r4,4
1000c4e8:	21fffd36 	bltu	r4,r7,1000c4e0 <__alt_data_end+0xf800c4e0>
1000c4ec:	f800283a 	ret

1000c4f0 <__any_on>:
1000c4f0:	20c00417 	ldw	r3,16(r4)
1000c4f4:	2805d17a 	srai	r2,r5,5
1000c4f8:	21000504 	addi	r4,r4,20
1000c4fc:	18800d0e 	bge	r3,r2,1000c534 <__any_on+0x44>
1000c500:	18c7883a 	add	r3,r3,r3
1000c504:	18c7883a 	add	r3,r3,r3
1000c508:	20c7883a 	add	r3,r4,r3
1000c50c:	20c0192e 	bgeu	r4,r3,1000c574 <__any_on+0x84>
1000c510:	18bfff17 	ldw	r2,-4(r3)
1000c514:	18ffff04 	addi	r3,r3,-4
1000c518:	1000041e 	bne	r2,zero,1000c52c <__any_on+0x3c>
1000c51c:	20c0142e 	bgeu	r4,r3,1000c570 <__any_on+0x80>
1000c520:	18ffff04 	addi	r3,r3,-4
1000c524:	19400017 	ldw	r5,0(r3)
1000c528:	283ffc26 	beq	r5,zero,1000c51c <__alt_data_end+0xf800c51c>
1000c52c:	00800044 	movi	r2,1
1000c530:	f800283a 	ret
1000c534:	10c00a0e 	bge	r2,r3,1000c560 <__any_on+0x70>
1000c538:	1085883a 	add	r2,r2,r2
1000c53c:	1085883a 	add	r2,r2,r2
1000c540:	294007cc 	andi	r5,r5,31
1000c544:	2087883a 	add	r3,r4,r2
1000c548:	283ff026 	beq	r5,zero,1000c50c <__alt_data_end+0xf800c50c>
1000c54c:	19800017 	ldw	r6,0(r3)
1000c550:	3144d83a 	srl	r2,r6,r5
1000c554:	114a983a 	sll	r5,r2,r5
1000c558:	317ff41e 	bne	r6,r5,1000c52c <__alt_data_end+0xf800c52c>
1000c55c:	003feb06 	br	1000c50c <__alt_data_end+0xf800c50c>
1000c560:	1085883a 	add	r2,r2,r2
1000c564:	1085883a 	add	r2,r2,r2
1000c568:	2087883a 	add	r3,r4,r2
1000c56c:	003fe706 	br	1000c50c <__alt_data_end+0xf800c50c>
1000c570:	f800283a 	ret
1000c574:	0005883a 	mov	r2,zero
1000c578:	f800283a 	ret

1000c57c <_putc_r>:
1000c57c:	defffc04 	addi	sp,sp,-16
1000c580:	dc000215 	stw	r16,8(sp)
1000c584:	dfc00315 	stw	ra,12(sp)
1000c588:	2021883a 	mov	r16,r4
1000c58c:	20000226 	beq	r4,zero,1000c598 <_putc_r+0x1c>
1000c590:	20800e17 	ldw	r2,56(r4)
1000c594:	10001b26 	beq	r2,zero,1000c604 <_putc_r+0x88>
1000c598:	30800217 	ldw	r2,8(r6)
1000c59c:	10bfffc4 	addi	r2,r2,-1
1000c5a0:	30800215 	stw	r2,8(r6)
1000c5a4:	10000a16 	blt	r2,zero,1000c5d0 <_putc_r+0x54>
1000c5a8:	30800017 	ldw	r2,0(r6)
1000c5ac:	11400005 	stb	r5,0(r2)
1000c5b0:	30800017 	ldw	r2,0(r6)
1000c5b4:	10c00044 	addi	r3,r2,1
1000c5b8:	30c00015 	stw	r3,0(r6)
1000c5bc:	10800003 	ldbu	r2,0(r2)
1000c5c0:	dfc00317 	ldw	ra,12(sp)
1000c5c4:	dc000217 	ldw	r16,8(sp)
1000c5c8:	dec00404 	addi	sp,sp,16
1000c5cc:	f800283a 	ret
1000c5d0:	30c00617 	ldw	r3,24(r6)
1000c5d4:	10c00616 	blt	r2,r3,1000c5f0 <_putc_r+0x74>
1000c5d8:	30800017 	ldw	r2,0(r6)
1000c5dc:	00c00284 	movi	r3,10
1000c5e0:	11400005 	stb	r5,0(r2)
1000c5e4:	30800017 	ldw	r2,0(r6)
1000c5e8:	11400003 	ldbu	r5,0(r2)
1000c5ec:	28fff11e 	bne	r5,r3,1000c5b4 <__alt_data_end+0xf800c5b4>
1000c5f0:	8009883a 	mov	r4,r16
1000c5f4:	dfc00317 	ldw	ra,12(sp)
1000c5f8:	dc000217 	ldw	r16,8(sp)
1000c5fc:	dec00404 	addi	sp,sp,16
1000c600:	00131201 	jmpi	10013120 <__swbuf_r>
1000c604:	d9400015 	stw	r5,0(sp)
1000c608:	d9800115 	stw	r6,4(sp)
1000c60c:	0009de40 	call	10009de4 <__sinit>
1000c610:	d9800117 	ldw	r6,4(sp)
1000c614:	d9400017 	ldw	r5,0(sp)
1000c618:	003fdf06 	br	1000c598 <__alt_data_end+0xf800c598>

1000c61c <putc>:
1000c61c:	008400b4 	movhi	r2,4098
1000c620:	defffc04 	addi	sp,sp,-16
1000c624:	10ba2504 	addi	r2,r2,-5996
1000c628:	dc000115 	stw	r16,4(sp)
1000c62c:	14000017 	ldw	r16,0(r2)
1000c630:	dc400215 	stw	r17,8(sp)
1000c634:	dfc00315 	stw	ra,12(sp)
1000c638:	2023883a 	mov	r17,r4
1000c63c:	80000226 	beq	r16,zero,1000c648 <putc+0x2c>
1000c640:	80800e17 	ldw	r2,56(r16)
1000c644:	10001a26 	beq	r2,zero,1000c6b0 <putc+0x94>
1000c648:	28800217 	ldw	r2,8(r5)
1000c64c:	10bfffc4 	addi	r2,r2,-1
1000c650:	28800215 	stw	r2,8(r5)
1000c654:	10000b16 	blt	r2,zero,1000c684 <putc+0x68>
1000c658:	28800017 	ldw	r2,0(r5)
1000c65c:	14400005 	stb	r17,0(r2)
1000c660:	28800017 	ldw	r2,0(r5)
1000c664:	10c00044 	addi	r3,r2,1
1000c668:	28c00015 	stw	r3,0(r5)
1000c66c:	10800003 	ldbu	r2,0(r2)
1000c670:	dfc00317 	ldw	ra,12(sp)
1000c674:	dc400217 	ldw	r17,8(sp)
1000c678:	dc000117 	ldw	r16,4(sp)
1000c67c:	dec00404 	addi	sp,sp,16
1000c680:	f800283a 	ret
1000c684:	28c00617 	ldw	r3,24(r5)
1000c688:	10c00e16 	blt	r2,r3,1000c6c4 <putc+0xa8>
1000c68c:	28800017 	ldw	r2,0(r5)
1000c690:	01000284 	movi	r4,10
1000c694:	14400005 	stb	r17,0(r2)
1000c698:	28800017 	ldw	r2,0(r5)
1000c69c:	10c00003 	ldbu	r3,0(r2)
1000c6a0:	193ff01e 	bne	r3,r4,1000c664 <__alt_data_end+0xf800c664>
1000c6a4:	280d883a 	mov	r6,r5
1000c6a8:	180b883a 	mov	r5,r3
1000c6ac:	00000706 	br	1000c6cc <putc+0xb0>
1000c6b0:	8009883a 	mov	r4,r16
1000c6b4:	d9400015 	stw	r5,0(sp)
1000c6b8:	0009de40 	call	10009de4 <__sinit>
1000c6bc:	d9400017 	ldw	r5,0(sp)
1000c6c0:	003fe106 	br	1000c648 <__alt_data_end+0xf800c648>
1000c6c4:	280d883a 	mov	r6,r5
1000c6c8:	880b883a 	mov	r5,r17
1000c6cc:	8009883a 	mov	r4,r16
1000c6d0:	dfc00317 	ldw	ra,12(sp)
1000c6d4:	dc400217 	ldw	r17,8(sp)
1000c6d8:	dc000117 	ldw	r16,4(sp)
1000c6dc:	dec00404 	addi	sp,sp,16
1000c6e0:	00131201 	jmpi	10013120 <__swbuf_r>

1000c6e4 <_realloc_r>:
1000c6e4:	defff604 	addi	sp,sp,-40
1000c6e8:	dc800215 	stw	r18,8(sp)
1000c6ec:	dfc00915 	stw	ra,36(sp)
1000c6f0:	df000815 	stw	fp,32(sp)
1000c6f4:	ddc00715 	stw	r23,28(sp)
1000c6f8:	dd800615 	stw	r22,24(sp)
1000c6fc:	dd400515 	stw	r21,20(sp)
1000c700:	dd000415 	stw	r20,16(sp)
1000c704:	dcc00315 	stw	r19,12(sp)
1000c708:	dc400115 	stw	r17,4(sp)
1000c70c:	dc000015 	stw	r16,0(sp)
1000c710:	3025883a 	mov	r18,r6
1000c714:	2800b726 	beq	r5,zero,1000c9f4 <_realloc_r+0x310>
1000c718:	282b883a 	mov	r21,r5
1000c71c:	2029883a 	mov	r20,r4
1000c720:	0019b7c0 	call	10019b7c <__malloc_lock>
1000c724:	a8bfff17 	ldw	r2,-4(r21)
1000c728:	043fff04 	movi	r16,-4
1000c72c:	90c002c4 	addi	r3,r18,11
1000c730:	01000584 	movi	r4,22
1000c734:	acfffe04 	addi	r19,r21,-8
1000c738:	1420703a 	and	r16,r2,r16
1000c73c:	20c0332e 	bgeu	r4,r3,1000c80c <_realloc_r+0x128>
1000c740:	047ffe04 	movi	r17,-8
1000c744:	1c62703a 	and	r17,r3,r17
1000c748:	8807883a 	mov	r3,r17
1000c74c:	88005816 	blt	r17,zero,1000c8b0 <_realloc_r+0x1cc>
1000c750:	8c805736 	bltu	r17,r18,1000c8b0 <_realloc_r+0x1cc>
1000c754:	80c0300e 	bge	r16,r3,1000c818 <_realloc_r+0x134>
1000c758:	070400b4 	movhi	fp,4098
1000c75c:	e7337504 	addi	fp,fp,-12844
1000c760:	e1c00217 	ldw	r7,8(fp)
1000c764:	9c09883a 	add	r4,r19,r16
1000c768:	22000117 	ldw	r8,4(r4)
1000c76c:	21c06326 	beq	r4,r7,1000c8fc <_realloc_r+0x218>
1000c770:	017fff84 	movi	r5,-2
1000c774:	414a703a 	and	r5,r8,r5
1000c778:	214b883a 	add	r5,r4,r5
1000c77c:	29800117 	ldw	r6,4(r5)
1000c780:	3180004c 	andi	r6,r6,1
1000c784:	30003f26 	beq	r6,zero,1000c884 <_realloc_r+0x1a0>
1000c788:	1080004c 	andi	r2,r2,1
1000c78c:	10008326 	beq	r2,zero,1000c99c <_realloc_r+0x2b8>
1000c790:	900b883a 	mov	r5,r18
1000c794:	a009883a 	mov	r4,r20
1000c798:	00034880 	call	10003488 <_malloc_r>
1000c79c:	1025883a 	mov	r18,r2
1000c7a0:	10011e26 	beq	r2,zero,1000cc1c <_realloc_r+0x538>
1000c7a4:	a93fff17 	ldw	r4,-4(r21)
1000c7a8:	10fffe04 	addi	r3,r2,-8
1000c7ac:	00bfff84 	movi	r2,-2
1000c7b0:	2084703a 	and	r2,r4,r2
1000c7b4:	9885883a 	add	r2,r19,r2
1000c7b8:	1880ee26 	beq	r3,r2,1000cb74 <_realloc_r+0x490>
1000c7bc:	81bfff04 	addi	r6,r16,-4
1000c7c0:	00800904 	movi	r2,36
1000c7c4:	1180b836 	bltu	r2,r6,1000caa8 <_realloc_r+0x3c4>
1000c7c8:	00c004c4 	movi	r3,19
1000c7cc:	19809636 	bltu	r3,r6,1000ca28 <_realloc_r+0x344>
1000c7d0:	9005883a 	mov	r2,r18
1000c7d4:	a807883a 	mov	r3,r21
1000c7d8:	19000017 	ldw	r4,0(r3)
1000c7dc:	11000015 	stw	r4,0(r2)
1000c7e0:	19000117 	ldw	r4,4(r3)
1000c7e4:	11000115 	stw	r4,4(r2)
1000c7e8:	18c00217 	ldw	r3,8(r3)
1000c7ec:	10c00215 	stw	r3,8(r2)
1000c7f0:	a80b883a 	mov	r5,r21
1000c7f4:	a009883a 	mov	r4,r20
1000c7f8:	000a1c80 	call	1000a1c8 <_free_r>
1000c7fc:	a009883a 	mov	r4,r20
1000c800:	0019ba00 	call	10019ba0 <__malloc_unlock>
1000c804:	9005883a 	mov	r2,r18
1000c808:	00001206 	br	1000c854 <_realloc_r+0x170>
1000c80c:	00c00404 	movi	r3,16
1000c810:	1823883a 	mov	r17,r3
1000c814:	003fce06 	br	1000c750 <__alt_data_end+0xf800c750>
1000c818:	a825883a 	mov	r18,r21
1000c81c:	8445c83a 	sub	r2,r16,r17
1000c820:	00c003c4 	movi	r3,15
1000c824:	18802636 	bltu	r3,r2,1000c8c0 <_realloc_r+0x1dc>
1000c828:	99800117 	ldw	r6,4(r19)
1000c82c:	9c07883a 	add	r3,r19,r16
1000c830:	3180004c 	andi	r6,r6,1
1000c834:	3420b03a 	or	r16,r6,r16
1000c838:	9c000115 	stw	r16,4(r19)
1000c83c:	18800117 	ldw	r2,4(r3)
1000c840:	10800054 	ori	r2,r2,1
1000c844:	18800115 	stw	r2,4(r3)
1000c848:	a009883a 	mov	r4,r20
1000c84c:	0019ba00 	call	10019ba0 <__malloc_unlock>
1000c850:	9005883a 	mov	r2,r18
1000c854:	dfc00917 	ldw	ra,36(sp)
1000c858:	df000817 	ldw	fp,32(sp)
1000c85c:	ddc00717 	ldw	r23,28(sp)
1000c860:	dd800617 	ldw	r22,24(sp)
1000c864:	dd400517 	ldw	r21,20(sp)
1000c868:	dd000417 	ldw	r20,16(sp)
1000c86c:	dcc00317 	ldw	r19,12(sp)
1000c870:	dc800217 	ldw	r18,8(sp)
1000c874:	dc400117 	ldw	r17,4(sp)
1000c878:	dc000017 	ldw	r16,0(sp)
1000c87c:	dec00a04 	addi	sp,sp,40
1000c880:	f800283a 	ret
1000c884:	017fff04 	movi	r5,-4
1000c888:	414a703a 	and	r5,r8,r5
1000c88c:	814d883a 	add	r6,r16,r5
1000c890:	30c01f16 	blt	r6,r3,1000c910 <_realloc_r+0x22c>
1000c894:	20800317 	ldw	r2,12(r4)
1000c898:	20c00217 	ldw	r3,8(r4)
1000c89c:	a825883a 	mov	r18,r21
1000c8a0:	3021883a 	mov	r16,r6
1000c8a4:	18800315 	stw	r2,12(r3)
1000c8a8:	10c00215 	stw	r3,8(r2)
1000c8ac:	003fdb06 	br	1000c81c <__alt_data_end+0xf800c81c>
1000c8b0:	00800304 	movi	r2,12
1000c8b4:	a0800015 	stw	r2,0(r20)
1000c8b8:	0005883a 	mov	r2,zero
1000c8bc:	003fe506 	br	1000c854 <__alt_data_end+0xf800c854>
1000c8c0:	98c00117 	ldw	r3,4(r19)
1000c8c4:	9c4b883a 	add	r5,r19,r17
1000c8c8:	11000054 	ori	r4,r2,1
1000c8cc:	18c0004c 	andi	r3,r3,1
1000c8d0:	1c62b03a 	or	r17,r3,r17
1000c8d4:	9c400115 	stw	r17,4(r19)
1000c8d8:	29000115 	stw	r4,4(r5)
1000c8dc:	2885883a 	add	r2,r5,r2
1000c8e0:	10c00117 	ldw	r3,4(r2)
1000c8e4:	29400204 	addi	r5,r5,8
1000c8e8:	a009883a 	mov	r4,r20
1000c8ec:	18c00054 	ori	r3,r3,1
1000c8f0:	10c00115 	stw	r3,4(r2)
1000c8f4:	000a1c80 	call	1000a1c8 <_free_r>
1000c8f8:	003fd306 	br	1000c848 <__alt_data_end+0xf800c848>
1000c8fc:	017fff04 	movi	r5,-4
1000c900:	414a703a 	and	r5,r8,r5
1000c904:	89800404 	addi	r6,r17,16
1000c908:	8151883a 	add	r8,r16,r5
1000c90c:	4180590e 	bge	r8,r6,1000ca74 <_realloc_r+0x390>
1000c910:	1080004c 	andi	r2,r2,1
1000c914:	103f9e1e 	bne	r2,zero,1000c790 <__alt_data_end+0xf800c790>
1000c918:	adbffe17 	ldw	r22,-8(r21)
1000c91c:	00bfff04 	movi	r2,-4
1000c920:	9dadc83a 	sub	r22,r19,r22
1000c924:	b1800117 	ldw	r6,4(r22)
1000c928:	3084703a 	and	r2,r6,r2
1000c92c:	20002026 	beq	r4,zero,1000c9b0 <_realloc_r+0x2cc>
1000c930:	80af883a 	add	r23,r16,r2
1000c934:	b96f883a 	add	r23,r23,r5
1000c938:	21c05f26 	beq	r4,r7,1000cab8 <_realloc_r+0x3d4>
1000c93c:	b8c01c16 	blt	r23,r3,1000c9b0 <_realloc_r+0x2cc>
1000c940:	20800317 	ldw	r2,12(r4)
1000c944:	20c00217 	ldw	r3,8(r4)
1000c948:	81bfff04 	addi	r6,r16,-4
1000c94c:	01000904 	movi	r4,36
1000c950:	18800315 	stw	r2,12(r3)
1000c954:	10c00215 	stw	r3,8(r2)
1000c958:	b0c00217 	ldw	r3,8(r22)
1000c95c:	b0800317 	ldw	r2,12(r22)
1000c960:	b4800204 	addi	r18,r22,8
1000c964:	18800315 	stw	r2,12(r3)
1000c968:	10c00215 	stw	r3,8(r2)
1000c96c:	21801b36 	bltu	r4,r6,1000c9dc <_realloc_r+0x2f8>
1000c970:	008004c4 	movi	r2,19
1000c974:	1180352e 	bgeu	r2,r6,1000ca4c <_realloc_r+0x368>
1000c978:	a8800017 	ldw	r2,0(r21)
1000c97c:	b0800215 	stw	r2,8(r22)
1000c980:	a8800117 	ldw	r2,4(r21)
1000c984:	b0800315 	stw	r2,12(r22)
1000c988:	008006c4 	movi	r2,27
1000c98c:	11807f36 	bltu	r2,r6,1000cb8c <_realloc_r+0x4a8>
1000c990:	b0800404 	addi	r2,r22,16
1000c994:	ad400204 	addi	r21,r21,8
1000c998:	00002d06 	br	1000ca50 <_realloc_r+0x36c>
1000c99c:	adbffe17 	ldw	r22,-8(r21)
1000c9a0:	00bfff04 	movi	r2,-4
1000c9a4:	9dadc83a 	sub	r22,r19,r22
1000c9a8:	b1000117 	ldw	r4,4(r22)
1000c9ac:	2084703a 	and	r2,r4,r2
1000c9b0:	b03f7726 	beq	r22,zero,1000c790 <__alt_data_end+0xf800c790>
1000c9b4:	80af883a 	add	r23,r16,r2
1000c9b8:	b8ff7516 	blt	r23,r3,1000c790 <__alt_data_end+0xf800c790>
1000c9bc:	b0800317 	ldw	r2,12(r22)
1000c9c0:	b0c00217 	ldw	r3,8(r22)
1000c9c4:	81bfff04 	addi	r6,r16,-4
1000c9c8:	01000904 	movi	r4,36
1000c9cc:	18800315 	stw	r2,12(r3)
1000c9d0:	10c00215 	stw	r3,8(r2)
1000c9d4:	b4800204 	addi	r18,r22,8
1000c9d8:	21bfe52e 	bgeu	r4,r6,1000c970 <__alt_data_end+0xf800c970>
1000c9dc:	a80b883a 	mov	r5,r21
1000c9e0:	9009883a 	mov	r4,r18
1000c9e4:	000b2400 	call	1000b240 <memmove>
1000c9e8:	b821883a 	mov	r16,r23
1000c9ec:	b027883a 	mov	r19,r22
1000c9f0:	003f8a06 	br	1000c81c <__alt_data_end+0xf800c81c>
1000c9f4:	300b883a 	mov	r5,r6
1000c9f8:	dfc00917 	ldw	ra,36(sp)
1000c9fc:	df000817 	ldw	fp,32(sp)
1000ca00:	ddc00717 	ldw	r23,28(sp)
1000ca04:	dd800617 	ldw	r22,24(sp)
1000ca08:	dd400517 	ldw	r21,20(sp)
1000ca0c:	dd000417 	ldw	r20,16(sp)
1000ca10:	dcc00317 	ldw	r19,12(sp)
1000ca14:	dc800217 	ldw	r18,8(sp)
1000ca18:	dc400117 	ldw	r17,4(sp)
1000ca1c:	dc000017 	ldw	r16,0(sp)
1000ca20:	dec00a04 	addi	sp,sp,40
1000ca24:	00034881 	jmpi	10003488 <_malloc_r>
1000ca28:	a8c00017 	ldw	r3,0(r21)
1000ca2c:	90c00015 	stw	r3,0(r18)
1000ca30:	a8c00117 	ldw	r3,4(r21)
1000ca34:	90c00115 	stw	r3,4(r18)
1000ca38:	00c006c4 	movi	r3,27
1000ca3c:	19804536 	bltu	r3,r6,1000cb54 <_realloc_r+0x470>
1000ca40:	90800204 	addi	r2,r18,8
1000ca44:	a8c00204 	addi	r3,r21,8
1000ca48:	003f6306 	br	1000c7d8 <__alt_data_end+0xf800c7d8>
1000ca4c:	9005883a 	mov	r2,r18
1000ca50:	a8c00017 	ldw	r3,0(r21)
1000ca54:	b821883a 	mov	r16,r23
1000ca58:	b027883a 	mov	r19,r22
1000ca5c:	10c00015 	stw	r3,0(r2)
1000ca60:	a8c00117 	ldw	r3,4(r21)
1000ca64:	10c00115 	stw	r3,4(r2)
1000ca68:	a8c00217 	ldw	r3,8(r21)
1000ca6c:	10c00215 	stw	r3,8(r2)
1000ca70:	003f6a06 	br	1000c81c <__alt_data_end+0xf800c81c>
1000ca74:	9c67883a 	add	r19,r19,r17
1000ca78:	4445c83a 	sub	r2,r8,r17
1000ca7c:	e4c00215 	stw	r19,8(fp)
1000ca80:	10800054 	ori	r2,r2,1
1000ca84:	98800115 	stw	r2,4(r19)
1000ca88:	a8bfff17 	ldw	r2,-4(r21)
1000ca8c:	a009883a 	mov	r4,r20
1000ca90:	1080004c 	andi	r2,r2,1
1000ca94:	1462b03a 	or	r17,r2,r17
1000ca98:	ac7fff15 	stw	r17,-4(r21)
1000ca9c:	0019ba00 	call	10019ba0 <__malloc_unlock>
1000caa0:	a805883a 	mov	r2,r21
1000caa4:	003f6b06 	br	1000c854 <__alt_data_end+0xf800c854>
1000caa8:	a80b883a 	mov	r5,r21
1000caac:	9009883a 	mov	r4,r18
1000cab0:	000b2400 	call	1000b240 <memmove>
1000cab4:	003f4e06 	br	1000c7f0 <__alt_data_end+0xf800c7f0>
1000cab8:	89000404 	addi	r4,r17,16
1000cabc:	b93fbc16 	blt	r23,r4,1000c9b0 <__alt_data_end+0xf800c9b0>
1000cac0:	b0800317 	ldw	r2,12(r22)
1000cac4:	b0c00217 	ldw	r3,8(r22)
1000cac8:	81bfff04 	addi	r6,r16,-4
1000cacc:	01000904 	movi	r4,36
1000cad0:	18800315 	stw	r2,12(r3)
1000cad4:	10c00215 	stw	r3,8(r2)
1000cad8:	b4800204 	addi	r18,r22,8
1000cadc:	21804336 	bltu	r4,r6,1000cbec <_realloc_r+0x508>
1000cae0:	008004c4 	movi	r2,19
1000cae4:	11803f2e 	bgeu	r2,r6,1000cbe4 <_realloc_r+0x500>
1000cae8:	a8800017 	ldw	r2,0(r21)
1000caec:	b0800215 	stw	r2,8(r22)
1000caf0:	a8800117 	ldw	r2,4(r21)
1000caf4:	b0800315 	stw	r2,12(r22)
1000caf8:	008006c4 	movi	r2,27
1000cafc:	11803f36 	bltu	r2,r6,1000cbfc <_realloc_r+0x518>
1000cb00:	b0800404 	addi	r2,r22,16
1000cb04:	ad400204 	addi	r21,r21,8
1000cb08:	a8c00017 	ldw	r3,0(r21)
1000cb0c:	10c00015 	stw	r3,0(r2)
1000cb10:	a8c00117 	ldw	r3,4(r21)
1000cb14:	10c00115 	stw	r3,4(r2)
1000cb18:	a8c00217 	ldw	r3,8(r21)
1000cb1c:	10c00215 	stw	r3,8(r2)
1000cb20:	b447883a 	add	r3,r22,r17
1000cb24:	bc45c83a 	sub	r2,r23,r17
1000cb28:	e0c00215 	stw	r3,8(fp)
1000cb2c:	10800054 	ori	r2,r2,1
1000cb30:	18800115 	stw	r2,4(r3)
1000cb34:	b0800117 	ldw	r2,4(r22)
1000cb38:	a009883a 	mov	r4,r20
1000cb3c:	1080004c 	andi	r2,r2,1
1000cb40:	1462b03a 	or	r17,r2,r17
1000cb44:	b4400115 	stw	r17,4(r22)
1000cb48:	0019ba00 	call	10019ba0 <__malloc_unlock>
1000cb4c:	9005883a 	mov	r2,r18
1000cb50:	003f4006 	br	1000c854 <__alt_data_end+0xf800c854>
1000cb54:	a8c00217 	ldw	r3,8(r21)
1000cb58:	90c00215 	stw	r3,8(r18)
1000cb5c:	a8c00317 	ldw	r3,12(r21)
1000cb60:	90c00315 	stw	r3,12(r18)
1000cb64:	30801126 	beq	r6,r2,1000cbac <_realloc_r+0x4c8>
1000cb68:	90800404 	addi	r2,r18,16
1000cb6c:	a8c00404 	addi	r3,r21,16
1000cb70:	003f1906 	br	1000c7d8 <__alt_data_end+0xf800c7d8>
1000cb74:	90ffff17 	ldw	r3,-4(r18)
1000cb78:	00bfff04 	movi	r2,-4
1000cb7c:	a825883a 	mov	r18,r21
1000cb80:	1884703a 	and	r2,r3,r2
1000cb84:	80a1883a 	add	r16,r16,r2
1000cb88:	003f2406 	br	1000c81c <__alt_data_end+0xf800c81c>
1000cb8c:	a8800217 	ldw	r2,8(r21)
1000cb90:	b0800415 	stw	r2,16(r22)
1000cb94:	a8800317 	ldw	r2,12(r21)
1000cb98:	b0800515 	stw	r2,20(r22)
1000cb9c:	31000a26 	beq	r6,r4,1000cbc8 <_realloc_r+0x4e4>
1000cba0:	b0800604 	addi	r2,r22,24
1000cba4:	ad400404 	addi	r21,r21,16
1000cba8:	003fa906 	br	1000ca50 <__alt_data_end+0xf800ca50>
1000cbac:	a9000417 	ldw	r4,16(r21)
1000cbb0:	90800604 	addi	r2,r18,24
1000cbb4:	a8c00604 	addi	r3,r21,24
1000cbb8:	91000415 	stw	r4,16(r18)
1000cbbc:	a9000517 	ldw	r4,20(r21)
1000cbc0:	91000515 	stw	r4,20(r18)
1000cbc4:	003f0406 	br	1000c7d8 <__alt_data_end+0xf800c7d8>
1000cbc8:	a8c00417 	ldw	r3,16(r21)
1000cbcc:	ad400604 	addi	r21,r21,24
1000cbd0:	b0800804 	addi	r2,r22,32
1000cbd4:	b0c00615 	stw	r3,24(r22)
1000cbd8:	a8ffff17 	ldw	r3,-4(r21)
1000cbdc:	b0c00715 	stw	r3,28(r22)
1000cbe0:	003f9b06 	br	1000ca50 <__alt_data_end+0xf800ca50>
1000cbe4:	9005883a 	mov	r2,r18
1000cbe8:	003fc706 	br	1000cb08 <__alt_data_end+0xf800cb08>
1000cbec:	a80b883a 	mov	r5,r21
1000cbf0:	9009883a 	mov	r4,r18
1000cbf4:	000b2400 	call	1000b240 <memmove>
1000cbf8:	003fc906 	br	1000cb20 <__alt_data_end+0xf800cb20>
1000cbfc:	a8800217 	ldw	r2,8(r21)
1000cc00:	b0800415 	stw	r2,16(r22)
1000cc04:	a8800317 	ldw	r2,12(r21)
1000cc08:	b0800515 	stw	r2,20(r22)
1000cc0c:	31000726 	beq	r6,r4,1000cc2c <_realloc_r+0x548>
1000cc10:	b0800604 	addi	r2,r22,24
1000cc14:	ad400404 	addi	r21,r21,16
1000cc18:	003fbb06 	br	1000cb08 <__alt_data_end+0xf800cb08>
1000cc1c:	a009883a 	mov	r4,r20
1000cc20:	0019ba00 	call	10019ba0 <__malloc_unlock>
1000cc24:	0005883a 	mov	r2,zero
1000cc28:	003f0a06 	br	1000c854 <__alt_data_end+0xf800c854>
1000cc2c:	a8c00417 	ldw	r3,16(r21)
1000cc30:	ad400604 	addi	r21,r21,24
1000cc34:	b0800804 	addi	r2,r22,32
1000cc38:	b0c00615 	stw	r3,24(r22)
1000cc3c:	a8ffff17 	ldw	r3,-4(r21)
1000cc40:	b0c00715 	stw	r3,28(r22)
1000cc44:	003fb006 	br	1000cb08 <__alt_data_end+0xf800cb08>

1000cc48 <lflush>:
1000cc48:	2080030b 	ldhu	r2,12(r4)
1000cc4c:	00c00244 	movi	r3,9
1000cc50:	1080024c 	andi	r2,r2,9
1000cc54:	10c00226 	beq	r2,r3,1000cc60 <lflush+0x18>
1000cc58:	0005883a 	mov	r2,zero
1000cc5c:	f800283a 	ret
1000cc60:	0009a541 	jmpi	10009a54 <fflush>

1000cc64 <__srefill_r>:
1000cc64:	defffc04 	addi	sp,sp,-16
1000cc68:	dc400115 	stw	r17,4(sp)
1000cc6c:	dc000015 	stw	r16,0(sp)
1000cc70:	dfc00315 	stw	ra,12(sp)
1000cc74:	dc800215 	stw	r18,8(sp)
1000cc78:	2023883a 	mov	r17,r4
1000cc7c:	2821883a 	mov	r16,r5
1000cc80:	20000226 	beq	r4,zero,1000cc8c <__srefill_r+0x28>
1000cc84:	20800e17 	ldw	r2,56(r4)
1000cc88:	10003c26 	beq	r2,zero,1000cd7c <__srefill_r+0x118>
1000cc8c:	80c0030b 	ldhu	r3,12(r16)
1000cc90:	1908000c 	andi	r4,r3,8192
1000cc94:	1805883a 	mov	r2,r3
1000cc98:	2000071e 	bne	r4,zero,1000ccb8 <__srefill_r+0x54>
1000cc9c:	81001917 	ldw	r4,100(r16)
1000cca0:	18880014 	ori	r2,r3,8192
1000cca4:	00f7ffc4 	movi	r3,-8193
1000cca8:	20c8703a 	and	r4,r4,r3
1000ccac:	8080030d 	sth	r2,12(r16)
1000ccb0:	1007883a 	mov	r3,r2
1000ccb4:	81001915 	stw	r4,100(r16)
1000ccb8:	80000115 	stw	zero,4(r16)
1000ccbc:	1100080c 	andi	r4,r2,32
1000ccc0:	2000571e 	bne	r4,zero,1000ce20 <__srefill_r+0x1bc>
1000ccc4:	1100010c 	andi	r4,r2,4
1000ccc8:	20001f26 	beq	r4,zero,1000cd48 <__srefill_r+0xe4>
1000cccc:	81400c17 	ldw	r5,48(r16)
1000ccd0:	28000826 	beq	r5,zero,1000ccf4 <__srefill_r+0x90>
1000ccd4:	80801004 	addi	r2,r16,64
1000ccd8:	28800226 	beq	r5,r2,1000cce4 <__srefill_r+0x80>
1000ccdc:	8809883a 	mov	r4,r17
1000cce0:	000a1c80 	call	1000a1c8 <_free_r>
1000cce4:	80800f17 	ldw	r2,60(r16)
1000cce8:	80000c15 	stw	zero,48(r16)
1000ccec:	80800115 	stw	r2,4(r16)
1000ccf0:	1000391e 	bne	r2,zero,1000cdd8 <__srefill_r+0x174>
1000ccf4:	80800417 	ldw	r2,16(r16)
1000ccf8:	10004b26 	beq	r2,zero,1000ce28 <__srefill_r+0x1c4>
1000ccfc:	8480030b 	ldhu	r18,12(r16)
1000cd00:	908000cc 	andi	r2,r18,3
1000cd04:	10001f1e 	bne	r2,zero,1000cd84 <__srefill_r+0x120>
1000cd08:	81800417 	ldw	r6,16(r16)
1000cd0c:	80800817 	ldw	r2,32(r16)
1000cd10:	81c00517 	ldw	r7,20(r16)
1000cd14:	81400717 	ldw	r5,28(r16)
1000cd18:	81800015 	stw	r6,0(r16)
1000cd1c:	8809883a 	mov	r4,r17
1000cd20:	103ee83a 	callr	r2
1000cd24:	80800115 	stw	r2,4(r16)
1000cd28:	00800e0e 	bge	zero,r2,1000cd64 <__srefill_r+0x100>
1000cd2c:	0005883a 	mov	r2,zero
1000cd30:	dfc00317 	ldw	ra,12(sp)
1000cd34:	dc800217 	ldw	r18,8(sp)
1000cd38:	dc400117 	ldw	r17,4(sp)
1000cd3c:	dc000017 	ldw	r16,0(sp)
1000cd40:	dec00404 	addi	sp,sp,16
1000cd44:	f800283a 	ret
1000cd48:	1100040c 	andi	r4,r2,16
1000cd4c:	20003026 	beq	r4,zero,1000ce10 <__srefill_r+0x1ac>
1000cd50:	1080020c 	andi	r2,r2,8
1000cd54:	1000241e 	bne	r2,zero,1000cde8 <__srefill_r+0x184>
1000cd58:	18c00114 	ori	r3,r3,4
1000cd5c:	80c0030d 	sth	r3,12(r16)
1000cd60:	003fe406 	br	1000ccf4 <__alt_data_end+0xf800ccf4>
1000cd64:	80c0030b 	ldhu	r3,12(r16)
1000cd68:	1000161e 	bne	r2,zero,1000cdc4 <__srefill_r+0x160>
1000cd6c:	18c00814 	ori	r3,r3,32
1000cd70:	00bfffc4 	movi	r2,-1
1000cd74:	80c0030d 	sth	r3,12(r16)
1000cd78:	003fed06 	br	1000cd30 <__alt_data_end+0xf800cd30>
1000cd7c:	0009de40 	call	10009de4 <__sinit>
1000cd80:	003fc206 	br	1000cc8c <__alt_data_end+0xf800cc8c>
1000cd84:	008400b4 	movhi	r2,4098
1000cd88:	10ba2404 	addi	r2,r2,-6000
1000cd8c:	11000017 	ldw	r4,0(r2)
1000cd90:	01440074 	movhi	r5,4097
1000cd94:	00800044 	movi	r2,1
1000cd98:	29731204 	addi	r5,r5,-13240
1000cd9c:	8080030d 	sth	r2,12(r16)
1000cda0:	000a9a00 	call	1000a9a0 <_fwalk>
1000cda4:	00800244 	movi	r2,9
1000cda8:	8480030d 	sth	r18,12(r16)
1000cdac:	9480024c 	andi	r18,r18,9
1000cdb0:	90bfd51e 	bne	r18,r2,1000cd08 <__alt_data_end+0xf800cd08>
1000cdb4:	800b883a 	mov	r5,r16
1000cdb8:	8809883a 	mov	r4,r17
1000cdbc:	00097dc0 	call	100097dc <__sflush_r>
1000cdc0:	003fd106 	br	1000cd08 <__alt_data_end+0xf800cd08>
1000cdc4:	18c01014 	ori	r3,r3,64
1000cdc8:	80000115 	stw	zero,4(r16)
1000cdcc:	00bfffc4 	movi	r2,-1
1000cdd0:	80c0030d 	sth	r3,12(r16)
1000cdd4:	003fd606 	br	1000cd30 <__alt_data_end+0xf800cd30>
1000cdd8:	80c00e17 	ldw	r3,56(r16)
1000cddc:	0005883a 	mov	r2,zero
1000cde0:	80c00015 	stw	r3,0(r16)
1000cde4:	003fd206 	br	1000cd30 <__alt_data_end+0xf800cd30>
1000cde8:	800b883a 	mov	r5,r16
1000cdec:	8809883a 	mov	r4,r17
1000cdf0:	00099f80 	call	100099f8 <_fflush_r>
1000cdf4:	10000a1e 	bne	r2,zero,1000ce20 <__srefill_r+0x1bc>
1000cdf8:	8080030b 	ldhu	r2,12(r16)
1000cdfc:	00fffdc4 	movi	r3,-9
1000ce00:	80000215 	stw	zero,8(r16)
1000ce04:	1886703a 	and	r3,r3,r2
1000ce08:	80000615 	stw	zero,24(r16)
1000ce0c:	003fd206 	br	1000cd58 <__alt_data_end+0xf800cd58>
1000ce10:	00800244 	movi	r2,9
1000ce14:	88800015 	stw	r2,0(r17)
1000ce18:	18c01014 	ori	r3,r3,64
1000ce1c:	80c0030d 	sth	r3,12(r16)
1000ce20:	00bfffc4 	movi	r2,-1
1000ce24:	003fc206 	br	1000cd30 <__alt_data_end+0xf800cd30>
1000ce28:	800b883a 	mov	r5,r16
1000ce2c:	8809883a 	mov	r4,r17
1000ce30:	000ac340 	call	1000ac34 <__smakebuf_r>
1000ce34:	003fb106 	br	1000ccfc <__alt_data_end+0xf800ccfc>

1000ce38 <__fpclassifyd>:
1000ce38:	00a00034 	movhi	r2,32768
1000ce3c:	10bfffc4 	addi	r2,r2,-1
1000ce40:	2884703a 	and	r2,r5,r2
1000ce44:	10000726 	beq	r2,zero,1000ce64 <__fpclassifyd+0x2c>
1000ce48:	00fffc34 	movhi	r3,65520
1000ce4c:	019ff834 	movhi	r6,32736
1000ce50:	28c7883a 	add	r3,r5,r3
1000ce54:	31bfffc4 	addi	r6,r6,-1
1000ce58:	30c00536 	bltu	r6,r3,1000ce70 <__fpclassifyd+0x38>
1000ce5c:	00800104 	movi	r2,4
1000ce60:	f800283a 	ret
1000ce64:	2000021e 	bne	r4,zero,1000ce70 <__fpclassifyd+0x38>
1000ce68:	00800084 	movi	r2,2
1000ce6c:	f800283a 	ret
1000ce70:	00dffc34 	movhi	r3,32752
1000ce74:	019ff834 	movhi	r6,32736
1000ce78:	28cb883a 	add	r5,r5,r3
1000ce7c:	31bfffc4 	addi	r6,r6,-1
1000ce80:	317ff62e 	bgeu	r6,r5,1000ce5c <__alt_data_end+0xf800ce5c>
1000ce84:	01400434 	movhi	r5,16
1000ce88:	297fffc4 	addi	r5,r5,-1
1000ce8c:	28800236 	bltu	r5,r2,1000ce98 <__fpclassifyd+0x60>
1000ce90:	008000c4 	movi	r2,3
1000ce94:	f800283a 	ret
1000ce98:	10c00226 	beq	r2,r3,1000cea4 <__fpclassifyd+0x6c>
1000ce9c:	0005883a 	mov	r2,zero
1000cea0:	f800283a 	ret
1000cea4:	2005003a 	cmpeq	r2,r4,zero
1000cea8:	f800283a 	ret

1000ceac <__sccl>:
1000ceac:	2a000003 	ldbu	r8,0(r5)
1000ceb0:	00801784 	movi	r2,94
1000ceb4:	40802a26 	beq	r8,r2,1000cf60 <__sccl+0xb4>
1000ceb8:	29400044 	addi	r5,r5,1
1000cebc:	000f883a 	mov	r7,zero
1000cec0:	0013883a 	mov	r9,zero
1000cec4:	2007883a 	mov	r3,r4
1000cec8:	21804004 	addi	r6,r4,256
1000cecc:	19c00005 	stb	r7,0(r3)
1000ced0:	18c00044 	addi	r3,r3,1
1000ced4:	19bffd1e 	bne	r3,r6,1000cecc <__alt_data_end+0xf800cecc>
1000ced8:	40001126 	beq	r8,zero,1000cf20 <__sccl+0x74>
1000cedc:	00800044 	movi	r2,1
1000cee0:	124fc83a 	sub	r7,r2,r9
1000cee4:	02800b44 	movi	r10,45
1000cee8:	02c01744 	movi	r11,93
1000ceec:	2205883a 	add	r2,r4,r8
1000cef0:	11c00005 	stb	r7,0(r2)
1000cef4:	28800044 	addi	r2,r5,1
1000cef8:	28c00003 	ldbu	r3,0(r5)
1000cefc:	1a800a26 	beq	r3,r10,1000cf28 <__sccl+0x7c>
1000cf00:	1ac00426 	beq	r3,r11,1000cf14 <__sccl+0x68>
1000cf04:	18000426 	beq	r3,zero,1000cf18 <__sccl+0x6c>
1000cf08:	1811883a 	mov	r8,r3
1000cf0c:	100b883a 	mov	r5,r2
1000cf10:	003ff606 	br	1000ceec <__alt_data_end+0xf800ceec>
1000cf14:	f800283a 	ret
1000cf18:	2805883a 	mov	r2,r5
1000cf1c:	f800283a 	ret
1000cf20:	28bfffc4 	addi	r2,r5,-1
1000cf24:	f800283a 	ret
1000cf28:	12400003 	ldbu	r9,0(r2)
1000cf2c:	4ac01126 	beq	r9,r11,1000cf74 <__sccl+0xc8>
1000cf30:	4a001016 	blt	r9,r8,1000cf74 <__sccl+0xc8>
1000cf34:	41800044 	addi	r6,r8,1
1000cf38:	29400084 	addi	r5,r5,2
1000cf3c:	2187883a 	add	r3,r4,r6
1000cf40:	00000106 	br	1000cf48 <__sccl+0x9c>
1000cf44:	31800044 	addi	r6,r6,1
1000cf48:	19c00005 	stb	r7,0(r3)
1000cf4c:	3011883a 	mov	r8,r6
1000cf50:	18c00044 	addi	r3,r3,1
1000cf54:	327ffb16 	blt	r6,r9,1000cf44 <__alt_data_end+0xf800cf44>
1000cf58:	10800084 	addi	r2,r2,2
1000cf5c:	003fe606 	br	1000cef8 <__alt_data_end+0xf800cef8>
1000cf60:	2a000043 	ldbu	r8,1(r5)
1000cf64:	01c00044 	movi	r7,1
1000cf68:	29400084 	addi	r5,r5,2
1000cf6c:	02400044 	movi	r9,1
1000cf70:	003fd406 	br	1000cec4 <__alt_data_end+0xf800cec4>
1000cf74:	5011883a 	mov	r8,r10
1000cf78:	003fe406 	br	1000cf0c <__alt_data_end+0xf800cf0c>

1000cf7c <nanf>:
1000cf7c:	009ff034 	movhi	r2,32704
1000cf80:	f800283a 	ret

1000cf84 <_sprintf_r>:
1000cf84:	deffe404 	addi	sp,sp,-112
1000cf88:	2807883a 	mov	r3,r5
1000cf8c:	dfc01a15 	stw	ra,104(sp)
1000cf90:	d9c01b15 	stw	r7,108(sp)
1000cf94:	00a00034 	movhi	r2,32768
1000cf98:	10bfffc4 	addi	r2,r2,-1
1000cf9c:	02008204 	movi	r8,520
1000cfa0:	d8800215 	stw	r2,8(sp)
1000cfa4:	d8800515 	stw	r2,20(sp)
1000cfa8:	d9c01b04 	addi	r7,sp,108
1000cfac:	d80b883a 	mov	r5,sp
1000cfb0:	00bfffc4 	movi	r2,-1
1000cfb4:	d8c00015 	stw	r3,0(sp)
1000cfb8:	d8c00415 	stw	r3,16(sp)
1000cfbc:	da00030d 	sth	r8,12(sp)
1000cfc0:	d880038d 	sth	r2,14(sp)
1000cfc4:	000f4ec0 	call	1000f4ec <___svfprintf_internal_r>
1000cfc8:	d8c00017 	ldw	r3,0(sp)
1000cfcc:	18000005 	stb	zero,0(r3)
1000cfd0:	dfc01a17 	ldw	ra,104(sp)
1000cfd4:	dec01c04 	addi	sp,sp,112
1000cfd8:	f800283a 	ret

1000cfdc <sprintf>:
1000cfdc:	deffe304 	addi	sp,sp,-116
1000cfe0:	2007883a 	mov	r3,r4
1000cfe4:	dfc01a15 	stw	ra,104(sp)
1000cfe8:	d9801b15 	stw	r6,108(sp)
1000cfec:	d9c01c15 	stw	r7,112(sp)
1000cff0:	010400b4 	movhi	r4,4098
1000cff4:	213a2504 	addi	r4,r4,-5996
1000cff8:	21000017 	ldw	r4,0(r4)
1000cffc:	00a00034 	movhi	r2,32768
1000d000:	10bfffc4 	addi	r2,r2,-1
1000d004:	280d883a 	mov	r6,r5
1000d008:	02008204 	movi	r8,520
1000d00c:	d8800215 	stw	r2,8(sp)
1000d010:	d8800515 	stw	r2,20(sp)
1000d014:	d9c01b04 	addi	r7,sp,108
1000d018:	d80b883a 	mov	r5,sp
1000d01c:	00bfffc4 	movi	r2,-1
1000d020:	d8c00015 	stw	r3,0(sp)
1000d024:	d8c00415 	stw	r3,16(sp)
1000d028:	da00030d 	sth	r8,12(sp)
1000d02c:	d880038d 	sth	r2,14(sp)
1000d030:	000f4ec0 	call	1000f4ec <___svfprintf_internal_r>
1000d034:	d8c00017 	ldw	r3,0(sp)
1000d038:	18000005 	stb	zero,0(r3)
1000d03c:	dfc01a17 	ldw	ra,104(sp)
1000d040:	dec01d04 	addi	sp,sp,116
1000d044:	f800283a 	ret

1000d048 <__sread>:
1000d048:	defffe04 	addi	sp,sp,-8
1000d04c:	dc000015 	stw	r16,0(sp)
1000d050:	2821883a 	mov	r16,r5
1000d054:	2940038f 	ldh	r5,14(r5)
1000d058:	dfc00115 	stw	ra,4(sp)
1000d05c:	00143d00 	call	100143d0 <_read_r>
1000d060:	10000716 	blt	r2,zero,1000d080 <__sread+0x38>
1000d064:	80c01417 	ldw	r3,80(r16)
1000d068:	1887883a 	add	r3,r3,r2
1000d06c:	80c01415 	stw	r3,80(r16)
1000d070:	dfc00117 	ldw	ra,4(sp)
1000d074:	dc000017 	ldw	r16,0(sp)
1000d078:	dec00204 	addi	sp,sp,8
1000d07c:	f800283a 	ret
1000d080:	80c0030b 	ldhu	r3,12(r16)
1000d084:	18fbffcc 	andi	r3,r3,61439
1000d088:	80c0030d 	sth	r3,12(r16)
1000d08c:	dfc00117 	ldw	ra,4(sp)
1000d090:	dc000017 	ldw	r16,0(sp)
1000d094:	dec00204 	addi	sp,sp,8
1000d098:	f800283a 	ret

1000d09c <__seofread>:
1000d09c:	0005883a 	mov	r2,zero
1000d0a0:	f800283a 	ret

1000d0a4 <__swrite>:
1000d0a4:	2880030b 	ldhu	r2,12(r5)
1000d0a8:	defffb04 	addi	sp,sp,-20
1000d0ac:	dcc00315 	stw	r19,12(sp)
1000d0b0:	dc800215 	stw	r18,8(sp)
1000d0b4:	dc400115 	stw	r17,4(sp)
1000d0b8:	dc000015 	stw	r16,0(sp)
1000d0bc:	dfc00415 	stw	ra,16(sp)
1000d0c0:	10c0400c 	andi	r3,r2,256
1000d0c4:	2821883a 	mov	r16,r5
1000d0c8:	2023883a 	mov	r17,r4
1000d0cc:	3025883a 	mov	r18,r6
1000d0d0:	3827883a 	mov	r19,r7
1000d0d4:	18000526 	beq	r3,zero,1000d0ec <__swrite+0x48>
1000d0d8:	2940038f 	ldh	r5,14(r5)
1000d0dc:	01c00084 	movi	r7,2
1000d0e0:	000d883a 	mov	r6,zero
1000d0e4:	00143700 	call	10014370 <_lseek_r>
1000d0e8:	8080030b 	ldhu	r2,12(r16)
1000d0ec:	8140038f 	ldh	r5,14(r16)
1000d0f0:	10bbffcc 	andi	r2,r2,61439
1000d0f4:	980f883a 	mov	r7,r19
1000d0f8:	900d883a 	mov	r6,r18
1000d0fc:	8809883a 	mov	r4,r17
1000d100:	8080030d 	sth	r2,12(r16)
1000d104:	dfc00417 	ldw	ra,16(sp)
1000d108:	dcc00317 	ldw	r19,12(sp)
1000d10c:	dc800217 	ldw	r18,8(sp)
1000d110:	dc400117 	ldw	r17,4(sp)
1000d114:	dc000017 	ldw	r16,0(sp)
1000d118:	dec00504 	addi	sp,sp,20
1000d11c:	00132781 	jmpi	10013278 <_write_r>

1000d120 <__sseek>:
1000d120:	defffe04 	addi	sp,sp,-8
1000d124:	dc000015 	stw	r16,0(sp)
1000d128:	2821883a 	mov	r16,r5
1000d12c:	2940038f 	ldh	r5,14(r5)
1000d130:	dfc00115 	stw	ra,4(sp)
1000d134:	00143700 	call	10014370 <_lseek_r>
1000d138:	00ffffc4 	movi	r3,-1
1000d13c:	10c00826 	beq	r2,r3,1000d160 <__sseek+0x40>
1000d140:	80c0030b 	ldhu	r3,12(r16)
1000d144:	80801415 	stw	r2,80(r16)
1000d148:	18c40014 	ori	r3,r3,4096
1000d14c:	80c0030d 	sth	r3,12(r16)
1000d150:	dfc00117 	ldw	ra,4(sp)
1000d154:	dc000017 	ldw	r16,0(sp)
1000d158:	dec00204 	addi	sp,sp,8
1000d15c:	f800283a 	ret
1000d160:	80c0030b 	ldhu	r3,12(r16)
1000d164:	18fbffcc 	andi	r3,r3,61439
1000d168:	80c0030d 	sth	r3,12(r16)
1000d16c:	dfc00117 	ldw	ra,4(sp)
1000d170:	dc000017 	ldw	r16,0(sp)
1000d174:	dec00204 	addi	sp,sp,8
1000d178:	f800283a 	ret

1000d17c <__sclose>:
1000d17c:	2940038f 	ldh	r5,14(r5)
1000d180:	00132d81 	jmpi	100132d8 <_close_r>

1000d184 <strcmp>:
1000d184:	2144b03a 	or	r2,r4,r5
1000d188:	108000cc 	andi	r2,r2,3
1000d18c:	1000171e 	bne	r2,zero,1000d1ec <strcmp+0x68>
1000d190:	20800017 	ldw	r2,0(r4)
1000d194:	28c00017 	ldw	r3,0(r5)
1000d198:	10c0141e 	bne	r2,r3,1000d1ec <strcmp+0x68>
1000d19c:	027fbff4 	movhi	r9,65279
1000d1a0:	4a7fbfc4 	addi	r9,r9,-257
1000d1a4:	0086303a 	nor	r3,zero,r2
1000d1a8:	02202074 	movhi	r8,32897
1000d1ac:	1245883a 	add	r2,r2,r9
1000d1b0:	42202004 	addi	r8,r8,-32640
1000d1b4:	10c4703a 	and	r2,r2,r3
1000d1b8:	1204703a 	and	r2,r2,r8
1000d1bc:	10000226 	beq	r2,zero,1000d1c8 <strcmp+0x44>
1000d1c0:	00002306 	br	1000d250 <strcmp+0xcc>
1000d1c4:	1000221e 	bne	r2,zero,1000d250 <strcmp+0xcc>
1000d1c8:	21000104 	addi	r4,r4,4
1000d1cc:	20c00017 	ldw	r3,0(r4)
1000d1d0:	29400104 	addi	r5,r5,4
1000d1d4:	29800017 	ldw	r6,0(r5)
1000d1d8:	1a4f883a 	add	r7,r3,r9
1000d1dc:	00c4303a 	nor	r2,zero,r3
1000d1e0:	3884703a 	and	r2,r7,r2
1000d1e4:	1204703a 	and	r2,r2,r8
1000d1e8:	19bff626 	beq	r3,r6,1000d1c4 <__alt_data_end+0xf800d1c4>
1000d1ec:	20800003 	ldbu	r2,0(r4)
1000d1f0:	10c03fcc 	andi	r3,r2,255
1000d1f4:	18c0201c 	xori	r3,r3,128
1000d1f8:	18ffe004 	addi	r3,r3,-128
1000d1fc:	18000c26 	beq	r3,zero,1000d230 <strcmp+0xac>
1000d200:	29800007 	ldb	r6,0(r5)
1000d204:	19800326 	beq	r3,r6,1000d214 <strcmp+0x90>
1000d208:	00001306 	br	1000d258 <strcmp+0xd4>
1000d20c:	29800007 	ldb	r6,0(r5)
1000d210:	11800b1e 	bne	r2,r6,1000d240 <strcmp+0xbc>
1000d214:	21000044 	addi	r4,r4,1
1000d218:	20c00003 	ldbu	r3,0(r4)
1000d21c:	29400044 	addi	r5,r5,1
1000d220:	18803fcc 	andi	r2,r3,255
1000d224:	1080201c 	xori	r2,r2,128
1000d228:	10bfe004 	addi	r2,r2,-128
1000d22c:	103ff71e 	bne	r2,zero,1000d20c <__alt_data_end+0xf800d20c>
1000d230:	0007883a 	mov	r3,zero
1000d234:	28800003 	ldbu	r2,0(r5)
1000d238:	1885c83a 	sub	r2,r3,r2
1000d23c:	f800283a 	ret
1000d240:	28800003 	ldbu	r2,0(r5)
1000d244:	18c03fcc 	andi	r3,r3,255
1000d248:	1885c83a 	sub	r2,r3,r2
1000d24c:	f800283a 	ret
1000d250:	0005883a 	mov	r2,zero
1000d254:	f800283a 	ret
1000d258:	10c03fcc 	andi	r3,r2,255
1000d25c:	003ff506 	br	1000d234 <__alt_data_end+0xf800d234>

1000d260 <sulp>:
1000d260:	defffd04 	addi	sp,sp,-12
1000d264:	dc400115 	stw	r17,4(sp)
1000d268:	3023883a 	mov	r17,r6
1000d26c:	dc000015 	stw	r16,0(sp)
1000d270:	dfc00215 	stw	ra,8(sp)
1000d274:	2821883a 	mov	r16,r5
1000d278:	000c0a40 	call	1000c0a4 <__ulp>
1000d27c:	88000c26 	beq	r17,zero,1000d2b0 <sulp+0x50>
1000d280:	841ffc2c 	andhi	r16,r16,32752
1000d284:	8020d53a 	srli	r16,r16,20
1000d288:	01c01ac4 	movi	r7,107
1000d28c:	3c21c83a 	sub	r16,r7,r16
1000d290:	0400070e 	bge	zero,r16,1000d2b0 <sulp+0x50>
1000d294:	8020953a 	slli	r16,r16,20
1000d298:	01cffc34 	movhi	r7,16368
1000d29c:	000d883a 	mov	r6,zero
1000d2a0:	81cf883a 	add	r7,r16,r7
1000d2a4:	1009883a 	mov	r4,r2
1000d2a8:	180b883a 	mov	r5,r3
1000d2ac:	00180680 	call	10018068 <__muldf3>
1000d2b0:	dfc00217 	ldw	ra,8(sp)
1000d2b4:	dc400117 	ldw	r17,4(sp)
1000d2b8:	dc000017 	ldw	r16,0(sp)
1000d2bc:	dec00304 	addi	sp,sp,12
1000d2c0:	f800283a 	ret

1000d2c4 <_strtod_r>:
1000d2c4:	deffe204 	addi	sp,sp,-120
1000d2c8:	ddc01b15 	stw	r23,108(sp)
1000d2cc:	dd801a15 	stw	r22,104(sp)
1000d2d0:	dc401515 	stw	r17,84(sp)
1000d2d4:	dfc01d15 	stw	ra,116(sp)
1000d2d8:	df001c15 	stw	fp,112(sp)
1000d2dc:	dd401915 	stw	r21,100(sp)
1000d2e0:	dd001815 	stw	r20,96(sp)
1000d2e4:	dcc01715 	stw	r19,92(sp)
1000d2e8:	dc801615 	stw	r18,88(sp)
1000d2ec:	dc001415 	stw	r16,80(sp)
1000d2f0:	d8000515 	stw	zero,20(sp)
1000d2f4:	d9400615 	stw	r5,24(sp)
1000d2f8:	2807883a 	mov	r3,r5
1000d2fc:	1f000003 	ldbu	fp,0(r3)
1000d300:	01c40074 	movhi	r7,4097
1000d304:	2023883a 	mov	r17,r4
1000d308:	d9400715 	stw	r5,28(sp)
1000d30c:	d9800915 	stw	r6,36(sp)
1000d310:	01000b44 	movi	r4,45
1000d314:	e0803fcc 	andi	r2,fp,255
1000d318:	39f4ce04 	addi	r7,r7,-11464
1000d31c:	002f883a 	mov	r23,zero
1000d320:	002d883a 	mov	r22,zero
1000d324:	20809c36 	bltu	r4,r2,1000d598 <_strtod_r+0x2d4>
1000d328:	100490ba 	slli	r2,r2,2
1000d32c:	11c5883a 	add	r2,r2,r7
1000d330:	10800017 	ldw	r2,0(r2)
1000d334:	1000683a 	jmp	r2
1000d338:	1000d3f8 	rdprs	zero,r2,847
1000d33c:	1000d598 	cmpnei	zero,r2,854
1000d340:	1000d598 	cmpnei	zero,r2,854
1000d344:	1000d598 	cmpnei	zero,r2,854
1000d348:	1000d598 	cmpnei	zero,r2,854
1000d34c:	1000d598 	cmpnei	zero,r2,854
1000d350:	1000d598 	cmpnei	zero,r2,854
1000d354:	1000d598 	cmpnei	zero,r2,854
1000d358:	1000d598 	cmpnei	zero,r2,854
1000d35c:	1000d584 	addi	zero,r2,854
1000d360:	1000d584 	addi	zero,r2,854
1000d364:	1000d584 	addi	zero,r2,854
1000d368:	1000d584 	addi	zero,r2,854
1000d36c:	1000d584 	addi	zero,r2,854
1000d370:	1000d598 	cmpnei	zero,r2,854
1000d374:	1000d598 	cmpnei	zero,r2,854
1000d378:	1000d598 	cmpnei	zero,r2,854
1000d37c:	1000d598 	cmpnei	zero,r2,854
1000d380:	1000d598 	cmpnei	zero,r2,854
1000d384:	1000d598 	cmpnei	zero,r2,854
1000d388:	1000d598 	cmpnei	zero,r2,854
1000d38c:	1000d598 	cmpnei	zero,r2,854
1000d390:	1000d598 	cmpnei	zero,r2,854
1000d394:	1000d598 	cmpnei	zero,r2,854
1000d398:	1000d598 	cmpnei	zero,r2,854
1000d39c:	1000d598 	cmpnei	zero,r2,854
1000d3a0:	1000d598 	cmpnei	zero,r2,854
1000d3a4:	1000d598 	cmpnei	zero,r2,854
1000d3a8:	1000d598 	cmpnei	zero,r2,854
1000d3ac:	1000d598 	cmpnei	zero,r2,854
1000d3b0:	1000d598 	cmpnei	zero,r2,854
1000d3b4:	1000d598 	cmpnei	zero,r2,854
1000d3b8:	1000d584 	addi	zero,r2,854
1000d3bc:	1000d598 	cmpnei	zero,r2,854
1000d3c0:	1000d598 	cmpnei	zero,r2,854
1000d3c4:	1000d598 	cmpnei	zero,r2,854
1000d3c8:	1000d598 	cmpnei	zero,r2,854
1000d3cc:	1000d598 	cmpnei	zero,r2,854
1000d3d0:	1000d598 	cmpnei	zero,r2,854
1000d3d4:	1000d598 	cmpnei	zero,r2,854
1000d3d8:	1000d598 	cmpnei	zero,r2,854
1000d3dc:	1000d598 	cmpnei	zero,r2,854
1000d3e0:	1000d598 	cmpnei	zero,r2,854
1000d3e4:	1000d45c 	xori	zero,r2,849
1000d3e8:	1000d598 	cmpnei	zero,r2,854
1000d3ec:	1000d578 	rdprs	zero,r2,853
1000d3f0:	00801244 	movi	r2,73
1000d3f4:	b8844726 	beq	r23,r2,1000e514 <_strtod_r+0x1250>
1000d3f8:	d9000917 	ldw	r4,36(sp)
1000d3fc:	d8000815 	stw	zero,32(sp)
1000d400:	0039883a 	mov	fp,zero
1000d404:	20000726 	beq	r4,zero,1000d424 <_strtod_r+0x160>
1000d408:	dc800717 	ldw	r18,28(sp)
1000d40c:	d8000a15 	stw	zero,40(sp)
1000d410:	d9400917 	ldw	r5,36(sp)
1000d414:	2c800015 	stw	r18,0(r5)
1000d418:	d8800a17 	ldw	r2,40(sp)
1000d41c:	10000126 	beq	r2,zero,1000d424 <_strtod_r+0x160>
1000d420:	e720003c 	xorhi	fp,fp,32768
1000d424:	d8800817 	ldw	r2,32(sp)
1000d428:	e007883a 	mov	r3,fp
1000d42c:	dfc01d17 	ldw	ra,116(sp)
1000d430:	df001c17 	ldw	fp,112(sp)
1000d434:	ddc01b17 	ldw	r23,108(sp)
1000d438:	dd801a17 	ldw	r22,104(sp)
1000d43c:	dd401917 	ldw	r21,100(sp)
1000d440:	dd001817 	ldw	r20,96(sp)
1000d444:	dcc01717 	ldw	r19,92(sp)
1000d448:	dc801617 	ldw	r18,88(sp)
1000d44c:	dc401517 	ldw	r17,84(sp)
1000d450:	dc001417 	ldw	r16,80(sp)
1000d454:	dec01e04 	addi	sp,sp,120
1000d458:	f800283a 	ret
1000d45c:	d8000a15 	stw	zero,40(sp)
1000d460:	1c000044 	addi	r16,r3,1
1000d464:	dc000615 	stw	r16,24(sp)
1000d468:	1f000043 	ldbu	fp,1(r3)
1000d46c:	e0803fcc 	andi	r2,fp,255
1000d470:	1080201c 	xori	r2,r2,128
1000d474:	10bfe004 	addi	r2,r2,-128
1000d478:	103fdf26 	beq	r2,zero,1000d3f8 <__alt_data_end+0xf800d3f8>
1000d47c:	e1003fcc 	andi	r4,fp,255
1000d480:	2100201c 	xori	r4,r4,128
1000d484:	213fe004 	addi	r4,r4,-128
1000d488:	00800c04 	movi	r2,48
1000d48c:	2080d426 	beq	r4,r2,1000d7e0 <_strtod_r+0x51c>
1000d490:	dc000815 	stw	r16,32(sp)
1000d494:	d8000c15 	stw	zero,48(sp)
1000d498:	e0bff404 	addi	r2,fp,-48
1000d49c:	10803fcc 	andi	r2,r2,255
1000d4a0:	05400244 	movi	r21,9
1000d4a4:	a8837836 	bltu	r21,r2,1000e288 <_strtod_r+0xfc4>
1000d4a8:	dc800817 	ldw	r18,32(sp)
1000d4ac:	0029883a 	mov	r20,zero
1000d4b0:	0027883a 	mov	r19,zero
1000d4b4:	0021883a 	mov	r16,zero
1000d4b8:	05800204 	movi	r22,8
1000d4bc:	b4003916 	blt	r22,r16,1000d5a4 <_strtod_r+0x2e0>
1000d4c0:	e7003fcc 	andi	fp,fp,255
1000d4c4:	9809883a 	mov	r4,r19
1000d4c8:	01400284 	movi	r5,10
1000d4cc:	e700201c 	xori	fp,fp,128
1000d4d0:	00034380 	call	10003438 <__mulsi3>
1000d4d4:	e73fe004 	addi	fp,fp,-128
1000d4d8:	1705883a 	add	r2,r2,fp
1000d4dc:	14fff404 	addi	r19,r2,-48
1000d4e0:	94800044 	addi	r18,r18,1
1000d4e4:	dc800615 	stw	r18,24(sp)
1000d4e8:	97000003 	ldbu	fp,0(r18)
1000d4ec:	84000044 	addi	r16,r16,1
1000d4f0:	e0bff404 	addi	r2,fp,-48
1000d4f4:	10803fcc 	andi	r2,r2,255
1000d4f8:	a8bff02e 	bgeu	r21,r2,1000d4bc <__alt_data_end+0xf800d4bc>
1000d4fc:	e5c03fcc 	andi	r23,fp,255
1000d500:	bdc0201c 	xori	r23,r23,128
1000d504:	bdffe004 	addi	r23,r23,-128
1000d508:	8809883a 	mov	r4,r17
1000d50c:	000ac040 	call	1000ac04 <_localeconv_r>
1000d510:	8809883a 	mov	r4,r17
1000d514:	15400017 	ldw	r21,0(r2)
1000d518:	000ac040 	call	1000ac04 <_localeconv_r>
1000d51c:	11000017 	ldw	r4,0(r2)
1000d520:	0003f300 	call	10003f30 <strlen>
1000d524:	100d883a 	mov	r6,r2
1000d528:	a80b883a 	mov	r5,r21
1000d52c:	9009883a 	mov	r4,r18
1000d530:	00144300 	call	10014430 <strncmp>
1000d534:	1000bd26 	beq	r2,zero,1000d82c <_strtod_r+0x568>
1000d538:	8039883a 	mov	fp,r16
1000d53c:	002d883a 	mov	r22,zero
1000d540:	d8000b15 	stw	zero,44(sp)
1000d544:	0025883a 	mov	r18,zero
1000d548:	00801944 	movi	r2,101
1000d54c:	b8806026 	beq	r23,r2,1000d6d0 <_strtod_r+0x40c>
1000d550:	00801144 	movi	r2,69
1000d554:	b8805e26 	beq	r23,r2,1000d6d0 <_strtod_r+0x40c>
1000d558:	0009883a 	mov	r4,zero
1000d55c:	e0001a1e 	bne	fp,zero,1000d5c8 <_strtod_r+0x304>
1000d560:	b000cd26 	beq	r22,zero,1000d898 <_strtod_r+0x5d4>
1000d564:	d8000815 	stw	zero,32(sp)
1000d568:	d9000917 	ldw	r4,36(sp)
1000d56c:	203faa26 	beq	r4,zero,1000d418 <__alt_data_end+0xf800d418>
1000d570:	dc800617 	ldw	r18,24(sp)
1000d574:	003fa606 	br	1000d410 <__alt_data_end+0xf800d410>
1000d578:	00800044 	movi	r2,1
1000d57c:	d8800a15 	stw	r2,40(sp)
1000d580:	003fb706 	br	1000d460 <__alt_data_end+0xf800d460>
1000d584:	18c00044 	addi	r3,r3,1
1000d588:	d8c00615 	stw	r3,24(sp)
1000d58c:	1f000003 	ldbu	fp,0(r3)
1000d590:	e0803fcc 	andi	r2,fp,255
1000d594:	20bf642e 	bgeu	r4,r2,1000d328 <__alt_data_end+0xf800d328>
1000d598:	1821883a 	mov	r16,r3
1000d59c:	d8000a15 	stw	zero,40(sp)
1000d5a0:	003fb606 	br	1000d47c <__alt_data_end+0xf800d47c>
1000d5a4:	e7003fcc 	andi	fp,fp,255
1000d5a8:	a009883a 	mov	r4,r20
1000d5ac:	01400284 	movi	r5,10
1000d5b0:	e700201c 	xori	fp,fp,128
1000d5b4:	00034380 	call	10003438 <__mulsi3>
1000d5b8:	e73fe004 	addi	fp,fp,-128
1000d5bc:	1705883a 	add	r2,r2,fp
1000d5c0:	153ff404 	addi	r20,r2,-48
1000d5c4:	003fc606 	br	1000d4e0 <__alt_data_end+0xf800d4e0>
1000d5c8:	d8c00b17 	ldw	r3,44(sp)
1000d5cc:	20ebc83a 	sub	r21,r4,r3
1000d5d0:	8000011e 	bne	r16,zero,1000d5d8 <_strtod_r+0x314>
1000d5d4:	e021883a 	mov	r16,fp
1000d5d8:	00800404 	movi	r2,16
1000d5dc:	e025883a 	mov	r18,fp
1000d5e0:	1700010e 	bge	r2,fp,1000d5e8 <_strtod_r+0x324>
1000d5e4:	1025883a 	mov	r18,r2
1000d5e8:	9809883a 	mov	r4,r19
1000d5ec:	001932c0 	call	1001932c <__floatunsidf>
1000d5f0:	102f883a 	mov	r23,r2
1000d5f4:	00800244 	movi	r2,9
1000d5f8:	182d883a 	mov	r22,r3
1000d5fc:	1480150e 	bge	r2,r18,1000d654 <_strtod_r+0x390>
1000d600:	90bffdc4 	addi	r2,r18,-9
1000d604:	100490fa 	slli	r2,r2,3
1000d608:	180b883a 	mov	r5,r3
1000d60c:	00c400b4 	movhi	r3,4098
1000d610:	18f28604 	addi	r3,r3,-13800
1000d614:	1885883a 	add	r2,r3,r2
1000d618:	11800017 	ldw	r6,0(r2)
1000d61c:	11c00117 	ldw	r7,4(r2)
1000d620:	b809883a 	mov	r4,r23
1000d624:	00180680 	call	10018068 <__muldf3>
1000d628:	a009883a 	mov	r4,r20
1000d62c:	102f883a 	mov	r23,r2
1000d630:	182d883a 	mov	r22,r3
1000d634:	001932c0 	call	1001932c <__floatunsidf>
1000d638:	b809883a 	mov	r4,r23
1000d63c:	b00b883a 	mov	r5,r22
1000d640:	100d883a 	mov	r6,r2
1000d644:	180f883a 	mov	r7,r3
1000d648:	0016b940 	call	10016b94 <__adddf3>
1000d64c:	102f883a 	mov	r23,r2
1000d650:	182d883a 	mov	r22,r3
1000d654:	008003c4 	movi	r2,15
1000d658:	17009416 	blt	r2,fp,1000d8ac <_strtod_r+0x5e8>
1000d65c:	a8001926 	beq	r21,zero,1000d6c4 <_strtod_r+0x400>
1000d660:	05439c0e 	bge	zero,r21,1000e4d4 <_strtod_r+0x1210>
1000d664:	00c00584 	movi	r3,22
1000d668:	1d430f16 	blt	r3,r21,1000e2a8 <_strtod_r+0xfe4>
1000d66c:	a82a90fa 	slli	r21,r21,3
1000d670:	008400b4 	movhi	r2,4098
1000d674:	10b28604 	addi	r2,r2,-13800
1000d678:	1545883a 	add	r2,r2,r21
1000d67c:	11000017 	ldw	r4,0(r2)
1000d680:	11400117 	ldw	r5,4(r2)
1000d684:	b80d883a 	mov	r6,r23
1000d688:	b00f883a 	mov	r7,r22
1000d68c:	00180680 	call	10018068 <__muldf3>
1000d690:	d8800815 	stw	r2,32(sp)
1000d694:	1839883a 	mov	fp,r3
1000d698:	003fb306 	br	1000d568 <__alt_data_end+0xf800d568>
1000d69c:	014400b4 	movhi	r5,4098
1000d6a0:	2972bc04 	addi	r5,r5,-13584
1000d6a4:	d9800204 	addi	r6,sp,8
1000d6a8:	d9000604 	addi	r4,sp,24
1000d6ac:	00140c00 	call	100140c0 <__hexnan>
1000d6b0:	00c00144 	movi	r3,5
1000d6b4:	10c2161e 	bne	r2,r3,1000df10 <_strtod_r+0xc4c>
1000d6b8:	dd800317 	ldw	r22,12(sp)
1000d6bc:	ddc00217 	ldw	r23,8(sp)
1000d6c0:	b59ffc34 	orhi	r22,r22,32752
1000d6c4:	ddc00815 	stw	r23,32(sp)
1000d6c8:	b039883a 	mov	fp,r22
1000d6cc:	003fa606 	br	1000d568 <__alt_data_end+0xf800d568>
1000d6d0:	e001a926 	beq	fp,zero,1000dd78 <_strtod_r+0xab4>
1000d6d4:	d8c00617 	ldw	r3,24(sp)
1000d6d8:	18800044 	addi	r2,r3,1
1000d6dc:	d8800615 	stw	r2,24(sp)
1000d6e0:	d8c00715 	stw	r3,28(sp)
1000d6e4:	18c00047 	ldb	r3,1(r3)
1000d6e8:	00800ac4 	movi	r2,43
1000d6ec:	1881e526 	beq	r3,r2,1000de84 <_strtod_r+0xbc0>
1000d6f0:	00800b44 	movi	r2,45
1000d6f4:	1881dc26 	beq	r3,r2,1000de68 <_strtod_r+0xba4>
1000d6f8:	182f883a 	mov	r23,r3
1000d6fc:	d8000e15 	stw	zero,56(sp)
1000d700:	b8bff404 	addi	r2,r23,-48
1000d704:	01000244 	movi	r4,9
1000d708:	2081ab36 	bltu	r4,r2,1000ddb8 <_strtod_r+0xaf4>
1000d70c:	00800c04 	movi	r2,48
1000d710:	b880071e 	bne	r23,r2,1000d730 <_strtod_r+0x46c>
1000d714:	d8800617 	ldw	r2,24(sp)
1000d718:	b809883a 	mov	r4,r23
1000d71c:	10800044 	addi	r2,r2,1
1000d720:	d8800615 	stw	r2,24(sp)
1000d724:	15c00007 	ldb	r23,0(r2)
1000d728:	10800044 	addi	r2,r2,1
1000d72c:	b93ffc26 	beq	r23,r4,1000d720 <__alt_data_end+0xf800d720>
1000d730:	b8bff3c4 	addi	r2,r23,-49
1000d734:	01000204 	movi	r4,8
1000d738:	20bf8736 	bltu	r4,r2,1000d558 <__alt_data_end+0xf800d558>
1000d73c:	d8c00617 	ldw	r3,24(sp)
1000d740:	b93ff404 	addi	r4,r23,-48
1000d744:	01400244 	movi	r5,9
1000d748:	1ac00044 	addi	r11,r3,1
1000d74c:	dac00615 	stw	r11,24(sp)
1000d750:	d8c00d15 	stw	r3,52(sp)
1000d754:	18c00043 	ldbu	r3,1(r3)
1000d758:	18bff404 	addi	r2,r3,-48
1000d75c:	1dc03fcc 	andi	r23,r3,255
1000d760:	bdc0201c 	xori	r23,r23,128
1000d764:	10803fcc 	andi	r2,r2,255
1000d768:	bdffe004 	addi	r23,r23,-128
1000d76c:	28801136 	bltu	r5,r2,1000d7b4 <_strtod_r+0x4f0>
1000d770:	d8c00d17 	ldw	r3,52(sp)
1000d774:	1d400084 	addi	r21,r3,2
1000d778:	01400284 	movi	r5,10
1000d77c:	00034380 	call	10003438 <__mulsi3>
1000d780:	dd400615 	stw	r21,24(sp)
1000d784:	a9400003 	ldbu	r5,0(r21)
1000d788:	15c5883a 	add	r2,r2,r23
1000d78c:	a817883a 	mov	r11,r21
1000d790:	28fff404 	addi	r3,r5,-48
1000d794:	2dc03fcc 	andi	r23,r5,255
1000d798:	bdc0201c 	xori	r23,r23,128
1000d79c:	18c03fcc 	andi	r3,r3,255
1000d7a0:	01400244 	movi	r5,9
1000d7a4:	113ff404 	addi	r4,r2,-48
1000d7a8:	bdffe004 	addi	r23,r23,-128
1000d7ac:	ad400044 	addi	r21,r21,1
1000d7b0:	28fff12e 	bgeu	r5,r3,1000d778 <__alt_data_end+0xf800d778>
1000d7b4:	d8c00d17 	ldw	r3,52(sp)
1000d7b8:	00800204 	movi	r2,8
1000d7bc:	58d7c83a 	sub	r11,r11,r3
1000d7c0:	12c2ab16 	blt	r2,r11,1000e270 <_strtod_r+0xfac>
1000d7c4:	009387c4 	movi	r2,19999
1000d7c8:	1100010e 	bge	r2,r4,1000d7d0 <_strtod_r+0x50c>
1000d7cc:	1009883a 	mov	r4,r2
1000d7d0:	d8c00e17 	ldw	r3,56(sp)
1000d7d4:	183f6126 	beq	r3,zero,1000d55c <__alt_data_end+0xf800d55c>
1000d7d8:	0109c83a 	sub	r4,zero,r4
1000d7dc:	003f5f06 	br	1000d55c <__alt_data_end+0xf800d55c>
1000d7e0:	80800047 	ldb	r2,1(r16)
1000d7e4:	00c01604 	movi	r3,88
1000d7e8:	10c20026 	beq	r2,r3,1000dfec <_strtod_r+0xd28>
1000d7ec:	00c01e04 	movi	r3,120
1000d7f0:	10c1fe26 	beq	r2,r3,1000dfec <_strtod_r+0xd28>
1000d7f4:	80800044 	addi	r2,r16,1
1000d7f8:	1021883a 	mov	r16,r2
1000d7fc:	d8800615 	stw	r2,24(sp)
1000d800:	10800044 	addi	r2,r2,1
1000d804:	173fffc3 	ldbu	fp,-1(r2)
1000d808:	e0c03fcc 	andi	r3,fp,255
1000d80c:	18c0201c 	xori	r3,r3,128
1000d810:	18ffe004 	addi	r3,r3,-128
1000d814:	193ff826 	beq	r3,r4,1000d7f8 <__alt_data_end+0xf800d7f8>
1000d818:	18002126 	beq	r3,zero,1000d8a0 <_strtod_r+0x5dc>
1000d81c:	00c00044 	movi	r3,1
1000d820:	dc000815 	stw	r16,32(sp)
1000d824:	d8c00c15 	stw	r3,48(sp)
1000d828:	003f1b06 	br	1000d498 <__alt_data_end+0xf800d498>
1000d82c:	8809883a 	mov	r4,r17
1000d830:	000ac040 	call	1000ac04 <_localeconv_r>
1000d834:	11000017 	ldw	r4,0(r2)
1000d838:	0003f300 	call	10003f30 <strlen>
1000d83c:	d8c00617 	ldw	r3,24(sp)
1000d840:	1885883a 	add	r2,r3,r2
1000d844:	d8800615 	stw	r2,24(sp)
1000d848:	15c00007 	ldb	r23,0(r2)
1000d84c:	8001771e 	bne	r16,zero,1000de2c <_strtod_r+0xb68>
1000d850:	01000c04 	movi	r4,48
1000d854:	b903581e 	bne	r23,r4,1000e5b8 <_strtod_r+0x12f4>
1000d858:	11000044 	addi	r4,r2,1
1000d85c:	b80b883a 	mov	r5,r23
1000d860:	d9000615 	stw	r4,24(sp)
1000d864:	25c00007 	ldb	r23,0(r4)
1000d868:	20adc83a 	sub	r22,r4,r2
1000d86c:	21000044 	addi	r4,r4,1
1000d870:	b97ffb26 	beq	r23,r5,1000d860 <__alt_data_end+0xf800d860>
1000d874:	b8bff3c4 	addi	r2,r23,-49
1000d878:	01000204 	movi	r4,8
1000d87c:	2083002e 	bgeu	r4,r2,1000e480 <_strtod_r+0x11bc>
1000d880:	00801944 	movi	r2,101
1000d884:	b8813a26 	beq	r23,r2,1000dd70 <_strtod_r+0xaac>
1000d888:	0039883a 	mov	fp,zero
1000d88c:	d8000b15 	stw	zero,44(sp)
1000d890:	04800044 	movi	r18,1
1000d894:	003f2e06 	br	1000d550 <__alt_data_end+0xf800d550>
1000d898:	d8c00c17 	ldw	r3,48(sp)
1000d89c:	18017d26 	beq	r3,zero,1000de94 <_strtod_r+0xbd0>
1000d8a0:	d8000815 	stw	zero,32(sp)
1000d8a4:	0039883a 	mov	fp,zero
1000d8a8:	003f2f06 	br	1000d568 <__alt_data_end+0xf800d568>
1000d8ac:	e4a5c83a 	sub	r18,fp,r18
1000d8b0:	9565883a 	add	r18,r18,r21
1000d8b4:	0482370e 	bge	zero,r18,1000e194 <_strtod_r+0xed0>
1000d8b8:	908003cc 	andi	r2,r18,15
1000d8bc:	10000b26 	beq	r2,zero,1000d8ec <_strtod_r+0x628>
1000d8c0:	100490fa 	slli	r2,r2,3
1000d8c4:	00c400b4 	movhi	r3,4098
1000d8c8:	18f28604 	addi	r3,r3,-13800
1000d8cc:	1885883a 	add	r2,r3,r2
1000d8d0:	11000017 	ldw	r4,0(r2)
1000d8d4:	11400117 	ldw	r5,4(r2)
1000d8d8:	b80d883a 	mov	r6,r23
1000d8dc:	b00f883a 	mov	r7,r22
1000d8e0:	00180680 	call	10018068 <__muldf3>
1000d8e4:	102f883a 	mov	r23,r2
1000d8e8:	182d883a 	mov	r22,r3
1000d8ec:	053ffc04 	movi	r20,-16
1000d8f0:	9524703a 	and	r18,r18,r20
1000d8f4:	90003826 	beq	r18,zero,1000d9d8 <_strtod_r+0x714>
1000d8f8:	00804d04 	movi	r2,308
1000d8fc:	1481eb16 	blt	r2,r18,1000e0ac <_strtod_r+0xde8>
1000d900:	9029d13a 	srai	r20,r18,4
1000d904:	02c00044 	movi	r11,1
1000d908:	5d03900e 	bge	r11,r20,1000e74c <_strtod_r+0x1488>
1000d90c:	010400b4 	movhi	r4,4098
1000d910:	21327c04 	addi	r4,r4,-13840
1000d914:	2011883a 	mov	r8,r4
1000d918:	0025883a 	mov	r18,zero
1000d91c:	880b883a 	mov	r5,r17
1000d920:	d9000715 	stw	r4,28(sp)
1000d924:	dc000b15 	stw	r16,44(sp)
1000d928:	9023883a 	mov	r17,r18
1000d92c:	b805883a 	mov	r2,r23
1000d930:	b007883a 	mov	r3,r22
1000d934:	0009883a 	mov	r4,zero
1000d938:	4021883a 	mov	r16,r8
1000d93c:	2825883a 	mov	r18,r5
1000d940:	a180004c 	andi	r6,r20,1
1000d944:	30000826 	beq	r6,zero,1000d968 <_strtod_r+0x6a4>
1000d948:	81800017 	ldw	r6,0(r16)
1000d94c:	81c00117 	ldw	r7,4(r16)
1000d950:	1009883a 	mov	r4,r2
1000d954:	180b883a 	mov	r5,r3
1000d958:	dac01315 	stw	r11,76(sp)
1000d95c:	00180680 	call	10018068 <__muldf3>
1000d960:	dac01317 	ldw	r11,76(sp)
1000d964:	01000044 	movi	r4,1
1000d968:	a029d07a 	srai	r20,r20,1
1000d96c:	8c400044 	addi	r17,r17,1
1000d970:	84000204 	addi	r16,r16,8
1000d974:	a2fff21e 	bne	r20,r11,1000d940 <__alt_data_end+0xf800d940>
1000d978:	900b883a 	mov	r5,r18
1000d97c:	21003fcc 	andi	r4,r4,255
1000d980:	8825883a 	mov	r18,r17
1000d984:	dc000b17 	ldw	r16,44(sp)
1000d988:	2823883a 	mov	r17,r5
1000d98c:	2003c01e 	bne	r4,zero,1000e890 <_strtod_r+0x15cc>
1000d990:	901490fa 	slli	r10,r18,3
1000d994:	d8800717 	ldw	r2,28(sp)
1000d998:	01ff2c34 	movhi	r7,64688
1000d99c:	b80d883a 	mov	r6,r23
1000d9a0:	12a5883a 	add	r18,r2,r10
1000d9a4:	91000017 	ldw	r4,0(r18)
1000d9a8:	91400117 	ldw	r5,4(r18)
1000d9ac:	b1cf883a 	add	r7,r22,r7
1000d9b0:	00180680 	call	10018068 <__muldf3>
1000d9b4:	102f883a 	mov	r23,r2
1000d9b8:	011f2834 	movhi	r4,31904
1000d9bc:	189ffc2c 	andhi	r2,r3,32752
1000d9c0:	2081ba36 	bltu	r4,r2,1000e0ac <_strtod_r+0xde8>
1000d9c4:	011f2434 	movhi	r4,31888
1000d9c8:	20834a2e 	bgeu	r4,r2,1000e6f4 <_strtod_r+0x1430>
1000d9cc:	059ffc34 	movhi	r22,32752
1000d9d0:	b5bfffc4 	addi	r22,r22,-1
1000d9d4:	05ffffc4 	movi	r23,-1
1000d9d8:	d8000715 	stw	zero,28(sp)
1000d9dc:	d9400817 	ldw	r5,32(sp)
1000d9e0:	dcc00015 	stw	r19,0(sp)
1000d9e4:	e00f883a 	mov	r7,fp
1000d9e8:	800d883a 	mov	r6,r16
1000d9ec:	8809883a 	mov	r4,r17
1000d9f0:	000b6dc0 	call	1000b6dc <__s2b>
1000d9f4:	d8800b15 	stw	r2,44(sp)
1000d9f8:	1001ac26 	beq	r2,zero,1000e0ac <_strtod_r+0xde8>
1000d9fc:	a807d7fa 	srai	r3,r21,31
1000da00:	0545c83a 	sub	r2,zero,r21
1000da04:	dd400c15 	stw	r21,48(sp)
1000da08:	1886703a 	and	r3,r3,r2
1000da0c:	d8c00e15 	stw	r3,56(sp)
1000da10:	a8015916 	blt	r21,zero,1000df78 <_strtod_r+0xcb4>
1000da14:	d9400b17 	ldw	r5,44(sp)
1000da18:	0011883a 	mov	r8,zero
1000da1c:	0021883a 	mov	r16,zero
1000da20:	29400304 	addi	r5,r5,12
1000da24:	d9401115 	stw	r5,68(sp)
1000da28:	4025883a 	mov	r18,r8
1000da2c:	d8800b17 	ldw	r2,44(sp)
1000da30:	8809883a 	mov	r4,r17
1000da34:	11400117 	ldw	r5,4(r2)
1000da38:	000b4c40 	call	1000b4c4 <_Balloc>
1000da3c:	1027883a 	mov	r19,r2
1000da40:	10015226 	beq	r2,zero,1000df8c <_strtod_r+0xcc8>
1000da44:	d8c00b17 	ldw	r3,44(sp)
1000da48:	d9401117 	ldw	r5,68(sp)
1000da4c:	11000304 	addi	r4,r2,12
1000da50:	19800417 	ldw	r6,16(r3)
1000da54:	31800084 	addi	r6,r6,2
1000da58:	318d883a 	add	r6,r6,r6
1000da5c:	318d883a 	add	r6,r6,r6
1000da60:	000b0f80 	call	1000b0f8 <memcpy>
1000da64:	d9000204 	addi	r4,sp,8
1000da68:	d9000015 	stw	r4,0(sp)
1000da6c:	d9c00404 	addi	r7,sp,16
1000da70:	b80b883a 	mov	r5,r23
1000da74:	b00d883a 	mov	r6,r22
1000da78:	8809883a 	mov	r4,r17
1000da7c:	000c2140 	call	1000c214 <__d2b>
1000da80:	d8800515 	stw	r2,20(sp)
1000da84:	ddc00815 	stw	r23,32(sp)
1000da88:	dd801215 	stw	r22,72(sp)
1000da8c:	10029f26 	beq	r2,zero,1000e50c <_strtod_r+0x1248>
1000da90:	01400044 	movi	r5,1
1000da94:	8809883a 	mov	r4,r17
1000da98:	000b8f80 	call	1000b8f8 <__i2b>
1000da9c:	1021883a 	mov	r16,r2
1000daa0:	10013a26 	beq	r2,zero,1000df8c <_strtod_r+0xcc8>
1000daa4:	d8800417 	ldw	r2,16(sp)
1000daa8:	1000b816 	blt	r2,zero,1000dd8c <_strtod_r+0xac8>
1000daac:	d9400e17 	ldw	r5,56(sp)
1000dab0:	d9000c17 	ldw	r4,48(sp)
1000dab4:	28a9883a 	add	r20,r5,r2
1000dab8:	d9400717 	ldw	r5,28(sp)
1000dabc:	dd400217 	ldw	r21,8(sp)
1000dac0:	073f0084 	movi	fp,-1022
1000dac4:	1147c83a 	sub	r3,r2,r5
1000dac8:	1d47883a 	add	r3,r3,r21
1000dacc:	00800d84 	movi	r2,54
1000dad0:	18ffffc4 	addi	r3,r3,-1
1000dad4:	156bc83a 	sub	r21,r2,r21
1000dad8:	1f00950e 	bge	r3,fp,1000dd30 <_strtod_r+0xa6c>
1000dadc:	e0f9c83a 	sub	fp,fp,r3
1000dae0:	008007c4 	movi	r2,31
1000dae4:	af2bc83a 	sub	r21,r21,fp
1000dae8:	1700ac16 	blt	r2,fp,1000dd9c <_strtod_r+0xad8>
1000daec:	00800044 	movi	r2,1
1000daf0:	1704983a 	sll	r2,r2,fp
1000daf4:	d8000d15 	stw	zero,52(sp)
1000daf8:	d8800f15 	stw	r2,60(sp)
1000dafc:	2547883a 	add	r3,r4,r21
1000db00:	d9000717 	ldw	r4,28(sp)
1000db04:	a56b883a 	add	r21,r20,r21
1000db08:	20f9883a 	add	fp,r4,r3
1000db0c:	a009883a 	mov	r4,r20
1000db10:	ad00010e 	bge	r21,r20,1000db18 <_strtod_r+0x854>
1000db14:	a809883a 	mov	r4,r21
1000db18:	e005883a 	mov	r2,fp
1000db1c:	2700010e 	bge	r4,fp,1000db24 <_strtod_r+0x860>
1000db20:	2005883a 	mov	r2,r4
1000db24:	0080030e 	bge	zero,r2,1000db34 <_strtod_r+0x870>
1000db28:	a8abc83a 	sub	r21,r21,r2
1000db2c:	e0b9c83a 	sub	fp,fp,r2
1000db30:	a0a9c83a 	sub	r20,r20,r2
1000db34:	d9400e17 	ldw	r5,56(sp)
1000db38:	28001126 	beq	r5,zero,1000db80 <_strtod_r+0x8bc>
1000db3c:	280d883a 	mov	r6,r5
1000db40:	8809883a 	mov	r4,r17
1000db44:	800b883a 	mov	r5,r16
1000db48:	000bbc00 	call	1000bbc0 <__pow5mult>
1000db4c:	1021883a 	mov	r16,r2
1000db50:	10010e26 	beq	r2,zero,1000df8c <_strtod_r+0xcc8>
1000db54:	d9800517 	ldw	r6,20(sp)
1000db58:	100b883a 	mov	r5,r2
1000db5c:	8809883a 	mov	r4,r17
1000db60:	000b9340 	call	1000b934 <__multiply>
1000db64:	10010926 	beq	r2,zero,1000df8c <_strtod_r+0xcc8>
1000db68:	d9400517 	ldw	r5,20(sp)
1000db6c:	8809883a 	mov	r4,r17
1000db70:	d8801315 	stw	r2,76(sp)
1000db74:	000b56c0 	call	1000b56c <_Bfree>
1000db78:	d8801317 	ldw	r2,76(sp)
1000db7c:	d8800515 	stw	r2,20(sp)
1000db80:	0540060e 	bge	zero,r21,1000db9c <_strtod_r+0x8d8>
1000db84:	d9400517 	ldw	r5,20(sp)
1000db88:	a80d883a 	mov	r6,r21
1000db8c:	8809883a 	mov	r4,r17
1000db90:	000bd000 	call	1000bd00 <__lshift>
1000db94:	d8800515 	stw	r2,20(sp)
1000db98:	10025c26 	beq	r2,zero,1000e50c <_strtod_r+0x1248>
1000db9c:	d8800c17 	ldw	r2,48(sp)
1000dba0:	10000626 	beq	r2,zero,1000dbbc <_strtod_r+0x8f8>
1000dba4:	d9800c17 	ldw	r6,48(sp)
1000dba8:	980b883a 	mov	r5,r19
1000dbac:	8809883a 	mov	r4,r17
1000dbb0:	000bbc00 	call	1000bbc0 <__pow5mult>
1000dbb4:	1027883a 	mov	r19,r2
1000dbb8:	1000f426 	beq	r2,zero,1000df8c <_strtod_r+0xcc8>
1000dbbc:	0700060e 	bge	zero,fp,1000dbd8 <_strtod_r+0x914>
1000dbc0:	980b883a 	mov	r5,r19
1000dbc4:	e00d883a 	mov	r6,fp
1000dbc8:	8809883a 	mov	r4,r17
1000dbcc:	000bd000 	call	1000bd00 <__lshift>
1000dbd0:	1027883a 	mov	r19,r2
1000dbd4:	1000ed26 	beq	r2,zero,1000df8c <_strtod_r+0xcc8>
1000dbd8:	0500060e 	bge	zero,r20,1000dbf4 <_strtod_r+0x930>
1000dbdc:	800b883a 	mov	r5,r16
1000dbe0:	a00d883a 	mov	r6,r20
1000dbe4:	8809883a 	mov	r4,r17
1000dbe8:	000bd000 	call	1000bd00 <__lshift>
1000dbec:	1021883a 	mov	r16,r2
1000dbf0:	1000e626 	beq	r2,zero,1000df8c <_strtod_r+0xcc8>
1000dbf4:	d9400517 	ldw	r5,20(sp)
1000dbf8:	980d883a 	mov	r6,r19
1000dbfc:	8809883a 	mov	r4,r17
1000dc00:	000bea80 	call	1000bea8 <__mdiff>
1000dc04:	1025883a 	mov	r18,r2
1000dc08:	1000e026 	beq	r2,zero,1000df8c <_strtod_r+0xcc8>
1000dc0c:	15400317 	ldw	r21,12(r2)
1000dc10:	800b883a 	mov	r5,r16
1000dc14:	10000315 	stw	zero,12(r2)
1000dc18:	1009883a 	mov	r4,r2
1000dc1c:	000be480 	call	1000be48 <__mcmp>
1000dc20:	10026716 	blt	r2,zero,1000e5c0 <_strtod_r+0x12fc>
1000dc24:	10029626 	beq	r2,zero,1000e680 <_strtod_r+0x13bc>
1000dc28:	800b883a 	mov	r5,r16
1000dc2c:	9009883a 	mov	r4,r18
1000dc30:	000c3600 	call	1000c360 <__ratio>
1000dc34:	000d883a 	mov	r6,zero
1000dc38:	01d00034 	movhi	r7,16384
1000dc3c:	1009883a 	mov	r4,r2
1000dc40:	180b883a 	mov	r5,r3
1000dc44:	1039883a 	mov	fp,r2
1000dc48:	1829883a 	mov	r20,r3
1000dc4c:	0017f740 	call	10017f74 <__ledf2>
1000dc50:	00803b16 	blt	zero,r2,1000dd40 <_strtod_r+0xa7c>
1000dc54:	a8005e26 	beq	r21,zero,1000ddd0 <_strtod_r+0xb0c>
1000dc58:	050ffc34 	movhi	r20,16368
1000dc5c:	d8000f15 	stw	zero,60(sp)
1000dc60:	d8001015 	stw	zero,64(sp)
1000dc64:	dd000d15 	stw	r20,52(sp)
1000dc68:	b71ffc2c 	andhi	fp,r22,32752
1000dc6c:	009ff834 	movhi	r2,32736
1000dc70:	e080f226 	beq	fp,r2,1000e03c <_strtod_r+0xd78>
1000dc74:	d9000717 	ldw	r4,28(sp)
1000dc78:	20000c26 	beq	r4,zero,1000dcac <_strtod_r+0x9e8>
1000dc7c:	0081a834 	movhi	r2,1696
1000dc80:	17000a36 	bltu	r2,fp,1000dcac <_strtod_r+0x9e8>
1000dc84:	d9001017 	ldw	r4,64(sp)
1000dc88:	d9400d17 	ldw	r5,52(sp)
1000dc8c:	01d07834 	movhi	r7,16864
1000dc90:	39ffffc4 	addi	r7,r7,-1
1000dc94:	01bff034 	movhi	r6,65472
1000dc98:	0017f740 	call	10017f74 <__ledf2>
1000dc9c:	0080a70e 	bge	zero,r2,1000df3c <_strtod_r+0xc78>
1000dca0:	0081ac34 	movhi	r2,1712
1000dca4:	a091883a 	add	r8,r20,r2
1000dca8:	4729c83a 	sub	r20,r8,fp
1000dcac:	b809883a 	mov	r4,r23
1000dcb0:	b00b883a 	mov	r5,r22
1000dcb4:	000c0a40 	call	1000c0a4 <__ulp>
1000dcb8:	d9000f17 	ldw	r4,60(sp)
1000dcbc:	a00b883a 	mov	r5,r20
1000dcc0:	100d883a 	mov	r6,r2
1000dcc4:	180f883a 	mov	r7,r3
1000dcc8:	00180680 	call	10018068 <__muldf3>
1000dccc:	b80d883a 	mov	r6,r23
1000dcd0:	b00f883a 	mov	r7,r22
1000dcd4:	1009883a 	mov	r4,r2
1000dcd8:	180b883a 	mov	r5,r3
1000dcdc:	0016b940 	call	10016b94 <__adddf3>
1000dce0:	102f883a 	mov	r23,r2
1000dce4:	182d883a 	mov	r22,r3
1000dce8:	1829883a 	mov	r20,r3
1000dcec:	d9000717 	ldw	r4,28(sp)
1000dcf0:	2000021e 	bne	r4,zero,1000dcfc <_strtod_r+0xa38>
1000dcf4:	a09ffc2c 	andhi	r2,r20,32752
1000dcf8:	e080f126 	beq	fp,r2,1000e0c0 <_strtod_r+0xdfc>
1000dcfc:	d9400517 	ldw	r5,20(sp)
1000dd00:	8809883a 	mov	r4,r17
1000dd04:	000b56c0 	call	1000b56c <_Bfree>
1000dd08:	980b883a 	mov	r5,r19
1000dd0c:	8809883a 	mov	r4,r17
1000dd10:	000b56c0 	call	1000b56c <_Bfree>
1000dd14:	800b883a 	mov	r5,r16
1000dd18:	8809883a 	mov	r4,r17
1000dd1c:	000b56c0 	call	1000b56c <_Bfree>
1000dd20:	900b883a 	mov	r5,r18
1000dd24:	8809883a 	mov	r4,r17
1000dd28:	000b56c0 	call	1000b56c <_Bfree>
1000dd2c:	003f3f06 	br	1000da2c <__alt_data_end+0xf800da2c>
1000dd30:	00c00044 	movi	r3,1
1000dd34:	d8000d15 	stw	zero,52(sp)
1000dd38:	d8c00f15 	stw	r3,60(sp)
1000dd3c:	003f6f06 	br	1000dafc <__alt_data_end+0xf800dafc>
1000dd40:	000d883a 	mov	r6,zero
1000dd44:	01cff834 	movhi	r7,16352
1000dd48:	e009883a 	mov	r4,fp
1000dd4c:	a00b883a 	mov	r5,r20
1000dd50:	00180680 	call	10018068 <__muldf3>
1000dd54:	d8801015 	stw	r2,64(sp)
1000dd58:	d8c00d15 	stw	r3,52(sp)
1000dd5c:	a8001a1e 	bne	r21,zero,1000ddc8 <_strtod_r+0xb04>
1000dd60:	1a20003c 	xorhi	r8,r3,32768
1000dd64:	d8800f15 	stw	r2,60(sp)
1000dd68:	4029883a 	mov	r20,r8
1000dd6c:	003fbe06 	br	1000dc68 <__alt_data_end+0xf800dc68>
1000dd70:	d8000b15 	stw	zero,44(sp)
1000dd74:	04800044 	movi	r18,1
1000dd78:	b000021e 	bne	r22,zero,1000dd84 <_strtod_r+0xac0>
1000dd7c:	d8c00c17 	ldw	r3,48(sp)
1000dd80:	183d9d26 	beq	r3,zero,1000d3f8 <__alt_data_end+0xf800d3f8>
1000dd84:	0039883a 	mov	fp,zero
1000dd88:	003e5206 	br	1000d6d4 <__alt_data_end+0xf800d6d4>
1000dd8c:	d8c00c17 	ldw	r3,48(sp)
1000dd90:	dd000e17 	ldw	r20,56(sp)
1000dd94:	1889c83a 	sub	r4,r3,r2
1000dd98:	003f4706 	br	1000dab8 <__alt_data_end+0xf800dab8>
1000dd9c:	00bef884 	movi	r2,-1054
1000dda0:	07000044 	movi	fp,1
1000dda4:	10c5c83a 	sub	r2,r2,r3
1000dda8:	e084983a 	sll	r2,fp,r2
1000ddac:	df000f15 	stw	fp,60(sp)
1000ddb0:	d8800d15 	stw	r2,52(sp)
1000ddb4:	003f5106 	br	1000dafc <__alt_data_end+0xf800dafc>
1000ddb8:	d8c00717 	ldw	r3,28(sp)
1000ddbc:	0009883a 	mov	r4,zero
1000ddc0:	d8c00615 	stw	r3,24(sp)
1000ddc4:	003de506 	br	1000d55c <__alt_data_end+0xf800d55c>
1000ddc8:	da000d17 	ldw	r8,52(sp)
1000ddcc:	003fe506 	br	1000dd64 <__alt_data_end+0xf800dd64>
1000ddd0:	b800521e 	bne	r23,zero,1000df1c <_strtod_r+0xc58>
1000ddd4:	01000434 	movhi	r4,16
1000ddd8:	213fffc4 	addi	r4,r4,-1
1000dddc:	b104703a 	and	r2,r22,r4
1000dde0:	1000501e 	bne	r2,zero,1000df24 <_strtod_r+0xc60>
1000dde4:	000d883a 	mov	r6,zero
1000dde8:	01cffc34 	movhi	r7,16368
1000ddec:	e009883a 	mov	r4,fp
1000ddf0:	a00b883a 	mov	r5,r20
1000ddf4:	0017f740 	call	10017f74 <__ledf2>
1000ddf8:	10024216 	blt	r2,zero,1000e704 <_strtod_r+0x1440>
1000ddfc:	a00b883a 	mov	r5,r20
1000de00:	000d883a 	mov	r6,zero
1000de04:	01cff834 	movhi	r7,16352
1000de08:	e009883a 	mov	r4,fp
1000de0c:	00180680 	call	10018068 <__muldf3>
1000de10:	d8801015 	stw	r2,64(sp)
1000de14:	d8c00d15 	stw	r3,52(sp)
1000de18:	1029883a 	mov	r20,r2
1000de1c:	1a20003c 	xorhi	r8,r3,32768
1000de20:	dd000f15 	stw	r20,60(sp)
1000de24:	4029883a 	mov	r20,r8
1000de28:	003f8f06 	br	1000dc68 <__alt_data_end+0xf800dc68>
1000de2c:	8039883a 	mov	fp,r16
1000de30:	002d883a 	mov	r22,zero
1000de34:	d8000b15 	stw	zero,44(sp)
1000de38:	bd7ff404 	addi	r21,r23,-48
1000de3c:	00800244 	movi	r2,9
1000de40:	15401236 	bltu	r2,r21,1000de8c <_strtod_r+0xbc8>
1000de44:	dd400e15 	stw	r21,56(sp)
1000de48:	b0800044 	addi	r2,r22,1
1000de4c:	a801701e 	bne	r21,zero,1000e410 <_strtod_r+0x114c>
1000de50:	ddc00617 	ldw	r23,24(sp)
1000de54:	102d883a 	mov	r22,r2
1000de58:	b8800044 	addi	r2,r23,1
1000de5c:	d8800615 	stw	r2,24(sp)
1000de60:	bdc00047 	ldb	r23,1(r23)
1000de64:	003ff406 	br	1000de38 <__alt_data_end+0xf800de38>
1000de68:	00c00044 	movi	r3,1
1000de6c:	d8c00e15 	stw	r3,56(sp)
1000de70:	d8c00717 	ldw	r3,28(sp)
1000de74:	18800084 	addi	r2,r3,2
1000de78:	d8800615 	stw	r2,24(sp)
1000de7c:	1dc00087 	ldb	r23,2(r3)
1000de80:	003e1f06 	br	1000d700 <__alt_data_end+0xf800d700>
1000de84:	d8000e15 	stw	zero,56(sp)
1000de88:	003ff906 	br	1000de70 <__alt_data_end+0xf800de70>
1000de8c:	04800044 	movi	r18,1
1000de90:	003dad06 	br	1000d548 <__alt_data_end+0xf800d548>
1000de94:	903d581e 	bne	r18,zero,1000d3f8 <__alt_data_end+0xf800d3f8>
1000de98:	00801384 	movi	r2,78
1000de9c:	b8800526 	beq	r23,r2,1000deb4 <_strtod_r+0xbf0>
1000dea0:	15fd530e 	bge	r2,r23,1000d3f0 <__alt_data_end+0xf800d3f0>
1000dea4:	00801a44 	movi	r2,105
1000dea8:	b8819a26 	beq	r23,r2,1000e514 <_strtod_r+0x1250>
1000deac:	00801b84 	movi	r2,110
1000deb0:	b8bd511e 	bne	r23,r2,1000d3f8 <__alt_data_end+0xf800d3f8>
1000deb4:	014400b4 	movhi	r5,4098
1000deb8:	d9000617 	ldw	r4,24(sp)
1000debc:	2972bb04 	addi	r5,r5,-13588
1000dec0:	01c00644 	movi	r7,25
1000dec4:	00000b06 	br	1000def4 <_strtod_r+0xc30>
1000dec8:	21000044 	addi	r4,r4,1
1000decc:	20800003 	ldbu	r2,0(r4)
1000ded0:	10ffefc4 	addi	r3,r2,-65
1000ded4:	10803fcc 	andi	r2,r2,255
1000ded8:	1080201c 	xori	r2,r2,128
1000dedc:	18c03fcc 	andi	r3,r3,255
1000dee0:	10bfe004 	addi	r2,r2,-128
1000dee4:	38c00136 	bltu	r7,r3,1000deec <_strtod_r+0xc28>
1000dee8:	10800804 	addi	r2,r2,32
1000deec:	29400044 	addi	r5,r5,1
1000def0:	11bd411e 	bne	r2,r6,1000d3f8 <__alt_data_end+0xf800d3f8>
1000def4:	29800007 	ldb	r6,0(r5)
1000def8:	303ff31e 	bne	r6,zero,1000dec8 <__alt_data_end+0xf800dec8>
1000defc:	20800044 	addi	r2,r4,1
1000df00:	d8800615 	stw	r2,24(sp)
1000df04:	20c00047 	ldb	r3,1(r4)
1000df08:	00800a04 	movi	r2,40
1000df0c:	18bde326 	beq	r3,r2,1000d69c <__alt_data_end+0xf800d69c>
1000df10:	05bffe34 	movhi	r22,65528
1000df14:	002f883a 	mov	r23,zero
1000df18:	003dea06 	br	1000d6c4 <__alt_data_end+0xf800d6c4>
1000df1c:	00800044 	movi	r2,1
1000df20:	b880ff26 	beq	r23,r2,1000e320 <_strtod_r+0x105c>
1000df24:	014ffc34 	movhi	r5,16368
1000df28:	d8000f15 	stw	zero,60(sp)
1000df2c:	052ffc34 	movhi	r20,49136
1000df30:	d8001015 	stw	zero,64(sp)
1000df34:	d9400d15 	stw	r5,52(sp)
1000df38:	003f4b06 	br	1000dc68 <__alt_data_end+0xf800dc68>
1000df3c:	d9001017 	ldw	r4,64(sp)
1000df40:	d9400d17 	ldw	r5,52(sp)
1000df44:	0015d640 	call	10015d64 <__fixunsdfsi>
1000df48:	1000f126 	beq	r2,zero,1000e310 <_strtod_r+0x104c>
1000df4c:	1009883a 	mov	r4,r2
1000df50:	001932c0 	call	1001932c <__floatunsidf>
1000df54:	d8801015 	stw	r2,64(sp)
1000df58:	d8c00d15 	stw	r3,52(sp)
1000df5c:	a800ea1e 	bne	r21,zero,1000e308 <_strtod_r+0x1044>
1000df60:	d8800d17 	ldw	r2,52(sp)
1000df64:	1220003c 	xorhi	r8,r2,32768
1000df68:	d8c01017 	ldw	r3,64(sp)
1000df6c:	4029883a 	mov	r20,r8
1000df70:	d8c00f15 	stw	r3,60(sp)
1000df74:	003f4a06 	br	1000dca0 <__alt_data_end+0xf800dca0>
1000df78:	d8000c15 	stw	zero,48(sp)
1000df7c:	003ea506 	br	1000da14 <__alt_data_end+0xf800da14>
1000df80:	d8c00817 	ldw	r3,32(sp)
1000df84:	00bfffc4 	movi	r2,-1
1000df88:	1880441e 	bne	r3,r2,1000e09c <_strtod_r+0xdd8>
1000df8c:	9011883a 	mov	r8,r18
1000df90:	d8800517 	ldw	r2,20(sp)
1000df94:	00c00884 	movi	r3,34
1000df98:	88c00015 	stw	r3,0(r17)
1000df9c:	d8000815 	stw	zero,32(sp)
1000dfa0:	071ffc34 	movhi	fp,32752
1000dfa4:	100b883a 	mov	r5,r2
1000dfa8:	8809883a 	mov	r4,r17
1000dfac:	da001315 	stw	r8,76(sp)
1000dfb0:	000b56c0 	call	1000b56c <_Bfree>
1000dfb4:	980b883a 	mov	r5,r19
1000dfb8:	8809883a 	mov	r4,r17
1000dfbc:	000b56c0 	call	1000b56c <_Bfree>
1000dfc0:	800b883a 	mov	r5,r16
1000dfc4:	8809883a 	mov	r4,r17
1000dfc8:	000b56c0 	call	1000b56c <_Bfree>
1000dfcc:	d9400b17 	ldw	r5,44(sp)
1000dfd0:	8809883a 	mov	r4,r17
1000dfd4:	000b56c0 	call	1000b56c <_Bfree>
1000dfd8:	da001317 	ldw	r8,76(sp)
1000dfdc:	8809883a 	mov	r4,r17
1000dfe0:	400b883a 	mov	r5,r8
1000dfe4:	000b56c0 	call	1000b56c <_Bfree>
1000dfe8:	003d5f06 	br	1000d568 <__alt_data_end+0xf800d568>
1000dfec:	d8c00a17 	ldw	r3,40(sp)
1000dff0:	d8800504 	addi	r2,sp,20
1000dff4:	018400b4 	movhi	r6,4098
1000dff8:	31b2c104 	addi	r6,r6,-13564
1000dffc:	d8c00115 	stw	r3,4(sp)
1000e000:	d8800015 	stw	r2,0(sp)
1000e004:	d9c00404 	addi	r7,sp,16
1000e008:	d9400604 	addi	r5,sp,24
1000e00c:	8809883a 	mov	r4,r17
1000e010:	00138700 	call	10013870 <__gethex>
1000e014:	148001cc 	andi	r18,r2,7
1000e018:	903e2126 	beq	r18,zero,1000d8a0 <__alt_data_end+0xf800d8a0>
1000e01c:	00c00184 	movi	r3,6
1000e020:	90c0c71e 	bne	r18,r3,1000e340 <_strtod_r+0x107c>
1000e024:	84000044 	addi	r16,r16,1
1000e028:	dc000615 	stw	r16,24(sp)
1000e02c:	d8000815 	stw	zero,32(sp)
1000e030:	0039883a 	mov	fp,zero
1000e034:	d8000a15 	stw	zero,40(sp)
1000e038:	003d4b06 	br	1000d568 <__alt_data_end+0xf800d568>
1000e03c:	00bf2c34 	movhi	r2,64688
1000e040:	b0ad883a 	add	r22,r22,r2
1000e044:	b809883a 	mov	r4,r23
1000e048:	b00b883a 	mov	r5,r22
1000e04c:	000c0a40 	call	1000c0a4 <__ulp>
1000e050:	d9000f17 	ldw	r4,60(sp)
1000e054:	100d883a 	mov	r6,r2
1000e058:	180f883a 	mov	r7,r3
1000e05c:	a00b883a 	mov	r5,r20
1000e060:	00180680 	call	10018068 <__muldf3>
1000e064:	b80d883a 	mov	r6,r23
1000e068:	1009883a 	mov	r4,r2
1000e06c:	b00f883a 	mov	r7,r22
1000e070:	180b883a 	mov	r5,r3
1000e074:	0016b940 	call	10016b94 <__adddf3>
1000e078:	011f2834 	movhi	r4,31904
1000e07c:	102f883a 	mov	r23,r2
1000e080:	213fffc4 	addi	r4,r4,-1
1000e084:	189ffc2c 	andhi	r2,r3,32752
1000e088:	20807b2e 	bgeu	r4,r2,1000e278 <_strtod_r+0xfb4>
1000e08c:	d9401217 	ldw	r5,72(sp)
1000e090:	009ffc34 	movhi	r2,32752
1000e094:	10bfffc4 	addi	r2,r2,-1
1000e098:	28bfb926 	beq	r5,r2,1000df80 <__alt_data_end+0xf800df80>
1000e09c:	059ffc34 	movhi	r22,32752
1000e0a0:	b5bfffc4 	addi	r22,r22,-1
1000e0a4:	05ffffc4 	movi	r23,-1
1000e0a8:	003f1406 	br	1000dcfc <__alt_data_end+0xf800dcfc>
1000e0ac:	00800884 	movi	r2,34
1000e0b0:	88800015 	stw	r2,0(r17)
1000e0b4:	d8000815 	stw	zero,32(sp)
1000e0b8:	071ffc34 	movhi	fp,32752
1000e0bc:	003d2a06 	br	1000d568 <__alt_data_end+0xf800d568>
1000e0c0:	d9400d17 	ldw	r5,52(sp)
1000e0c4:	d9001017 	ldw	r4,64(sp)
1000e0c8:	00191d00 	call	100191d0 <__fixdfsi>
1000e0cc:	1009883a 	mov	r4,r2
1000e0d0:	00192500 	call	10019250 <__floatsidf>
1000e0d4:	d9001017 	ldw	r4,64(sp)
1000e0d8:	d9400d17 	ldw	r5,52(sp)
1000e0dc:	100d883a 	mov	r6,r2
1000e0e0:	180f883a 	mov	r7,r3
1000e0e4:	00188d40 	call	100188d4 <__subdf3>
1000e0e8:	1011883a 	mov	r8,r2
1000e0ec:	1839883a 	mov	fp,r3
1000e0f0:	a800121e 	bne	r21,zero,1000e13c <_strtod_r+0xe78>
1000e0f4:	b800111e 	bne	r23,zero,1000e13c <_strtod_r+0xe78>
1000e0f8:	01400434 	movhi	r5,16
1000e0fc:	297fffc4 	addi	r5,r5,-1
1000e100:	a168703a 	and	r20,r20,r5
1000e104:	a0000d1e 	bne	r20,zero,1000e13c <_strtod_r+0xe78>
1000e108:	01a52834 	movhi	r6,38048
1000e10c:	01cff434 	movhi	r7,16336
1000e110:	318d6544 	addi	r6,r6,13717
1000e114:	39ffffc4 	addi	r7,r7,-1
1000e118:	1009883a 	mov	r4,r2
1000e11c:	180b883a 	mov	r5,r3
1000e120:	0017f740 	call	10017f74 <__ledf2>
1000e124:	103ef50e 	bge	r2,zero,1000dcfc <__alt_data_end+0xf800dcfc>
1000e128:	9011883a 	mov	r8,r18
1000e12c:	d8800517 	ldw	r2,20(sp)
1000e130:	d8000815 	stw	zero,32(sp)
1000e134:	b039883a 	mov	fp,r22
1000e138:	003f9a06 	br	1000dfa4 <__alt_data_end+0xf800dfa4>
1000e13c:	01a52834 	movhi	r6,38048
1000e140:	01cff834 	movhi	r7,16352
1000e144:	4009883a 	mov	r4,r8
1000e148:	318d6544 	addi	r6,r6,13717
1000e14c:	39ffffc4 	addi	r7,r7,-1
1000e150:	e00b883a 	mov	r5,fp
1000e154:	da001315 	stw	r8,76(sp)
1000e158:	0017f740 	call	10017f74 <__ledf2>
1000e15c:	da001317 	ldw	r8,76(sp)
1000e160:	10000716 	blt	r2,zero,1000e180 <_strtod_r+0xebc>
1000e164:	018d6c34 	movhi	r6,13744
1000e168:	31b94d44 	addi	r6,r6,-6859
1000e16c:	01cff834 	movhi	r7,16352
1000e170:	4009883a 	mov	r4,r8
1000e174:	e00b883a 	mov	r5,fp
1000e178:	0017e980 	call	10017e98 <__gedf2>
1000e17c:	00bedf0e 	bge	zero,r2,1000dcfc <__alt_data_end+0xf800dcfc>
1000e180:	9011883a 	mov	r8,r18
1000e184:	d8800517 	ldw	r2,20(sp)
1000e188:	ddc00815 	stw	r23,32(sp)
1000e18c:	b039883a 	mov	fp,r22
1000e190:	003f8406 	br	1000dfa4 <__alt_data_end+0xf800dfa4>
1000e194:	903e1026 	beq	r18,zero,1000d9d8 <__alt_data_end+0xf800d9d8>
1000e198:	04a5c83a 	sub	r18,zero,r18
1000e19c:	908003cc 	andi	r2,r18,15
1000e1a0:	10000b26 	beq	r2,zero,1000e1d0 <_strtod_r+0xf0c>
1000e1a4:	100490fa 	slli	r2,r2,3
1000e1a8:	00c400b4 	movhi	r3,4098
1000e1ac:	18f28604 	addi	r3,r3,-13800
1000e1b0:	1885883a 	add	r2,r3,r2
1000e1b4:	11800017 	ldw	r6,0(r2)
1000e1b8:	11c00117 	ldw	r7,4(r2)
1000e1bc:	b809883a 	mov	r4,r23
1000e1c0:	b00b883a 	mov	r5,r22
1000e1c4:	00174400 	call	10017440 <__divdf3>
1000e1c8:	102f883a 	mov	r23,r2
1000e1cc:	182d883a 	mov	r22,r3
1000e1d0:	9025d13a 	srai	r18,r18,4
1000e1d4:	903e0026 	beq	r18,zero,1000d9d8 <__alt_data_end+0xf800d9d8>
1000e1d8:	008007c4 	movi	r2,31
1000e1dc:	14801f16 	blt	r2,r18,1000e25c <_strtod_r+0xf98>
1000e1e0:	9080040c 	andi	r2,r18,16
1000e1e4:	10018d26 	beq	r2,zero,1000e81c <_strtod_r+0x1558>
1000e1e8:	00c01a84 	movi	r3,106
1000e1ec:	d8c00715 	stw	r3,28(sp)
1000e1f0:	04817e0e 	bge	zero,r18,1000e7ec <_strtod_r+0x1528>
1000e1f4:	050400b4 	movhi	r20,4098
1000e1f8:	a532c604 	addi	r20,r20,-13544
1000e1fc:	b805883a 	mov	r2,r23
1000e200:	b007883a 	mov	r3,r22
1000e204:	0009883a 	mov	r4,zero
1000e208:	9180004c 	andi	r6,r18,1
1000e20c:	30000626 	beq	r6,zero,1000e228 <_strtod_r+0xf64>
1000e210:	a1800017 	ldw	r6,0(r20)
1000e214:	a1c00117 	ldw	r7,4(r20)
1000e218:	1009883a 	mov	r4,r2
1000e21c:	180b883a 	mov	r5,r3
1000e220:	00180680 	call	10018068 <__muldf3>
1000e224:	01000044 	movi	r4,1
1000e228:	9025d07a 	srai	r18,r18,1
1000e22c:	a5000204 	addi	r20,r20,8
1000e230:	903ff51e 	bne	r18,zero,1000e208 <__alt_data_end+0xf800e208>
1000e234:	21003fcc 	andi	r4,r4,255
1000e238:	2001891e 	bne	r4,zero,1000e860 <_strtod_r+0x159c>
1000e23c:	d9000717 	ldw	r4,28(sp)
1000e240:	20016a1e 	bne	r4,zero,1000e7ec <_strtod_r+0x1528>
1000e244:	000d883a 	mov	r6,zero
1000e248:	000f883a 	mov	r7,zero
1000e24c:	b809883a 	mov	r4,r23
1000e250:	b00b883a 	mov	r5,r22
1000e254:	0017e100 	call	10017e10 <__eqdf2>
1000e258:	103de01e 	bne	r2,zero,1000d9dc <__alt_data_end+0xf800d9dc>
1000e25c:	00800884 	movi	r2,34
1000e260:	88800015 	stw	r2,0(r17)
1000e264:	d8000815 	stw	zero,32(sp)
1000e268:	0039883a 	mov	fp,zero
1000e26c:	003cbe06 	br	1000d568 <__alt_data_end+0xf800d568>
1000e270:	011387c4 	movi	r4,19999
1000e274:	003d5606 	br	1000d7d0 <__alt_data_end+0xf800d7d0>
1000e278:	0580d434 	movhi	r22,848
1000e27c:	1dad883a 	add	r22,r3,r22
1000e280:	b029883a 	mov	r20,r22
1000e284:	003e9906 	br	1000dcec <__alt_data_end+0xf800dcec>
1000e288:	e5c03fcc 	andi	r23,fp,255
1000e28c:	bdc0201c 	xori	r23,r23,128
1000e290:	bdffe004 	addi	r23,r23,-128
1000e294:	dc800817 	ldw	r18,32(sp)
1000e298:	0029883a 	mov	r20,zero
1000e29c:	0027883a 	mov	r19,zero
1000e2a0:	0021883a 	mov	r16,zero
1000e2a4:	003c9806 	br	1000d508 <__alt_data_end+0xf800d508>
1000e2a8:	00c00944 	movi	r3,37
1000e2ac:	1f07c83a 	sub	r3,r3,fp
1000e2b0:	1d7d7e16 	blt	r3,r21,1000d8ac <__alt_data_end+0xf800d8ac>
1000e2b4:	1721c83a 	sub	r16,r2,fp
1000e2b8:	800490fa 	slli	r2,r16,3
1000e2bc:	044400b4 	movhi	r17,4098
1000e2c0:	8c728604 	addi	r17,r17,-13800
1000e2c4:	8885883a 	add	r2,r17,r2
1000e2c8:	11000017 	ldw	r4,0(r2)
1000e2cc:	11400117 	ldw	r5,4(r2)
1000e2d0:	b80d883a 	mov	r6,r23
1000e2d4:	b00f883a 	mov	r7,r22
1000e2d8:	00180680 	call	10018068 <__muldf3>
1000e2dc:	ac2bc83a 	sub	r21,r21,r16
1000e2e0:	a80c90fa 	slli	r6,r21,3
1000e2e4:	1009883a 	mov	r4,r2
1000e2e8:	180b883a 	mov	r5,r3
1000e2ec:	8985883a 	add	r2,r17,r6
1000e2f0:	11800017 	ldw	r6,0(r2)
1000e2f4:	11c00117 	ldw	r7,4(r2)
1000e2f8:	00180680 	call	10018068 <__muldf3>
1000e2fc:	d8800815 	stw	r2,32(sp)
1000e300:	1839883a 	mov	fp,r3
1000e304:	003c9806 	br	1000d568 <__alt_data_end+0xf800d568>
1000e308:	da000d17 	ldw	r8,52(sp)
1000e30c:	003f1606 	br	1000df68 <__alt_data_end+0xf800df68>
1000e310:	014ffc34 	movhi	r5,16368
1000e314:	d8001015 	stw	zero,64(sp)
1000e318:	d9400d15 	stw	r5,52(sp)
1000e31c:	003f0f06 	br	1000df5c <__alt_data_end+0xf800df5c>
1000e320:	b03f001e 	bne	r22,zero,1000df24 <__alt_data_end+0xf800df24>
1000e324:	9011883a 	mov	r8,r18
1000e328:	00800884 	movi	r2,34
1000e32c:	88800015 	stw	r2,0(r17)
1000e330:	d8000815 	stw	zero,32(sp)
1000e334:	d8800517 	ldw	r2,20(sp)
1000e338:	0039883a 	mov	fp,zero
1000e33c:	003f1906 	br	1000dfa4 <__alt_data_end+0xf800dfa4>
1000e340:	d9800517 	ldw	r6,20(sp)
1000e344:	30000826 	beq	r6,zero,1000e368 <_strtod_r+0x10a4>
1000e348:	01400d44 	movi	r5,53
1000e34c:	d9000204 	addi	r4,sp,8
1000e350:	d8801315 	stw	r2,76(sp)
1000e354:	000c4780 	call	1000c478 <__copybits>
1000e358:	d9400517 	ldw	r5,20(sp)
1000e35c:	8809883a 	mov	r4,r17
1000e360:	000b56c0 	call	1000b56c <_Bfree>
1000e364:	d8801317 	ldw	r2,76(sp)
1000e368:	00c00184 	movi	r3,6
1000e36c:	1c800f36 	bltu	r3,r18,1000e3ac <_strtod_r+0x10e8>
1000e370:	902490ba 	slli	r18,r18,2
1000e374:	00c40074 	movhi	r3,4097
1000e378:	18f8e204 	addi	r3,r3,-7288
1000e37c:	90e5883a 	add	r18,r18,r3
1000e380:	90c00017 	ldw	r3,0(r18)
1000e384:	1800683a 	jmp	r3
1000e388:	1000e404 	addi	zero,r2,912
1000e38c:	1000e3dc 	xori	zero,r2,911
1000e390:	1000e3c0 	call	11000e3c <_gp+0xfda5bc>
1000e394:	1000e3a4 	muli	zero,r2,910
1000e398:	1000e3cc 	andi	zero,r2,911
1000e39c:	1000e3dc 	xori	zero,r2,911
1000e3a0:	1000e404 	addi	zero,r2,912
1000e3a4:	059ffc34 	movhi	r22,32752
1000e3a8:	002f883a 	mov	r23,zero
1000e3ac:	1080020c 	andi	r2,r2,8
1000e3b0:	ddc00815 	stw	r23,32(sp)
1000e3b4:	103cc426 	beq	r2,zero,1000d6c8 <__alt_data_end+0xf800d6c8>
1000e3b8:	b7200034 	orhi	fp,r22,32768
1000e3bc:	003c6a06 	br	1000d568 <__alt_data_end+0xf800d568>
1000e3c0:	ddc00217 	ldw	r23,8(sp)
1000e3c4:	dd800317 	ldw	r22,12(sp)
1000e3c8:	003ff806 	br	1000e3ac <__alt_data_end+0xf800e3ac>
1000e3cc:	05a00034 	movhi	r22,32768
1000e3d0:	b5bfffc4 	addi	r22,r22,-1
1000e3d4:	05ffffc4 	movi	r23,-1
1000e3d8:	003ff406 	br	1000e3ac <__alt_data_end+0xf800e3ac>
1000e3dc:	d8c00417 	ldw	r3,16(sp)
1000e3e0:	dd800317 	ldw	r22,12(sp)
1000e3e4:	013ffc34 	movhi	r4,65520
1000e3e8:	18c10cc4 	addi	r3,r3,1075
1000e3ec:	1806953a 	slli	r3,r3,20
1000e3f0:	213fffc4 	addi	r4,r4,-1
1000e3f4:	b12c703a 	and	r22,r22,r4
1000e3f8:	ddc00217 	ldw	r23,8(sp)
1000e3fc:	b0ecb03a 	or	r22,r22,r3
1000e400:	003fea06 	br	1000e3ac <__alt_data_end+0xf800e3ac>
1000e404:	002d883a 	mov	r22,zero
1000e408:	002f883a 	mov	r23,zero
1000e40c:	003fe706 	br	1000e3ac <__alt_data_end+0xf800e3ac>
1000e410:	d8c00b17 	ldw	r3,44(sp)
1000e414:	b72d883a 	add	r22,r22,fp
1000e418:	1887883a 	add	r3,r3,r2
1000e41c:	d8c00b15 	stw	r3,44(sp)
1000e420:	00c00044 	movi	r3,1
1000e424:	10c11126 	beq	r2,r3,1000e86c <_strtod_r+0x15a8>
1000e428:	05c00204 	movi	r23,8
1000e42c:	04800404 	movi	r18,16
1000e430:	e7000044 	addi	fp,fp,1
1000e434:	e0bfffc4 	addi	r2,fp,-1
1000e438:	b8802016 	blt	r23,r2,1000e4bc <_strtod_r+0x11f8>
1000e43c:	9809883a 	mov	r4,r19
1000e440:	01400284 	movi	r5,10
1000e444:	00034380 	call	10003438 <__mulsi3>
1000e448:	1027883a 	mov	r19,r2
1000e44c:	e5bff81e 	bne	fp,r22,1000e430 <__alt_data_end+0xf800e430>
1000e450:	ddc00617 	ldw	r23,24(sp)
1000e454:	e7000044 	addi	fp,fp,1
1000e458:	00800204 	movi	r2,8
1000e45c:	1580100e 	bge	r2,r22,1000e4a0 <_strtod_r+0x11dc>
1000e460:	00800404 	movi	r2,16
1000e464:	002d883a 	mov	r22,zero
1000e468:	173e7b16 	blt	r2,fp,1000de58 <__alt_data_end+0xf800de58>
1000e46c:	a009883a 	mov	r4,r20
1000e470:	01400284 	movi	r5,10
1000e474:	00034380 	call	10003438 <__mulsi3>
1000e478:	a8a9883a 	add	r20,r21,r2
1000e47c:	003e7606 	br	1000de58 <__alt_data_end+0xf800de58>
1000e480:	d9000617 	ldw	r4,24(sp)
1000e484:	bdfff404 	addi	r23,r23,-48
1000e488:	b5800044 	addi	r22,r22,1
1000e48c:	ddc00e15 	stw	r23,56(sp)
1000e490:	d9000815 	stw	r4,32(sp)
1000e494:	dd800b15 	stw	r22,44(sp)
1000e498:	202f883a 	mov	r23,r4
1000e49c:	07000044 	movi	fp,1
1000e4a0:	9809883a 	mov	r4,r19
1000e4a4:	01400284 	movi	r5,10
1000e4a8:	00034380 	call	10003438 <__mulsi3>
1000e4ac:	d8c00e17 	ldw	r3,56(sp)
1000e4b0:	002d883a 	mov	r22,zero
1000e4b4:	18a7883a 	add	r19,r3,r2
1000e4b8:	003e6706 	br	1000de58 <__alt_data_end+0xf800de58>
1000e4bc:	973fe316 	blt	r18,fp,1000e44c <__alt_data_end+0xf800e44c>
1000e4c0:	a009883a 	mov	r4,r20
1000e4c4:	01400284 	movi	r5,10
1000e4c8:	00034380 	call	10003438 <__mulsi3>
1000e4cc:	1029883a 	mov	r20,r2
1000e4d0:	003fde06 	br	1000e44c <__alt_data_end+0xf800e44c>
1000e4d4:	00bffa84 	movi	r2,-22
1000e4d8:	a8bcf416 	blt	r21,r2,1000d8ac <__alt_data_end+0xf800d8ac>
1000e4dc:	a82a90fa 	slli	r21,r21,3
1000e4e0:	008400b4 	movhi	r2,4098
1000e4e4:	10b28604 	addi	r2,r2,-13800
1000e4e8:	1545c83a 	sub	r2,r2,r21
1000e4ec:	11800017 	ldw	r6,0(r2)
1000e4f0:	11c00117 	ldw	r7,4(r2)
1000e4f4:	b809883a 	mov	r4,r23
1000e4f8:	b00b883a 	mov	r5,r22
1000e4fc:	00174400 	call	10017440 <__divdf3>
1000e500:	d8800815 	stw	r2,32(sp)
1000e504:	1839883a 	mov	fp,r3
1000e508:	003c1706 	br	1000d568 <__alt_data_end+0xf800d568>
1000e50c:	9011883a 	mov	r8,r18
1000e510:	003ea006 	br	1000df94 <__alt_data_end+0xf800df94>
1000e514:	014400b4 	movhi	r5,4098
1000e518:	d9000617 	ldw	r4,24(sp)
1000e51c:	2972b804 	addi	r5,r5,-13600
1000e520:	01c00644 	movi	r7,25
1000e524:	00000b06 	br	1000e554 <_strtod_r+0x1290>
1000e528:	21000044 	addi	r4,r4,1
1000e52c:	20800003 	ldbu	r2,0(r4)
1000e530:	10ffefc4 	addi	r3,r2,-65
1000e534:	10803fcc 	andi	r2,r2,255
1000e538:	1080201c 	xori	r2,r2,128
1000e53c:	18c03fcc 	andi	r3,r3,255
1000e540:	10bfe004 	addi	r2,r2,-128
1000e544:	38c00136 	bltu	r7,r3,1000e54c <_strtod_r+0x1288>
1000e548:	10800804 	addi	r2,r2,32
1000e54c:	29400044 	addi	r5,r5,1
1000e550:	11bba91e 	bne	r2,r6,1000d3f8 <__alt_data_end+0xf800d3f8>
1000e554:	29800007 	ldb	r6,0(r5)
1000e558:	303ff31e 	bne	r6,zero,1000e528 <__alt_data_end+0xf800e528>
1000e55c:	018400b4 	movhi	r6,4098
1000e560:	d9000615 	stw	r4,24(sp)
1000e564:	31b2b904 	addi	r6,r6,-13596
1000e568:	200b883a 	mov	r5,r4
1000e56c:	02000644 	movi	r8,25
1000e570:	00000a06 	br	1000e59c <_strtod_r+0x12d8>
1000e574:	28800003 	ldbu	r2,0(r5)
1000e578:	10ffefc4 	addi	r3,r2,-65
1000e57c:	10803fcc 	andi	r2,r2,255
1000e580:	1080201c 	xori	r2,r2,128
1000e584:	18c03fcc 	andi	r3,r3,255
1000e588:	10bfe004 	addi	r2,r2,-128
1000e58c:	40c00136 	bltu	r8,r3,1000e594 <_strtod_r+0x12d0>
1000e590:	10800804 	addi	r2,r2,32
1000e594:	31800044 	addi	r6,r6,1
1000e598:	11c0691e 	bne	r2,r7,1000e740 <_strtod_r+0x147c>
1000e59c:	31c00007 	ldb	r7,0(r6)
1000e5a0:	29400044 	addi	r5,r5,1
1000e5a4:	383ff31e 	bne	r7,zero,1000e574 <__alt_data_end+0xf800e574>
1000e5a8:	d9400615 	stw	r5,24(sp)
1000e5ac:	059ffc34 	movhi	r22,32752
1000e5b0:	002f883a 	mov	r23,zero
1000e5b4:	003c4306 	br	1000d6c4 <__alt_data_end+0xf800d6c4>
1000e5b8:	002d883a 	mov	r22,zero
1000e5bc:	003cad06 	br	1000d874 <__alt_data_end+0xf800d874>
1000e5c0:	9011883a 	mov	r8,r18
1000e5c4:	df001217 	ldw	fp,72(sp)
1000e5c8:	a800461e 	bne	r21,zero,1000e6e4 <_strtod_r+0x1420>
1000e5cc:	b800451e 	bne	r23,zero,1000e6e4 <_strtod_r+0x1420>
1000e5d0:	00800434 	movhi	r2,16
1000e5d4:	10bfffc4 	addi	r2,r2,-1
1000e5d8:	b084703a 	and	r2,r22,r2
1000e5dc:	1000411e 	bne	r2,zero,1000e6e4 <_strtod_r+0x1420>
1000e5e0:	b49ffc2c 	andhi	r18,r22,32752
1000e5e4:	0081ac34 	movhi	r2,1712
1000e5e8:	14803e2e 	bgeu	r2,r18,1000e6e4 <_strtod_r+0x1420>
1000e5ec:	40800517 	ldw	r2,20(r8)
1000e5f0:	1000031e 	bne	r2,zero,1000e600 <_strtod_r+0x133c>
1000e5f4:	40800417 	ldw	r2,16(r8)
1000e5f8:	00c00044 	movi	r3,1
1000e5fc:	1880390e 	bge	r3,r2,1000e6e4 <_strtod_r+0x1420>
1000e600:	400b883a 	mov	r5,r8
1000e604:	01800044 	movi	r6,1
1000e608:	8809883a 	mov	r4,r17
1000e60c:	000bd000 	call	1000bd00 <__lshift>
1000e610:	800b883a 	mov	r5,r16
1000e614:	1009883a 	mov	r4,r2
1000e618:	d8801315 	stw	r2,76(sp)
1000e61c:	000be480 	call	1000be48 <__mcmp>
1000e620:	da001317 	ldw	r8,76(sp)
1000e624:	00802f0e 	bge	zero,r2,1000e6e4 <_strtod_r+0x1420>
1000e628:	d9000717 	ldw	r4,28(sp)
1000e62c:	20008026 	beq	r4,zero,1000e830 <_strtod_r+0x156c>
1000e630:	0081ac34 	movhi	r2,1712
1000e634:	14807e16 	blt	r2,r18,1000e830 <_strtod_r+0x156c>
1000e638:	0080dc34 	movhi	r2,880
1000e63c:	14bf3a0e 	bge	r2,r18,1000e328 <__alt_data_end+0xf800e328>
1000e640:	d9000817 	ldw	r4,32(sp)
1000e644:	e00b883a 	mov	r5,fp
1000e648:	000d883a 	mov	r6,zero
1000e64c:	01ce5434 	movhi	r7,14672
1000e650:	da001315 	stw	r8,76(sp)
1000e654:	00180680 	call	10018068 <__muldf3>
1000e658:	d8800815 	stw	r2,32(sp)
1000e65c:	1839883a 	mov	fp,r3
1000e660:	da001317 	ldw	r8,76(sp)
1000e664:	1800211e 	bne	r3,zero,1000e6ec <_strtod_r+0x1428>
1000e668:	d8c00817 	ldw	r3,32(sp)
1000e66c:	d8800517 	ldw	r2,20(sp)
1000e670:	183e4c1e 	bne	r3,zero,1000dfa4 <__alt_data_end+0xf800dfa4>
1000e674:	00c00884 	movi	r3,34
1000e678:	88c00015 	stw	r3,0(r17)
1000e67c:	003e4906 	br	1000dfa4 <__alt_data_end+0xf800dfa4>
1000e680:	00800434 	movhi	r2,16
1000e684:	9011883a 	mov	r8,r18
1000e688:	df001217 	ldw	fp,72(sp)
1000e68c:	10bfffc4 	addi	r2,r2,-1
1000e690:	a8002226 	beq	r21,zero,1000e71c <_strtod_r+0x1458>
1000e694:	b086703a 	and	r3,r22,r2
1000e698:	18804126 	beq	r3,r2,1000e7a0 <_strtod_r+0x14dc>
1000e69c:	d8c00d17 	ldw	r3,52(sp)
1000e6a0:	18002326 	beq	r3,zero,1000e730 <_strtod_r+0x146c>
1000e6a4:	1da4703a 	and	r18,r3,r22
1000e6a8:	90000e26 	beq	r18,zero,1000e6e4 <_strtod_r+0x1420>
1000e6ac:	da001315 	stw	r8,76(sp)
1000e6b0:	d9800717 	ldw	r6,28(sp)
1000e6b4:	b809883a 	mov	r4,r23
1000e6b8:	b00b883a 	mov	r5,r22
1000e6bc:	a8002826 	beq	r21,zero,1000e760 <_strtod_r+0x149c>
1000e6c0:	000d2600 	call	1000d260 <sulp>
1000e6c4:	100d883a 	mov	r6,r2
1000e6c8:	180f883a 	mov	r7,r3
1000e6cc:	b809883a 	mov	r4,r23
1000e6d0:	b00b883a 	mov	r5,r22
1000e6d4:	0016b940 	call	10016b94 <__adddf3>
1000e6d8:	da001317 	ldw	r8,76(sp)
1000e6dc:	d8800815 	stw	r2,32(sp)
1000e6e0:	1839883a 	mov	fp,r3
1000e6e4:	d8800717 	ldw	r2,28(sp)
1000e6e8:	103fd51e 	bne	r2,zero,1000e640 <__alt_data_end+0xf800e640>
1000e6ec:	d8800517 	ldw	r2,20(sp)
1000e6f0:	003e2c06 	br	1000dfa4 <__alt_data_end+0xf800dfa4>
1000e6f4:	0580d434 	movhi	r22,848
1000e6f8:	1dad883a 	add	r22,r3,r22
1000e6fc:	d8000715 	stw	zero,28(sp)
1000e700:	003cb606 	br	1000d9dc <__alt_data_end+0xf800d9dc>
1000e704:	008ff834 	movhi	r2,16352
1000e708:	0029883a 	mov	r20,zero
1000e70c:	022ff834 	movhi	r8,49120
1000e710:	d8001015 	stw	zero,64(sp)
1000e714:	d8800d15 	stw	r2,52(sp)
1000e718:	003dc106 	br	1000de20 <__alt_data_end+0xf800de20>
1000e71c:	b084703a 	and	r2,r22,r2
1000e720:	103fde1e 	bne	r2,zero,1000e69c <__alt_data_end+0xf800e69c>
1000e724:	b83fdd1e 	bne	r23,zero,1000e69c <__alt_data_end+0xf800e69c>
1000e728:	b49ffc2c 	andhi	r18,r22,32752
1000e72c:	003fbe06 	br	1000e628 <__alt_data_end+0xf800e628>
1000e730:	d8c00f17 	ldw	r3,60(sp)
1000e734:	1de8703a 	and	r20,r3,r23
1000e738:	a03fea26 	beq	r20,zero,1000e6e4 <__alt_data_end+0xf800e6e4>
1000e73c:	003fdb06 	br	1000e6ac <__alt_data_end+0xf800e6ac>
1000e740:	21000044 	addi	r4,r4,1
1000e744:	d9000615 	stw	r4,24(sp)
1000e748:	003f9806 	br	1000e5ac <__alt_data_end+0xf800e5ac>
1000e74c:	014400b4 	movhi	r5,4098
1000e750:	29727c04 	addi	r5,r5,-13840
1000e754:	d9400715 	stw	r5,28(sp)
1000e758:	0025883a 	mov	r18,zero
1000e75c:	003c8c06 	br	1000d990 <__alt_data_end+0xf800d990>
1000e760:	000d2600 	call	1000d260 <sulp>
1000e764:	100d883a 	mov	r6,r2
1000e768:	180f883a 	mov	r7,r3
1000e76c:	b809883a 	mov	r4,r23
1000e770:	b00b883a 	mov	r5,r22
1000e774:	00188d40 	call	100188d4 <__subdf3>
1000e778:	000d883a 	mov	r6,zero
1000e77c:	000f883a 	mov	r7,zero
1000e780:	1009883a 	mov	r4,r2
1000e784:	180b883a 	mov	r5,r3
1000e788:	d8800815 	stw	r2,32(sp)
1000e78c:	1839883a 	mov	fp,r3
1000e790:	0017e100 	call	10017e10 <__eqdf2>
1000e794:	da001317 	ldw	r8,76(sp)
1000e798:	103ee326 	beq	r2,zero,1000e328 <__alt_data_end+0xf800e328>
1000e79c:	003fd106 	br	1000e6e4 <__alt_data_end+0xf800e6e4>
1000e7a0:	d8c00717 	ldw	r3,28(sp)
1000e7a4:	18002026 	beq	r3,zero,1000e828 <_strtod_r+0x1564>
1000e7a8:	b09ffc2c 	andhi	r2,r22,32752
1000e7ac:	00c1a834 	movhi	r3,1696
1000e7b0:	18801d36 	bltu	r3,r2,1000e828 <_strtod_r+0x1564>
1000e7b4:	1004d53a 	srli	r2,r2,20
1000e7b8:	00c01ac4 	movi	r3,107
1000e7bc:	1887c83a 	sub	r3,r3,r2
1000e7c0:	00bfffc4 	movi	r2,-1
1000e7c4:	10c4983a 	sll	r2,r2,r3
1000e7c8:	15ffb41e 	bne	r2,r23,1000e69c <__alt_data_end+0xf800e69c>
1000e7cc:	00dffc34 	movhi	r3,32752
1000e7d0:	18ffffc4 	addi	r3,r3,-1
1000e7d4:	b0c03126 	beq	r22,r3,1000e89c <_strtod_r+0x15d8>
1000e7d8:	b59ffc2c 	andhi	r22,r22,32752
1000e7dc:	00800434 	movhi	r2,16
1000e7e0:	d8000815 	stw	zero,32(sp)
1000e7e4:	b0b9883a 	add	fp,r22,r2
1000e7e8:	003fbe06 	br	1000e6e4 <__alt_data_end+0xf800e6e4>
1000e7ec:	b49ffc2c 	andhi	r18,r22,32752
1000e7f0:	9024d53a 	srli	r18,r18,20
1000e7f4:	00801ac4 	movi	r2,107
1000e7f8:	14a5c83a 	sub	r18,r2,r18
1000e7fc:	04be910e 	bge	zero,r18,1000e244 <__alt_data_end+0xf800e244>
1000e800:	008007c4 	movi	r2,31
1000e804:	1480120e 	bge	r2,r18,1000e850 <_strtod_r+0x158c>
1000e808:	00800d04 	movi	r2,52
1000e80c:	002f883a 	mov	r23,zero
1000e810:	14801a0e 	bge	r2,r18,1000e87c <_strtod_r+0x15b8>
1000e814:	0580dc34 	movhi	r22,880
1000e818:	003e8a06 	br	1000e244 <__alt_data_end+0xf800e244>
1000e81c:	d8000715 	stw	zero,28(sp)
1000e820:	04be7416 	blt	zero,r18,1000e1f4 <__alt_data_end+0xf800e1f4>
1000e824:	003e8706 	br	1000e244 <__alt_data_end+0xf800e244>
1000e828:	00bfffc4 	movi	r2,-1
1000e82c:	003fe606 	br	1000e7c8 <__alt_data_end+0xf800e7c8>
1000e830:	073ffc34 	movhi	fp,65520
1000e834:	9725883a 	add	r18,r18,fp
1000e838:	017fffc4 	movi	r5,-1
1000e83c:	07000434 	movhi	fp,16
1000e840:	e179883a 	add	fp,fp,r5
1000e844:	d9400815 	stw	r5,32(sp)
1000e848:	9738b03a 	or	fp,r18,fp
1000e84c:	003fa506 	br	1000e6e4 <__alt_data_end+0xf800e6e4>
1000e850:	00bfffc4 	movi	r2,-1
1000e854:	14a4983a 	sll	r18,r2,r18
1000e858:	95ee703a 	and	r23,r18,r23
1000e85c:	003e7906 	br	1000e244 <__alt_data_end+0xf800e244>
1000e860:	102f883a 	mov	r23,r2
1000e864:	182d883a 	mov	r22,r3
1000e868:	003e7406 	br	1000e23c <__alt_data_end+0xf800e23c>
1000e86c:	e02d883a 	mov	r22,fp
1000e870:	ddc00617 	ldw	r23,24(sp)
1000e874:	e0f9883a 	add	fp,fp,r3
1000e878:	003ef706 	br	1000e458 <__alt_data_end+0xf800e458>
1000e87c:	94bff804 	addi	r18,r18,-32
1000e880:	00bfffc4 	movi	r2,-1
1000e884:	14a4983a 	sll	r18,r2,r18
1000e888:	95ac703a 	and	r22,r18,r22
1000e88c:	003e6d06 	br	1000e244 <__alt_data_end+0xf800e244>
1000e890:	102f883a 	mov	r23,r2
1000e894:	182d883a 	mov	r22,r3
1000e898:	003c3d06 	br	1000d990 <__alt_data_end+0xf800d990>
1000e89c:	00ffffc4 	movi	r3,-1
1000e8a0:	10ffcd1e 	bne	r2,r3,1000e7d8 <__alt_data_end+0xf800e7d8>
1000e8a4:	003dba06 	br	1000df90 <__alt_data_end+0xf800df90>

1000e8a8 <strtod>:
1000e8a8:	008400b4 	movhi	r2,4098
1000e8ac:	10ba2504 	addi	r2,r2,-5996
1000e8b0:	280d883a 	mov	r6,r5
1000e8b4:	200b883a 	mov	r5,r4
1000e8b8:	11000017 	ldw	r4,0(r2)
1000e8bc:	000d2c41 	jmpi	1000d2c4 <_strtod_r>

1000e8c0 <strtof>:
1000e8c0:	defffb04 	addi	sp,sp,-20
1000e8c4:	dcc00315 	stw	r19,12(sp)
1000e8c8:	04c400b4 	movhi	r19,4098
1000e8cc:	9cfa2504 	addi	r19,r19,-5996
1000e8d0:	280d883a 	mov	r6,r5
1000e8d4:	200b883a 	mov	r5,r4
1000e8d8:	99000017 	ldw	r4,0(r19)
1000e8dc:	dfc00415 	stw	ra,16(sp)
1000e8e0:	dc800215 	stw	r18,8(sp)
1000e8e4:	dc400115 	stw	r17,4(sp)
1000e8e8:	dc000015 	stw	r16,0(sp)
1000e8ec:	000d2c40 	call	1000d2c4 <_strtod_r>
1000e8f0:	1009883a 	mov	r4,r2
1000e8f4:	180b883a 	mov	r5,r3
1000e8f8:	1025883a 	mov	r18,r2
1000e8fc:	1823883a 	mov	r17,r3
1000e900:	00193d40 	call	100193d4 <__truncdfsf2>
1000e904:	000b883a 	mov	r5,zero
1000e908:	1009883a 	mov	r4,r2
1000e90c:	1021883a 	mov	r16,r2
1000e910:	00169980 	call	10016998 <__eqsf2>
1000e914:	1000111e 	bne	r2,zero,1000e95c <strtof+0x9c>
1000e918:	000d883a 	mov	r6,zero
1000e91c:	000f883a 	mov	r7,zero
1000e920:	9009883a 	mov	r4,r18
1000e924:	880b883a 	mov	r5,r17
1000e928:	0017e100 	call	10017e10 <__eqdf2>
1000e92c:	10000b26 	beq	r2,zero,1000e95c <strtof+0x9c>
1000e930:	98800017 	ldw	r2,0(r19)
1000e934:	00c00884 	movi	r3,34
1000e938:	10c00015 	stw	r3,0(r2)
1000e93c:	8005883a 	mov	r2,r16
1000e940:	dfc00417 	ldw	ra,16(sp)
1000e944:	dcc00317 	ldw	r19,12(sp)
1000e948:	dc800217 	ldw	r18,8(sp)
1000e94c:	dc400117 	ldw	r17,4(sp)
1000e950:	dc000017 	ldw	r16,0(sp)
1000e954:	dec00504 	addi	sp,sp,20
1000e958:	f800283a 	ret
1000e95c:	015fe034 	movhi	r5,32640
1000e960:	297fffc4 	addi	r5,r5,-1
1000e964:	8009883a 	mov	r4,r16
1000e968:	0016a100 	call	10016a10 <__gesf2>
1000e96c:	0080070e 	bge	zero,r2,1000e98c <strtof+0xcc>
1000e970:	01dffc34 	movhi	r7,32752
1000e974:	39ffffc4 	addi	r7,r7,-1
1000e978:	01bfffc4 	movi	r6,-1
1000e97c:	9009883a 	mov	r4,r18
1000e980:	880b883a 	mov	r5,r17
1000e984:	0017e980 	call	10017e98 <__gedf2>
1000e988:	00bfe90e 	bge	zero,r2,1000e930 <__alt_data_end+0xf800e930>
1000e98c:	017fe034 	movhi	r5,65408
1000e990:	297fffc4 	addi	r5,r5,-1
1000e994:	8009883a 	mov	r4,r16
1000e998:	0016acc0 	call	10016acc <__lesf2>
1000e99c:	103fe70e 	bge	r2,zero,1000e93c <__alt_data_end+0xf800e93c>
1000e9a0:	01fffc34 	movhi	r7,65520
1000e9a4:	39ffffc4 	addi	r7,r7,-1
1000e9a8:	01bfffc4 	movi	r6,-1
1000e9ac:	9009883a 	mov	r4,r18
1000e9b0:	880b883a 	mov	r5,r17
1000e9b4:	0017f740 	call	10017f74 <__ledf2>
1000e9b8:	103fdd0e 	bge	r2,zero,1000e930 <__alt_data_end+0xf800e930>
1000e9bc:	003fdf06 	br	1000e93c <__alt_data_end+0xf800e93c>

1000e9c0 <_strtol_r>:
1000e9c0:	008400b4 	movhi	r2,4098
1000e9c4:	defff204 	addi	sp,sp,-56
1000e9c8:	10ba2304 	addi	r2,r2,-6004
1000e9cc:	dd800a15 	stw	r22,40(sp)
1000e9d0:	15800017 	ldw	r22,0(r2)
1000e9d4:	df000c15 	stw	fp,48(sp)
1000e9d8:	d9000315 	stw	r4,12(sp)
1000e9dc:	dfc00d15 	stw	ra,52(sp)
1000e9e0:	ddc00b15 	stw	r23,44(sp)
1000e9e4:	dd400915 	stw	r21,36(sp)
1000e9e8:	dd000815 	stw	r20,32(sp)
1000e9ec:	dcc00715 	stw	r19,28(sp)
1000e9f0:	dc800615 	stw	r18,24(sp)
1000e9f4:	dc400515 	stw	r17,20(sp)
1000e9f8:	dc000415 	stw	r16,16(sp)
1000e9fc:	d9400215 	stw	r5,8(sp)
1000ea00:	d9800015 	stw	r6,0(sp)
1000ea04:	3839883a 	mov	fp,r7
1000ea08:	2809883a 	mov	r4,r5
1000ea0c:	24000003 	ldbu	r16,0(r4)
1000ea10:	24400044 	addi	r17,r4,1
1000ea14:	2007883a 	mov	r3,r4
1000ea18:	b405883a 	add	r2,r22,r16
1000ea1c:	10800043 	ldbu	r2,1(r2)
1000ea20:	8809883a 	mov	r4,r17
1000ea24:	1080020c 	andi	r2,r2,8
1000ea28:	103ff81e 	bne	r2,zero,1000ea0c <__alt_data_end+0xf800ea0c>
1000ea2c:	00800b44 	movi	r2,45
1000ea30:	80805526 	beq	r16,r2,1000eb88 <_strtol_r+0x1c8>
1000ea34:	00800ac4 	movi	r2,43
1000ea38:	80806026 	beq	r16,r2,1000ebbc <_strtol_r+0x1fc>
1000ea3c:	0029883a 	mov	r20,zero
1000ea40:	e0004726 	beq	fp,zero,1000eb60 <_strtol_r+0x1a0>
1000ea44:	00800404 	movi	r2,16
1000ea48:	e0806626 	beq	fp,r2,1000ebe4 <_strtol_r+0x224>
1000ea4c:	e027883a 	mov	r19,fp
1000ea50:	00a00034 	movhi	r2,32768
1000ea54:	a025003a 	cmpeq	r18,r20,zero
1000ea58:	14a5c83a 	sub	r18,r2,r18
1000ea5c:	9009883a 	mov	r4,r18
1000ea60:	980b883a 	mov	r5,r19
1000ea64:	00033e00 	call	100033e0 <__umodsi3>
1000ea68:	9009883a 	mov	r4,r18
1000ea6c:	980b883a 	mov	r5,r19
1000ea70:	d8800115 	stw	r2,4(sp)
1000ea74:	000337c0 	call	1000337c <__udivsi3>
1000ea78:	b407883a 	add	r3,r22,r16
1000ea7c:	18c00043 	ldbu	r3,1(r3)
1000ea80:	102b883a 	mov	r21,r2
1000ea84:	0009883a 	mov	r4,zero
1000ea88:	1940010c 	andi	r5,r3,4
1000ea8c:	0005883a 	mov	r2,zero
1000ea90:	04800044 	movi	r18,1
1000ea94:	05ffffc4 	movi	r23,-1
1000ea98:	28000f26 	beq	r5,zero,1000ead8 <_strtol_r+0x118>
1000ea9c:	843ff404 	addi	r16,r16,-48
1000eaa0:	8700130e 	bge	r16,fp,1000eaf0 <_strtol_r+0x130>
1000eaa4:	15c00626 	beq	r2,r23,1000eac0 <_strtol_r+0x100>
1000eaa8:	a9002936 	bltu	r21,r4,1000eb50 <_strtol_r+0x190>
1000eaac:	25402626 	beq	r4,r21,1000eb48 <_strtol_r+0x188>
1000eab0:	980b883a 	mov	r5,r19
1000eab4:	00034380 	call	10003438 <__mulsi3>
1000eab8:	8089883a 	add	r4,r16,r2
1000eabc:	00800044 	movi	r2,1
1000eac0:	8c000003 	ldbu	r16,0(r17)
1000eac4:	8c400044 	addi	r17,r17,1
1000eac8:	b407883a 	add	r3,r22,r16
1000eacc:	18c00043 	ldbu	r3,1(r3)
1000ead0:	1940010c 	andi	r5,r3,4
1000ead4:	283ff11e 	bne	r5,zero,1000ea9c <__alt_data_end+0xf800ea9c>
1000ead8:	18c000cc 	andi	r3,r3,3
1000eadc:	18000426 	beq	r3,zero,1000eaf0 <_strtol_r+0x130>
1000eae0:	1c801d26 	beq	r3,r18,1000eb58 <_strtol_r+0x198>
1000eae4:	00c015c4 	movi	r3,87
1000eae8:	80e1c83a 	sub	r16,r16,r3
1000eaec:	873fed16 	blt	r16,fp,1000eaa4 <__alt_data_end+0xf800eaa4>
1000eaf0:	00ffffc4 	movi	r3,-1
1000eaf4:	10c02826 	beq	r2,r3,1000eb98 <_strtol_r+0x1d8>
1000eaf8:	a0001e1e 	bne	r20,zero,1000eb74 <_strtol_r+0x1b4>
1000eafc:	d8c00017 	ldw	r3,0(sp)
1000eb00:	18004326 	beq	r3,zero,1000ec10 <_strtol_r+0x250>
1000eb04:	10001d1e 	bne	r2,zero,1000eb7c <_strtol_r+0x1bc>
1000eb08:	dd800217 	ldw	r22,8(sp)
1000eb0c:	2005883a 	mov	r2,r4
1000eb10:	d8c00017 	ldw	r3,0(sp)
1000eb14:	1d800015 	stw	r22,0(r3)
1000eb18:	dfc00d17 	ldw	ra,52(sp)
1000eb1c:	df000c17 	ldw	fp,48(sp)
1000eb20:	ddc00b17 	ldw	r23,44(sp)
1000eb24:	dd800a17 	ldw	r22,40(sp)
1000eb28:	dd400917 	ldw	r21,36(sp)
1000eb2c:	dd000817 	ldw	r20,32(sp)
1000eb30:	dcc00717 	ldw	r19,28(sp)
1000eb34:	dc800617 	ldw	r18,24(sp)
1000eb38:	dc400517 	ldw	r17,20(sp)
1000eb3c:	dc000417 	ldw	r16,16(sp)
1000eb40:	dec00e04 	addi	sp,sp,56
1000eb44:	f800283a 	ret
1000eb48:	d8c00117 	ldw	r3,4(sp)
1000eb4c:	1c3fd80e 	bge	r3,r16,1000eab0 <__alt_data_end+0xf800eab0>
1000eb50:	00bfffc4 	movi	r2,-1
1000eb54:	003fda06 	br	1000eac0 <__alt_data_end+0xf800eac0>
1000eb58:	00c00dc4 	movi	r3,55
1000eb5c:	003fe206 	br	1000eae8 <__alt_data_end+0xf800eae8>
1000eb60:	00800c04 	movi	r2,48
1000eb64:	80801926 	beq	r16,r2,1000ebcc <_strtol_r+0x20c>
1000eb68:	07000284 	movi	fp,10
1000eb6c:	e027883a 	mov	r19,fp
1000eb70:	003fb706 	br	1000ea50 <__alt_data_end+0xf800ea50>
1000eb74:	0109c83a 	sub	r4,zero,r4
1000eb78:	003fe006 	br	1000eafc <__alt_data_end+0xf800eafc>
1000eb7c:	2005883a 	mov	r2,r4
1000eb80:	8dbfffc4 	addi	r22,r17,-1
1000eb84:	003fe206 	br	1000eb10 <__alt_data_end+0xf800eb10>
1000eb88:	1c400084 	addi	r17,r3,2
1000eb8c:	1c000043 	ldbu	r16,1(r3)
1000eb90:	05000044 	movi	r20,1
1000eb94:	003faa06 	br	1000ea40 <__alt_data_end+0xf800ea40>
1000eb98:	d9000317 	ldw	r4,12(sp)
1000eb9c:	00c00884 	movi	r3,34
1000eba0:	a005003a 	cmpeq	r2,r20,zero
1000eba4:	20c00015 	stw	r3,0(r4)
1000eba8:	00e00034 	movhi	r3,32768
1000ebac:	1885c83a 	sub	r2,r3,r2
1000ebb0:	d8c00017 	ldw	r3,0(sp)
1000ebb4:	183ff21e 	bne	r3,zero,1000eb80 <__alt_data_end+0xf800eb80>
1000ebb8:	003fd706 	br	1000eb18 <__alt_data_end+0xf800eb18>
1000ebbc:	1c400084 	addi	r17,r3,2
1000ebc0:	1c000043 	ldbu	r16,1(r3)
1000ebc4:	0029883a 	mov	r20,zero
1000ebc8:	003f9d06 	br	1000ea40 <__alt_data_end+0xf800ea40>
1000ebcc:	88800003 	ldbu	r2,0(r17)
1000ebd0:	00c01604 	movi	r3,88
1000ebd4:	108037cc 	andi	r2,r2,223
1000ebd8:	10c00826 	beq	r2,r3,1000ebfc <_strtol_r+0x23c>
1000ebdc:	07000204 	movi	fp,8
1000ebe0:	003f9a06 	br	1000ea4c <__alt_data_end+0xf800ea4c>
1000ebe4:	00800c04 	movi	r2,48
1000ebe8:	80bf981e 	bne	r16,r2,1000ea4c <__alt_data_end+0xf800ea4c>
1000ebec:	88800003 	ldbu	r2,0(r17)
1000ebf0:	00c01604 	movi	r3,88
1000ebf4:	108037cc 	andi	r2,r2,223
1000ebf8:	10ff941e 	bne	r2,r3,1000ea4c <__alt_data_end+0xf800ea4c>
1000ebfc:	04c00404 	movi	r19,16
1000ec00:	8c000043 	ldbu	r16,1(r17)
1000ec04:	9839883a 	mov	fp,r19
1000ec08:	8c400084 	addi	r17,r17,2
1000ec0c:	003f9006 	br	1000ea50 <__alt_data_end+0xf800ea50>
1000ec10:	2005883a 	mov	r2,r4
1000ec14:	003fc006 	br	1000eb18 <__alt_data_end+0xf800eb18>

1000ec18 <strtol>:
1000ec18:	008400b4 	movhi	r2,4098
1000ec1c:	10ba2504 	addi	r2,r2,-5996
1000ec20:	300f883a 	mov	r7,r6
1000ec24:	280d883a 	mov	r6,r5
1000ec28:	200b883a 	mov	r5,r4
1000ec2c:	11000017 	ldw	r4,0(r2)
1000ec30:	000e9c01 	jmpi	1000e9c0 <_strtol_r>

1000ec34 <_strtoll_r>:
1000ec34:	008400b4 	movhi	r2,4098
1000ec38:	deffef04 	addi	sp,sp,-68
1000ec3c:	10ba2304 	addi	r2,r2,-6004
1000ec40:	dd800d15 	stw	r22,52(sp)
1000ec44:	15800017 	ldw	r22,0(r2)
1000ec48:	df000f15 	stw	fp,60(sp)
1000ec4c:	d9000515 	stw	r4,20(sp)
1000ec50:	dfc01015 	stw	ra,64(sp)
1000ec54:	ddc00e15 	stw	r23,56(sp)
1000ec58:	dd400c15 	stw	r21,48(sp)
1000ec5c:	dd000b15 	stw	r20,44(sp)
1000ec60:	dcc00a15 	stw	r19,40(sp)
1000ec64:	dc800915 	stw	r18,36(sp)
1000ec68:	dc400815 	stw	r17,32(sp)
1000ec6c:	dc000715 	stw	r16,28(sp)
1000ec70:	d9400415 	stw	r5,16(sp)
1000ec74:	d9800215 	stw	r6,8(sp)
1000ec78:	3839883a 	mov	fp,r7
1000ec7c:	2809883a 	mov	r4,r5
1000ec80:	22000003 	ldbu	r8,0(r4)
1000ec84:	24400044 	addi	r17,r4,1
1000ec88:	2007883a 	mov	r3,r4
1000ec8c:	b205883a 	add	r2,r22,r8
1000ec90:	10800043 	ldbu	r2,1(r2)
1000ec94:	8809883a 	mov	r4,r17
1000ec98:	1080020c 	andi	r2,r2,8
1000ec9c:	103ff81e 	bne	r2,zero,1000ec80 <__alt_data_end+0xf800ec80>
1000eca0:	00800b44 	movi	r2,45
1000eca4:	40807e26 	beq	r8,r2,1000eea0 <_strtoll_r+0x26c>
1000eca8:	00800ac4 	movi	r2,43
1000ecac:	40808126 	beq	r8,r2,1000eeb4 <_strtoll_r+0x280>
1000ecb0:	d8000115 	stw	zero,4(sp)
1000ecb4:	e0000b26 	beq	fp,zero,1000ece4 <_strtoll_r+0xb0>
1000ecb8:	00800404 	movi	r2,16
1000ecbc:	e0808926 	beq	fp,r2,1000eee4 <_strtoll_r+0x2b0>
1000ecc0:	e00bd7fa 	srai	r5,fp,31
1000ecc4:	d9000117 	ldw	r4,4(sp)
1000ecc8:	e025883a 	mov	r18,fp
1000eccc:	d9400015 	stw	r5,0(sp)
1000ecd0:	20000b1e 	bne	r4,zero,1000ed00 <_strtoll_r+0xcc>
1000ecd4:	04200034 	movhi	r16,32768
1000ecd8:	843fffc4 	addi	r16,r16,-1
1000ecdc:	053fffc4 	movi	r20,-1
1000ece0:	00000906 	br	1000ed08 <_strtoll_r+0xd4>
1000ece4:	00800c04 	movi	r2,48
1000ece8:	40807626 	beq	r8,r2,1000eec4 <_strtoll_r+0x290>
1000ecec:	04800284 	movi	r18,10
1000ecf0:	d8000015 	stw	zero,0(sp)
1000ecf4:	9039883a 	mov	fp,r18
1000ecf8:	d9000117 	ldw	r4,4(sp)
1000ecfc:	203ff526 	beq	r4,zero,1000ecd4 <__alt_data_end+0xf800ecd4>
1000ed00:	0029883a 	mov	r20,zero
1000ed04:	04200034 	movhi	r16,32768
1000ed08:	d9c00017 	ldw	r7,0(sp)
1000ed0c:	a009883a 	mov	r4,r20
1000ed10:	800b883a 	mov	r5,r16
1000ed14:	900d883a 	mov	r6,r18
1000ed18:	da000615 	stw	r8,24(sp)
1000ed1c:	00163d40 	call	100163d4 <__umoddi3>
1000ed20:	d9c00017 	ldw	r7,0(sp)
1000ed24:	a009883a 	mov	r4,r20
1000ed28:	800b883a 	mov	r5,r16
1000ed2c:	900d883a 	mov	r6,r18
1000ed30:	d8800315 	stw	r2,12(sp)
1000ed34:	0015dd80 	call	10015dd8 <__udivdi3>
1000ed38:	da000617 	ldw	r8,24(sp)
1000ed3c:	1829883a 	mov	r20,r3
1000ed40:	882f883a 	mov	r23,r17
1000ed44:	b207883a 	add	r3,r22,r8
1000ed48:	19800043 	ldbu	r6,1(r3)
1000ed4c:	1021883a 	mov	r16,r2
1000ed50:	000f883a 	mov	r7,zero
1000ed54:	30c0010c 	andi	r3,r6,4
1000ed58:	0009883a 	mov	r4,zero
1000ed5c:	000b883a 	mov	r5,zero
1000ed60:	04400044 	movi	r17,1
1000ed64:	057fffc4 	movi	r21,-1
1000ed68:	18000d26 	beq	r3,zero,1000eda0 <_strtoll_r+0x16c>
1000ed6c:	44fff404 	addi	r19,r8,-48
1000ed70:	9f00110e 	bge	r19,fp,1000edb8 <_strtoll_r+0x184>
1000ed74:	3d400426 	beq	r7,r21,1000ed88 <_strtoll_r+0x154>
1000ed78:	a1400236 	bltu	r20,r5,1000ed84 <_strtoll_r+0x150>
1000ed7c:	2d002a1e 	bne	r5,r20,1000ee28 <_strtoll_r+0x1f4>
1000ed80:	8100292e 	bgeu	r16,r4,1000ee28 <_strtoll_r+0x1f4>
1000ed84:	01ffffc4 	movi	r7,-1
1000ed88:	ba000003 	ldbu	r8,0(r23)
1000ed8c:	bdc00044 	addi	r23,r23,1
1000ed90:	b207883a 	add	r3,r22,r8
1000ed94:	19800043 	ldbu	r6,1(r3)
1000ed98:	30c0010c 	andi	r3,r6,4
1000ed9c:	183ff31e 	bne	r3,zero,1000ed6c <__alt_data_end+0xf800ed6c>
1000eda0:	318000cc 	andi	r6,r6,3
1000eda4:	30000426 	beq	r6,zero,1000edb8 <_strtoll_r+0x184>
1000eda8:	34402b26 	beq	r6,r17,1000ee58 <_strtoll_r+0x224>
1000edac:	00c015c4 	movi	r3,87
1000edb0:	40e7c83a 	sub	r19,r8,r3
1000edb4:	9f3fef16 	blt	r19,fp,1000ed74 <__alt_data_end+0xf800ed74>
1000edb8:	00bfffc4 	movi	r2,-1
1000edbc:	38802c26 	beq	r7,r2,1000ee70 <_strtoll_r+0x23c>
1000edc0:	d8800117 	ldw	r2,4(sp)
1000edc4:	10000426 	beq	r2,zero,1000edd8 <_strtoll_r+0x1a4>
1000edc8:	0109c83a 	sub	r4,zero,r4
1000edcc:	2004c03a 	cmpne	r2,r4,zero
1000edd0:	0151c83a 	sub	r8,zero,r5
1000edd4:	408bc83a 	sub	r5,r8,r2
1000edd8:	d8800217 	ldw	r2,8(sp)
1000eddc:	10005026 	beq	r2,zero,1000ef20 <_strtoll_r+0x2ec>
1000ede0:	2005883a 	mov	r2,r4
1000ede4:	2807883a 	mov	r3,r5
1000ede8:	38002b1e 	bne	r7,zero,1000ee98 <_strtoll_r+0x264>
1000edec:	dd800417 	ldw	r22,16(sp)
1000edf0:	d9000217 	ldw	r4,8(sp)
1000edf4:	25800015 	stw	r22,0(r4)
1000edf8:	dfc01017 	ldw	ra,64(sp)
1000edfc:	df000f17 	ldw	fp,60(sp)
1000ee00:	ddc00e17 	ldw	r23,56(sp)
1000ee04:	dd800d17 	ldw	r22,52(sp)
1000ee08:	dd400c17 	ldw	r21,48(sp)
1000ee0c:	dd000b17 	ldw	r20,44(sp)
1000ee10:	dcc00a17 	ldw	r19,40(sp)
1000ee14:	dc800917 	ldw	r18,36(sp)
1000ee18:	dc400817 	ldw	r17,32(sp)
1000ee1c:	dc000717 	ldw	r16,28(sp)
1000ee20:	dec01104 	addi	sp,sp,68
1000ee24:	f800283a 	ret
1000ee28:	24000d26 	beq	r4,r16,1000ee60 <_strtoll_r+0x22c>
1000ee2c:	d9c00017 	ldw	r7,0(sp)
1000ee30:	900d883a 	mov	r6,r18
1000ee34:	0015c580 	call	10015c58 <__muldi3>
1000ee38:	980bd7fa 	srai	r5,r19,31
1000ee3c:	9885883a 	add	r2,r19,r2
1000ee40:	14d1803a 	cmpltu	r8,r2,r19
1000ee44:	28c7883a 	add	r3,r5,r3
1000ee48:	1009883a 	mov	r4,r2
1000ee4c:	40cb883a 	add	r5,r8,r3
1000ee50:	01c00044 	movi	r7,1
1000ee54:	003fcc06 	br	1000ed88 <__alt_data_end+0xf800ed88>
1000ee58:	00c00dc4 	movi	r3,55
1000ee5c:	003fd406 	br	1000edb0 <__alt_data_end+0xf800edb0>
1000ee60:	2d3ff21e 	bne	r5,r20,1000ee2c <__alt_data_end+0xf800ee2c>
1000ee64:	d8800317 	ldw	r2,12(sp)
1000ee68:	14ffc616 	blt	r2,r19,1000ed84 <__alt_data_end+0xf800ed84>
1000ee6c:	003fef06 	br	1000ee2c <__alt_data_end+0xf800ee2c>
1000ee70:	d9000117 	ldw	r4,4(sp)
1000ee74:	2000271e 	bne	r4,zero,1000ef14 <_strtoll_r+0x2e0>
1000ee78:	00e00034 	movhi	r3,32768
1000ee7c:	18ffffc4 	addi	r3,r3,-1
1000ee80:	3805883a 	mov	r2,r7
1000ee84:	d9400517 	ldw	r5,20(sp)
1000ee88:	01000884 	movi	r4,34
1000ee8c:	29000015 	stw	r4,0(r5)
1000ee90:	d9000217 	ldw	r4,8(sp)
1000ee94:	203fd826 	beq	r4,zero,1000edf8 <__alt_data_end+0xf800edf8>
1000ee98:	bdbfffc4 	addi	r22,r23,-1
1000ee9c:	003fd406 	br	1000edf0 <__alt_data_end+0xf800edf0>
1000eea0:	00800044 	movi	r2,1
1000eea4:	1c400084 	addi	r17,r3,2
1000eea8:	1a000043 	ldbu	r8,1(r3)
1000eeac:	d8800115 	stw	r2,4(sp)
1000eeb0:	003f8006 	br	1000ecb4 <__alt_data_end+0xf800ecb4>
1000eeb4:	1c400084 	addi	r17,r3,2
1000eeb8:	1a000043 	ldbu	r8,1(r3)
1000eebc:	d8000115 	stw	zero,4(sp)
1000eec0:	003f7c06 	br	1000ecb4 <__alt_data_end+0xf800ecb4>
1000eec4:	88800003 	ldbu	r2,0(r17)
1000eec8:	00c01604 	movi	r3,88
1000eecc:	108037cc 	andi	r2,r2,223
1000eed0:	10c00a26 	beq	r2,r3,1000eefc <_strtoll_r+0x2c8>
1000eed4:	04800204 	movi	r18,8
1000eed8:	d8000015 	stw	zero,0(sp)
1000eedc:	9039883a 	mov	fp,r18
1000eee0:	003f8506 	br	1000ecf8 <__alt_data_end+0xf800ecf8>
1000eee4:	00800c04 	movi	r2,48
1000eee8:	4080101e 	bne	r8,r2,1000ef2c <_strtoll_r+0x2f8>
1000eeec:	88800003 	ldbu	r2,0(r17)
1000eef0:	00c01604 	movi	r3,88
1000eef4:	108037cc 	andi	r2,r2,223
1000eef8:	10c00c1e 	bne	r2,r3,1000ef2c <_strtoll_r+0x2f8>
1000eefc:	04800404 	movi	r18,16
1000ef00:	8a000043 	ldbu	r8,1(r17)
1000ef04:	d8000015 	stw	zero,0(sp)
1000ef08:	8c400084 	addi	r17,r17,2
1000ef0c:	9039883a 	mov	fp,r18
1000ef10:	003f7906 	br	1000ecf8 <__alt_data_end+0xf800ecf8>
1000ef14:	0005883a 	mov	r2,zero
1000ef18:	00e00034 	movhi	r3,32768
1000ef1c:	003fd906 	br	1000ee84 <__alt_data_end+0xf800ee84>
1000ef20:	2005883a 	mov	r2,r4
1000ef24:	2807883a 	mov	r3,r5
1000ef28:	003fb306 	br	1000edf8 <__alt_data_end+0xf800edf8>
1000ef2c:	e025883a 	mov	r18,fp
1000ef30:	d8000015 	stw	zero,0(sp)
1000ef34:	003f7006 	br	1000ecf8 <__alt_data_end+0xf800ecf8>

1000ef38 <_strtoul_r>:
1000ef38:	008400b4 	movhi	r2,4098
1000ef3c:	defff204 	addi	sp,sp,-56
1000ef40:	10ba2304 	addi	r2,r2,-6004
1000ef44:	dd800a15 	stw	r22,40(sp)
1000ef48:	15800017 	ldw	r22,0(r2)
1000ef4c:	df000c15 	stw	fp,48(sp)
1000ef50:	dd400915 	stw	r21,36(sp)
1000ef54:	d9000315 	stw	r4,12(sp)
1000ef58:	dfc00d15 	stw	ra,52(sp)
1000ef5c:	ddc00b15 	stw	r23,44(sp)
1000ef60:	dd000815 	stw	r20,32(sp)
1000ef64:	dcc00715 	stw	r19,28(sp)
1000ef68:	dc800615 	stw	r18,24(sp)
1000ef6c:	dc400515 	stw	r17,20(sp)
1000ef70:	dc000415 	stw	r16,16(sp)
1000ef74:	d9400015 	stw	r5,0(sp)
1000ef78:	302b883a 	mov	r21,r6
1000ef7c:	3839883a 	mov	fp,r7
1000ef80:	2809883a 	mov	r4,r5
1000ef84:	24000003 	ldbu	r16,0(r4)
1000ef88:	24400044 	addi	r17,r4,1
1000ef8c:	2007883a 	mov	r3,r4
1000ef90:	b405883a 	add	r2,r22,r16
1000ef94:	10800043 	ldbu	r2,1(r2)
1000ef98:	8809883a 	mov	r4,r17
1000ef9c:	1080020c 	andi	r2,r2,8
1000efa0:	103ff81e 	bne	r2,zero,1000ef84 <__alt_data_end+0xf800ef84>
1000efa4:	00800b44 	movi	r2,45
1000efa8:	80805826 	beq	r16,r2,1000f10c <_strtoul_r+0x1d4>
1000efac:	00800ac4 	movi	r2,43
1000efb0:	80805b26 	beq	r16,r2,1000f120 <_strtoul_r+0x1e8>
1000efb4:	d8000215 	stw	zero,8(sp)
1000efb8:	e0000d26 	beq	fp,zero,1000eff0 <_strtoul_r+0xb8>
1000efbc:	00800404 	movi	r2,16
1000efc0:	e0806626 	beq	fp,r2,1000f15c <_strtoul_r+0x224>
1000efc4:	013fffc4 	movi	r4,-1
1000efc8:	e00b883a 	mov	r5,fp
1000efcc:	000337c0 	call	1000337c <__udivsi3>
1000efd0:	e00b883a 	mov	r5,fp
1000efd4:	013fffc4 	movi	r4,-1
1000efd8:	1025883a 	mov	r18,r2
1000efdc:	00033e00 	call	100033e0 <__umodsi3>
1000efe0:	d8800115 	stw	r2,4(sp)
1000efe4:	e027883a 	mov	r19,fp
1000efe8:	902f883a 	mov	r23,r18
1000efec:	00000806 	br	1000f010 <_strtoul_r+0xd8>
1000eff0:	00800c04 	movi	r2,48
1000eff4:	80804e26 	beq	r16,r2,1000f130 <_strtoul_r+0x1f8>
1000eff8:	07000284 	movi	fp,10
1000effc:	00c00144 	movi	r3,5
1000f000:	05c666b4 	movhi	r23,6554
1000f004:	d8c00115 	stw	r3,4(sp)
1000f008:	bde66644 	addi	r23,r23,-26215
1000f00c:	e027883a 	mov	r19,fp
1000f010:	b407883a 	add	r3,r22,r16
1000f014:	18c00043 	ldbu	r3,1(r3)
1000f018:	0005883a 	mov	r2,zero
1000f01c:	0009883a 	mov	r4,zero
1000f020:	1940010c 	andi	r5,r3,4
1000f024:	04800044 	movi	r18,1
1000f028:	053fffc4 	movi	r20,-1
1000f02c:	28000f26 	beq	r5,zero,1000f06c <_strtoul_r+0x134>
1000f030:	843ff404 	addi	r16,r16,-48
1000f034:	8700130e 	bge	r16,fp,1000f084 <_strtoul_r+0x14c>
1000f038:	15000626 	beq	r2,r20,1000f054 <_strtoul_r+0x11c>
1000f03c:	b9002836 	bltu	r23,r4,1000f0e0 <_strtoul_r+0x1a8>
1000f040:	25c02526 	beq	r4,r23,1000f0d8 <_strtoul_r+0x1a0>
1000f044:	980b883a 	mov	r5,r19
1000f048:	00034380 	call	10003438 <__mulsi3>
1000f04c:	8089883a 	add	r4,r16,r2
1000f050:	00800044 	movi	r2,1
1000f054:	8c000003 	ldbu	r16,0(r17)
1000f058:	8c400044 	addi	r17,r17,1
1000f05c:	b407883a 	add	r3,r22,r16
1000f060:	18c00043 	ldbu	r3,1(r3)
1000f064:	1940010c 	andi	r5,r3,4
1000f068:	283ff11e 	bne	r5,zero,1000f030 <__alt_data_end+0xf800f030>
1000f06c:	18c000cc 	andi	r3,r3,3
1000f070:	18000426 	beq	r3,zero,1000f084 <_strtoul_r+0x14c>
1000f074:	1c801c26 	beq	r3,r18,1000f0e8 <_strtoul_r+0x1b0>
1000f078:	00c015c4 	movi	r3,87
1000f07c:	80e1c83a 	sub	r16,r16,r3
1000f080:	873fed16 	blt	r16,fp,1000f038 <__alt_data_end+0xf800f038>
1000f084:	10001a16 	blt	r2,zero,1000f0f0 <_strtoul_r+0x1b8>
1000f088:	d8c00217 	ldw	r3,8(sp)
1000f08c:	18000126 	beq	r3,zero,1000f094 <_strtoul_r+0x15c>
1000f090:	0109c83a 	sub	r4,zero,r4
1000f094:	a8000326 	beq	r21,zero,1000f0a4 <_strtoul_r+0x16c>
1000f098:	dd000017 	ldw	r20,0(sp)
1000f09c:	1000191e 	bne	r2,zero,1000f104 <_strtoul_r+0x1cc>
1000f0a0:	ad000015 	stw	r20,0(r21)
1000f0a4:	2005883a 	mov	r2,r4
1000f0a8:	dfc00d17 	ldw	ra,52(sp)
1000f0ac:	df000c17 	ldw	fp,48(sp)
1000f0b0:	ddc00b17 	ldw	r23,44(sp)
1000f0b4:	dd800a17 	ldw	r22,40(sp)
1000f0b8:	dd400917 	ldw	r21,36(sp)
1000f0bc:	dd000817 	ldw	r20,32(sp)
1000f0c0:	dcc00717 	ldw	r19,28(sp)
1000f0c4:	dc800617 	ldw	r18,24(sp)
1000f0c8:	dc400517 	ldw	r17,20(sp)
1000f0cc:	dc000417 	ldw	r16,16(sp)
1000f0d0:	dec00e04 	addi	sp,sp,56
1000f0d4:	f800283a 	ret
1000f0d8:	d8c00117 	ldw	r3,4(sp)
1000f0dc:	1c3fd90e 	bge	r3,r16,1000f044 <__alt_data_end+0xf800f044>
1000f0e0:	00bfffc4 	movi	r2,-1
1000f0e4:	003fdb06 	br	1000f054 <__alt_data_end+0xf800f054>
1000f0e8:	00c00dc4 	movi	r3,55
1000f0ec:	003fe306 	br	1000f07c <__alt_data_end+0xf800f07c>
1000f0f0:	d8c00317 	ldw	r3,12(sp)
1000f0f4:	00800884 	movi	r2,34
1000f0f8:	013fffc4 	movi	r4,-1
1000f0fc:	18800015 	stw	r2,0(r3)
1000f100:	a83fe826 	beq	r21,zero,1000f0a4 <__alt_data_end+0xf800f0a4>
1000f104:	8d3fffc4 	addi	r20,r17,-1
1000f108:	003fe506 	br	1000f0a0 <__alt_data_end+0xf800f0a0>
1000f10c:	1c400084 	addi	r17,r3,2
1000f110:	1c000043 	ldbu	r16,1(r3)
1000f114:	00c00044 	movi	r3,1
1000f118:	d8c00215 	stw	r3,8(sp)
1000f11c:	003fa606 	br	1000efb8 <__alt_data_end+0xf800efb8>
1000f120:	1c400084 	addi	r17,r3,2
1000f124:	1c000043 	ldbu	r16,1(r3)
1000f128:	d8000215 	stw	zero,8(sp)
1000f12c:	003fa206 	br	1000efb8 <__alt_data_end+0xf800efb8>
1000f130:	88800003 	ldbu	r2,0(r17)
1000f134:	00c01604 	movi	r3,88
1000f138:	108037cc 	andi	r2,r2,223
1000f13c:	10c00d26 	beq	r2,r3,1000f174 <_strtoul_r+0x23c>
1000f140:	07000204 	movi	fp,8
1000f144:	00c001c4 	movi	r3,7
1000f148:	05c80034 	movhi	r23,8192
1000f14c:	d8c00115 	stw	r3,4(sp)
1000f150:	bdffffc4 	addi	r23,r23,-1
1000f154:	e027883a 	mov	r19,fp
1000f158:	003fad06 	br	1000f010 <__alt_data_end+0xf800f010>
1000f15c:	00800c04 	movi	r2,48
1000f160:	80800d1e 	bne	r16,r2,1000f198 <_strtoul_r+0x260>
1000f164:	88800003 	ldbu	r2,0(r17)
1000f168:	00c01604 	movi	r3,88
1000f16c:	108037cc 	andi	r2,r2,223
1000f170:	10c0091e 	bne	r2,r3,1000f198 <_strtoul_r+0x260>
1000f174:	04c00404 	movi	r19,16
1000f178:	00c003c4 	movi	r3,15
1000f17c:	04840034 	movhi	r18,4096
1000f180:	8c000043 	ldbu	r16,1(r17)
1000f184:	d8c00115 	stw	r3,4(sp)
1000f188:	8c400084 	addi	r17,r17,2
1000f18c:	94bfffc4 	addi	r18,r18,-1
1000f190:	9839883a 	mov	fp,r19
1000f194:	003f9406 	br	1000efe8 <__alt_data_end+0xf800efe8>
1000f198:	00c003c4 	movi	r3,15
1000f19c:	05c40034 	movhi	r23,4096
1000f1a0:	d8c00115 	stw	r3,4(sp)
1000f1a4:	bdffffc4 	addi	r23,r23,-1
1000f1a8:	e027883a 	mov	r19,fp
1000f1ac:	003f9806 	br	1000f010 <__alt_data_end+0xf800f010>

1000f1b0 <strtoul>:
1000f1b0:	008400b4 	movhi	r2,4098
1000f1b4:	10ba2504 	addi	r2,r2,-5996
1000f1b8:	300f883a 	mov	r7,r6
1000f1bc:	280d883a 	mov	r6,r5
1000f1c0:	200b883a 	mov	r5,r4
1000f1c4:	11000017 	ldw	r4,0(r2)
1000f1c8:	000ef381 	jmpi	1000ef38 <_strtoul_r>

1000f1cc <_strtoull_r>:
1000f1cc:	008400b4 	movhi	r2,4098
1000f1d0:	deffef04 	addi	sp,sp,-68
1000f1d4:	10ba2304 	addi	r2,r2,-6004
1000f1d8:	dd800d15 	stw	r22,52(sp)
1000f1dc:	15800017 	ldw	r22,0(r2)
1000f1e0:	df000f15 	stw	fp,60(sp)
1000f1e4:	d9000515 	stw	r4,20(sp)
1000f1e8:	dfc01015 	stw	ra,64(sp)
1000f1ec:	ddc00e15 	stw	r23,56(sp)
1000f1f0:	dd400c15 	stw	r21,48(sp)
1000f1f4:	dd000b15 	stw	r20,44(sp)
1000f1f8:	dcc00a15 	stw	r19,40(sp)
1000f1fc:	dc800915 	stw	r18,36(sp)
1000f200:	dc400815 	stw	r17,32(sp)
1000f204:	dc000715 	stw	r16,28(sp)
1000f208:	d9400215 	stw	r5,8(sp)
1000f20c:	d9800115 	stw	r6,4(sp)
1000f210:	3839883a 	mov	fp,r7
1000f214:	2809883a 	mov	r4,r5
1000f218:	22000003 	ldbu	r8,0(r4)
1000f21c:	24400044 	addi	r17,r4,1
1000f220:	2007883a 	mov	r3,r4
1000f224:	b205883a 	add	r2,r22,r8
1000f228:	10800043 	ldbu	r2,1(r2)
1000f22c:	8809883a 	mov	r4,r17
1000f230:	1080020c 	andi	r2,r2,8
1000f234:	103ff81e 	bne	r2,zero,1000f218 <__alt_data_end+0xf800f218>
1000f238:	00800b44 	movi	r2,45
1000f23c:	40807726 	beq	r8,r2,1000f41c <_strtoull_r+0x250>
1000f240:	00800ac4 	movi	r2,43
1000f244:	40807a26 	beq	r8,r2,1000f430 <_strtoull_r+0x264>
1000f248:	d8000415 	stw	zero,16(sp)
1000f24c:	e0001426 	beq	fp,zero,1000f2a0 <_strtoull_r+0xd4>
1000f250:	00800404 	movi	r2,16
1000f254:	e0808826 	beq	fp,r2,1000f478 <_strtoull_r+0x2ac>
1000f258:	e025d7fa 	srai	r18,fp,31
1000f25c:	013fffc4 	movi	r4,-1
1000f260:	200b883a 	mov	r5,r4
1000f264:	e00d883a 	mov	r6,fp
1000f268:	900f883a 	mov	r7,r18
1000f26c:	da000615 	stw	r8,24(sp)
1000f270:	0015dd80 	call	10015dd8 <__udivdi3>
1000f274:	013fffc4 	movi	r4,-1
1000f278:	e00d883a 	mov	r6,fp
1000f27c:	900f883a 	mov	r7,r18
1000f280:	200b883a 	mov	r5,r4
1000f284:	1021883a 	mov	r16,r2
1000f288:	182f883a 	mov	r23,r3
1000f28c:	00163d40 	call	100163d4 <__umoddi3>
1000f290:	d8800315 	stw	r2,12(sp)
1000f294:	df000015 	stw	fp,0(sp)
1000f298:	da000617 	ldw	r8,24(sp)
1000f29c:	00000c06 	br	1000f2d0 <_strtoull_r+0x104>
1000f2a0:	00800c04 	movi	r2,48
1000f2a4:	40806626 	beq	r8,r2,1000f440 <_strtoull_r+0x274>
1000f2a8:	00800284 	movi	r2,10
1000f2ac:	00c00144 	movi	r3,5
1000f2b0:	042666b4 	movhi	r16,39322
1000f2b4:	05c666b4 	movhi	r23,6554
1000f2b8:	d8800015 	stw	r2,0(sp)
1000f2bc:	d8c00315 	stw	r3,12(sp)
1000f2c0:	84266644 	addi	r16,r16,-26215
1000f2c4:	bde66644 	addi	r23,r23,-26215
1000f2c8:	0025883a 	mov	r18,zero
1000f2cc:	1039883a 	mov	fp,r2
1000f2d0:	b205883a 	add	r2,r22,r8
1000f2d4:	11800043 	ldbu	r6,1(r2)
1000f2d8:	882b883a 	mov	r21,r17
1000f2dc:	000f883a 	mov	r7,zero
1000f2e0:	3080010c 	andi	r2,r6,4
1000f2e4:	0009883a 	mov	r4,zero
1000f2e8:	000b883a 	mov	r5,zero
1000f2ec:	04400044 	movi	r17,1
1000f2f0:	053fffc4 	movi	r20,-1
1000f2f4:	10000d26 	beq	r2,zero,1000f32c <_strtoull_r+0x160>
1000f2f8:	44fff404 	addi	r19,r8,-48
1000f2fc:	9f00110e 	bge	r19,fp,1000f344 <_strtoull_r+0x178>
1000f300:	3d000426 	beq	r7,r20,1000f314 <_strtoull_r+0x148>
1000f304:	b9400236 	bltu	r23,r5,1000f310 <_strtoull_r+0x144>
1000f308:	2dc0291e 	bne	r5,r23,1000f3b0 <_strtoull_r+0x1e4>
1000f30c:	8100282e 	bgeu	r16,r4,1000f3b0 <_strtoull_r+0x1e4>
1000f310:	01ffffc4 	movi	r7,-1
1000f314:	aa000003 	ldbu	r8,0(r21)
1000f318:	ad400044 	addi	r21,r21,1
1000f31c:	b205883a 	add	r2,r22,r8
1000f320:	11800043 	ldbu	r6,1(r2)
1000f324:	3080010c 	andi	r2,r6,4
1000f328:	103ff31e 	bne	r2,zero,1000f2f8 <__alt_data_end+0xf800f2f8>
1000f32c:	318000cc 	andi	r6,r6,3
1000f330:	30000426 	beq	r6,zero,1000f344 <_strtoull_r+0x178>
1000f334:	34402a26 	beq	r6,r17,1000f3e0 <_strtoull_r+0x214>
1000f338:	00c015c4 	movi	r3,87
1000f33c:	40e7c83a 	sub	r19,r8,r3
1000f340:	9f3fef16 	blt	r19,fp,1000f300 <__alt_data_end+0xf800f300>
1000f344:	38002c16 	blt	r7,zero,1000f3f8 <_strtoull_r+0x22c>
1000f348:	d8c00417 	ldw	r3,16(sp)
1000f34c:	18000426 	beq	r3,zero,1000f360 <_strtoull_r+0x194>
1000f350:	0109c83a 	sub	r4,zero,r4
1000f354:	2004c03a 	cmpne	r2,r4,zero
1000f358:	0151c83a 	sub	r8,zero,r5
1000f35c:	408bc83a 	sub	r5,r8,r2
1000f360:	d8800117 	ldw	r2,4(sp)
1000f364:	10000426 	beq	r2,zero,1000f378 <_strtoull_r+0x1ac>
1000f368:	dd000217 	ldw	r20,8(sp)
1000f36c:	3800291e 	bne	r7,zero,1000f414 <_strtoull_r+0x248>
1000f370:	d8c00117 	ldw	r3,4(sp)
1000f374:	1d000015 	stw	r20,0(r3)
1000f378:	2005883a 	mov	r2,r4
1000f37c:	2807883a 	mov	r3,r5
1000f380:	dfc01017 	ldw	ra,64(sp)
1000f384:	df000f17 	ldw	fp,60(sp)
1000f388:	ddc00e17 	ldw	r23,56(sp)
1000f38c:	dd800d17 	ldw	r22,52(sp)
1000f390:	dd400c17 	ldw	r21,48(sp)
1000f394:	dd000b17 	ldw	r20,44(sp)
1000f398:	dcc00a17 	ldw	r19,40(sp)
1000f39c:	dc800917 	ldw	r18,36(sp)
1000f3a0:	dc400817 	ldw	r17,32(sp)
1000f3a4:	dc000717 	ldw	r16,28(sp)
1000f3a8:	dec01104 	addi	sp,sp,68
1000f3ac:	f800283a 	ret
1000f3b0:	24000d26 	beq	r4,r16,1000f3e8 <_strtoull_r+0x21c>
1000f3b4:	d9800017 	ldw	r6,0(sp)
1000f3b8:	900f883a 	mov	r7,r18
1000f3bc:	0015c580 	call	10015c58 <__muldi3>
1000f3c0:	980bd7fa 	srai	r5,r19,31
1000f3c4:	9885883a 	add	r2,r19,r2
1000f3c8:	14d1803a 	cmpltu	r8,r2,r19
1000f3cc:	28c7883a 	add	r3,r5,r3
1000f3d0:	1009883a 	mov	r4,r2
1000f3d4:	40cb883a 	add	r5,r8,r3
1000f3d8:	01c00044 	movi	r7,1
1000f3dc:	003fcd06 	br	1000f314 <__alt_data_end+0xf800f314>
1000f3e0:	00c00dc4 	movi	r3,55
1000f3e4:	003fd506 	br	1000f33c <__alt_data_end+0xf800f33c>
1000f3e8:	2dfff21e 	bne	r5,r23,1000f3b4 <__alt_data_end+0xf800f3b4>
1000f3ec:	d8c00317 	ldw	r3,12(sp)
1000f3f0:	1cffc716 	blt	r3,r19,1000f310 <__alt_data_end+0xf800f310>
1000f3f4:	003fef06 	br	1000f3b4 <__alt_data_end+0xf800f3b4>
1000f3f8:	d8c00517 	ldw	r3,20(sp)
1000f3fc:	00800884 	movi	r2,34
1000f400:	013fffc4 	movi	r4,-1
1000f404:	18800015 	stw	r2,0(r3)
1000f408:	d8800117 	ldw	r2,4(sp)
1000f40c:	200b883a 	mov	r5,r4
1000f410:	103fd926 	beq	r2,zero,1000f378 <__alt_data_end+0xf800f378>
1000f414:	ad3fffc4 	addi	r20,r21,-1
1000f418:	003fd506 	br	1000f370 <__alt_data_end+0xf800f370>
1000f41c:	00800044 	movi	r2,1
1000f420:	1c400084 	addi	r17,r3,2
1000f424:	1a000043 	ldbu	r8,1(r3)
1000f428:	d8800415 	stw	r2,16(sp)
1000f42c:	003f8706 	br	1000f24c <__alt_data_end+0xf800f24c>
1000f430:	1c400084 	addi	r17,r3,2
1000f434:	1a000043 	ldbu	r8,1(r3)
1000f438:	d8000415 	stw	zero,16(sp)
1000f43c:	003f8306 	br	1000f24c <__alt_data_end+0xf800f24c>
1000f440:	88800003 	ldbu	r2,0(r17)
1000f444:	00c01604 	movi	r3,88
1000f448:	108037cc 	andi	r2,r2,223
1000f44c:	10c01026 	beq	r2,r3,1000f490 <_strtoull_r+0x2c4>
1000f450:	00c00204 	movi	r3,8
1000f454:	008001c4 	movi	r2,7
1000f458:	043fffc4 	movi	r16,-1
1000f45c:	05c80034 	movhi	r23,8192
1000f460:	d8c00015 	stw	r3,0(sp)
1000f464:	d8800315 	stw	r2,12(sp)
1000f468:	bc2f883a 	add	r23,r23,r16
1000f46c:	0025883a 	mov	r18,zero
1000f470:	1839883a 	mov	fp,r3
1000f474:	003f9606 	br	1000f2d0 <__alt_data_end+0xf800f2d0>
1000f478:	00800c04 	movi	r2,48
1000f47c:	4080101e 	bne	r8,r2,1000f4c0 <_strtoull_r+0x2f4>
1000f480:	88800003 	ldbu	r2,0(r17)
1000f484:	00c01604 	movi	r3,88
1000f488:	108037cc 	andi	r2,r2,223
1000f48c:	10c0141e 	bne	r2,r3,1000f4e0 <_strtoull_r+0x314>
1000f490:	00c00404 	movi	r3,16
1000f494:	008003c4 	movi	r2,15
1000f498:	043fffc4 	movi	r16,-1
1000f49c:	05c40034 	movhi	r23,4096
1000f4a0:	8a000043 	ldbu	r8,1(r17)
1000f4a4:	d8c00015 	stw	r3,0(sp)
1000f4a8:	d8800315 	stw	r2,12(sp)
1000f4ac:	8c400084 	addi	r17,r17,2
1000f4b0:	bc2f883a 	add	r23,r23,r16
1000f4b4:	0025883a 	mov	r18,zero
1000f4b8:	1839883a 	mov	fp,r3
1000f4bc:	003f8406 	br	1000f2d0 <__alt_data_end+0xf800f2d0>
1000f4c0:	008003c4 	movi	r2,15
1000f4c4:	d8800315 	stw	r2,12(sp)
1000f4c8:	043fffc4 	movi	r16,-1
1000f4cc:	05c40034 	movhi	r23,4096
1000f4d0:	bc2f883a 	add	r23,r23,r16
1000f4d4:	df000015 	stw	fp,0(sp)
1000f4d8:	0025883a 	mov	r18,zero
1000f4dc:	003f7c06 	br	1000f2d0 <__alt_data_end+0xf800f2d0>
1000f4e0:	00c003c4 	movi	r3,15
1000f4e4:	d8c00315 	stw	r3,12(sp)
1000f4e8:	003ff706 	br	1000f4c8 <__alt_data_end+0xf800f4c8>

1000f4ec <___svfprintf_internal_r>:
1000f4ec:	deffb704 	addi	sp,sp,-292
1000f4f0:	dfc04815 	stw	ra,288(sp)
1000f4f4:	ddc04615 	stw	r23,280(sp)
1000f4f8:	d9402d15 	stw	r5,180(sp)
1000f4fc:	d9003915 	stw	r4,228(sp)
1000f500:	302f883a 	mov	r23,r6
1000f504:	d9c02e15 	stw	r7,184(sp)
1000f508:	df004715 	stw	fp,284(sp)
1000f50c:	dd804515 	stw	r22,276(sp)
1000f510:	dd404415 	stw	r21,272(sp)
1000f514:	dd004315 	stw	r20,268(sp)
1000f518:	dcc04215 	stw	r19,264(sp)
1000f51c:	dc804115 	stw	r18,260(sp)
1000f520:	dc404015 	stw	r17,256(sp)
1000f524:	dc003f15 	stw	r16,252(sp)
1000f528:	000ac040 	call	1000ac04 <_localeconv_r>
1000f52c:	10800017 	ldw	r2,0(r2)
1000f530:	1009883a 	mov	r4,r2
1000f534:	d8803415 	stw	r2,208(sp)
1000f538:	0003f300 	call	10003f30 <strlen>
1000f53c:	d8c02d17 	ldw	r3,180(sp)
1000f540:	d8803815 	stw	r2,224(sp)
1000f544:	1880030b 	ldhu	r2,12(r3)
1000f548:	1080200c 	andi	r2,r2,128
1000f54c:	10000226 	beq	r2,zero,1000f558 <___svfprintf_internal_r+0x6c>
1000f550:	18800417 	ldw	r2,16(r3)
1000f554:	1006b126 	beq	r2,zero,1001101c <___svfprintf_internal_r+0x1b30>
1000f558:	dcc03917 	ldw	r19,228(sp)
1000f55c:	d8c00404 	addi	r3,sp,16
1000f560:	054400b4 	movhi	r21,4098
1000f564:	d9001e04 	addi	r4,sp,120
1000f568:	ad72d004 	addi	r21,r21,-13504
1000f56c:	d8c01e15 	stw	r3,120(sp)
1000f570:	d8002015 	stw	zero,128(sp)
1000f574:	d8001f15 	stw	zero,124(sp)
1000f578:	d8003315 	stw	zero,204(sp)
1000f57c:	d8003615 	stw	zero,216(sp)
1000f580:	d8003715 	stw	zero,220(sp)
1000f584:	1811883a 	mov	r8,r3
1000f588:	d8003a15 	stw	zero,232(sp)
1000f58c:	d8003b15 	stw	zero,236(sp)
1000f590:	d8002f15 	stw	zero,188(sp)
1000f594:	d9002815 	stw	r4,160(sp)
1000f598:	b8800007 	ldb	r2,0(r23)
1000f59c:	10027726 	beq	r2,zero,1000ff7c <___svfprintf_internal_r+0xa90>
1000f5a0:	00c00944 	movi	r3,37
1000f5a4:	b823883a 	mov	r17,r23
1000f5a8:	10c0021e 	bne	r2,r3,1000f5b4 <___svfprintf_internal_r+0xc8>
1000f5ac:	00001406 	br	1000f600 <___svfprintf_internal_r+0x114>
1000f5b0:	10c00326 	beq	r2,r3,1000f5c0 <___svfprintf_internal_r+0xd4>
1000f5b4:	8c400044 	addi	r17,r17,1
1000f5b8:	88800007 	ldb	r2,0(r17)
1000f5bc:	103ffc1e 	bne	r2,zero,1000f5b0 <__alt_data_end+0xf800f5b0>
1000f5c0:	8de1c83a 	sub	r16,r17,r23
1000f5c4:	80000e26 	beq	r16,zero,1000f600 <___svfprintf_internal_r+0x114>
1000f5c8:	d8c02017 	ldw	r3,128(sp)
1000f5cc:	d8801f17 	ldw	r2,124(sp)
1000f5d0:	45c00015 	stw	r23,0(r8)
1000f5d4:	1c07883a 	add	r3,r3,r16
1000f5d8:	10800044 	addi	r2,r2,1
1000f5dc:	d8c02015 	stw	r3,128(sp)
1000f5e0:	44000115 	stw	r16,4(r8)
1000f5e4:	d8801f15 	stw	r2,124(sp)
1000f5e8:	00c001c4 	movi	r3,7
1000f5ec:	18809916 	blt	r3,r2,1000f854 <___svfprintf_internal_r+0x368>
1000f5f0:	42000204 	addi	r8,r8,8
1000f5f4:	d9402f17 	ldw	r5,188(sp)
1000f5f8:	2c0b883a 	add	r5,r5,r16
1000f5fc:	d9402f15 	stw	r5,188(sp)
1000f600:	88800007 	ldb	r2,0(r17)
1000f604:	10009a26 	beq	r2,zero,1000f870 <___svfprintf_internal_r+0x384>
1000f608:	8dc00044 	addi	r23,r17,1
1000f60c:	8c400047 	ldb	r17,1(r17)
1000f610:	0021883a 	mov	r16,zero
1000f614:	00bfffc4 	movi	r2,-1
1000f618:	0025883a 	mov	r18,zero
1000f61c:	dc002905 	stb	r16,164(sp)
1000f620:	d8002785 	stb	zero,158(sp)
1000f624:	d8002b05 	stb	zero,172(sp)
1000f628:	d8802a15 	stw	r2,168(sp)
1000f62c:	d8003115 	stw	zero,196(sp)
1000f630:	05001604 	movi	r20,88
1000f634:	05800244 	movi	r22,9
1000f638:	4039883a 	mov	fp,r8
1000f63c:	9021883a 	mov	r16,r18
1000f640:	bdc00044 	addi	r23,r23,1
1000f644:	88bff804 	addi	r2,r17,-32
1000f648:	a0831e36 	bltu	r20,r2,100102c4 <___svfprintf_internal_r+0xdd8>
1000f64c:	100490ba 	slli	r2,r2,2
1000f650:	00c40074 	movhi	r3,4097
1000f654:	18fd9904 	addi	r3,r3,-2460
1000f658:	10c5883a 	add	r2,r2,r3
1000f65c:	10800017 	ldw	r2,0(r2)
1000f660:	1000683a 	jmp	r2
1000f664:	1001020c 	andi	zero,r2,1032
1000f668:	100102c4 	addi	zero,r2,1035
1000f66c:	100102c4 	addi	zero,r2,1035
1000f670:	10010200 	call	11001020 <_gp+0xfda7a0>
1000f674:	100102c4 	addi	zero,r2,1035
1000f678:	100102c4 	addi	zero,r2,1035
1000f67c:	100102c4 	addi	zero,r2,1035
1000f680:	100102c4 	addi	zero,r2,1035
1000f684:	100102c4 	addi	zero,r2,1035
1000f688:	100102c4 	addi	zero,r2,1035
1000f68c:	1000f8cc 	andi	zero,r2,995
1000f690:	10010110 	cmplti	zero,r2,1028
1000f694:	100102c4 	addi	zero,r2,1035
1000f698:	1000f7d8 	cmpnei	zero,r2,991
1000f69c:	1000f8f0 	cmpltui	zero,r2,995
1000f6a0:	100102c4 	addi	zero,r2,1035
1000f6a4:	1000f97c 	xorhi	zero,r2,997
1000f6a8:	1000f940 	call	11000f94 <_gp+0xfda714>
1000f6ac:	1000f940 	call	11000f94 <_gp+0xfda714>
1000f6b0:	1000f940 	call	11000f94 <_gp+0xfda714>
1000f6b4:	1000f940 	call	11000f94 <_gp+0xfda714>
1000f6b8:	1000f940 	call	11000f94 <_gp+0xfda714>
1000f6bc:	1000f940 	call	11000f94 <_gp+0xfda714>
1000f6c0:	1000f940 	call	11000f94 <_gp+0xfda714>
1000f6c4:	1000f940 	call	11000f94 <_gp+0xfda714>
1000f6c8:	1000f940 	call	11000f94 <_gp+0xfda714>
1000f6cc:	100102c4 	addi	zero,r2,1035
1000f6d0:	100102c4 	addi	zero,r2,1035
1000f6d4:	100102c4 	addi	zero,r2,1035
1000f6d8:	100102c4 	addi	zero,r2,1035
1000f6dc:	100102c4 	addi	zero,r2,1035
1000f6e0:	100102c4 	addi	zero,r2,1035
1000f6e4:	100102c4 	addi	zero,r2,1035
1000f6e8:	100102c4 	addi	zero,r2,1035
1000f6ec:	100102c4 	addi	zero,r2,1035
1000f6f0:	100102c4 	addi	zero,r2,1035
1000f6f4:	1000fa40 	call	11000fa4 <_gp+0xfda724>
1000f6f8:	1000f988 	cmpgei	zero,r2,998
1000f6fc:	100102c4 	addi	zero,r2,1035
1000f700:	1000f988 	cmpgei	zero,r2,998
1000f704:	100102c4 	addi	zero,r2,1035
1000f708:	100102c4 	addi	zero,r2,1035
1000f70c:	100102c4 	addi	zero,r2,1035
1000f710:	100102c4 	addi	zero,r2,1035
1000f714:	1000fa34 	orhi	zero,r2,1000
1000f718:	100102c4 	addi	zero,r2,1035
1000f71c:	100102c4 	addi	zero,r2,1035
1000f720:	1000fb08 	cmpgei	zero,r2,1004
1000f724:	100102c4 	addi	zero,r2,1035
1000f728:	100102c4 	addi	zero,r2,1035
1000f72c:	100102c4 	addi	zero,r2,1035
1000f730:	100102c4 	addi	zero,r2,1035
1000f734:	100102c4 	addi	zero,r2,1035
1000f738:	1000ff84 	addi	zero,r2,1022
1000f73c:	100102c4 	addi	zero,r2,1035
1000f740:	100102c4 	addi	zero,r2,1035
1000f744:	1000fff0 	cmpltui	zero,r2,1023
1000f748:	100102c4 	addi	zero,r2,1035
1000f74c:	100102c4 	addi	zero,r2,1035
1000f750:	100102c4 	addi	zero,r2,1035
1000f754:	100102c4 	addi	zero,r2,1035
1000f758:	100102c4 	addi	zero,r2,1035
1000f75c:	100102c4 	addi	zero,r2,1035
1000f760:	100102c4 	addi	zero,r2,1035
1000f764:	100102c4 	addi	zero,r2,1035
1000f768:	100102c4 	addi	zero,r2,1035
1000f76c:	100102c4 	addi	zero,r2,1035
1000f770:	100100ac 	andhi	zero,r2,1026
1000f774:	1001022c 	andhi	zero,r2,1032
1000f778:	1000f988 	cmpgei	zero,r2,998
1000f77c:	1000f988 	cmpgei	zero,r2,998
1000f780:	1000f988 	cmpgei	zero,r2,998
1000f784:	100102a0 	cmpeqi	zero,r2,1034
1000f788:	1001022c 	andhi	zero,r2,1032
1000f78c:	100102c4 	addi	zero,r2,1035
1000f790:	100102c4 	addi	zero,r2,1035
1000f794:	1001024c 	andi	zero,r2,1033
1000f798:	100102c4 	addi	zero,r2,1035
1000f79c:	10010260 	cmpeqi	zero,r2,1033
1000f7a0:	100100f0 	cmpltui	zero,r2,1027
1000f7a4:	1000f7e4 	muli	zero,r2,991
1000f7a8:	10010128 	cmpgeui	zero,r2,1028
1000f7ac:	100102c4 	addi	zero,r2,1035
1000f7b0:	10010134 	orhi	zero,r2,1028
1000f7b4:	100102c4 	addi	zero,r2,1035
1000f7b8:	10010198 	cmpnei	zero,r2,1030
1000f7bc:	100102c4 	addi	zero,r2,1035
1000f7c0:	100102c4 	addi	zero,r2,1035
1000f7c4:	100101b8 	rdprs	zero,r2,1030
1000f7c8:	d8c03117 	ldw	r3,196(sp)
1000f7cc:	d8802e15 	stw	r2,184(sp)
1000f7d0:	00c7c83a 	sub	r3,zero,r3
1000f7d4:	d8c03115 	stw	r3,196(sp)
1000f7d8:	84000114 	ori	r16,r16,4
1000f7dc:	bc400007 	ldb	r17,0(r23)
1000f7e0:	003f9706 	br	1000f640 <__alt_data_end+0xf800f640>
1000f7e4:	00800c04 	movi	r2,48
1000f7e8:	d8802705 	stb	r2,156(sp)
1000f7ec:	00801e04 	movi	r2,120
1000f7f0:	d8802745 	stb	r2,157(sp)
1000f7f4:	d9002a17 	ldw	r4,168(sp)
1000f7f8:	d8802e17 	ldw	r2,184(sp)
1000f7fc:	d8002785 	stb	zero,158(sp)
1000f800:	e011883a 	mov	r8,fp
1000f804:	10c00104 	addi	r3,r2,4
1000f808:	15000017 	ldw	r20,0(r2)
1000f80c:	002d883a 	mov	r22,zero
1000f810:	80800094 	ori	r2,r16,2
1000f814:	2002b616 	blt	r4,zero,100102f0 <___svfprintf_internal_r+0xe04>
1000f818:	00bfdfc4 	movi	r2,-129
1000f81c:	80a4703a 	and	r18,r16,r2
1000f820:	d8c02e15 	stw	r3,184(sp)
1000f824:	94800094 	ori	r18,r18,2
1000f828:	a002a01e 	bne	r20,zero,100102ac <___svfprintf_internal_r+0xdc0>
1000f82c:	014400b4 	movhi	r5,4098
1000f830:	2971ac04 	addi	r5,r5,-14672
1000f834:	d9403a15 	stw	r5,232(sp)
1000f838:	04401e04 	movi	r17,120
1000f83c:	d8c02a17 	ldw	r3,168(sp)
1000f840:	0039883a 	mov	fp,zero
1000f844:	1801e626 	beq	r3,zero,1000ffe0 <___svfprintf_internal_r+0xaf4>
1000f848:	0029883a 	mov	r20,zero
1000f84c:	002d883a 	mov	r22,zero
1000f850:	00020506 	br	10010068 <___svfprintf_internal_r+0xb7c>
1000f854:	d9402d17 	ldw	r5,180(sp)
1000f858:	d9801e04 	addi	r6,sp,120
1000f85c:	9809883a 	mov	r4,r19
1000f860:	00145000 	call	10014500 <__ssprint_r>
1000f864:	1000081e 	bne	r2,zero,1000f888 <___svfprintf_internal_r+0x39c>
1000f868:	da000404 	addi	r8,sp,16
1000f86c:	003f6106 	br	1000f5f4 <__alt_data_end+0xf800f5f4>
1000f870:	d8802017 	ldw	r2,128(sp)
1000f874:	10000426 	beq	r2,zero,1000f888 <___svfprintf_internal_r+0x39c>
1000f878:	d9402d17 	ldw	r5,180(sp)
1000f87c:	d9003917 	ldw	r4,228(sp)
1000f880:	d9801e04 	addi	r6,sp,120
1000f884:	00145000 	call	10014500 <__ssprint_r>
1000f888:	d8802d17 	ldw	r2,180(sp)
1000f88c:	10c0030b 	ldhu	r3,12(r2)
1000f890:	d8802f17 	ldw	r2,188(sp)
1000f894:	18c0100c 	andi	r3,r3,64
1000f898:	1806251e 	bne	r3,zero,10011130 <___svfprintf_internal_r+0x1c44>
1000f89c:	dfc04817 	ldw	ra,288(sp)
1000f8a0:	df004717 	ldw	fp,284(sp)
1000f8a4:	ddc04617 	ldw	r23,280(sp)
1000f8a8:	dd804517 	ldw	r22,276(sp)
1000f8ac:	dd404417 	ldw	r21,272(sp)
1000f8b0:	dd004317 	ldw	r20,268(sp)
1000f8b4:	dcc04217 	ldw	r19,264(sp)
1000f8b8:	dc804117 	ldw	r18,260(sp)
1000f8bc:	dc404017 	ldw	r17,256(sp)
1000f8c0:	dc003f17 	ldw	r16,252(sp)
1000f8c4:	dec04904 	addi	sp,sp,292
1000f8c8:	f800283a 	ret
1000f8cc:	d9002e17 	ldw	r4,184(sp)
1000f8d0:	d9402e17 	ldw	r5,184(sp)
1000f8d4:	21000017 	ldw	r4,0(r4)
1000f8d8:	28800104 	addi	r2,r5,4
1000f8dc:	d9003115 	stw	r4,196(sp)
1000f8e0:	203fb916 	blt	r4,zero,1000f7c8 <__alt_data_end+0xf800f7c8>
1000f8e4:	d8802e15 	stw	r2,184(sp)
1000f8e8:	bc400007 	ldb	r17,0(r23)
1000f8ec:	003f5406 	br	1000f640 <__alt_data_end+0xf800f640>
1000f8f0:	bc400007 	ldb	r17,0(r23)
1000f8f4:	01000a84 	movi	r4,42
1000f8f8:	b8c00044 	addi	r3,r23,1
1000f8fc:	89076926 	beq	r17,r4,100116a4 <___svfprintf_internal_r+0x21b8>
1000f900:	8cbff404 	addi	r18,r17,-48
1000f904:	b486b936 	bltu	r22,r18,100113ec <___svfprintf_internal_r+0x1f00>
1000f908:	0009883a 	mov	r4,zero
1000f90c:	1823883a 	mov	r17,r3
1000f910:	01400284 	movi	r5,10
1000f914:	00034380 	call	10003438 <__mulsi3>
1000f918:	88c00007 	ldb	r3,0(r17)
1000f91c:	1489883a 	add	r4,r2,r18
1000f920:	8dc00044 	addi	r23,r17,1
1000f924:	1cbff404 	addi	r18,r3,-48
1000f928:	b823883a 	mov	r17,r23
1000f92c:	b4bff82e 	bgeu	r22,r18,1000f910 <__alt_data_end+0xf800f910>
1000f930:	1823883a 	mov	r17,r3
1000f934:	20060416 	blt	r4,zero,10011148 <___svfprintf_internal_r+0x1c5c>
1000f938:	d9002a15 	stw	r4,168(sp)
1000f93c:	003f4106 	br	1000f644 <__alt_data_end+0xf800f644>
1000f940:	8cbff404 	addi	r18,r17,-48
1000f944:	d8003115 	stw	zero,196(sp)
1000f948:	0009883a 	mov	r4,zero
1000f94c:	b823883a 	mov	r17,r23
1000f950:	01400284 	movi	r5,10
1000f954:	00034380 	call	10003438 <__mulsi3>
1000f958:	88c00007 	ldb	r3,0(r17)
1000f95c:	9089883a 	add	r4,r18,r2
1000f960:	bdc00044 	addi	r23,r23,1
1000f964:	1cbff404 	addi	r18,r3,-48
1000f968:	b823883a 	mov	r17,r23
1000f96c:	b4bff82e 	bgeu	r22,r18,1000f950 <__alt_data_end+0xf800f950>
1000f970:	1823883a 	mov	r17,r3
1000f974:	d9003115 	stw	r4,196(sp)
1000f978:	003f3206 	br	1000f644 <__alt_data_end+0xf800f644>
1000f97c:	84002014 	ori	r16,r16,128
1000f980:	bc400007 	ldb	r17,0(r23)
1000f984:	003f2e06 	br	1000f640 <__alt_data_end+0xf800f640>
1000f988:	8025883a 	mov	r18,r16
1000f98c:	dc002903 	ldbu	r16,164(sp)
1000f990:	e011883a 	mov	r8,fp
1000f994:	84003fcc 	andi	r16,r16,255
1000f998:	8007721e 	bne	r16,zero,10011764 <___svfprintf_internal_r+0x2278>
1000f99c:	9080020c 	andi	r2,r18,8
1000f9a0:	1004a526 	beq	r2,zero,10010c38 <___svfprintf_internal_r+0x174c>
1000f9a4:	d9002e17 	ldw	r4,184(sp)
1000f9a8:	d9402e17 	ldw	r5,184(sp)
1000f9ac:	d8802e17 	ldw	r2,184(sp)
1000f9b0:	21000017 	ldw	r4,0(r4)
1000f9b4:	29400117 	ldw	r5,4(r5)
1000f9b8:	10800204 	addi	r2,r2,8
1000f9bc:	d9003615 	stw	r4,216(sp)
1000f9c0:	d9403715 	stw	r5,220(sp)
1000f9c4:	d8802e15 	stw	r2,184(sp)
1000f9c8:	d9003617 	ldw	r4,216(sp)
1000f9cc:	d9403717 	ldw	r5,220(sp)
1000f9d0:	da003e15 	stw	r8,248(sp)
1000f9d4:	04000044 	movi	r16,1
1000f9d8:	000ce380 	call	1000ce38 <__fpclassifyd>
1000f9dc:	da003e17 	ldw	r8,248(sp)
1000f9e0:	1404731e 	bne	r2,r16,10010bb0 <___svfprintf_internal_r+0x16c4>
1000f9e4:	d9003617 	ldw	r4,216(sp)
1000f9e8:	d9403717 	ldw	r5,220(sp)
1000f9ec:	000d883a 	mov	r6,zero
1000f9f0:	000f883a 	mov	r7,zero
1000f9f4:	0017f740 	call	10017f74 <__ledf2>
1000f9f8:	da003e17 	ldw	r8,248(sp)
1000f9fc:	10061b16 	blt	r2,zero,1001126c <___svfprintf_internal_r+0x1d80>
1000fa00:	df002783 	ldbu	fp,158(sp)
1000fa04:	008011c4 	movi	r2,71
1000fa08:	1445810e 	bge	r2,r17,10011010 <___svfprintf_internal_r+0x1b24>
1000fa0c:	040400b4 	movhi	r16,4098
1000fa10:	8431a404 	addi	r16,r16,-14704
1000fa14:	00c000c4 	movi	r3,3
1000fa18:	00bfdfc4 	movi	r2,-129
1000fa1c:	d8c02915 	stw	r3,164(sp)
1000fa20:	90a4703a 	and	r18,r18,r2
1000fa24:	d8c02b15 	stw	r3,172(sp)
1000fa28:	d8002a15 	stw	zero,168(sp)
1000fa2c:	d8003215 	stw	zero,200(sp)
1000fa30:	00006c06 	br	1000fbe4 <___svfprintf_internal_r+0x6f8>
1000fa34:	84000214 	ori	r16,r16,8
1000fa38:	bc400007 	ldb	r17,0(r23)
1000fa3c:	003f0006 	br	1000f640 <__alt_data_end+0xf800f640>
1000fa40:	8025883a 	mov	r18,r16
1000fa44:	dc002903 	ldbu	r16,164(sp)
1000fa48:	e011883a 	mov	r8,fp
1000fa4c:	84003fcc 	andi	r16,r16,255
1000fa50:	80073f1e 	bne	r16,zero,10011750 <___svfprintf_internal_r+0x2264>
1000fa54:	94800414 	ori	r18,r18,16
1000fa58:	9080080c 	andi	r2,r18,32
1000fa5c:	1003bb26 	beq	r2,zero,1001094c <___svfprintf_internal_r+0x1460>
1000fa60:	d9002e17 	ldw	r4,184(sp)
1000fa64:	20800117 	ldw	r2,4(r4)
1000fa68:	25000017 	ldw	r20,0(r4)
1000fa6c:	21000204 	addi	r4,r4,8
1000fa70:	d9002e15 	stw	r4,184(sp)
1000fa74:	102d883a 	mov	r22,r2
1000fa78:	1003bd16 	blt	r2,zero,10010970 <___svfprintf_internal_r+0x1484>
1000fa7c:	d9002a17 	ldw	r4,168(sp)
1000fa80:	df002783 	ldbu	fp,158(sp)
1000fa84:	2003d016 	blt	r4,zero,100109c8 <___svfprintf_internal_r+0x14dc>
1000fa88:	00ffdfc4 	movi	r3,-129
1000fa8c:	a584b03a 	or	r2,r20,r22
1000fa90:	90e4703a 	and	r18,r18,r3
1000fa94:	10015026 	beq	r2,zero,1000ffd8 <___svfprintf_internal_r+0xaec>
1000fa98:	b0037026 	beq	r22,zero,1001085c <___svfprintf_internal_r+0x1370>
1000fa9c:	dc402915 	stw	r17,164(sp)
1000faa0:	dc001e04 	addi	r16,sp,120
1000faa4:	b023883a 	mov	r17,r22
1000faa8:	402d883a 	mov	r22,r8
1000faac:	a009883a 	mov	r4,r20
1000fab0:	880b883a 	mov	r5,r17
1000fab4:	01800284 	movi	r6,10
1000fab8:	000f883a 	mov	r7,zero
1000fabc:	00163d40 	call	100163d4 <__umoddi3>
1000fac0:	10800c04 	addi	r2,r2,48
1000fac4:	843fffc4 	addi	r16,r16,-1
1000fac8:	a009883a 	mov	r4,r20
1000facc:	880b883a 	mov	r5,r17
1000fad0:	80800005 	stb	r2,0(r16)
1000fad4:	01800284 	movi	r6,10
1000fad8:	000f883a 	mov	r7,zero
1000fadc:	0015dd80 	call	10015dd8 <__udivdi3>
1000fae0:	1029883a 	mov	r20,r2
1000fae4:	10c4b03a 	or	r2,r2,r3
1000fae8:	1823883a 	mov	r17,r3
1000faec:	103fef1e 	bne	r2,zero,1000faac <__alt_data_end+0xf800faac>
1000faf0:	d8c02817 	ldw	r3,160(sp)
1000faf4:	dc402917 	ldw	r17,164(sp)
1000faf8:	b011883a 	mov	r8,r22
1000fafc:	1c07c83a 	sub	r3,r3,r16
1000fb00:	d8c02b15 	stw	r3,172(sp)
1000fb04:	00003106 	br	1000fbcc <___svfprintf_internal_r+0x6e0>
1000fb08:	8025883a 	mov	r18,r16
1000fb0c:	dc002903 	ldbu	r16,164(sp)
1000fb10:	e011883a 	mov	r8,fp
1000fb14:	84003fcc 	andi	r16,r16,255
1000fb18:	80070a1e 	bne	r16,zero,10011744 <___svfprintf_internal_r+0x2258>
1000fb1c:	94800414 	ori	r18,r18,16
1000fb20:	9080080c 	andi	r2,r18,32
1000fb24:	1002f626 	beq	r2,zero,10010700 <___svfprintf_internal_r+0x1214>
1000fb28:	d9002e17 	ldw	r4,184(sp)
1000fb2c:	d9402a17 	ldw	r5,168(sp)
1000fb30:	d8002785 	stb	zero,158(sp)
1000fb34:	20800204 	addi	r2,r4,8
1000fb38:	25000017 	ldw	r20,0(r4)
1000fb3c:	25800117 	ldw	r22,4(r4)
1000fb40:	28043716 	blt	r5,zero,10010c20 <___svfprintf_internal_r+0x1734>
1000fb44:	013fdfc4 	movi	r4,-129
1000fb48:	a586b03a 	or	r3,r20,r22
1000fb4c:	d8802e15 	stw	r2,184(sp)
1000fb50:	9124703a 	and	r18,r18,r4
1000fb54:	1802f71e 	bne	r3,zero,10010734 <___svfprintf_internal_r+0x1248>
1000fb58:	d9402a17 	ldw	r5,168(sp)
1000fb5c:	0039883a 	mov	fp,zero
1000fb60:	2806df26 	beq	r5,zero,100116e0 <___svfprintf_internal_r+0x21f4>
1000fb64:	0029883a 	mov	r20,zero
1000fb68:	002d883a 	mov	r22,zero
1000fb6c:	dc001e04 	addi	r16,sp,120
1000fb70:	a006d0fa 	srli	r3,r20,3
1000fb74:	b008977a 	slli	r4,r22,29
1000fb78:	b02cd0fa 	srli	r22,r22,3
1000fb7c:	a50001cc 	andi	r20,r20,7
1000fb80:	a0800c04 	addi	r2,r20,48
1000fb84:	843fffc4 	addi	r16,r16,-1
1000fb88:	20e8b03a 	or	r20,r4,r3
1000fb8c:	80800005 	stb	r2,0(r16)
1000fb90:	a586b03a 	or	r3,r20,r22
1000fb94:	183ff61e 	bne	r3,zero,1000fb70 <__alt_data_end+0xf800fb70>
1000fb98:	90c0004c 	andi	r3,r18,1
1000fb9c:	18013f26 	beq	r3,zero,1001009c <___svfprintf_internal_r+0xbb0>
1000fba0:	10803fcc 	andi	r2,r2,255
1000fba4:	1080201c 	xori	r2,r2,128
1000fba8:	10bfe004 	addi	r2,r2,-128
1000fbac:	00c00c04 	movi	r3,48
1000fbb0:	10c13a26 	beq	r2,r3,1001009c <___svfprintf_internal_r+0xbb0>
1000fbb4:	80ffffc5 	stb	r3,-1(r16)
1000fbb8:	d8c02817 	ldw	r3,160(sp)
1000fbbc:	80bfffc4 	addi	r2,r16,-1
1000fbc0:	1021883a 	mov	r16,r2
1000fbc4:	1887c83a 	sub	r3,r3,r2
1000fbc8:	d8c02b15 	stw	r3,172(sp)
1000fbcc:	d8802b17 	ldw	r2,172(sp)
1000fbd0:	d9002a17 	ldw	r4,168(sp)
1000fbd4:	1100010e 	bge	r2,r4,1000fbdc <___svfprintf_internal_r+0x6f0>
1000fbd8:	2005883a 	mov	r2,r4
1000fbdc:	d8802915 	stw	r2,164(sp)
1000fbe0:	d8003215 	stw	zero,200(sp)
1000fbe4:	e7003fcc 	andi	fp,fp,255
1000fbe8:	e700201c 	xori	fp,fp,128
1000fbec:	e73fe004 	addi	fp,fp,-128
1000fbf0:	e0000326 	beq	fp,zero,1000fc00 <___svfprintf_internal_r+0x714>
1000fbf4:	d8c02917 	ldw	r3,164(sp)
1000fbf8:	18c00044 	addi	r3,r3,1
1000fbfc:	d8c02915 	stw	r3,164(sp)
1000fc00:	90c0008c 	andi	r3,r18,2
1000fc04:	d8c02c15 	stw	r3,176(sp)
1000fc08:	18000326 	beq	r3,zero,1000fc18 <___svfprintf_internal_r+0x72c>
1000fc0c:	d8c02917 	ldw	r3,164(sp)
1000fc10:	18c00084 	addi	r3,r3,2
1000fc14:	d8c02915 	stw	r3,164(sp)
1000fc18:	90c0210c 	andi	r3,r18,132
1000fc1c:	d8c03015 	stw	r3,192(sp)
1000fc20:	1801c31e 	bne	r3,zero,10010330 <___svfprintf_internal_r+0xe44>
1000fc24:	d9003117 	ldw	r4,196(sp)
1000fc28:	d8c02917 	ldw	r3,164(sp)
1000fc2c:	20e9c83a 	sub	r20,r4,r3
1000fc30:	0501bf0e 	bge	zero,r20,10010330 <___svfprintf_internal_r+0xe44>
1000fc34:	02400404 	movi	r9,16
1000fc38:	d8c02017 	ldw	r3,128(sp)
1000fc3c:	d8801f17 	ldw	r2,124(sp)
1000fc40:	4d053d0e 	bge	r9,r20,10011138 <___svfprintf_internal_r+0x1c4c>
1000fc44:	014400b4 	movhi	r5,4098
1000fc48:	2972d404 	addi	r5,r5,-13488
1000fc4c:	dc403c15 	stw	r17,240(sp)
1000fc50:	d9403515 	stw	r5,212(sp)
1000fc54:	a023883a 	mov	r17,r20
1000fc58:	482d883a 	mov	r22,r9
1000fc5c:	9029883a 	mov	r20,r18
1000fc60:	070001c4 	movi	fp,7
1000fc64:	8025883a 	mov	r18,r16
1000fc68:	dc002d17 	ldw	r16,180(sp)
1000fc6c:	00000306 	br	1000fc7c <___svfprintf_internal_r+0x790>
1000fc70:	8c7ffc04 	addi	r17,r17,-16
1000fc74:	42000204 	addi	r8,r8,8
1000fc78:	b440130e 	bge	r22,r17,1000fcc8 <___svfprintf_internal_r+0x7dc>
1000fc7c:	010400b4 	movhi	r4,4098
1000fc80:	18c00404 	addi	r3,r3,16
1000fc84:	10800044 	addi	r2,r2,1
1000fc88:	2132d404 	addi	r4,r4,-13488
1000fc8c:	41000015 	stw	r4,0(r8)
1000fc90:	45800115 	stw	r22,4(r8)
1000fc94:	d8c02015 	stw	r3,128(sp)
1000fc98:	d8801f15 	stw	r2,124(sp)
1000fc9c:	e0bff40e 	bge	fp,r2,1000fc70 <__alt_data_end+0xf800fc70>
1000fca0:	d9801e04 	addi	r6,sp,120
1000fca4:	800b883a 	mov	r5,r16
1000fca8:	9809883a 	mov	r4,r19
1000fcac:	00145000 	call	10014500 <__ssprint_r>
1000fcb0:	103ef51e 	bne	r2,zero,1000f888 <__alt_data_end+0xf800f888>
1000fcb4:	8c7ffc04 	addi	r17,r17,-16
1000fcb8:	d8c02017 	ldw	r3,128(sp)
1000fcbc:	d8801f17 	ldw	r2,124(sp)
1000fcc0:	da000404 	addi	r8,sp,16
1000fcc4:	b47fed16 	blt	r22,r17,1000fc7c <__alt_data_end+0xf800fc7c>
1000fcc8:	9021883a 	mov	r16,r18
1000fccc:	a025883a 	mov	r18,r20
1000fcd0:	8829883a 	mov	r20,r17
1000fcd4:	dc403c17 	ldw	r17,240(sp)
1000fcd8:	d9403517 	ldw	r5,212(sp)
1000fcdc:	a0c7883a 	add	r3,r20,r3
1000fce0:	10800044 	addi	r2,r2,1
1000fce4:	41400015 	stw	r5,0(r8)
1000fce8:	45000115 	stw	r20,4(r8)
1000fcec:	d8c02015 	stw	r3,128(sp)
1000fcf0:	d8801f15 	stw	r2,124(sp)
1000fcf4:	010001c4 	movi	r4,7
1000fcf8:	2082c116 	blt	r4,r2,10010800 <___svfprintf_internal_r+0x1314>
1000fcfc:	df002787 	ldb	fp,158(sp)
1000fd00:	42000204 	addi	r8,r8,8
1000fd04:	e0000c26 	beq	fp,zero,1000fd38 <___svfprintf_internal_r+0x84c>
1000fd08:	d8801f17 	ldw	r2,124(sp)
1000fd0c:	d9002784 	addi	r4,sp,158
1000fd10:	18c00044 	addi	r3,r3,1
1000fd14:	10800044 	addi	r2,r2,1
1000fd18:	41000015 	stw	r4,0(r8)
1000fd1c:	01000044 	movi	r4,1
1000fd20:	41000115 	stw	r4,4(r8)
1000fd24:	d8c02015 	stw	r3,128(sp)
1000fd28:	d8801f15 	stw	r2,124(sp)
1000fd2c:	010001c4 	movi	r4,7
1000fd30:	20825a16 	blt	r4,r2,1001069c <___svfprintf_internal_r+0x11b0>
1000fd34:	42000204 	addi	r8,r8,8
1000fd38:	d8802c17 	ldw	r2,176(sp)
1000fd3c:	10000c26 	beq	r2,zero,1000fd70 <___svfprintf_internal_r+0x884>
1000fd40:	d8801f17 	ldw	r2,124(sp)
1000fd44:	d9002704 	addi	r4,sp,156
1000fd48:	18c00084 	addi	r3,r3,2
1000fd4c:	10800044 	addi	r2,r2,1
1000fd50:	41000015 	stw	r4,0(r8)
1000fd54:	01000084 	movi	r4,2
1000fd58:	41000115 	stw	r4,4(r8)
1000fd5c:	d8c02015 	stw	r3,128(sp)
1000fd60:	d8801f15 	stw	r2,124(sp)
1000fd64:	010001c4 	movi	r4,7
1000fd68:	20825416 	blt	r4,r2,100106bc <___svfprintf_internal_r+0x11d0>
1000fd6c:	42000204 	addi	r8,r8,8
1000fd70:	d9003017 	ldw	r4,192(sp)
1000fd74:	00802004 	movi	r2,128
1000fd78:	2081b926 	beq	r4,r2,10010460 <___svfprintf_internal_r+0xf74>
1000fd7c:	d9402a17 	ldw	r5,168(sp)
1000fd80:	d8802b17 	ldw	r2,172(sp)
1000fd84:	28adc83a 	sub	r22,r5,r2
1000fd88:	05802f0e 	bge	zero,r22,1000fe48 <___svfprintf_internal_r+0x95c>
1000fd8c:	07000404 	movi	fp,16
1000fd90:	d8801f17 	ldw	r2,124(sp)
1000fd94:	e583e20e 	bge	fp,r22,10010d20 <___svfprintf_internal_r+0x1834>
1000fd98:	014400b4 	movhi	r5,4098
1000fd9c:	2972d004 	addi	r5,r5,-13504
1000fda0:	dc402a15 	stw	r17,168(sp)
1000fda4:	d9402c15 	stw	r5,176(sp)
1000fda8:	b023883a 	mov	r17,r22
1000fdac:	050001c4 	movi	r20,7
1000fdb0:	902d883a 	mov	r22,r18
1000fdb4:	8025883a 	mov	r18,r16
1000fdb8:	dc002d17 	ldw	r16,180(sp)
1000fdbc:	00000306 	br	1000fdcc <___svfprintf_internal_r+0x8e0>
1000fdc0:	8c7ffc04 	addi	r17,r17,-16
1000fdc4:	42000204 	addi	r8,r8,8
1000fdc8:	e440110e 	bge	fp,r17,1000fe10 <___svfprintf_internal_r+0x924>
1000fdcc:	18c00404 	addi	r3,r3,16
1000fdd0:	10800044 	addi	r2,r2,1
1000fdd4:	45400015 	stw	r21,0(r8)
1000fdd8:	47000115 	stw	fp,4(r8)
1000fddc:	d8c02015 	stw	r3,128(sp)
1000fde0:	d8801f15 	stw	r2,124(sp)
1000fde4:	a0bff60e 	bge	r20,r2,1000fdc0 <__alt_data_end+0xf800fdc0>
1000fde8:	d9801e04 	addi	r6,sp,120
1000fdec:	800b883a 	mov	r5,r16
1000fdf0:	9809883a 	mov	r4,r19
1000fdf4:	00145000 	call	10014500 <__ssprint_r>
1000fdf8:	103ea31e 	bne	r2,zero,1000f888 <__alt_data_end+0xf800f888>
1000fdfc:	8c7ffc04 	addi	r17,r17,-16
1000fe00:	d8c02017 	ldw	r3,128(sp)
1000fe04:	d8801f17 	ldw	r2,124(sp)
1000fe08:	da000404 	addi	r8,sp,16
1000fe0c:	e47fef16 	blt	fp,r17,1000fdcc <__alt_data_end+0xf800fdcc>
1000fe10:	9021883a 	mov	r16,r18
1000fe14:	b025883a 	mov	r18,r22
1000fe18:	882d883a 	mov	r22,r17
1000fe1c:	dc402a17 	ldw	r17,168(sp)
1000fe20:	d9002c17 	ldw	r4,176(sp)
1000fe24:	1d87883a 	add	r3,r3,r22
1000fe28:	10800044 	addi	r2,r2,1
1000fe2c:	41000015 	stw	r4,0(r8)
1000fe30:	45800115 	stw	r22,4(r8)
1000fe34:	d8c02015 	stw	r3,128(sp)
1000fe38:	d8801f15 	stw	r2,124(sp)
1000fe3c:	010001c4 	movi	r4,7
1000fe40:	20820e16 	blt	r4,r2,1001067c <___svfprintf_internal_r+0x1190>
1000fe44:	42000204 	addi	r8,r8,8
1000fe48:	9080400c 	andi	r2,r18,256
1000fe4c:	10013a1e 	bne	r2,zero,10010338 <___svfprintf_internal_r+0xe4c>
1000fe50:	d9402b17 	ldw	r5,172(sp)
1000fe54:	d8801f17 	ldw	r2,124(sp)
1000fe58:	44000015 	stw	r16,0(r8)
1000fe5c:	1947883a 	add	r3,r3,r5
1000fe60:	10800044 	addi	r2,r2,1
1000fe64:	41400115 	stw	r5,4(r8)
1000fe68:	d8c02015 	stw	r3,128(sp)
1000fe6c:	d8801f15 	stw	r2,124(sp)
1000fe70:	010001c4 	movi	r4,7
1000fe74:	2081f316 	blt	r4,r2,10010644 <___svfprintf_internal_r+0x1158>
1000fe78:	42000204 	addi	r8,r8,8
1000fe7c:	9480010c 	andi	r18,r18,4
1000fe80:	90003226 	beq	r18,zero,1000ff4c <___svfprintf_internal_r+0xa60>
1000fe84:	d9403117 	ldw	r5,196(sp)
1000fe88:	d8802917 	ldw	r2,164(sp)
1000fe8c:	28a1c83a 	sub	r16,r5,r2
1000fe90:	04002e0e 	bge	zero,r16,1000ff4c <___svfprintf_internal_r+0xa60>
1000fe94:	04400404 	movi	r17,16
1000fe98:	d8801f17 	ldw	r2,124(sp)
1000fe9c:	8c04db0e 	bge	r17,r16,1001120c <___svfprintf_internal_r+0x1d20>
1000fea0:	014400b4 	movhi	r5,4098
1000fea4:	2972d404 	addi	r5,r5,-13488
1000fea8:	d9403515 	stw	r5,212(sp)
1000feac:	048001c4 	movi	r18,7
1000feb0:	dd002d17 	ldw	r20,180(sp)
1000feb4:	00000306 	br	1000fec4 <___svfprintf_internal_r+0x9d8>
1000feb8:	843ffc04 	addi	r16,r16,-16
1000febc:	42000204 	addi	r8,r8,8
1000fec0:	8c00130e 	bge	r17,r16,1000ff10 <___svfprintf_internal_r+0xa24>
1000fec4:	010400b4 	movhi	r4,4098
1000fec8:	18c00404 	addi	r3,r3,16
1000fecc:	10800044 	addi	r2,r2,1
1000fed0:	2132d404 	addi	r4,r4,-13488
1000fed4:	41000015 	stw	r4,0(r8)
1000fed8:	44400115 	stw	r17,4(r8)
1000fedc:	d8c02015 	stw	r3,128(sp)
1000fee0:	d8801f15 	stw	r2,124(sp)
1000fee4:	90bff40e 	bge	r18,r2,1000feb8 <__alt_data_end+0xf800feb8>
1000fee8:	d9801e04 	addi	r6,sp,120
1000feec:	a00b883a 	mov	r5,r20
1000fef0:	9809883a 	mov	r4,r19
1000fef4:	00145000 	call	10014500 <__ssprint_r>
1000fef8:	103e631e 	bne	r2,zero,1000f888 <__alt_data_end+0xf800f888>
1000fefc:	843ffc04 	addi	r16,r16,-16
1000ff00:	d8c02017 	ldw	r3,128(sp)
1000ff04:	d8801f17 	ldw	r2,124(sp)
1000ff08:	da000404 	addi	r8,sp,16
1000ff0c:	8c3fed16 	blt	r17,r16,1000fec4 <__alt_data_end+0xf800fec4>
1000ff10:	d9403517 	ldw	r5,212(sp)
1000ff14:	1c07883a 	add	r3,r3,r16
1000ff18:	10800044 	addi	r2,r2,1
1000ff1c:	41400015 	stw	r5,0(r8)
1000ff20:	44000115 	stw	r16,4(r8)
1000ff24:	d8c02015 	stw	r3,128(sp)
1000ff28:	d8801f15 	stw	r2,124(sp)
1000ff2c:	010001c4 	movi	r4,7
1000ff30:	2080060e 	bge	r4,r2,1000ff4c <___svfprintf_internal_r+0xa60>
1000ff34:	d9402d17 	ldw	r5,180(sp)
1000ff38:	d9801e04 	addi	r6,sp,120
1000ff3c:	9809883a 	mov	r4,r19
1000ff40:	00145000 	call	10014500 <__ssprint_r>
1000ff44:	103e501e 	bne	r2,zero,1000f888 <__alt_data_end+0xf800f888>
1000ff48:	d8c02017 	ldw	r3,128(sp)
1000ff4c:	d8803117 	ldw	r2,196(sp)
1000ff50:	d9002917 	ldw	r4,164(sp)
1000ff54:	1100010e 	bge	r2,r4,1000ff5c <___svfprintf_internal_r+0xa70>
1000ff58:	2005883a 	mov	r2,r4
1000ff5c:	d9402f17 	ldw	r5,188(sp)
1000ff60:	288b883a 	add	r5,r5,r2
1000ff64:	d9402f15 	stw	r5,188(sp)
1000ff68:	1801be1e 	bne	r3,zero,10010664 <___svfprintf_internal_r+0x1178>
1000ff6c:	b8800007 	ldb	r2,0(r23)
1000ff70:	d8001f15 	stw	zero,124(sp)
1000ff74:	da000404 	addi	r8,sp,16
1000ff78:	103d891e 	bne	r2,zero,1000f5a0 <__alt_data_end+0xf800f5a0>
1000ff7c:	b823883a 	mov	r17,r23
1000ff80:	003d9f06 	br	1000f600 <__alt_data_end+0xf800f600>
1000ff84:	8025883a 	mov	r18,r16
1000ff88:	dc002903 	ldbu	r16,164(sp)
1000ff8c:	e011883a 	mov	r8,fp
1000ff90:	84003fcc 	andi	r16,r16,255
1000ff94:	8005e61e 	bne	r16,zero,10011730 <___svfprintf_internal_r+0x2244>
1000ff98:	94800414 	ori	r18,r18,16
1000ff9c:	9080080c 	andi	r2,r18,32
1000ffa0:	10022026 	beq	r2,zero,10010824 <___svfprintf_internal_r+0x1338>
1000ffa4:	d9002e17 	ldw	r4,184(sp)
1000ffa8:	d9402a17 	ldw	r5,168(sp)
1000ffac:	d8002785 	stb	zero,158(sp)
1000ffb0:	20c00204 	addi	r3,r4,8
1000ffb4:	25000017 	ldw	r20,0(r4)
1000ffb8:	25800117 	ldw	r22,4(r4)
1000ffbc:	2803ad16 	blt	r5,zero,10010e74 <___svfprintf_internal_r+0x1988>
1000ffc0:	013fdfc4 	movi	r4,-129
1000ffc4:	a584b03a 	or	r2,r20,r22
1000ffc8:	d8c02e15 	stw	r3,184(sp)
1000ffcc:	9124703a 	and	r18,r18,r4
1000ffd0:	0039883a 	mov	fp,zero
1000ffd4:	103eb01e 	bne	r2,zero,1000fa98 <__alt_data_end+0xf800fa98>
1000ffd8:	d8802a17 	ldw	r2,168(sp)
1000ffdc:	1002e71e 	bne	r2,zero,10010b7c <___svfprintf_internal_r+0x1690>
1000ffe0:	d8002a15 	stw	zero,168(sp)
1000ffe4:	d8002b15 	stw	zero,172(sp)
1000ffe8:	dc001e04 	addi	r16,sp,120
1000ffec:	003ef706 	br	1000fbcc <__alt_data_end+0xf800fbcc>
1000fff0:	8025883a 	mov	r18,r16
1000fff4:	dc002903 	ldbu	r16,164(sp)
1000fff8:	e011883a 	mov	r8,fp
1000fffc:	84003fcc 	andi	r16,r16,255
10010000:	8005c81e 	bne	r16,zero,10011724 <___svfprintf_internal_r+0x2238>
10010004:	010400b4 	movhi	r4,4098
10010008:	2131a704 	addi	r4,r4,-14692
1001000c:	d9003a15 	stw	r4,232(sp)
10010010:	9080080c 	andi	r2,r18,32
10010014:	10007226 	beq	r2,zero,100101e0 <___svfprintf_internal_r+0xcf4>
10010018:	d9402e17 	ldw	r5,184(sp)
1001001c:	2d000017 	ldw	r20,0(r5)
10010020:	2d800117 	ldw	r22,4(r5)
10010024:	29400204 	addi	r5,r5,8
10010028:	d9402e15 	stw	r5,184(sp)
1001002c:	9080004c 	andi	r2,r18,1
10010030:	1001aa26 	beq	r2,zero,100106dc <___svfprintf_internal_r+0x11f0>
10010034:	a584b03a 	or	r2,r20,r22
10010038:	10032526 	beq	r2,zero,10010cd0 <___svfprintf_internal_r+0x17e4>
1001003c:	d8c02a17 	ldw	r3,168(sp)
10010040:	00800c04 	movi	r2,48
10010044:	d8802705 	stb	r2,156(sp)
10010048:	dc402745 	stb	r17,157(sp)
1001004c:	d8002785 	stb	zero,158(sp)
10010050:	90800094 	ori	r2,r18,2
10010054:	1804a316 	blt	r3,zero,100112e4 <___svfprintf_internal_r+0x1df8>
10010058:	00bfdfc4 	movi	r2,-129
1001005c:	90a4703a 	and	r18,r18,r2
10010060:	94800094 	ori	r18,r18,2
10010064:	0039883a 	mov	fp,zero
10010068:	d9003a17 	ldw	r4,232(sp)
1001006c:	dc001e04 	addi	r16,sp,120
10010070:	a08003cc 	andi	r2,r20,15
10010074:	b006973a 	slli	r3,r22,28
10010078:	2085883a 	add	r2,r4,r2
1001007c:	a028d13a 	srli	r20,r20,4
10010080:	10800003 	ldbu	r2,0(r2)
10010084:	b02cd13a 	srli	r22,r22,4
10010088:	843fffc4 	addi	r16,r16,-1
1001008c:	1d28b03a 	or	r20,r3,r20
10010090:	80800005 	stb	r2,0(r16)
10010094:	a584b03a 	or	r2,r20,r22
10010098:	103ff51e 	bne	r2,zero,10010070 <__alt_data_end+0xf8010070>
1001009c:	d8c02817 	ldw	r3,160(sp)
100100a0:	1c07c83a 	sub	r3,r3,r16
100100a4:	d8c02b15 	stw	r3,172(sp)
100100a8:	003ec806 	br	1000fbcc <__alt_data_end+0xf800fbcc>
100100ac:	d8c02e17 	ldw	r3,184(sp)
100100b0:	d9002e17 	ldw	r4,184(sp)
100100b4:	8025883a 	mov	r18,r16
100100b8:	18800017 	ldw	r2,0(r3)
100100bc:	21000104 	addi	r4,r4,4
100100c0:	00c00044 	movi	r3,1
100100c4:	e011883a 	mov	r8,fp
100100c8:	d8c02915 	stw	r3,164(sp)
100100cc:	d8002785 	stb	zero,158(sp)
100100d0:	d8801405 	stb	r2,80(sp)
100100d4:	d9002e15 	stw	r4,184(sp)
100100d8:	d8c02b15 	stw	r3,172(sp)
100100dc:	d8002a15 	stw	zero,168(sp)
100100e0:	d8003215 	stw	zero,200(sp)
100100e4:	dc001404 	addi	r16,sp,80
100100e8:	0039883a 	mov	fp,zero
100100ec:	003ec406 	br	1000fc00 <__alt_data_end+0xf800fc00>
100100f0:	8025883a 	mov	r18,r16
100100f4:	dc002903 	ldbu	r16,164(sp)
100100f8:	e011883a 	mov	r8,fp
100100fc:	84003fcc 	andi	r16,r16,255
10010100:	803e8726 	beq	r16,zero,1000fb20 <__alt_data_end+0xf800fb20>
10010104:	d8c02b03 	ldbu	r3,172(sp)
10010108:	d8c02785 	stb	r3,158(sp)
1001010c:	003e8406 	br	1000fb20 <__alt_data_end+0xf800fb20>
10010110:	00c00044 	movi	r3,1
10010114:	d8c02905 	stb	r3,164(sp)
10010118:	00c00ac4 	movi	r3,43
1001011c:	d8c02b05 	stb	r3,172(sp)
10010120:	bc400007 	ldb	r17,0(r23)
10010124:	003d4606 	br	1000f640 <__alt_data_end+0xf800f640>
10010128:	84000814 	ori	r16,r16,32
1001012c:	bc400007 	ldb	r17,0(r23)
10010130:	003d4306 	br	1000f640 <__alt_data_end+0xf800f640>
10010134:	d8802e17 	ldw	r2,184(sp)
10010138:	8025883a 	mov	r18,r16
1001013c:	d8002785 	stb	zero,158(sp)
10010140:	14000017 	ldw	r16,0(r2)
10010144:	e011883a 	mov	r8,fp
10010148:	15000104 	addi	r20,r2,4
1001014c:	80042126 	beq	r16,zero,100111d4 <___svfprintf_internal_r+0x1ce8>
10010150:	d8c02a17 	ldw	r3,168(sp)
10010154:	1803ee16 	blt	r3,zero,10011110 <___svfprintf_internal_r+0x1c24>
10010158:	180d883a 	mov	r6,r3
1001015c:	000b883a 	mov	r5,zero
10010160:	8009883a 	mov	r4,r16
10010164:	df003e15 	stw	fp,248(sp)
10010168:	000b0140 	call	1000b014 <memchr>
1001016c:	da003e17 	ldw	r8,248(sp)
10010170:	10046a26 	beq	r2,zero,1001131c <___svfprintf_internal_r+0x1e30>
10010174:	1405c83a 	sub	r2,r2,r16
10010178:	d8802b15 	stw	r2,172(sp)
1001017c:	1003ea16 	blt	r2,zero,10011128 <___svfprintf_internal_r+0x1c3c>
10010180:	df002783 	ldbu	fp,158(sp)
10010184:	d8802915 	stw	r2,164(sp)
10010188:	dd002e15 	stw	r20,184(sp)
1001018c:	d8002a15 	stw	zero,168(sp)
10010190:	d8003215 	stw	zero,200(sp)
10010194:	003e9306 	br	1000fbe4 <__alt_data_end+0xf800fbe4>
10010198:	8025883a 	mov	r18,r16
1001019c:	dc002903 	ldbu	r16,164(sp)
100101a0:	e011883a 	mov	r8,fp
100101a4:	84003fcc 	andi	r16,r16,255
100101a8:	803f7c26 	beq	r16,zero,1000ff9c <__alt_data_end+0xf800ff9c>
100101ac:	d8c02b03 	ldbu	r3,172(sp)
100101b0:	d8c02785 	stb	r3,158(sp)
100101b4:	003f7906 	br	1000ff9c <__alt_data_end+0xf800ff9c>
100101b8:	8025883a 	mov	r18,r16
100101bc:	dc002903 	ldbu	r16,164(sp)
100101c0:	e011883a 	mov	r8,fp
100101c4:	84003fcc 	andi	r16,r16,255
100101c8:	8005741e 	bne	r16,zero,1001179c <___svfprintf_internal_r+0x22b0>
100101cc:	010400b4 	movhi	r4,4098
100101d0:	2131ac04 	addi	r4,r4,-14672
100101d4:	d9003a15 	stw	r4,232(sp)
100101d8:	9080080c 	andi	r2,r18,32
100101dc:	103f8e1e 	bne	r2,zero,10010018 <__alt_data_end+0xf8010018>
100101e0:	9080040c 	andi	r2,r18,16
100101e4:	1002a726 	beq	r2,zero,10010c84 <___svfprintf_internal_r+0x1798>
100101e8:	d8802e17 	ldw	r2,184(sp)
100101ec:	002d883a 	mov	r22,zero
100101f0:	15000017 	ldw	r20,0(r2)
100101f4:	10800104 	addi	r2,r2,4
100101f8:	d8802e15 	stw	r2,184(sp)
100101fc:	003f8b06 	br	1001002c <__alt_data_end+0xf801002c>
10010200:	84000054 	ori	r16,r16,1
10010204:	bc400007 	ldb	r17,0(r23)
10010208:	003d0d06 	br	1000f640 <__alt_data_end+0xf800f640>
1001020c:	d8802b07 	ldb	r2,172(sp)
10010210:	1002a41e 	bne	r2,zero,10010ca4 <___svfprintf_internal_r+0x17b8>
10010214:	00c00044 	movi	r3,1
10010218:	d8c02905 	stb	r3,164(sp)
1001021c:	00c00804 	movi	r3,32
10010220:	d8c02b05 	stb	r3,172(sp)
10010224:	bc400007 	ldb	r17,0(r23)
10010228:	003d0506 	br	1000f640 <__alt_data_end+0xf800f640>
1001022c:	8025883a 	mov	r18,r16
10010230:	dc002903 	ldbu	r16,164(sp)
10010234:	e011883a 	mov	r8,fp
10010238:	84003fcc 	andi	r16,r16,255
1001023c:	803e0626 	beq	r16,zero,1000fa58 <__alt_data_end+0xf800fa58>
10010240:	d8c02b03 	ldbu	r3,172(sp)
10010244:	d8c02785 	stb	r3,158(sp)
10010248:	003e0306 	br	1000fa58 <__alt_data_end+0xf800fa58>
1001024c:	bc400007 	ldb	r17,0(r23)
10010250:	00801b04 	movi	r2,108
10010254:	88830a26 	beq	r17,r2,10010e80 <___svfprintf_internal_r+0x1994>
10010258:	84000414 	ori	r16,r16,16
1001025c:	003cf806 	br	1000f640 <__alt_data_end+0xf800f640>
10010260:	8025883a 	mov	r18,r16
10010264:	dc002903 	ldbu	r16,164(sp)
10010268:	e011883a 	mov	r8,fp
1001026c:	84003fcc 	andi	r16,r16,255
10010270:	8005471e 	bne	r16,zero,10011790 <___svfprintf_internal_r+0x22a4>
10010274:	9080080c 	andi	r2,r18,32
10010278:	10028c26 	beq	r2,zero,10010cac <___svfprintf_internal_r+0x17c0>
1001027c:	d9002e17 	ldw	r4,184(sp)
10010280:	d9402f17 	ldw	r5,188(sp)
10010284:	20800017 	ldw	r2,0(r4)
10010288:	2807d7fa 	srai	r3,r5,31
1001028c:	21000104 	addi	r4,r4,4
10010290:	d9002e15 	stw	r4,184(sp)
10010294:	11400015 	stw	r5,0(r2)
10010298:	10c00115 	stw	r3,4(r2)
1001029c:	003cbe06 	br	1000f598 <__alt_data_end+0xf800f598>
100102a0:	84001014 	ori	r16,r16,64
100102a4:	bc400007 	ldb	r17,0(r23)
100102a8:	003ce506 	br	1000f640 <__alt_data_end+0xf800f640>
100102ac:	010400b4 	movhi	r4,4098
100102b0:	2131ac04 	addi	r4,r4,-14672
100102b4:	0039883a 	mov	fp,zero
100102b8:	d9003a15 	stw	r4,232(sp)
100102bc:	04401e04 	movi	r17,120
100102c0:	003f6906 	br	10010068 <__alt_data_end+0xf8010068>
100102c4:	8025883a 	mov	r18,r16
100102c8:	dc002903 	ldbu	r16,164(sp)
100102cc:	e011883a 	mov	r8,fp
100102d0:	84003fcc 	andi	r16,r16,255
100102d4:	8005261e 	bne	r16,zero,10011770 <___svfprintf_internal_r+0x2284>
100102d8:	883d6526 	beq	r17,zero,1000f870 <__alt_data_end+0xf800f870>
100102dc:	00c00044 	movi	r3,1
100102e0:	d8c02915 	stw	r3,164(sp)
100102e4:	dc401405 	stb	r17,80(sp)
100102e8:	d8002785 	stb	zero,158(sp)
100102ec:	003f7a06 	br	100100d8 <__alt_data_end+0xf80100d8>
100102f0:	010400b4 	movhi	r4,4098
100102f4:	2131ac04 	addi	r4,r4,-14672
100102f8:	d9003a15 	stw	r4,232(sp)
100102fc:	d8c02e15 	stw	r3,184(sp)
10010300:	1025883a 	mov	r18,r2
10010304:	04401e04 	movi	r17,120
10010308:	a584b03a 	or	r2,r20,r22
1001030c:	1000fa1e 	bne	r2,zero,100106f8 <___svfprintf_internal_r+0x120c>
10010310:	0039883a 	mov	fp,zero
10010314:	00800084 	movi	r2,2
10010318:	10803fcc 	andi	r2,r2,255
1001031c:	00c00044 	movi	r3,1
10010320:	10c21626 	beq	r2,r3,10010b7c <___svfprintf_internal_r+0x1690>
10010324:	00c00084 	movi	r3,2
10010328:	10fe0e1e 	bne	r2,r3,1000fb64 <__alt_data_end+0xf800fb64>
1001032c:	003d4606 	br	1000f848 <__alt_data_end+0xf800f848>
10010330:	d8c02017 	ldw	r3,128(sp)
10010334:	003e7306 	br	1000fd04 <__alt_data_end+0xf800fd04>
10010338:	00801944 	movi	r2,101
1001033c:	14407c0e 	bge	r2,r17,10010530 <___svfprintf_internal_r+0x1044>
10010340:	d9003617 	ldw	r4,216(sp)
10010344:	d9403717 	ldw	r5,220(sp)
10010348:	000d883a 	mov	r6,zero
1001034c:	000f883a 	mov	r7,zero
10010350:	d8c03d15 	stw	r3,244(sp)
10010354:	da003e15 	stw	r8,248(sp)
10010358:	0017e100 	call	10017e10 <__eqdf2>
1001035c:	d8c03d17 	ldw	r3,244(sp)
10010360:	da003e17 	ldw	r8,248(sp)
10010364:	1000f51e 	bne	r2,zero,1001073c <___svfprintf_internal_r+0x1250>
10010368:	d8801f17 	ldw	r2,124(sp)
1001036c:	010400b4 	movhi	r4,4098
10010370:	2131b304 	addi	r4,r4,-14644
10010374:	18c00044 	addi	r3,r3,1
10010378:	10800044 	addi	r2,r2,1
1001037c:	41000015 	stw	r4,0(r8)
10010380:	01000044 	movi	r4,1
10010384:	41000115 	stw	r4,4(r8)
10010388:	d8c02015 	stw	r3,128(sp)
1001038c:	d8801f15 	stw	r2,124(sp)
10010390:	010001c4 	movi	r4,7
10010394:	20826616 	blt	r4,r2,10010d30 <___svfprintf_internal_r+0x1844>
10010398:	42000204 	addi	r8,r8,8
1001039c:	d8802617 	ldw	r2,152(sp)
100103a0:	d9403317 	ldw	r5,204(sp)
100103a4:	11400216 	blt	r2,r5,100103b0 <___svfprintf_internal_r+0xec4>
100103a8:	9080004c 	andi	r2,r18,1
100103ac:	103eb326 	beq	r2,zero,1000fe7c <__alt_data_end+0xf800fe7c>
100103b0:	d8803817 	ldw	r2,224(sp)
100103b4:	d9003417 	ldw	r4,208(sp)
100103b8:	d9403817 	ldw	r5,224(sp)
100103bc:	1887883a 	add	r3,r3,r2
100103c0:	d8801f17 	ldw	r2,124(sp)
100103c4:	41000015 	stw	r4,0(r8)
100103c8:	41400115 	stw	r5,4(r8)
100103cc:	10800044 	addi	r2,r2,1
100103d0:	d8c02015 	stw	r3,128(sp)
100103d4:	d8801f15 	stw	r2,124(sp)
100103d8:	010001c4 	movi	r4,7
100103dc:	2082af16 	blt	r4,r2,10010e9c <___svfprintf_internal_r+0x19b0>
100103e0:	42000204 	addi	r8,r8,8
100103e4:	d8803317 	ldw	r2,204(sp)
100103e8:	143fffc4 	addi	r16,r2,-1
100103ec:	043ea30e 	bge	zero,r16,1000fe7c <__alt_data_end+0xf800fe7c>
100103f0:	04400404 	movi	r17,16
100103f4:	d8801f17 	ldw	r2,124(sp)
100103f8:	8c00860e 	bge	r17,r16,10010614 <___svfprintf_internal_r+0x1128>
100103fc:	014400b4 	movhi	r5,4098
10010400:	2972d004 	addi	r5,r5,-13504
10010404:	d9402c15 	stw	r5,176(sp)
10010408:	058001c4 	movi	r22,7
1001040c:	dd002d17 	ldw	r20,180(sp)
10010410:	00000306 	br	10010420 <___svfprintf_internal_r+0xf34>
10010414:	42000204 	addi	r8,r8,8
10010418:	843ffc04 	addi	r16,r16,-16
1001041c:	8c00800e 	bge	r17,r16,10010620 <___svfprintf_internal_r+0x1134>
10010420:	18c00404 	addi	r3,r3,16
10010424:	10800044 	addi	r2,r2,1
10010428:	45400015 	stw	r21,0(r8)
1001042c:	44400115 	stw	r17,4(r8)
10010430:	d8c02015 	stw	r3,128(sp)
10010434:	d8801f15 	stw	r2,124(sp)
10010438:	b0bff60e 	bge	r22,r2,10010414 <__alt_data_end+0xf8010414>
1001043c:	d9801e04 	addi	r6,sp,120
10010440:	a00b883a 	mov	r5,r20
10010444:	9809883a 	mov	r4,r19
10010448:	00145000 	call	10014500 <__ssprint_r>
1001044c:	103d0e1e 	bne	r2,zero,1000f888 <__alt_data_end+0xf800f888>
10010450:	d8c02017 	ldw	r3,128(sp)
10010454:	d8801f17 	ldw	r2,124(sp)
10010458:	da000404 	addi	r8,sp,16
1001045c:	003fee06 	br	10010418 <__alt_data_end+0xf8010418>
10010460:	d9403117 	ldw	r5,196(sp)
10010464:	d8802917 	ldw	r2,164(sp)
10010468:	28adc83a 	sub	r22,r5,r2
1001046c:	05be430e 	bge	zero,r22,1000fd7c <__alt_data_end+0xf800fd7c>
10010470:	07000404 	movi	fp,16
10010474:	d8801f17 	ldw	r2,124(sp)
10010478:	e583a20e 	bge	fp,r22,10011304 <___svfprintf_internal_r+0x1e18>
1001047c:	014400b4 	movhi	r5,4098
10010480:	2972d004 	addi	r5,r5,-13504
10010484:	dc403015 	stw	r17,192(sp)
10010488:	d9402c15 	stw	r5,176(sp)
1001048c:	b023883a 	mov	r17,r22
10010490:	050001c4 	movi	r20,7
10010494:	902d883a 	mov	r22,r18
10010498:	8025883a 	mov	r18,r16
1001049c:	dc002d17 	ldw	r16,180(sp)
100104a0:	00000306 	br	100104b0 <___svfprintf_internal_r+0xfc4>
100104a4:	8c7ffc04 	addi	r17,r17,-16
100104a8:	42000204 	addi	r8,r8,8
100104ac:	e440110e 	bge	fp,r17,100104f4 <___svfprintf_internal_r+0x1008>
100104b0:	18c00404 	addi	r3,r3,16
100104b4:	10800044 	addi	r2,r2,1
100104b8:	45400015 	stw	r21,0(r8)
100104bc:	47000115 	stw	fp,4(r8)
100104c0:	d8c02015 	stw	r3,128(sp)
100104c4:	d8801f15 	stw	r2,124(sp)
100104c8:	a0bff60e 	bge	r20,r2,100104a4 <__alt_data_end+0xf80104a4>
100104cc:	d9801e04 	addi	r6,sp,120
100104d0:	800b883a 	mov	r5,r16
100104d4:	9809883a 	mov	r4,r19
100104d8:	00145000 	call	10014500 <__ssprint_r>
100104dc:	103cea1e 	bne	r2,zero,1000f888 <__alt_data_end+0xf800f888>
100104e0:	8c7ffc04 	addi	r17,r17,-16
100104e4:	d8c02017 	ldw	r3,128(sp)
100104e8:	d8801f17 	ldw	r2,124(sp)
100104ec:	da000404 	addi	r8,sp,16
100104f0:	e47fef16 	blt	fp,r17,100104b0 <__alt_data_end+0xf80104b0>
100104f4:	9021883a 	mov	r16,r18
100104f8:	b025883a 	mov	r18,r22
100104fc:	882d883a 	mov	r22,r17
10010500:	dc403017 	ldw	r17,192(sp)
10010504:	d9002c17 	ldw	r4,176(sp)
10010508:	1d87883a 	add	r3,r3,r22
1001050c:	10800044 	addi	r2,r2,1
10010510:	41000015 	stw	r4,0(r8)
10010514:	45800115 	stw	r22,4(r8)
10010518:	d8c02015 	stw	r3,128(sp)
1001051c:	d8801f15 	stw	r2,124(sp)
10010520:	010001c4 	movi	r4,7
10010524:	20819a16 	blt	r4,r2,10010b90 <___svfprintf_internal_r+0x16a4>
10010528:	42000204 	addi	r8,r8,8
1001052c:	003e1306 	br	1000fd7c <__alt_data_end+0xf800fd7c>
10010530:	d9403317 	ldw	r5,204(sp)
10010534:	00800044 	movi	r2,1
10010538:	18c00044 	addi	r3,r3,1
1001053c:	1141710e 	bge	r2,r5,10010b04 <___svfprintf_internal_r+0x1618>
10010540:	dc401f17 	ldw	r17,124(sp)
10010544:	00800044 	movi	r2,1
10010548:	40800115 	stw	r2,4(r8)
1001054c:	8c400044 	addi	r17,r17,1
10010550:	44000015 	stw	r16,0(r8)
10010554:	d8c02015 	stw	r3,128(sp)
10010558:	dc401f15 	stw	r17,124(sp)
1001055c:	008001c4 	movi	r2,7
10010560:	14417416 	blt	r2,r17,10010b34 <___svfprintf_internal_r+0x1648>
10010564:	42000204 	addi	r8,r8,8
10010568:	d8803817 	ldw	r2,224(sp)
1001056c:	d9003417 	ldw	r4,208(sp)
10010570:	8c400044 	addi	r17,r17,1
10010574:	10c7883a 	add	r3,r2,r3
10010578:	40800115 	stw	r2,4(r8)
1001057c:	41000015 	stw	r4,0(r8)
10010580:	d8c02015 	stw	r3,128(sp)
10010584:	dc401f15 	stw	r17,124(sp)
10010588:	008001c4 	movi	r2,7
1001058c:	14417216 	blt	r2,r17,10010b58 <___svfprintf_internal_r+0x166c>
10010590:	45800204 	addi	r22,r8,8
10010594:	d9003617 	ldw	r4,216(sp)
10010598:	d9403717 	ldw	r5,220(sp)
1001059c:	000d883a 	mov	r6,zero
100105a0:	000f883a 	mov	r7,zero
100105a4:	d8c03d15 	stw	r3,244(sp)
100105a8:	0017e100 	call	10017e10 <__eqdf2>
100105ac:	d8c03d17 	ldw	r3,244(sp)
100105b0:	1000b326 	beq	r2,zero,10010880 <___svfprintf_internal_r+0x1394>
100105b4:	d9403317 	ldw	r5,204(sp)
100105b8:	84000044 	addi	r16,r16,1
100105bc:	8c400044 	addi	r17,r17,1
100105c0:	28bfffc4 	addi	r2,r5,-1
100105c4:	1887883a 	add	r3,r3,r2
100105c8:	b0800115 	stw	r2,4(r22)
100105cc:	b4000015 	stw	r16,0(r22)
100105d0:	d8c02015 	stw	r3,128(sp)
100105d4:	dc401f15 	stw	r17,124(sp)
100105d8:	008001c4 	movi	r2,7
100105dc:	1440d216 	blt	r2,r17,10010928 <___svfprintf_internal_r+0x143c>
100105e0:	b5800204 	addi	r22,r22,8
100105e4:	d9003b17 	ldw	r4,236(sp)
100105e8:	df0022c4 	addi	fp,sp,139
100105ec:	8c400044 	addi	r17,r17,1
100105f0:	20c7883a 	add	r3,r4,r3
100105f4:	b7000015 	stw	fp,0(r22)
100105f8:	b1000115 	stw	r4,4(r22)
100105fc:	d8c02015 	stw	r3,128(sp)
10010600:	dc401f15 	stw	r17,124(sp)
10010604:	008001c4 	movi	r2,7
10010608:	14400e16 	blt	r2,r17,10010644 <___svfprintf_internal_r+0x1158>
1001060c:	b2000204 	addi	r8,r22,8
10010610:	003e1a06 	br	1000fe7c <__alt_data_end+0xf800fe7c>
10010614:	010400b4 	movhi	r4,4098
10010618:	2132d004 	addi	r4,r4,-13504
1001061c:	d9002c15 	stw	r4,176(sp)
10010620:	d9002c17 	ldw	r4,176(sp)
10010624:	1c07883a 	add	r3,r3,r16
10010628:	44000115 	stw	r16,4(r8)
1001062c:	41000015 	stw	r4,0(r8)
10010630:	10800044 	addi	r2,r2,1
10010634:	d8c02015 	stw	r3,128(sp)
10010638:	d8801f15 	stw	r2,124(sp)
1001063c:	010001c4 	movi	r4,7
10010640:	20be0d0e 	bge	r4,r2,1000fe78 <__alt_data_end+0xf800fe78>
10010644:	d9402d17 	ldw	r5,180(sp)
10010648:	d9801e04 	addi	r6,sp,120
1001064c:	9809883a 	mov	r4,r19
10010650:	00145000 	call	10014500 <__ssprint_r>
10010654:	103c8c1e 	bne	r2,zero,1000f888 <__alt_data_end+0xf800f888>
10010658:	d8c02017 	ldw	r3,128(sp)
1001065c:	da000404 	addi	r8,sp,16
10010660:	003e0606 	br	1000fe7c <__alt_data_end+0xf800fe7c>
10010664:	d9402d17 	ldw	r5,180(sp)
10010668:	d9801e04 	addi	r6,sp,120
1001066c:	9809883a 	mov	r4,r19
10010670:	00145000 	call	10014500 <__ssprint_r>
10010674:	103e3d26 	beq	r2,zero,1000ff6c <__alt_data_end+0xf800ff6c>
10010678:	003c8306 	br	1000f888 <__alt_data_end+0xf800f888>
1001067c:	d9402d17 	ldw	r5,180(sp)
10010680:	d9801e04 	addi	r6,sp,120
10010684:	9809883a 	mov	r4,r19
10010688:	00145000 	call	10014500 <__ssprint_r>
1001068c:	103c7e1e 	bne	r2,zero,1000f888 <__alt_data_end+0xf800f888>
10010690:	d8c02017 	ldw	r3,128(sp)
10010694:	da000404 	addi	r8,sp,16
10010698:	003deb06 	br	1000fe48 <__alt_data_end+0xf800fe48>
1001069c:	d9402d17 	ldw	r5,180(sp)
100106a0:	d9801e04 	addi	r6,sp,120
100106a4:	9809883a 	mov	r4,r19
100106a8:	00145000 	call	10014500 <__ssprint_r>
100106ac:	103c761e 	bne	r2,zero,1000f888 <__alt_data_end+0xf800f888>
100106b0:	d8c02017 	ldw	r3,128(sp)
100106b4:	da000404 	addi	r8,sp,16
100106b8:	003d9f06 	br	1000fd38 <__alt_data_end+0xf800fd38>
100106bc:	d9402d17 	ldw	r5,180(sp)
100106c0:	d9801e04 	addi	r6,sp,120
100106c4:	9809883a 	mov	r4,r19
100106c8:	00145000 	call	10014500 <__ssprint_r>
100106cc:	103c6e1e 	bne	r2,zero,1000f888 <__alt_data_end+0xf800f888>
100106d0:	d8c02017 	ldw	r3,128(sp)
100106d4:	da000404 	addi	r8,sp,16
100106d8:	003da506 	br	1000fd70 <__alt_data_end+0xf800fd70>
100106dc:	d9402a17 	ldw	r5,168(sp)
100106e0:	d8002785 	stb	zero,158(sp)
100106e4:	283f0816 	blt	r5,zero,10010308 <__alt_data_end+0xf8010308>
100106e8:	00ffdfc4 	movi	r3,-129
100106ec:	a584b03a 	or	r2,r20,r22
100106f0:	90e4703a 	and	r18,r18,r3
100106f4:	103c5126 	beq	r2,zero,1000f83c <__alt_data_end+0xf800f83c>
100106f8:	0039883a 	mov	fp,zero
100106fc:	003e5a06 	br	10010068 <__alt_data_end+0xf8010068>
10010700:	9080040c 	andi	r2,r18,16
10010704:	10013d26 	beq	r2,zero,10010bfc <___svfprintf_internal_r+0x1710>
10010708:	d8c02e17 	ldw	r3,184(sp)
1001070c:	d9002a17 	ldw	r4,168(sp)
10010710:	d8002785 	stb	zero,158(sp)
10010714:	18800104 	addi	r2,r3,4
10010718:	1d000017 	ldw	r20,0(r3)
1001071c:	002d883a 	mov	r22,zero
10010720:	20013f16 	blt	r4,zero,10010c20 <___svfprintf_internal_r+0x1734>
10010724:	00ffdfc4 	movi	r3,-129
10010728:	d8802e15 	stw	r2,184(sp)
1001072c:	90e4703a 	and	r18,r18,r3
10010730:	a03d0926 	beq	r20,zero,1000fb58 <__alt_data_end+0xf800fb58>
10010734:	0039883a 	mov	fp,zero
10010738:	003d0c06 	br	1000fb6c <__alt_data_end+0xf800fb6c>
1001073c:	dc402617 	ldw	r17,152(sp)
10010740:	0441830e 	bge	zero,r17,10010d50 <___svfprintf_internal_r+0x1864>
10010744:	dc403217 	ldw	r17,200(sp)
10010748:	d8803317 	ldw	r2,204(sp)
1001074c:	1440010e 	bge	r2,r17,10010754 <___svfprintf_internal_r+0x1268>
10010750:	1023883a 	mov	r17,r2
10010754:	04400a0e 	bge	zero,r17,10010780 <___svfprintf_internal_r+0x1294>
10010758:	d8801f17 	ldw	r2,124(sp)
1001075c:	1c47883a 	add	r3,r3,r17
10010760:	44000015 	stw	r16,0(r8)
10010764:	10800044 	addi	r2,r2,1
10010768:	44400115 	stw	r17,4(r8)
1001076c:	d8c02015 	stw	r3,128(sp)
10010770:	d8801f15 	stw	r2,124(sp)
10010774:	010001c4 	movi	r4,7
10010778:	20827516 	blt	r4,r2,10011150 <___svfprintf_internal_r+0x1c64>
1001077c:	42000204 	addi	r8,r8,8
10010780:	88027b16 	blt	r17,zero,10011170 <___svfprintf_internal_r+0x1c84>
10010784:	d9003217 	ldw	r4,200(sp)
10010788:	2463c83a 	sub	r17,r4,r17
1001078c:	0440990e 	bge	zero,r17,100109f4 <___svfprintf_internal_r+0x1508>
10010790:	05800404 	movi	r22,16
10010794:	d8801f17 	ldw	r2,124(sp)
10010798:	b441530e 	bge	r22,r17,10010ce8 <___svfprintf_internal_r+0x17fc>
1001079c:	010400b4 	movhi	r4,4098
100107a0:	2132d004 	addi	r4,r4,-13504
100107a4:	d9002c15 	stw	r4,176(sp)
100107a8:	070001c4 	movi	fp,7
100107ac:	dd002d17 	ldw	r20,180(sp)
100107b0:	00000306 	br	100107c0 <___svfprintf_internal_r+0x12d4>
100107b4:	42000204 	addi	r8,r8,8
100107b8:	8c7ffc04 	addi	r17,r17,-16
100107bc:	b4414d0e 	bge	r22,r17,10010cf4 <___svfprintf_internal_r+0x1808>
100107c0:	18c00404 	addi	r3,r3,16
100107c4:	10800044 	addi	r2,r2,1
100107c8:	45400015 	stw	r21,0(r8)
100107cc:	45800115 	stw	r22,4(r8)
100107d0:	d8c02015 	stw	r3,128(sp)
100107d4:	d8801f15 	stw	r2,124(sp)
100107d8:	e0bff60e 	bge	fp,r2,100107b4 <__alt_data_end+0xf80107b4>
100107dc:	d9801e04 	addi	r6,sp,120
100107e0:	a00b883a 	mov	r5,r20
100107e4:	9809883a 	mov	r4,r19
100107e8:	00145000 	call	10014500 <__ssprint_r>
100107ec:	103c261e 	bne	r2,zero,1000f888 <__alt_data_end+0xf800f888>
100107f0:	d8c02017 	ldw	r3,128(sp)
100107f4:	d8801f17 	ldw	r2,124(sp)
100107f8:	da000404 	addi	r8,sp,16
100107fc:	003fee06 	br	100107b8 <__alt_data_end+0xf80107b8>
10010800:	d9402d17 	ldw	r5,180(sp)
10010804:	d9801e04 	addi	r6,sp,120
10010808:	9809883a 	mov	r4,r19
1001080c:	00145000 	call	10014500 <__ssprint_r>
10010810:	103c1d1e 	bne	r2,zero,1000f888 <__alt_data_end+0xf800f888>
10010814:	d8c02017 	ldw	r3,128(sp)
10010818:	df002787 	ldb	fp,158(sp)
1001081c:	da000404 	addi	r8,sp,16
10010820:	003d3806 	br	1000fd04 <__alt_data_end+0xf800fd04>
10010824:	9080040c 	andi	r2,r18,16
10010828:	10005c26 	beq	r2,zero,1001099c <___svfprintf_internal_r+0x14b0>
1001082c:	d8c02e17 	ldw	r3,184(sp)
10010830:	d9002a17 	ldw	r4,168(sp)
10010834:	d8002785 	stb	zero,158(sp)
10010838:	18800104 	addi	r2,r3,4
1001083c:	1d000017 	ldw	r20,0(r3)
10010840:	002d883a 	mov	r22,zero
10010844:	20005e16 	blt	r4,zero,100109c0 <___svfprintf_internal_r+0x14d4>
10010848:	00ffdfc4 	movi	r3,-129
1001084c:	d8802e15 	stw	r2,184(sp)
10010850:	90e4703a 	and	r18,r18,r3
10010854:	0039883a 	mov	fp,zero
10010858:	a03ddf26 	beq	r20,zero,1000ffd8 <__alt_data_end+0xf800ffd8>
1001085c:	00800244 	movi	r2,9
10010860:	153c8e36 	bltu	r2,r20,1000fa9c <__alt_data_end+0xf800fa9c>
10010864:	a5000c04 	addi	r20,r20,48
10010868:	dc001dc4 	addi	r16,sp,119
1001086c:	dd001dc5 	stb	r20,119(sp)
10010870:	d8c02817 	ldw	r3,160(sp)
10010874:	1c07c83a 	sub	r3,r3,r16
10010878:	d8c02b15 	stw	r3,172(sp)
1001087c:	003cd306 	br	1000fbcc <__alt_data_end+0xf800fbcc>
10010880:	d8803317 	ldw	r2,204(sp)
10010884:	143fffc4 	addi	r16,r2,-1
10010888:	043f560e 	bge	zero,r16,100105e4 <__alt_data_end+0xf80105e4>
1001088c:	07000404 	movi	fp,16
10010890:	e403530e 	bge	fp,r16,100115e0 <___svfprintf_internal_r+0x20f4>
10010894:	014400b4 	movhi	r5,4098
10010898:	2972d004 	addi	r5,r5,-13504
1001089c:	d9402c15 	stw	r5,176(sp)
100108a0:	01c001c4 	movi	r7,7
100108a4:	dd002d17 	ldw	r20,180(sp)
100108a8:	00000306 	br	100108b8 <___svfprintf_internal_r+0x13cc>
100108ac:	843ffc04 	addi	r16,r16,-16
100108b0:	b5800204 	addi	r22,r22,8
100108b4:	e400130e 	bge	fp,r16,10010904 <___svfprintf_internal_r+0x1418>
100108b8:	18c00404 	addi	r3,r3,16
100108bc:	8c400044 	addi	r17,r17,1
100108c0:	b5400015 	stw	r21,0(r22)
100108c4:	b7000115 	stw	fp,4(r22)
100108c8:	d8c02015 	stw	r3,128(sp)
100108cc:	dc401f15 	stw	r17,124(sp)
100108d0:	3c7ff60e 	bge	r7,r17,100108ac <__alt_data_end+0xf80108ac>
100108d4:	d9801e04 	addi	r6,sp,120
100108d8:	a00b883a 	mov	r5,r20
100108dc:	9809883a 	mov	r4,r19
100108e0:	d9c03d15 	stw	r7,244(sp)
100108e4:	00145000 	call	10014500 <__ssprint_r>
100108e8:	d9c03d17 	ldw	r7,244(sp)
100108ec:	103be61e 	bne	r2,zero,1000f888 <__alt_data_end+0xf800f888>
100108f0:	843ffc04 	addi	r16,r16,-16
100108f4:	d8c02017 	ldw	r3,128(sp)
100108f8:	dc401f17 	ldw	r17,124(sp)
100108fc:	dd800404 	addi	r22,sp,16
10010900:	e43fed16 	blt	fp,r16,100108b8 <__alt_data_end+0xf80108b8>
10010904:	d8802c17 	ldw	r2,176(sp)
10010908:	1c07883a 	add	r3,r3,r16
1001090c:	8c400044 	addi	r17,r17,1
10010910:	b0800015 	stw	r2,0(r22)
10010914:	b4000115 	stw	r16,4(r22)
10010918:	d8c02015 	stw	r3,128(sp)
1001091c:	dc401f15 	stw	r17,124(sp)
10010920:	008001c4 	movi	r2,7
10010924:	147f2e0e 	bge	r2,r17,100105e0 <__alt_data_end+0xf80105e0>
10010928:	d9402d17 	ldw	r5,180(sp)
1001092c:	d9801e04 	addi	r6,sp,120
10010930:	9809883a 	mov	r4,r19
10010934:	00145000 	call	10014500 <__ssprint_r>
10010938:	103bd31e 	bne	r2,zero,1000f888 <__alt_data_end+0xf800f888>
1001093c:	d8c02017 	ldw	r3,128(sp)
10010940:	dc401f17 	ldw	r17,124(sp)
10010944:	dd800404 	addi	r22,sp,16
10010948:	003f2606 	br	100105e4 <__alt_data_end+0xf80105e4>
1001094c:	9080040c 	andi	r2,r18,16
10010950:	1000c326 	beq	r2,zero,10010c60 <___svfprintf_internal_r+0x1774>
10010954:	d9402e17 	ldw	r5,184(sp)
10010958:	2d000017 	ldw	r20,0(r5)
1001095c:	29400104 	addi	r5,r5,4
10010960:	d9402e15 	stw	r5,184(sp)
10010964:	a02dd7fa 	srai	r22,r20,31
10010968:	b005883a 	mov	r2,r22
1001096c:	103c430e 	bge	r2,zero,1000fa7c <__alt_data_end+0xf800fa7c>
10010970:	d9402a17 	ldw	r5,168(sp)
10010974:	0529c83a 	sub	r20,zero,r20
10010978:	07000b44 	movi	fp,45
1001097c:	a004c03a 	cmpne	r2,r20,zero
10010980:	05adc83a 	sub	r22,zero,r22
10010984:	df002785 	stb	fp,158(sp)
10010988:	b0adc83a 	sub	r22,r22,r2
1001098c:	28022e16 	blt	r5,zero,10011248 <___svfprintf_internal_r+0x1d5c>
10010990:	00bfdfc4 	movi	r2,-129
10010994:	90a4703a 	and	r18,r18,r2
10010998:	003c3f06 	br	1000fa98 <__alt_data_end+0xf800fa98>
1001099c:	9080100c 	andi	r2,r18,64
100109a0:	d8002785 	stb	zero,158(sp)
100109a4:	10012526 	beq	r2,zero,10010e3c <___svfprintf_internal_r+0x1950>
100109a8:	d9402e17 	ldw	r5,184(sp)
100109ac:	d8c02a17 	ldw	r3,168(sp)
100109b0:	002d883a 	mov	r22,zero
100109b4:	28800104 	addi	r2,r5,4
100109b8:	2d00000b 	ldhu	r20,0(r5)
100109bc:	183fa20e 	bge	r3,zero,10010848 <__alt_data_end+0xf8010848>
100109c0:	d8802e15 	stw	r2,184(sp)
100109c4:	0039883a 	mov	fp,zero
100109c8:	a584b03a 	or	r2,r20,r22
100109cc:	103c321e 	bne	r2,zero,1000fa98 <__alt_data_end+0xf800fa98>
100109d0:	00800044 	movi	r2,1
100109d4:	003e5006 	br	10010318 <__alt_data_end+0xf8010318>
100109d8:	d9402d17 	ldw	r5,180(sp)
100109dc:	d9801e04 	addi	r6,sp,120
100109e0:	9809883a 	mov	r4,r19
100109e4:	00145000 	call	10014500 <__ssprint_r>
100109e8:	103ba71e 	bne	r2,zero,1000f888 <__alt_data_end+0xf800f888>
100109ec:	d8c02017 	ldw	r3,128(sp)
100109f0:	da000404 	addi	r8,sp,16
100109f4:	d9003217 	ldw	r4,200(sp)
100109f8:	d8802617 	ldw	r2,152(sp)
100109fc:	d9403317 	ldw	r5,204(sp)
10010a00:	8123883a 	add	r17,r16,r4
10010a04:	11400216 	blt	r2,r5,10010a10 <___svfprintf_internal_r+0x1524>
10010a08:	9100004c 	andi	r4,r18,1
10010a0c:	20000d26 	beq	r4,zero,10010a44 <___svfprintf_internal_r+0x1558>
10010a10:	d9003817 	ldw	r4,224(sp)
10010a14:	d9403417 	ldw	r5,208(sp)
10010a18:	1907883a 	add	r3,r3,r4
10010a1c:	d9001f17 	ldw	r4,124(sp)
10010a20:	41400015 	stw	r5,0(r8)
10010a24:	d9403817 	ldw	r5,224(sp)
10010a28:	21000044 	addi	r4,r4,1
10010a2c:	d8c02015 	stw	r3,128(sp)
10010a30:	41400115 	stw	r5,4(r8)
10010a34:	d9001f15 	stw	r4,124(sp)
10010a38:	014001c4 	movi	r5,7
10010a3c:	2901dc16 	blt	r5,r4,100111b0 <___svfprintf_internal_r+0x1cc4>
10010a40:	42000204 	addi	r8,r8,8
10010a44:	d9003317 	ldw	r4,204(sp)
10010a48:	8121883a 	add	r16,r16,r4
10010a4c:	2085c83a 	sub	r2,r4,r2
10010a50:	8461c83a 	sub	r16,r16,r17
10010a54:	1400010e 	bge	r2,r16,10010a5c <___svfprintf_internal_r+0x1570>
10010a58:	1021883a 	mov	r16,r2
10010a5c:	04000a0e 	bge	zero,r16,10010a88 <___svfprintf_internal_r+0x159c>
10010a60:	d9001f17 	ldw	r4,124(sp)
10010a64:	1c07883a 	add	r3,r3,r16
10010a68:	44400015 	stw	r17,0(r8)
10010a6c:	21000044 	addi	r4,r4,1
10010a70:	44000115 	stw	r16,4(r8)
10010a74:	d8c02015 	stw	r3,128(sp)
10010a78:	d9001f15 	stw	r4,124(sp)
10010a7c:	014001c4 	movi	r5,7
10010a80:	2901e616 	blt	r5,r4,1001121c <___svfprintf_internal_r+0x1d30>
10010a84:	42000204 	addi	r8,r8,8
10010a88:	8001f616 	blt	r16,zero,10011264 <___svfprintf_internal_r+0x1d78>
10010a8c:	1421c83a 	sub	r16,r2,r16
10010a90:	043cfa0e 	bge	zero,r16,1000fe7c <__alt_data_end+0xf800fe7c>
10010a94:	04400404 	movi	r17,16
10010a98:	d8801f17 	ldw	r2,124(sp)
10010a9c:	8c3edd0e 	bge	r17,r16,10010614 <__alt_data_end+0xf8010614>
10010aa0:	014400b4 	movhi	r5,4098
10010aa4:	2972d004 	addi	r5,r5,-13504
10010aa8:	d9402c15 	stw	r5,176(sp)
10010aac:	058001c4 	movi	r22,7
10010ab0:	dd002d17 	ldw	r20,180(sp)
10010ab4:	00000306 	br	10010ac4 <___svfprintf_internal_r+0x15d8>
10010ab8:	42000204 	addi	r8,r8,8
10010abc:	843ffc04 	addi	r16,r16,-16
10010ac0:	8c3ed70e 	bge	r17,r16,10010620 <__alt_data_end+0xf8010620>
10010ac4:	18c00404 	addi	r3,r3,16
10010ac8:	10800044 	addi	r2,r2,1
10010acc:	45400015 	stw	r21,0(r8)
10010ad0:	44400115 	stw	r17,4(r8)
10010ad4:	d8c02015 	stw	r3,128(sp)
10010ad8:	d8801f15 	stw	r2,124(sp)
10010adc:	b0bff60e 	bge	r22,r2,10010ab8 <__alt_data_end+0xf8010ab8>
10010ae0:	d9801e04 	addi	r6,sp,120
10010ae4:	a00b883a 	mov	r5,r20
10010ae8:	9809883a 	mov	r4,r19
10010aec:	00145000 	call	10014500 <__ssprint_r>
10010af0:	103b651e 	bne	r2,zero,1000f888 <__alt_data_end+0xf800f888>
10010af4:	d8c02017 	ldw	r3,128(sp)
10010af8:	d8801f17 	ldw	r2,124(sp)
10010afc:	da000404 	addi	r8,sp,16
10010b00:	003fee06 	br	10010abc <__alt_data_end+0xf8010abc>
10010b04:	9088703a 	and	r4,r18,r2
10010b08:	203e8d1e 	bne	r4,zero,10010540 <__alt_data_end+0xf8010540>
10010b0c:	dc401f17 	ldw	r17,124(sp)
10010b10:	40800115 	stw	r2,4(r8)
10010b14:	44000015 	stw	r16,0(r8)
10010b18:	8c400044 	addi	r17,r17,1
10010b1c:	d8c02015 	stw	r3,128(sp)
10010b20:	dc401f15 	stw	r17,124(sp)
10010b24:	008001c4 	movi	r2,7
10010b28:	147f7f16 	blt	r2,r17,10010928 <__alt_data_end+0xf8010928>
10010b2c:	45800204 	addi	r22,r8,8
10010b30:	003eac06 	br	100105e4 <__alt_data_end+0xf80105e4>
10010b34:	d9402d17 	ldw	r5,180(sp)
10010b38:	d9801e04 	addi	r6,sp,120
10010b3c:	9809883a 	mov	r4,r19
10010b40:	00145000 	call	10014500 <__ssprint_r>
10010b44:	103b501e 	bne	r2,zero,1000f888 <__alt_data_end+0xf800f888>
10010b48:	d8c02017 	ldw	r3,128(sp)
10010b4c:	dc401f17 	ldw	r17,124(sp)
10010b50:	da000404 	addi	r8,sp,16
10010b54:	003e8406 	br	10010568 <__alt_data_end+0xf8010568>
10010b58:	d9402d17 	ldw	r5,180(sp)
10010b5c:	d9801e04 	addi	r6,sp,120
10010b60:	9809883a 	mov	r4,r19
10010b64:	00145000 	call	10014500 <__ssprint_r>
10010b68:	103b471e 	bne	r2,zero,1000f888 <__alt_data_end+0xf800f888>
10010b6c:	d8c02017 	ldw	r3,128(sp)
10010b70:	dc401f17 	ldw	r17,124(sp)
10010b74:	dd800404 	addi	r22,sp,16
10010b78:	003e8606 	br	10010594 <__alt_data_end+0xf8010594>
10010b7c:	0029883a 	mov	r20,zero
10010b80:	a5000c04 	addi	r20,r20,48
10010b84:	dc001dc4 	addi	r16,sp,119
10010b88:	dd001dc5 	stb	r20,119(sp)
10010b8c:	003f3806 	br	10010870 <__alt_data_end+0xf8010870>
10010b90:	d9402d17 	ldw	r5,180(sp)
10010b94:	d9801e04 	addi	r6,sp,120
10010b98:	9809883a 	mov	r4,r19
10010b9c:	00145000 	call	10014500 <__ssprint_r>
10010ba0:	103b391e 	bne	r2,zero,1000f888 <__alt_data_end+0xf800f888>
10010ba4:	d8c02017 	ldw	r3,128(sp)
10010ba8:	da000404 	addi	r8,sp,16
10010bac:	003c7306 	br	1000fd7c <__alt_data_end+0xf800fd7c>
10010bb0:	d9003617 	ldw	r4,216(sp)
10010bb4:	d9403717 	ldw	r5,220(sp)
10010bb8:	da003e15 	stw	r8,248(sp)
10010bbc:	000ce380 	call	1000ce38 <__fpclassifyd>
10010bc0:	da003e17 	ldw	r8,248(sp)
10010bc4:	1000bd1e 	bne	r2,zero,10010ebc <___svfprintf_internal_r+0x19d0>
10010bc8:	008011c4 	movi	r2,71
10010bcc:	14411e0e 	bge	r2,r17,10011048 <___svfprintf_internal_r+0x1b5c>
10010bd0:	040400b4 	movhi	r16,4098
10010bd4:	8431a604 	addi	r16,r16,-14696
10010bd8:	00c000c4 	movi	r3,3
10010bdc:	00bfdfc4 	movi	r2,-129
10010be0:	d8c02915 	stw	r3,164(sp)
10010be4:	90a4703a 	and	r18,r18,r2
10010be8:	df002783 	ldbu	fp,158(sp)
10010bec:	d8c02b15 	stw	r3,172(sp)
10010bf0:	d8002a15 	stw	zero,168(sp)
10010bf4:	d8003215 	stw	zero,200(sp)
10010bf8:	003bfa06 	br	1000fbe4 <__alt_data_end+0xf800fbe4>
10010bfc:	9080100c 	andi	r2,r18,64
10010c00:	d8002785 	stb	zero,158(sp)
10010c04:	10009426 	beq	r2,zero,10010e58 <___svfprintf_internal_r+0x196c>
10010c08:	d9402e17 	ldw	r5,184(sp)
10010c0c:	d8c02a17 	ldw	r3,168(sp)
10010c10:	002d883a 	mov	r22,zero
10010c14:	28800104 	addi	r2,r5,4
10010c18:	2d00000b 	ldhu	r20,0(r5)
10010c1c:	183ec10e 	bge	r3,zero,10010724 <__alt_data_end+0xf8010724>
10010c20:	a586b03a 	or	r3,r20,r22
10010c24:	d8802e15 	stw	r2,184(sp)
10010c28:	183ec21e 	bne	r3,zero,10010734 <__alt_data_end+0xf8010734>
10010c2c:	0039883a 	mov	fp,zero
10010c30:	0005883a 	mov	r2,zero
10010c34:	003db806 	br	10010318 <__alt_data_end+0xf8010318>
10010c38:	d8c02e17 	ldw	r3,184(sp)
10010c3c:	d9002e17 	ldw	r4,184(sp)
10010c40:	d9402e17 	ldw	r5,184(sp)
10010c44:	18c00017 	ldw	r3,0(r3)
10010c48:	21000117 	ldw	r4,4(r4)
10010c4c:	29400204 	addi	r5,r5,8
10010c50:	d8c03615 	stw	r3,216(sp)
10010c54:	d9003715 	stw	r4,220(sp)
10010c58:	d9402e15 	stw	r5,184(sp)
10010c5c:	003b5a06 	br	1000f9c8 <__alt_data_end+0xf800f9c8>
10010c60:	9080100c 	andi	r2,r18,64
10010c64:	10010726 	beq	r2,zero,10011084 <___svfprintf_internal_r+0x1b98>
10010c68:	d8802e17 	ldw	r2,184(sp)
10010c6c:	1500000f 	ldh	r20,0(r2)
10010c70:	10800104 	addi	r2,r2,4
10010c74:	d8802e15 	stw	r2,184(sp)
10010c78:	a02dd7fa 	srai	r22,r20,31
10010c7c:	b005883a 	mov	r2,r22
10010c80:	003b7d06 	br	1000fa78 <__alt_data_end+0xf800fa78>
10010c84:	9080100c 	andi	r2,r18,64
10010c88:	10010526 	beq	r2,zero,100110a0 <___svfprintf_internal_r+0x1bb4>
10010c8c:	d8c02e17 	ldw	r3,184(sp)
10010c90:	002d883a 	mov	r22,zero
10010c94:	1d00000b 	ldhu	r20,0(r3)
10010c98:	18c00104 	addi	r3,r3,4
10010c9c:	d8c02e15 	stw	r3,184(sp)
10010ca0:	003ce206 	br	1001002c <__alt_data_end+0xf801002c>
10010ca4:	bc400007 	ldb	r17,0(r23)
10010ca8:	003a6506 	br	1000f640 <__alt_data_end+0xf800f640>
10010cac:	9080040c 	andi	r2,r18,16
10010cb0:	10010126 	beq	r2,zero,100110b8 <___svfprintf_internal_r+0x1bcc>
10010cb4:	d8c02e17 	ldw	r3,184(sp)
10010cb8:	d9002f17 	ldw	r4,188(sp)
10010cbc:	18800017 	ldw	r2,0(r3)
10010cc0:	18c00104 	addi	r3,r3,4
10010cc4:	d8c02e15 	stw	r3,184(sp)
10010cc8:	11000015 	stw	r4,0(r2)
10010ccc:	003a3206 	br	1000f598 <__alt_data_end+0xf800f598>
10010cd0:	d9002a17 	ldw	r4,168(sp)
10010cd4:	d8002785 	stb	zero,158(sp)
10010cd8:	203d8d16 	blt	r4,zero,10010310 <__alt_data_end+0xf8010310>
10010cdc:	00bfdfc4 	movi	r2,-129
10010ce0:	90a4703a 	and	r18,r18,r2
10010ce4:	003ad506 	br	1000f83c <__alt_data_end+0xf800f83c>
10010ce8:	014400b4 	movhi	r5,4098
10010cec:	2972d004 	addi	r5,r5,-13504
10010cf0:	d9402c15 	stw	r5,176(sp)
10010cf4:	d9402c17 	ldw	r5,176(sp)
10010cf8:	1c47883a 	add	r3,r3,r17
10010cfc:	10800044 	addi	r2,r2,1
10010d00:	41400015 	stw	r5,0(r8)
10010d04:	44400115 	stw	r17,4(r8)
10010d08:	d8c02015 	stw	r3,128(sp)
10010d0c:	d8801f15 	stw	r2,124(sp)
10010d10:	010001c4 	movi	r4,7
10010d14:	20bf3016 	blt	r4,r2,100109d8 <__alt_data_end+0xf80109d8>
10010d18:	42000204 	addi	r8,r8,8
10010d1c:	003f3506 	br	100109f4 <__alt_data_end+0xf80109f4>
10010d20:	010400b4 	movhi	r4,4098
10010d24:	2132d004 	addi	r4,r4,-13504
10010d28:	d9002c15 	stw	r4,176(sp)
10010d2c:	003c3c06 	br	1000fe20 <__alt_data_end+0xf800fe20>
10010d30:	d9402d17 	ldw	r5,180(sp)
10010d34:	d9801e04 	addi	r6,sp,120
10010d38:	9809883a 	mov	r4,r19
10010d3c:	00145000 	call	10014500 <__ssprint_r>
10010d40:	103ad11e 	bne	r2,zero,1000f888 <__alt_data_end+0xf800f888>
10010d44:	d8c02017 	ldw	r3,128(sp)
10010d48:	da000404 	addi	r8,sp,16
10010d4c:	003d9306 	br	1001039c <__alt_data_end+0xf801039c>
10010d50:	d8801f17 	ldw	r2,124(sp)
10010d54:	014400b4 	movhi	r5,4098
10010d58:	01000044 	movi	r4,1
10010d5c:	18c00044 	addi	r3,r3,1
10010d60:	10800044 	addi	r2,r2,1
10010d64:	2971b304 	addi	r5,r5,-14644
10010d68:	41000115 	stw	r4,4(r8)
10010d6c:	41400015 	stw	r5,0(r8)
10010d70:	d8c02015 	stw	r3,128(sp)
10010d74:	d8801f15 	stw	r2,124(sp)
10010d78:	010001c4 	movi	r4,7
10010d7c:	2080b516 	blt	r4,r2,10011054 <___svfprintf_internal_r+0x1b68>
10010d80:	42000204 	addi	r8,r8,8
10010d84:	8800041e 	bne	r17,zero,10010d98 <___svfprintf_internal_r+0x18ac>
10010d88:	d8803317 	ldw	r2,204(sp)
10010d8c:	1000021e 	bne	r2,zero,10010d98 <___svfprintf_internal_r+0x18ac>
10010d90:	9080004c 	andi	r2,r18,1
10010d94:	103c3926 	beq	r2,zero,1000fe7c <__alt_data_end+0xf800fe7c>
10010d98:	d9003817 	ldw	r4,224(sp)
10010d9c:	d8801f17 	ldw	r2,124(sp)
10010da0:	d9403417 	ldw	r5,208(sp)
10010da4:	20c7883a 	add	r3,r4,r3
10010da8:	10800044 	addi	r2,r2,1
10010dac:	41000115 	stw	r4,4(r8)
10010db0:	41400015 	stw	r5,0(r8)
10010db4:	d8c02015 	stw	r3,128(sp)
10010db8:	d8801f15 	stw	r2,124(sp)
10010dbc:	010001c4 	movi	r4,7
10010dc0:	20818016 	blt	r4,r2,100113c4 <___svfprintf_internal_r+0x1ed8>
10010dc4:	42000204 	addi	r8,r8,8
10010dc8:	0463c83a 	sub	r17,zero,r17
10010dcc:	0440cb0e 	bge	zero,r17,100110fc <___svfprintf_internal_r+0x1c10>
10010dd0:	05800404 	movi	r22,16
10010dd4:	b440e80e 	bge	r22,r17,10011178 <___svfprintf_internal_r+0x1c8c>
10010dd8:	014400b4 	movhi	r5,4098
10010ddc:	2972d004 	addi	r5,r5,-13504
10010de0:	d9402c15 	stw	r5,176(sp)
10010de4:	070001c4 	movi	fp,7
10010de8:	dd002d17 	ldw	r20,180(sp)
10010dec:	00000306 	br	10010dfc <___svfprintf_internal_r+0x1910>
10010df0:	42000204 	addi	r8,r8,8
10010df4:	8c7ffc04 	addi	r17,r17,-16
10010df8:	b440e20e 	bge	r22,r17,10011184 <___svfprintf_internal_r+0x1c98>
10010dfc:	18c00404 	addi	r3,r3,16
10010e00:	10800044 	addi	r2,r2,1
10010e04:	45400015 	stw	r21,0(r8)
10010e08:	45800115 	stw	r22,4(r8)
10010e0c:	d8c02015 	stw	r3,128(sp)
10010e10:	d8801f15 	stw	r2,124(sp)
10010e14:	e0bff60e 	bge	fp,r2,10010df0 <__alt_data_end+0xf8010df0>
10010e18:	d9801e04 	addi	r6,sp,120
10010e1c:	a00b883a 	mov	r5,r20
10010e20:	9809883a 	mov	r4,r19
10010e24:	00145000 	call	10014500 <__ssprint_r>
10010e28:	103a971e 	bne	r2,zero,1000f888 <__alt_data_end+0xf800f888>
10010e2c:	d8c02017 	ldw	r3,128(sp)
10010e30:	d8801f17 	ldw	r2,124(sp)
10010e34:	da000404 	addi	r8,sp,16
10010e38:	003fee06 	br	10010df4 <__alt_data_end+0xf8010df4>
10010e3c:	d9002e17 	ldw	r4,184(sp)
10010e40:	d9402a17 	ldw	r5,168(sp)
10010e44:	002d883a 	mov	r22,zero
10010e48:	20800104 	addi	r2,r4,4
10010e4c:	25000017 	ldw	r20,0(r4)
10010e50:	283e7d0e 	bge	r5,zero,10010848 <__alt_data_end+0xf8010848>
10010e54:	003eda06 	br	100109c0 <__alt_data_end+0xf80109c0>
10010e58:	d9002e17 	ldw	r4,184(sp)
10010e5c:	d9402a17 	ldw	r5,168(sp)
10010e60:	002d883a 	mov	r22,zero
10010e64:	20800104 	addi	r2,r4,4
10010e68:	25000017 	ldw	r20,0(r4)
10010e6c:	283e2d0e 	bge	r5,zero,10010724 <__alt_data_end+0xf8010724>
10010e70:	003f6b06 	br	10010c20 <__alt_data_end+0xf8010c20>
10010e74:	d8c02e15 	stw	r3,184(sp)
10010e78:	0039883a 	mov	fp,zero
10010e7c:	003ed206 	br	100109c8 <__alt_data_end+0xf80109c8>
10010e80:	bc400043 	ldbu	r17,1(r23)
10010e84:	84000814 	ori	r16,r16,32
10010e88:	bdc00044 	addi	r23,r23,1
10010e8c:	8c403fcc 	andi	r17,r17,255
10010e90:	8c40201c 	xori	r17,r17,128
10010e94:	8c7fe004 	addi	r17,r17,-128
10010e98:	0039e906 	br	1000f640 <__alt_data_end+0xf800f640>
10010e9c:	d9402d17 	ldw	r5,180(sp)
10010ea0:	d9801e04 	addi	r6,sp,120
10010ea4:	9809883a 	mov	r4,r19
10010ea8:	00145000 	call	10014500 <__ssprint_r>
10010eac:	103a761e 	bne	r2,zero,1000f888 <__alt_data_end+0xf800f888>
10010eb0:	d8c02017 	ldw	r3,128(sp)
10010eb4:	da000404 	addi	r8,sp,16
10010eb8:	003d4a06 	br	100103e4 <__alt_data_end+0xf80103e4>
10010ebc:	d9002a17 	ldw	r4,168(sp)
10010ec0:	05bff7c4 	movi	r22,-33
10010ec4:	00bfffc4 	movi	r2,-1
10010ec8:	8dac703a 	and	r22,r17,r22
10010ecc:	20806a26 	beq	r4,r2,10011078 <___svfprintf_internal_r+0x1b8c>
10010ed0:	008011c4 	movi	r2,71
10010ed4:	b0813726 	beq	r22,r2,100113b4 <___svfprintf_internal_r+0x1ec8>
10010ed8:	d9003717 	ldw	r4,220(sp)
10010edc:	90c04014 	ori	r3,r18,256
10010ee0:	d8c02c15 	stw	r3,176(sp)
10010ee4:	20015d16 	blt	r4,zero,1001145c <___svfprintf_internal_r+0x1f70>
10010ee8:	dd003717 	ldw	r20,220(sp)
10010eec:	d8002905 	stb	zero,164(sp)
10010ef0:	00801984 	movi	r2,102
10010ef4:	88814026 	beq	r17,r2,100113f8 <___svfprintf_internal_r+0x1f0c>
10010ef8:	00801184 	movi	r2,70
10010efc:	88817126 	beq	r17,r2,100114c4 <___svfprintf_internal_r+0x1fd8>
10010f00:	00801144 	movi	r2,69
10010f04:	b0816226 	beq	r22,r2,10011490 <___svfprintf_internal_r+0x1fa4>
10010f08:	d8c02a17 	ldw	r3,168(sp)
10010f0c:	d8802104 	addi	r2,sp,132
10010f10:	d8800315 	stw	r2,12(sp)
10010f14:	d9403617 	ldw	r5,216(sp)
10010f18:	d8802504 	addi	r2,sp,148
10010f1c:	d8800215 	stw	r2,8(sp)
10010f20:	d8802604 	addi	r2,sp,152
10010f24:	d8c00015 	stw	r3,0(sp)
10010f28:	d8800115 	stw	r2,4(sp)
10010f2c:	01c00084 	movi	r7,2
10010f30:	a00d883a 	mov	r6,r20
10010f34:	9809883a 	mov	r4,r19
10010f38:	d8c03d15 	stw	r3,244(sp)
10010f3c:	da003e15 	stw	r8,248(sp)
10010f40:	00081540 	call	10008154 <_dtoa_r>
10010f44:	1021883a 	mov	r16,r2
10010f48:	008019c4 	movi	r2,103
10010f4c:	d8c03d17 	ldw	r3,244(sp)
10010f50:	da003e17 	ldw	r8,248(sp)
10010f54:	8880e726 	beq	r17,r2,100112f4 <___svfprintf_internal_r+0x1e08>
10010f58:	008011c4 	movi	r2,71
10010f5c:	8880d426 	beq	r17,r2,100112b0 <___svfprintf_internal_r+0x1dc4>
10010f60:	80f9883a 	add	fp,r16,r3
10010f64:	d9003617 	ldw	r4,216(sp)
10010f68:	000d883a 	mov	r6,zero
10010f6c:	000f883a 	mov	r7,zero
10010f70:	a00b883a 	mov	r5,r20
10010f74:	da003e15 	stw	r8,248(sp)
10010f78:	0017e100 	call	10017e10 <__eqdf2>
10010f7c:	da003e17 	ldw	r8,248(sp)
10010f80:	1000e426 	beq	r2,zero,10011314 <___svfprintf_internal_r+0x1e28>
10010f84:	d8802117 	ldw	r2,132(sp)
10010f88:	1700062e 	bgeu	r2,fp,10010fa4 <___svfprintf_internal_r+0x1ab8>
10010f8c:	01000c04 	movi	r4,48
10010f90:	10c00044 	addi	r3,r2,1
10010f94:	d8c02115 	stw	r3,132(sp)
10010f98:	11000005 	stb	r4,0(r2)
10010f9c:	d8802117 	ldw	r2,132(sp)
10010fa0:	173ffb36 	bltu	r2,fp,10010f90 <__alt_data_end+0xf8010f90>
10010fa4:	1405c83a 	sub	r2,r2,r16
10010fa8:	d8803315 	stw	r2,204(sp)
10010fac:	008011c4 	movi	r2,71
10010fb0:	b080c526 	beq	r22,r2,100112c8 <___svfprintf_internal_r+0x1ddc>
10010fb4:	00801944 	movi	r2,101
10010fb8:	1441d80e 	bge	r2,r17,1001171c <___svfprintf_internal_r+0x2230>
10010fbc:	d8c02617 	ldw	r3,152(sp)
10010fc0:	00801984 	movi	r2,102
10010fc4:	d8c03215 	stw	r3,200(sp)
10010fc8:	88813426 	beq	r17,r2,1001149c <___svfprintf_internal_r+0x1fb0>
10010fcc:	d8c03217 	ldw	r3,200(sp)
10010fd0:	d9003317 	ldw	r4,204(sp)
10010fd4:	19012516 	blt	r3,r4,1001146c <___svfprintf_internal_r+0x1f80>
10010fd8:	9480004c 	andi	r18,r18,1
10010fdc:	9001841e 	bne	r18,zero,100115f0 <___svfprintf_internal_r+0x2104>
10010fe0:	1805883a 	mov	r2,r3
10010fe4:	1801cb16 	blt	r3,zero,10011714 <___svfprintf_internal_r+0x2228>
10010fe8:	d8c03217 	ldw	r3,200(sp)
10010fec:	044019c4 	movi	r17,103
10010ff0:	d8c02b15 	stw	r3,172(sp)
10010ff4:	df002907 	ldb	fp,164(sp)
10010ff8:	e000a61e 	bne	fp,zero,10011294 <___svfprintf_internal_r+0x1da8>
10010ffc:	df002783 	ldbu	fp,158(sp)
10011000:	d8802915 	stw	r2,164(sp)
10011004:	dc802c17 	ldw	r18,176(sp)
10011008:	d8002a15 	stw	zero,168(sp)
1001100c:	003af506 	br	1000fbe4 <__alt_data_end+0xf800fbe4>
10011010:	040400b4 	movhi	r16,4098
10011014:	8431a304 	addi	r16,r16,-14708
10011018:	003a7e06 	br	1000fa14 <__alt_data_end+0xf800fa14>
1001101c:	d9003917 	ldw	r4,228(sp)
10011020:	04001004 	movi	r16,64
10011024:	800b883a 	mov	r5,r16
10011028:	00034880 	call	10003488 <_malloc_r>
1001102c:	d9002d17 	ldw	r4,180(sp)
10011030:	20800015 	stw	r2,0(r4)
10011034:	20800415 	stw	r2,16(r4)
10011038:	1001d026 	beq	r2,zero,1001177c <___svfprintf_internal_r+0x2290>
1001103c:	d8802d17 	ldw	r2,180(sp)
10011040:	14000515 	stw	r16,20(r2)
10011044:	00394406 	br	1000f558 <__alt_data_end+0xf800f558>
10011048:	040400b4 	movhi	r16,4098
1001104c:	8431a504 	addi	r16,r16,-14700
10011050:	003ee106 	br	10010bd8 <__alt_data_end+0xf8010bd8>
10011054:	d9402d17 	ldw	r5,180(sp)
10011058:	d9801e04 	addi	r6,sp,120
1001105c:	9809883a 	mov	r4,r19
10011060:	00145000 	call	10014500 <__ssprint_r>
10011064:	103a081e 	bne	r2,zero,1000f888 <__alt_data_end+0xf800f888>
10011068:	dc402617 	ldw	r17,152(sp)
1001106c:	d8c02017 	ldw	r3,128(sp)
10011070:	da000404 	addi	r8,sp,16
10011074:	003f4306 	br	10010d84 <__alt_data_end+0xf8010d84>
10011078:	01400184 	movi	r5,6
1001107c:	d9402a15 	stw	r5,168(sp)
10011080:	003f9506 	br	10010ed8 <__alt_data_end+0xf8010ed8>
10011084:	d8c02e17 	ldw	r3,184(sp)
10011088:	1d000017 	ldw	r20,0(r3)
1001108c:	18c00104 	addi	r3,r3,4
10011090:	d8c02e15 	stw	r3,184(sp)
10011094:	a02dd7fa 	srai	r22,r20,31
10011098:	b005883a 	mov	r2,r22
1001109c:	003a7606 	br	1000fa78 <__alt_data_end+0xf800fa78>
100110a0:	d9002e17 	ldw	r4,184(sp)
100110a4:	002d883a 	mov	r22,zero
100110a8:	25000017 	ldw	r20,0(r4)
100110ac:	21000104 	addi	r4,r4,4
100110b0:	d9002e15 	stw	r4,184(sp)
100110b4:	003bdd06 	br	1001002c <__alt_data_end+0xf801002c>
100110b8:	9480100c 	andi	r18,r18,64
100110bc:	90006e26 	beq	r18,zero,10011278 <___svfprintf_internal_r+0x1d8c>
100110c0:	d9402e17 	ldw	r5,184(sp)
100110c4:	d8c02f17 	ldw	r3,188(sp)
100110c8:	28800017 	ldw	r2,0(r5)
100110cc:	29400104 	addi	r5,r5,4
100110d0:	d9402e15 	stw	r5,184(sp)
100110d4:	10c0000d 	sth	r3,0(r2)
100110d8:	00392f06 	br	1000f598 <__alt_data_end+0xf800f598>
100110dc:	d9402d17 	ldw	r5,180(sp)
100110e0:	d9801e04 	addi	r6,sp,120
100110e4:	9809883a 	mov	r4,r19
100110e8:	00145000 	call	10014500 <__ssprint_r>
100110ec:	1039e61e 	bne	r2,zero,1000f888 <__alt_data_end+0xf800f888>
100110f0:	d8c02017 	ldw	r3,128(sp)
100110f4:	d8801f17 	ldw	r2,124(sp)
100110f8:	da000404 	addi	r8,sp,16
100110fc:	d9403317 	ldw	r5,204(sp)
10011100:	10800044 	addi	r2,r2,1
10011104:	44000015 	stw	r16,0(r8)
10011108:	28c7883a 	add	r3,r5,r3
1001110c:	003b5506 	br	1000fe64 <__alt_data_end+0xf800fe64>
10011110:	8009883a 	mov	r4,r16
10011114:	df003e15 	stw	fp,248(sp)
10011118:	0003f300 	call	10003f30 <strlen>
1001111c:	d8802b15 	stw	r2,172(sp)
10011120:	da003e17 	ldw	r8,248(sp)
10011124:	103c160e 	bge	r2,zero,10010180 <__alt_data_end+0xf8010180>
10011128:	0005883a 	mov	r2,zero
1001112c:	003c1406 	br	10010180 <__alt_data_end+0xf8010180>
10011130:	00bfffc4 	movi	r2,-1
10011134:	0039d906 	br	1000f89c <__alt_data_end+0xf800f89c>
10011138:	010400b4 	movhi	r4,4098
1001113c:	2132d404 	addi	r4,r4,-13488
10011140:	d9003515 	stw	r4,212(sp)
10011144:	003ae406 	br	1000fcd8 <__alt_data_end+0xf800fcd8>
10011148:	013fffc4 	movi	r4,-1
1001114c:	0039fa06 	br	1000f938 <__alt_data_end+0xf800f938>
10011150:	d9402d17 	ldw	r5,180(sp)
10011154:	d9801e04 	addi	r6,sp,120
10011158:	9809883a 	mov	r4,r19
1001115c:	00145000 	call	10014500 <__ssprint_r>
10011160:	1039c91e 	bne	r2,zero,1000f888 <__alt_data_end+0xf800f888>
10011164:	d8c02017 	ldw	r3,128(sp)
10011168:	da000404 	addi	r8,sp,16
1001116c:	003d8406 	br	10010780 <__alt_data_end+0xf8010780>
10011170:	0023883a 	mov	r17,zero
10011174:	003d8306 	br	10010784 <__alt_data_end+0xf8010784>
10011178:	010400b4 	movhi	r4,4098
1001117c:	2132d004 	addi	r4,r4,-13504
10011180:	d9002c15 	stw	r4,176(sp)
10011184:	d9002c17 	ldw	r4,176(sp)
10011188:	1c47883a 	add	r3,r3,r17
1001118c:	10800044 	addi	r2,r2,1
10011190:	41000015 	stw	r4,0(r8)
10011194:	44400115 	stw	r17,4(r8)
10011198:	d8c02015 	stw	r3,128(sp)
1001119c:	d8801f15 	stw	r2,124(sp)
100111a0:	010001c4 	movi	r4,7
100111a4:	20bfcd16 	blt	r4,r2,100110dc <__alt_data_end+0xf80110dc>
100111a8:	42000204 	addi	r8,r8,8
100111ac:	003fd306 	br	100110fc <__alt_data_end+0xf80110fc>
100111b0:	d9402d17 	ldw	r5,180(sp)
100111b4:	d9801e04 	addi	r6,sp,120
100111b8:	9809883a 	mov	r4,r19
100111bc:	00145000 	call	10014500 <__ssprint_r>
100111c0:	1039b11e 	bne	r2,zero,1000f888 <__alt_data_end+0xf800f888>
100111c4:	d8802617 	ldw	r2,152(sp)
100111c8:	d8c02017 	ldw	r3,128(sp)
100111cc:	da000404 	addi	r8,sp,16
100111d0:	003e1c06 	br	10010a44 <__alt_data_end+0xf8010a44>
100111d4:	d8802a17 	ldw	r2,168(sp)
100111d8:	00c00184 	movi	r3,6
100111dc:	1880012e 	bgeu	r3,r2,100111e4 <___svfprintf_internal_r+0x1cf8>
100111e0:	1805883a 	mov	r2,r3
100111e4:	d8802b15 	stw	r2,172(sp)
100111e8:	1000f316 	blt	r2,zero,100115b8 <___svfprintf_internal_r+0x20cc>
100111ec:	040400b4 	movhi	r16,4098
100111f0:	d8802915 	stw	r2,164(sp)
100111f4:	dd002e15 	stw	r20,184(sp)
100111f8:	d8002a15 	stw	zero,168(sp)
100111fc:	d8003215 	stw	zero,200(sp)
10011200:	8431b104 	addi	r16,r16,-14652
10011204:	0039883a 	mov	fp,zero
10011208:	003a7d06 	br	1000fc00 <__alt_data_end+0xf800fc00>
1001120c:	010400b4 	movhi	r4,4098
10011210:	2132d404 	addi	r4,r4,-13488
10011214:	d9003515 	stw	r4,212(sp)
10011218:	003b3d06 	br	1000ff10 <__alt_data_end+0xf800ff10>
1001121c:	d9402d17 	ldw	r5,180(sp)
10011220:	d9801e04 	addi	r6,sp,120
10011224:	9809883a 	mov	r4,r19
10011228:	00145000 	call	10014500 <__ssprint_r>
1001122c:	1039961e 	bne	r2,zero,1000f888 <__alt_data_end+0xf800f888>
10011230:	d8802617 	ldw	r2,152(sp)
10011234:	d9403317 	ldw	r5,204(sp)
10011238:	d8c02017 	ldw	r3,128(sp)
1001123c:	da000404 	addi	r8,sp,16
10011240:	2885c83a 	sub	r2,r5,r2
10011244:	003e1006 	br	10010a88 <__alt_data_end+0xf8010a88>
10011248:	00800044 	movi	r2,1
1001124c:	10803fcc 	andi	r2,r2,255
10011250:	00c00044 	movi	r3,1
10011254:	10fa1026 	beq	r2,r3,1000fa98 <__alt_data_end+0xf800fa98>
10011258:	00c00084 	movi	r3,2
1001125c:	10fb8226 	beq	r2,r3,10010068 <__alt_data_end+0xf8010068>
10011260:	003a4206 	br	1000fb6c <__alt_data_end+0xf800fb6c>
10011264:	0021883a 	mov	r16,zero
10011268:	003e0806 	br	10010a8c <__alt_data_end+0xf8010a8c>
1001126c:	07000b44 	movi	fp,45
10011270:	df002785 	stb	fp,158(sp)
10011274:	0039e306 	br	1000fa04 <__alt_data_end+0xf800fa04>
10011278:	d9002e17 	ldw	r4,184(sp)
1001127c:	d9402f17 	ldw	r5,188(sp)
10011280:	20800017 	ldw	r2,0(r4)
10011284:	21000104 	addi	r4,r4,4
10011288:	d9002e15 	stw	r4,184(sp)
1001128c:	11400015 	stw	r5,0(r2)
10011290:	0038c106 	br	1000f598 <__alt_data_end+0xf800f598>
10011294:	00c00b44 	movi	r3,45
10011298:	d8c02785 	stb	r3,158(sp)
1001129c:	d8802915 	stw	r2,164(sp)
100112a0:	dc802c17 	ldw	r18,176(sp)
100112a4:	d8002a15 	stw	zero,168(sp)
100112a8:	07000b44 	movi	fp,45
100112ac:	003a5106 	br	1000fbf4 <__alt_data_end+0xf800fbf4>
100112b0:	9080004c 	andi	r2,r18,1
100112b4:	1000941e 	bne	r2,zero,10011508 <___svfprintf_internal_r+0x201c>
100112b8:	d8802117 	ldw	r2,132(sp)
100112bc:	1405c83a 	sub	r2,r2,r16
100112c0:	d8803315 	stw	r2,204(sp)
100112c4:	b441151e 	bne	r22,r17,1001171c <___svfprintf_internal_r+0x2230>
100112c8:	dd802617 	ldw	r22,152(sp)
100112cc:	00bfff44 	movi	r2,-3
100112d0:	b0801a16 	blt	r22,r2,1001133c <___svfprintf_internal_r+0x1e50>
100112d4:	d9402a17 	ldw	r5,168(sp)
100112d8:	2d801816 	blt	r5,r22,1001133c <___svfprintf_internal_r+0x1e50>
100112dc:	dd803215 	stw	r22,200(sp)
100112e0:	003f3a06 	br	10010fcc <__alt_data_end+0xf8010fcc>
100112e4:	1025883a 	mov	r18,r2
100112e8:	0039883a 	mov	fp,zero
100112ec:	00800084 	movi	r2,2
100112f0:	003fd606 	br	1001124c <__alt_data_end+0xf801124c>
100112f4:	9080004c 	andi	r2,r18,1
100112f8:	103f191e 	bne	r2,zero,10010f60 <__alt_data_end+0xf8010f60>
100112fc:	d8802117 	ldw	r2,132(sp)
10011300:	003f2806 	br	10010fa4 <__alt_data_end+0xf8010fa4>
10011304:	010400b4 	movhi	r4,4098
10011308:	2132d004 	addi	r4,r4,-13504
1001130c:	d9002c15 	stw	r4,176(sp)
10011310:	003c7c06 	br	10010504 <__alt_data_end+0xf8010504>
10011314:	e005883a 	mov	r2,fp
10011318:	003f2206 	br	10010fa4 <__alt_data_end+0xf8010fa4>
1001131c:	d9002a17 	ldw	r4,168(sp)
10011320:	df002783 	ldbu	fp,158(sp)
10011324:	dd002e15 	stw	r20,184(sp)
10011328:	d9002915 	stw	r4,164(sp)
1001132c:	d9002b15 	stw	r4,172(sp)
10011330:	d8002a15 	stw	zero,168(sp)
10011334:	d8003215 	stw	zero,200(sp)
10011338:	003a2a06 	br	1000fbe4 <__alt_data_end+0xf800fbe4>
1001133c:	8c7fff84 	addi	r17,r17,-2
10011340:	b5bfffc4 	addi	r22,r22,-1
10011344:	dd802615 	stw	r22,152(sp)
10011348:	dc4022c5 	stb	r17,139(sp)
1001134c:	b000c316 	blt	r22,zero,1001165c <___svfprintf_internal_r+0x2170>
10011350:	00800ac4 	movi	r2,43
10011354:	d8802305 	stb	r2,140(sp)
10011358:	00800244 	movi	r2,9
1001135c:	15806e16 	blt	r2,r22,10011518 <___svfprintf_internal_r+0x202c>
10011360:	00800c04 	movi	r2,48
10011364:	b5800c04 	addi	r22,r22,48
10011368:	d8802345 	stb	r2,141(sp)
1001136c:	dd802385 	stb	r22,142(sp)
10011370:	d88023c4 	addi	r2,sp,143
10011374:	df0022c4 	addi	fp,sp,139
10011378:	d8c03317 	ldw	r3,204(sp)
1001137c:	1739c83a 	sub	fp,r2,fp
10011380:	d9003317 	ldw	r4,204(sp)
10011384:	e0c7883a 	add	r3,fp,r3
10011388:	df003b15 	stw	fp,236(sp)
1001138c:	d8c02b15 	stw	r3,172(sp)
10011390:	00800044 	movi	r2,1
10011394:	1100b70e 	bge	r2,r4,10011674 <___svfprintf_internal_r+0x2188>
10011398:	d8c02b17 	ldw	r3,172(sp)
1001139c:	18c00044 	addi	r3,r3,1
100113a0:	d8c02b15 	stw	r3,172(sp)
100113a4:	1805883a 	mov	r2,r3
100113a8:	1800b016 	blt	r3,zero,1001166c <___svfprintf_internal_r+0x2180>
100113ac:	d8003215 	stw	zero,200(sp)
100113b0:	003f1006 	br	10010ff4 <__alt_data_end+0xf8010ff4>
100113b4:	d8802a17 	ldw	r2,168(sp)
100113b8:	103ec71e 	bne	r2,zero,10010ed8 <__alt_data_end+0xf8010ed8>
100113bc:	dc002a15 	stw	r16,168(sp)
100113c0:	003ec506 	br	10010ed8 <__alt_data_end+0xf8010ed8>
100113c4:	d9402d17 	ldw	r5,180(sp)
100113c8:	d9801e04 	addi	r6,sp,120
100113cc:	9809883a 	mov	r4,r19
100113d0:	00145000 	call	10014500 <__ssprint_r>
100113d4:	10392c1e 	bne	r2,zero,1000f888 <__alt_data_end+0xf800f888>
100113d8:	dc402617 	ldw	r17,152(sp)
100113dc:	d8c02017 	ldw	r3,128(sp)
100113e0:	d8801f17 	ldw	r2,124(sp)
100113e4:	da000404 	addi	r8,sp,16
100113e8:	003e7706 	br	10010dc8 <__alt_data_end+0xf8010dc8>
100113ec:	182f883a 	mov	r23,r3
100113f0:	d8002a15 	stw	zero,168(sp)
100113f4:	00389306 	br	1000f644 <__alt_data_end+0xf800f644>
100113f8:	d8c02a17 	ldw	r3,168(sp)
100113fc:	d8802104 	addi	r2,sp,132
10011400:	d8800315 	stw	r2,12(sp)
10011404:	d9403617 	ldw	r5,216(sp)
10011408:	d8802504 	addi	r2,sp,148
1001140c:	d8800215 	stw	r2,8(sp)
10011410:	d8802604 	addi	r2,sp,152
10011414:	d8c00015 	stw	r3,0(sp)
10011418:	9809883a 	mov	r4,r19
1001141c:	d8800115 	stw	r2,4(sp)
10011420:	01c000c4 	movi	r7,3
10011424:	a00d883a 	mov	r6,r20
10011428:	da003e15 	stw	r8,248(sp)
1001142c:	00081540 	call	10008154 <_dtoa_r>
10011430:	d9002a17 	ldw	r4,168(sp)
10011434:	da003e17 	ldw	r8,248(sp)
10011438:	1021883a 	mov	r16,r2
1001143c:	1139883a 	add	fp,r2,r4
10011440:	2007883a 	mov	r3,r4
10011444:	81000007 	ldb	r4,0(r16)
10011448:	00800c04 	movi	r2,48
1001144c:	20806f26 	beq	r4,r2,1001160c <___svfprintf_internal_r+0x2120>
10011450:	d8c02617 	ldw	r3,152(sp)
10011454:	e0f9883a 	add	fp,fp,r3
10011458:	003ec206 	br	10010f64 <__alt_data_end+0xf8010f64>
1001145c:	00c00b44 	movi	r3,45
10011460:	2520003c 	xorhi	r20,r4,32768
10011464:	d8c02905 	stb	r3,164(sp)
10011468:	003ea106 	br	10010ef0 <__alt_data_end+0xf8010ef0>
1001146c:	d8c03217 	ldw	r3,200(sp)
10011470:	00c0890e 	bge	zero,r3,10011698 <___svfprintf_internal_r+0x21ac>
10011474:	00800044 	movi	r2,1
10011478:	d9003317 	ldw	r4,204(sp)
1001147c:	1105883a 	add	r2,r2,r4
10011480:	d8802b15 	stw	r2,172(sp)
10011484:	10005f16 	blt	r2,zero,10011604 <___svfprintf_internal_r+0x2118>
10011488:	044019c4 	movi	r17,103
1001148c:	003ed906 	br	10010ff4 <__alt_data_end+0xf8010ff4>
10011490:	d9002a17 	ldw	r4,168(sp)
10011494:	20c00044 	addi	r3,r4,1
10011498:	003e9c06 	br	10010f0c <__alt_data_end+0xf8010f0c>
1001149c:	d9002a17 	ldw	r4,168(sp)
100114a0:	00c0680e 	bge	zero,r3,10011644 <___svfprintf_internal_r+0x2158>
100114a4:	2000461e 	bne	r4,zero,100115c0 <___svfprintf_internal_r+0x20d4>
100114a8:	9480004c 	andi	r18,r18,1
100114ac:	9000441e 	bne	r18,zero,100115c0 <___svfprintf_internal_r+0x20d4>
100114b0:	1805883a 	mov	r2,r3
100114b4:	1800a116 	blt	r3,zero,1001173c <___svfprintf_internal_r+0x2250>
100114b8:	d8c03217 	ldw	r3,200(sp)
100114bc:	d8c02b15 	stw	r3,172(sp)
100114c0:	003ecc06 	br	10010ff4 <__alt_data_end+0xf8010ff4>
100114c4:	d9402a17 	ldw	r5,168(sp)
100114c8:	d8802104 	addi	r2,sp,132
100114cc:	d8800315 	stw	r2,12(sp)
100114d0:	d9400015 	stw	r5,0(sp)
100114d4:	d8802504 	addi	r2,sp,148
100114d8:	d9403617 	ldw	r5,216(sp)
100114dc:	d8800215 	stw	r2,8(sp)
100114e0:	d8802604 	addi	r2,sp,152
100114e4:	d8800115 	stw	r2,4(sp)
100114e8:	01c000c4 	movi	r7,3
100114ec:	a00d883a 	mov	r6,r20
100114f0:	9809883a 	mov	r4,r19
100114f4:	da003e15 	stw	r8,248(sp)
100114f8:	00081540 	call	10008154 <_dtoa_r>
100114fc:	d8c02a17 	ldw	r3,168(sp)
10011500:	da003e17 	ldw	r8,248(sp)
10011504:	1021883a 	mov	r16,r2
10011508:	00801184 	movi	r2,70
1001150c:	80f9883a 	add	fp,r16,r3
10011510:	88bfcc26 	beq	r17,r2,10011444 <__alt_data_end+0xf8011444>
10011514:	003e9306 	br	10010f64 <__alt_data_end+0xf8010f64>
10011518:	df0022c4 	addi	fp,sp,139
1001151c:	dc002a15 	stw	r16,168(sp)
10011520:	9829883a 	mov	r20,r19
10011524:	e021883a 	mov	r16,fp
10011528:	4027883a 	mov	r19,r8
1001152c:	b009883a 	mov	r4,r22
10011530:	01400284 	movi	r5,10
10011534:	00033080 	call	10003308 <__modsi3>
10011538:	10800c04 	addi	r2,r2,48
1001153c:	843fffc4 	addi	r16,r16,-1
10011540:	b009883a 	mov	r4,r22
10011544:	01400284 	movi	r5,10
10011548:	80800005 	stb	r2,0(r16)
1001154c:	00032840 	call	10003284 <__divsi3>
10011550:	102d883a 	mov	r22,r2
10011554:	00800244 	movi	r2,9
10011558:	15bff416 	blt	r2,r22,1001152c <__alt_data_end+0xf801152c>
1001155c:	9811883a 	mov	r8,r19
10011560:	b0800c04 	addi	r2,r22,48
10011564:	a027883a 	mov	r19,r20
10011568:	8029883a 	mov	r20,r16
1001156c:	a17fffc4 	addi	r5,r20,-1
10011570:	a0bfffc5 	stb	r2,-1(r20)
10011574:	dc002a17 	ldw	r16,168(sp)
10011578:	2f00782e 	bgeu	r5,fp,1001175c <___svfprintf_internal_r+0x2270>
1001157c:	d9c02384 	addi	r7,sp,142
10011580:	3d0fc83a 	sub	r7,r7,r20
10011584:	d9002344 	addi	r4,sp,141
10011588:	e1cf883a 	add	r7,fp,r7
1001158c:	00000106 	br	10011594 <___svfprintf_internal_r+0x20a8>
10011590:	28800003 	ldbu	r2,0(r5)
10011594:	20800005 	stb	r2,0(r4)
10011598:	21000044 	addi	r4,r4,1
1001159c:	29400044 	addi	r5,r5,1
100115a0:	21fffb1e 	bne	r4,r7,10011590 <__alt_data_end+0xf8011590>
100115a4:	d8802304 	addi	r2,sp,140
100115a8:	1505c83a 	sub	r2,r2,r20
100115ac:	d8c02344 	addi	r3,sp,141
100115b0:	1885883a 	add	r2,r3,r2
100115b4:	003f7006 	br	10011378 <__alt_data_end+0xf8011378>
100115b8:	0005883a 	mov	r2,zero
100115bc:	003f0b06 	br	100111ec <__alt_data_end+0xf80111ec>
100115c0:	d9002a17 	ldw	r4,168(sp)
100115c4:	d8c03217 	ldw	r3,200(sp)
100115c8:	20800044 	addi	r2,r4,1
100115cc:	1885883a 	add	r2,r3,r2
100115d0:	d8802b15 	stw	r2,172(sp)
100115d4:	103e870e 	bge	r2,zero,10010ff4 <__alt_data_end+0xf8010ff4>
100115d8:	0005883a 	mov	r2,zero
100115dc:	003e8506 	br	10010ff4 <__alt_data_end+0xf8010ff4>
100115e0:	010400b4 	movhi	r4,4098
100115e4:	2132d004 	addi	r4,r4,-13504
100115e8:	d9002c15 	stw	r4,176(sp)
100115ec:	003cc506 	br	10010904 <__alt_data_end+0xf8010904>
100115f0:	d8c03217 	ldw	r3,200(sp)
100115f4:	18c00044 	addi	r3,r3,1
100115f8:	d8c02b15 	stw	r3,172(sp)
100115fc:	1805883a 	mov	r2,r3
10011600:	183fa10e 	bge	r3,zero,10011488 <__alt_data_end+0xf8011488>
10011604:	0005883a 	mov	r2,zero
10011608:	003f9f06 	br	10011488 <__alt_data_end+0xf8011488>
1001160c:	d9003617 	ldw	r4,216(sp)
10011610:	000d883a 	mov	r6,zero
10011614:	000f883a 	mov	r7,zero
10011618:	a00b883a 	mov	r5,r20
1001161c:	d8c03d15 	stw	r3,244(sp)
10011620:	da003e15 	stw	r8,248(sp)
10011624:	0017e100 	call	10017e10 <__eqdf2>
10011628:	d8c03d17 	ldw	r3,244(sp)
1001162c:	da003e17 	ldw	r8,248(sp)
10011630:	103f8726 	beq	r2,zero,10011450 <__alt_data_end+0xf8011450>
10011634:	00800044 	movi	r2,1
10011638:	10c7c83a 	sub	r3,r2,r3
1001163c:	d8c02615 	stw	r3,152(sp)
10011640:	003f8406 	br	10011454 <__alt_data_end+0xf8011454>
10011644:	20000e1e 	bne	r4,zero,10011680 <___svfprintf_internal_r+0x2194>
10011648:	9480004c 	andi	r18,r18,1
1001164c:	90000c1e 	bne	r18,zero,10011680 <___svfprintf_internal_r+0x2194>
10011650:	00800044 	movi	r2,1
10011654:	d8802b15 	stw	r2,172(sp)
10011658:	003e6606 	br	10010ff4 <__alt_data_end+0xf8010ff4>
1001165c:	00800b44 	movi	r2,45
10011660:	05adc83a 	sub	r22,zero,r22
10011664:	d8802305 	stb	r2,140(sp)
10011668:	003f3b06 	br	10011358 <__alt_data_end+0xf8011358>
1001166c:	0005883a 	mov	r2,zero
10011670:	003f4e06 	br	100113ac <__alt_data_end+0xf80113ac>
10011674:	90a4703a 	and	r18,r18,r2
10011678:	903f4a26 	beq	r18,zero,100113a4 <__alt_data_end+0xf80113a4>
1001167c:	003f4606 	br	10011398 <__alt_data_end+0xf8011398>
10011680:	d8c02a17 	ldw	r3,168(sp)
10011684:	18c00084 	addi	r3,r3,2
10011688:	d8c02b15 	stw	r3,172(sp)
1001168c:	1805883a 	mov	r2,r3
10011690:	183e580e 	bge	r3,zero,10010ff4 <__alt_data_end+0xf8010ff4>
10011694:	003fd006 	br	100115d8 <__alt_data_end+0xf80115d8>
10011698:	00800084 	movi	r2,2
1001169c:	10c5c83a 	sub	r2,r2,r3
100116a0:	003f7506 	br	10011478 <__alt_data_end+0xf8011478>
100116a4:	d9402e17 	ldw	r5,184(sp)
100116a8:	d9002e17 	ldw	r4,184(sp)
100116ac:	bc400043 	ldbu	r17,1(r23)
100116b0:	29400017 	ldw	r5,0(r5)
100116b4:	20800104 	addi	r2,r4,4
100116b8:	d8802e15 	stw	r2,184(sp)
100116bc:	d9402a15 	stw	r5,168(sp)
100116c0:	182f883a 	mov	r23,r3
100116c4:	283df10e 	bge	r5,zero,10010e8c <__alt_data_end+0xf8010e8c>
100116c8:	8c403fcc 	andi	r17,r17,255
100116cc:	017fffc4 	movi	r5,-1
100116d0:	8c40201c 	xori	r17,r17,128
100116d4:	d9402a15 	stw	r5,168(sp)
100116d8:	8c7fe004 	addi	r17,r17,-128
100116dc:	0037d806 	br	1000f640 <__alt_data_end+0xf800f640>
100116e0:	9080004c 	andi	r2,r18,1
100116e4:	0039883a 	mov	fp,zero
100116e8:	10000726 	beq	r2,zero,10011708 <___svfprintf_internal_r+0x221c>
100116ec:	d8c02817 	ldw	r3,160(sp)
100116f0:	dc001dc4 	addi	r16,sp,119
100116f4:	00800c04 	movi	r2,48
100116f8:	1c07c83a 	sub	r3,r3,r16
100116fc:	d8801dc5 	stb	r2,119(sp)
10011700:	d8c02b15 	stw	r3,172(sp)
10011704:	00393106 	br	1000fbcc <__alt_data_end+0xf800fbcc>
10011708:	d8002b15 	stw	zero,172(sp)
1001170c:	dc001e04 	addi	r16,sp,120
10011710:	00392e06 	br	1000fbcc <__alt_data_end+0xf800fbcc>
10011714:	0005883a 	mov	r2,zero
10011718:	003e3306 	br	10010fe8 <__alt_data_end+0xf8010fe8>
1001171c:	dd802617 	ldw	r22,152(sp)
10011720:	003f0706 	br	10011340 <__alt_data_end+0xf8011340>
10011724:	d8c02b03 	ldbu	r3,172(sp)
10011728:	d8c02785 	stb	r3,158(sp)
1001172c:	003a3506 	br	10010004 <__alt_data_end+0xf8010004>
10011730:	d8c02b03 	ldbu	r3,172(sp)
10011734:	d8c02785 	stb	r3,158(sp)
10011738:	003a1706 	br	1000ff98 <__alt_data_end+0xf800ff98>
1001173c:	0005883a 	mov	r2,zero
10011740:	003f5d06 	br	100114b8 <__alt_data_end+0xf80114b8>
10011744:	d8c02b03 	ldbu	r3,172(sp)
10011748:	d8c02785 	stb	r3,158(sp)
1001174c:	0038f306 	br	1000fb1c <__alt_data_end+0xf800fb1c>
10011750:	d8c02b03 	ldbu	r3,172(sp)
10011754:	d8c02785 	stb	r3,158(sp)
10011758:	0038be06 	br	1000fa54 <__alt_data_end+0xf800fa54>
1001175c:	d8802344 	addi	r2,sp,141
10011760:	003f0506 	br	10011378 <__alt_data_end+0xf8011378>
10011764:	d8c02b03 	ldbu	r3,172(sp)
10011768:	d8c02785 	stb	r3,158(sp)
1001176c:	00388b06 	br	1000f99c <__alt_data_end+0xf800f99c>
10011770:	d8c02b03 	ldbu	r3,172(sp)
10011774:	d8c02785 	stb	r3,158(sp)
10011778:	003ad706 	br	100102d8 <__alt_data_end+0xf80102d8>
1001177c:	d9403917 	ldw	r5,228(sp)
10011780:	00800304 	movi	r2,12
10011784:	28800015 	stw	r2,0(r5)
10011788:	00bfffc4 	movi	r2,-1
1001178c:	00384306 	br	1000f89c <__alt_data_end+0xf800f89c>
10011790:	d8c02b03 	ldbu	r3,172(sp)
10011794:	d8c02785 	stb	r3,158(sp)
10011798:	003ab606 	br	10010274 <__alt_data_end+0xf8010274>
1001179c:	d8c02b03 	ldbu	r3,172(sp)
100117a0:	d8c02785 	stb	r3,158(sp)
100117a4:	003a8906 	br	100101cc <__alt_data_end+0xf80101cc>

100117a8 <__submore>:
100117a8:	defffa04 	addi	sp,sp,-24
100117ac:	dc000015 	stw	r16,0(sp)
100117b0:	2821883a 	mov	r16,r5
100117b4:	29400c17 	ldw	r5,48(r5)
100117b8:	dfc00515 	stw	ra,20(sp)
100117bc:	dd000415 	stw	r20,16(sp)
100117c0:	dcc00315 	stw	r19,12(sp)
100117c4:	dc800215 	stw	r18,8(sp)
100117c8:	dc400115 	stw	r17,4(sp)
100117cc:	80801004 	addi	r2,r16,64
100117d0:	28801726 	beq	r5,r2,10011830 <__submore+0x88>
100117d4:	84400d17 	ldw	r17,52(r16)
100117d8:	8c67883a 	add	r19,r17,r17
100117dc:	980d883a 	mov	r6,r19
100117e0:	000c6e40 	call	1000c6e4 <_realloc_r>
100117e4:	1025883a 	mov	r18,r2
100117e8:	10002226 	beq	r2,zero,10011874 <__submore+0xcc>
100117ec:	1469883a 	add	r20,r2,r17
100117f0:	880d883a 	mov	r6,r17
100117f4:	100b883a 	mov	r5,r2
100117f8:	a009883a 	mov	r4,r20
100117fc:	000b0f80 	call	1000b0f8 <memcpy>
10011800:	0005883a 	mov	r2,zero
10011804:	85000015 	stw	r20,0(r16)
10011808:	84800c15 	stw	r18,48(r16)
1001180c:	84c00d15 	stw	r19,52(r16)
10011810:	dfc00517 	ldw	ra,20(sp)
10011814:	dd000417 	ldw	r20,16(sp)
10011818:	dcc00317 	ldw	r19,12(sp)
1001181c:	dc800217 	ldw	r18,8(sp)
10011820:	dc400117 	ldw	r17,4(sp)
10011824:	dc000017 	ldw	r16,0(sp)
10011828:	dec00604 	addi	sp,sp,24
1001182c:	f800283a 	ret
10011830:	04410004 	movi	r17,1024
10011834:	880b883a 	mov	r5,r17
10011838:	00034880 	call	10003488 <_malloc_r>
1001183c:	1007883a 	mov	r3,r2
10011840:	10000c26 	beq	r2,zero,10011874 <__submore+0xcc>
10011844:	80801083 	ldbu	r2,66(r16)
10011848:	80c00c15 	stw	r3,48(r16)
1001184c:	84400d15 	stw	r17,52(r16)
10011850:	1880ffc5 	stb	r2,1023(r3)
10011854:	81401043 	ldbu	r5,65(r16)
10011858:	1900ff44 	addi	r4,r3,1021
1001185c:	0005883a 	mov	r2,zero
10011860:	1940ff85 	stb	r5,1022(r3)
10011864:	81401003 	ldbu	r5,64(r16)
10011868:	1940ff45 	stb	r5,1021(r3)
1001186c:	81000015 	stw	r4,0(r16)
10011870:	003fe706 	br	10011810 <__alt_data_end+0xf8011810>
10011874:	00bfffc4 	movi	r2,-1
10011878:	003fe506 	br	10011810 <__alt_data_end+0xf8011810>

1001187c <_ungetc_r>:
1001187c:	00bfffc4 	movi	r2,-1
10011880:	28806126 	beq	r5,r2,10011a08 <_ungetc_r+0x18c>
10011884:	defffb04 	addi	sp,sp,-20
10011888:	dcc00315 	stw	r19,12(sp)
1001188c:	dc400115 	stw	r17,4(sp)
10011890:	dc000015 	stw	r16,0(sp)
10011894:	dfc00415 	stw	ra,16(sp)
10011898:	dc800215 	stw	r18,8(sp)
1001189c:	2023883a 	mov	r17,r4
100118a0:	3021883a 	mov	r16,r6
100118a4:	2827883a 	mov	r19,r5
100118a8:	20000226 	beq	r4,zero,100118b4 <_ungetc_r+0x38>
100118ac:	20800e17 	ldw	r2,56(r4)
100118b0:	10002e26 	beq	r2,zero,1001196c <_ungetc_r+0xf0>
100118b4:	80c0030b 	ldhu	r3,12(r16)
100118b8:	1888000c 	andi	r2,r3,8192
100118bc:	1000051e 	bne	r2,zero,100118d4 <_ungetc_r+0x58>
100118c0:	81001917 	ldw	r4,100(r16)
100118c4:	00b7ffc4 	movi	r2,-8193
100118c8:	18c80014 	ori	r3,r3,8192
100118cc:	2084703a 	and	r2,r4,r2
100118d0:	80801915 	stw	r2,100(r16)
100118d4:	00bff7c4 	movi	r2,-33
100118d8:	1884703a 	and	r2,r3,r2
100118dc:	8080030d 	sth	r2,12(r16)
100118e0:	1900010c 	andi	r4,r3,4
100118e4:	2000061e 	bne	r4,zero,10011900 <_ungetc_r+0x84>
100118e8:	1900040c 	andi	r4,r3,16
100118ec:	20001d26 	beq	r4,zero,10011964 <_ungetc_r+0xe8>
100118f0:	18c0020c 	andi	r3,r3,8
100118f4:	1800331e 	bne	r3,zero,100119c4 <_ungetc_r+0x148>
100118f8:	10800114 	ori	r2,r2,4
100118fc:	8080030d 	sth	r2,12(r16)
10011900:	80800c17 	ldw	r2,48(r16)
10011904:	9c803fcc 	andi	r18,r19,255
10011908:	10001a26 	beq	r2,zero,10011974 <_ungetc_r+0xf8>
1001190c:	80c00117 	ldw	r3,4(r16)
10011910:	80800d17 	ldw	r2,52(r16)
10011914:	18800f0e 	bge	r3,r2,10011954 <_ungetc_r+0xd8>
10011918:	80c00017 	ldw	r3,0(r16)
1001191c:	9005883a 	mov	r2,r18
10011920:	193fffc4 	addi	r4,r3,-1
10011924:	81000015 	stw	r4,0(r16)
10011928:	1cffffc5 	stb	r19,-1(r3)
1001192c:	80c00117 	ldw	r3,4(r16)
10011930:	18c00044 	addi	r3,r3,1
10011934:	80c00115 	stw	r3,4(r16)
10011938:	dfc00417 	ldw	ra,16(sp)
1001193c:	dcc00317 	ldw	r19,12(sp)
10011940:	dc800217 	ldw	r18,8(sp)
10011944:	dc400117 	ldw	r17,4(sp)
10011948:	dc000017 	ldw	r16,0(sp)
1001194c:	dec00504 	addi	sp,sp,20
10011950:	f800283a 	ret
10011954:	800b883a 	mov	r5,r16
10011958:	8809883a 	mov	r4,r17
1001195c:	00117a80 	call	100117a8 <__submore>
10011960:	103fed26 	beq	r2,zero,10011918 <__alt_data_end+0xf8011918>
10011964:	00bfffc4 	movi	r2,-1
10011968:	003ff306 	br	10011938 <__alt_data_end+0xf8011938>
1001196c:	0009de40 	call	10009de4 <__sinit>
10011970:	003fd006 	br	100118b4 <__alt_data_end+0xf80118b4>
10011974:	80c00417 	ldw	r3,16(r16)
10011978:	80800017 	ldw	r2,0(r16)
1001197c:	18000326 	beq	r3,zero,1001198c <_ungetc_r+0x110>
10011980:	1880022e 	bgeu	r3,r2,1001198c <_ungetc_r+0x110>
10011984:	10ffffc3 	ldbu	r3,-1(r2)
10011988:	90c01826 	beq	r18,r3,100119ec <_ungetc_r+0x170>
1001198c:	81400117 	ldw	r5,4(r16)
10011990:	80800e15 	stw	r2,56(r16)
10011994:	008000c4 	movi	r2,3
10011998:	81001004 	addi	r4,r16,64
1001199c:	80c01084 	addi	r3,r16,66
100119a0:	80800d15 	stw	r2,52(r16)
100119a4:	00800044 	movi	r2,1
100119a8:	80800115 	stw	r2,4(r16)
100119ac:	81400f15 	stw	r5,60(r16)
100119b0:	81000c15 	stw	r4,48(r16)
100119b4:	84c01085 	stb	r19,66(r16)
100119b8:	80c00015 	stw	r3,0(r16)
100119bc:	9005883a 	mov	r2,r18
100119c0:	003fdd06 	br	10011938 <__alt_data_end+0xf8011938>
100119c4:	800b883a 	mov	r5,r16
100119c8:	8809883a 	mov	r4,r17
100119cc:	00099f80 	call	100099f8 <_fflush_r>
100119d0:	103fe41e 	bne	r2,zero,10011964 <__alt_data_end+0xf8011964>
100119d4:	8080030b 	ldhu	r2,12(r16)
100119d8:	00fffdc4 	movi	r3,-9
100119dc:	80000215 	stw	zero,8(r16)
100119e0:	1884703a 	and	r2,r3,r2
100119e4:	80000615 	stw	zero,24(r16)
100119e8:	003fc306 	br	100118f8 <__alt_data_end+0xf80118f8>
100119ec:	80c00117 	ldw	r3,4(r16)
100119f0:	10bfffc4 	addi	r2,r2,-1
100119f4:	80800015 	stw	r2,0(r16)
100119f8:	18800044 	addi	r2,r3,1
100119fc:	80800115 	stw	r2,4(r16)
10011a00:	9005883a 	mov	r2,r18
10011a04:	003fcc06 	br	10011938 <__alt_data_end+0xf8011938>
10011a08:	00bfffc4 	movi	r2,-1
10011a0c:	f800283a 	ret

10011a10 <ungetc>:
10011a10:	008400b4 	movhi	r2,4098
10011a14:	10ba2504 	addi	r2,r2,-5996
10011a18:	280d883a 	mov	r6,r5
10011a1c:	200b883a 	mov	r5,r4
10011a20:	11000017 	ldw	r4,0(r2)
10011a24:	001187c1 	jmpi	1001187c <_ungetc_r>

10011a28 <__sprint_r.part.0>:
10011a28:	28801917 	ldw	r2,100(r5)
10011a2c:	defff604 	addi	sp,sp,-40
10011a30:	dd400515 	stw	r21,20(sp)
10011a34:	dfc00915 	stw	ra,36(sp)
10011a38:	df000815 	stw	fp,32(sp)
10011a3c:	ddc00715 	stw	r23,28(sp)
10011a40:	dd800615 	stw	r22,24(sp)
10011a44:	dd000415 	stw	r20,16(sp)
10011a48:	dcc00315 	stw	r19,12(sp)
10011a4c:	dc800215 	stw	r18,8(sp)
10011a50:	dc400115 	stw	r17,4(sp)
10011a54:	dc000015 	stw	r16,0(sp)
10011a58:	1088000c 	andi	r2,r2,8192
10011a5c:	302b883a 	mov	r21,r6
10011a60:	10002e26 	beq	r2,zero,10011b1c <__sprint_r.part.0+0xf4>
10011a64:	30800217 	ldw	r2,8(r6)
10011a68:	35800017 	ldw	r22,0(r6)
10011a6c:	10002926 	beq	r2,zero,10011b14 <__sprint_r.part.0+0xec>
10011a70:	2827883a 	mov	r19,r5
10011a74:	2029883a 	mov	r20,r4
10011a78:	b5c00104 	addi	r23,r22,4
10011a7c:	04bfffc4 	movi	r18,-1
10011a80:	bc400017 	ldw	r17,0(r23)
10011a84:	b4000017 	ldw	r16,0(r22)
10011a88:	0039883a 	mov	fp,zero
10011a8c:	8822d0ba 	srli	r17,r17,2
10011a90:	8800031e 	bne	r17,zero,10011aa0 <__sprint_r.part.0+0x78>
10011a94:	00001806 	br	10011af8 <__sprint_r.part.0+0xd0>
10011a98:	84000104 	addi	r16,r16,4
10011a9c:	8f001526 	beq	r17,fp,10011af4 <__sprint_r.part.0+0xcc>
10011aa0:	81400017 	ldw	r5,0(r16)
10011aa4:	980d883a 	mov	r6,r19
10011aa8:	a009883a 	mov	r4,r20
10011aac:	00136700 	call	10013670 <_fputwc_r>
10011ab0:	e7000044 	addi	fp,fp,1
10011ab4:	14bff81e 	bne	r2,r18,10011a98 <__alt_data_end+0xf8011a98>
10011ab8:	9005883a 	mov	r2,r18
10011abc:	a8000215 	stw	zero,8(r21)
10011ac0:	a8000115 	stw	zero,4(r21)
10011ac4:	dfc00917 	ldw	ra,36(sp)
10011ac8:	df000817 	ldw	fp,32(sp)
10011acc:	ddc00717 	ldw	r23,28(sp)
10011ad0:	dd800617 	ldw	r22,24(sp)
10011ad4:	dd400517 	ldw	r21,20(sp)
10011ad8:	dd000417 	ldw	r20,16(sp)
10011adc:	dcc00317 	ldw	r19,12(sp)
10011ae0:	dc800217 	ldw	r18,8(sp)
10011ae4:	dc400117 	ldw	r17,4(sp)
10011ae8:	dc000017 	ldw	r16,0(sp)
10011aec:	dec00a04 	addi	sp,sp,40
10011af0:	f800283a 	ret
10011af4:	a8800217 	ldw	r2,8(r21)
10011af8:	8c63883a 	add	r17,r17,r17
10011afc:	8c63883a 	add	r17,r17,r17
10011b00:	1445c83a 	sub	r2,r2,r17
10011b04:	a8800215 	stw	r2,8(r21)
10011b08:	b5800204 	addi	r22,r22,8
10011b0c:	bdc00204 	addi	r23,r23,8
10011b10:	103fdb1e 	bne	r2,zero,10011a80 <__alt_data_end+0xf8011a80>
10011b14:	0005883a 	mov	r2,zero
10011b18:	003fe806 	br	10011abc <__alt_data_end+0xf8011abc>
10011b1c:	000a4d80 	call	1000a4d8 <__sfvwrite_r>
10011b20:	003fe606 	br	10011abc <__alt_data_end+0xf8011abc>

10011b24 <__sprint_r>:
10011b24:	30c00217 	ldw	r3,8(r6)
10011b28:	18000126 	beq	r3,zero,10011b30 <__sprint_r+0xc>
10011b2c:	0011a281 	jmpi	10011a28 <__sprint_r.part.0>
10011b30:	30000115 	stw	zero,4(r6)
10011b34:	0005883a 	mov	r2,zero
10011b38:	f800283a 	ret

10011b3c <___vfiprintf_internal_r>:
10011b3c:	deffca04 	addi	sp,sp,-216
10011b40:	dd403115 	stw	r21,196(sp)
10011b44:	dfc03515 	stw	ra,212(sp)
10011b48:	df003415 	stw	fp,208(sp)
10011b4c:	ddc03315 	stw	r23,204(sp)
10011b50:	dd803215 	stw	r22,200(sp)
10011b54:	dd003015 	stw	r20,192(sp)
10011b58:	dcc02f15 	stw	r19,188(sp)
10011b5c:	dc802e15 	stw	r18,184(sp)
10011b60:	dc402d15 	stw	r17,180(sp)
10011b64:	dc002c15 	stw	r16,176(sp)
10011b68:	d9002115 	stw	r4,132(sp)
10011b6c:	d9402015 	stw	r5,128(sp)
10011b70:	d9c02215 	stw	r7,136(sp)
10011b74:	302b883a 	mov	r21,r6
10011b78:	20000226 	beq	r4,zero,10011b84 <___vfiprintf_internal_r+0x48>
10011b7c:	20800e17 	ldw	r2,56(r4)
10011b80:	1000cf26 	beq	r2,zero,10011ec0 <___vfiprintf_internal_r+0x384>
10011b84:	d8c02017 	ldw	r3,128(sp)
10011b88:	1880030b 	ldhu	r2,12(r3)
10011b8c:	10c8000c 	andi	r3,r2,8192
10011b90:	1800071e 	bne	r3,zero,10011bb0 <___vfiprintf_internal_r+0x74>
10011b94:	d9402017 	ldw	r5,128(sp)
10011b98:	00f7ffc4 	movi	r3,-8193
10011b9c:	10880014 	ori	r2,r2,8192
10011ba0:	29001917 	ldw	r4,100(r5)
10011ba4:	2880030d 	sth	r2,12(r5)
10011ba8:	20c6703a 	and	r3,r4,r3
10011bac:	28c01915 	stw	r3,100(r5)
10011bb0:	10c0020c 	andi	r3,r2,8
10011bb4:	1800a526 	beq	r3,zero,10011e4c <___vfiprintf_internal_r+0x310>
10011bb8:	d9002017 	ldw	r4,128(sp)
10011bbc:	20c00417 	ldw	r3,16(r4)
10011bc0:	1800a226 	beq	r3,zero,10011e4c <___vfiprintf_internal_r+0x310>
10011bc4:	1080068c 	andi	r2,r2,26
10011bc8:	00c00284 	movi	r3,10
10011bcc:	10c0a826 	beq	r2,r3,10011e70 <___vfiprintf_internal_r+0x334>
10011bd0:	d9001a04 	addi	r4,sp,104
10011bd4:	d94019c4 	addi	r5,sp,103
10011bd8:	048400b4 	movhi	r18,4098
10011bdc:	2145c83a 	sub	r2,r4,r5
10011be0:	94b2d804 	addi	r18,r18,-13472
10011be4:	d9001e15 	stw	r4,120(sp)
10011be8:	d9401f15 	stw	r5,124(sp)
10011bec:	dec01a15 	stw	sp,104(sp)
10011bf0:	d8001c15 	stw	zero,112(sp)
10011bf4:	d8001b15 	stw	zero,108(sp)
10011bf8:	d811883a 	mov	r8,sp
10011bfc:	d8002615 	stw	zero,152(sp)
10011c00:	d8002415 	stw	zero,144(sp)
10011c04:	d8802815 	stw	r2,160(sp)
10011c08:	a82d883a 	mov	r22,r21
10011c0c:	b0800007 	ldb	r2,0(r22)
10011c10:	10040d26 	beq	r2,zero,10012c48 <___vfiprintf_internal_r+0x110c>
10011c14:	00c00944 	movi	r3,37
10011c18:	b029883a 	mov	r20,r22
10011c1c:	10c0021e 	bne	r2,r3,10011c28 <___vfiprintf_internal_r+0xec>
10011c20:	00001606 	br	10011c7c <___vfiprintf_internal_r+0x140>
10011c24:	10c00326 	beq	r2,r3,10011c34 <___vfiprintf_internal_r+0xf8>
10011c28:	a5000044 	addi	r20,r20,1
10011c2c:	a0800007 	ldb	r2,0(r20)
10011c30:	103ffc1e 	bne	r2,zero,10011c24 <__alt_data_end+0xf8011c24>
10011c34:	a5a1c83a 	sub	r16,r20,r22
10011c38:	80001026 	beq	r16,zero,10011c7c <___vfiprintf_internal_r+0x140>
10011c3c:	d8c01c17 	ldw	r3,112(sp)
10011c40:	d8801b17 	ldw	r2,108(sp)
10011c44:	45800015 	stw	r22,0(r8)
10011c48:	80c7883a 	add	r3,r16,r3
10011c4c:	10800044 	addi	r2,r2,1
10011c50:	44000115 	stw	r16,4(r8)
10011c54:	d8c01c15 	stw	r3,112(sp)
10011c58:	d8801b15 	stw	r2,108(sp)
10011c5c:	010001c4 	movi	r4,7
10011c60:	2080750e 	bge	r4,r2,10011e38 <___vfiprintf_internal_r+0x2fc>
10011c64:	1803951e 	bne	r3,zero,10012abc <___vfiprintf_internal_r+0xf80>
10011c68:	d8c02417 	ldw	r3,144(sp)
10011c6c:	d8001b15 	stw	zero,108(sp)
10011c70:	d811883a 	mov	r8,sp
10011c74:	1c07883a 	add	r3,r3,r16
10011c78:	d8c02415 	stw	r3,144(sp)
10011c7c:	a0800007 	ldb	r2,0(r20)
10011c80:	1002e026 	beq	r2,zero,10012804 <___vfiprintf_internal_r+0xcc8>
10011c84:	a5800044 	addi	r22,r20,1
10011c88:	a0c00047 	ldb	r3,1(r20)
10011c8c:	d8001d85 	stb	zero,118(sp)
10011c90:	0027883a 	mov	r19,zero
10011c94:	d8002305 	stb	zero,140(sp)
10011c98:	043fffc4 	movi	r16,-1
10011c9c:	d8002515 	stw	zero,148(sp)
10011ca0:	0023883a 	mov	r17,zero
10011ca4:	05001604 	movi	r20,88
10011ca8:	05400244 	movi	r21,9
10011cac:	402f883a 	mov	r23,r8
10011cb0:	b5800044 	addi	r22,r22,1
10011cb4:	18bff804 	addi	r2,r3,-32
10011cb8:	a0827736 	bltu	r20,r2,10012698 <___vfiprintf_internal_r+0xb5c>
10011cbc:	100490ba 	slli	r2,r2,2
10011cc0:	01040074 	movhi	r4,4097
10011cc4:	21073504 	addi	r4,r4,7380
10011cc8:	1105883a 	add	r2,r2,r4
10011ccc:	10800017 	ldw	r2,0(r2)
10011cd0:	1000683a 	jmp	r2
10011cd4:	10012398 	cmpnei	zero,r2,1166
10011cd8:	10012698 	cmpnei	zero,r2,1178
10011cdc:	10012698 	cmpnei	zero,r2,1178
10011ce0:	100123b4 	orhi	zero,r2,1166
10011ce4:	10012698 	cmpnei	zero,r2,1178
10011ce8:	10012698 	cmpnei	zero,r2,1178
10011cec:	10012698 	cmpnei	zero,r2,1178
10011cf0:	10012698 	cmpnei	zero,r2,1178
10011cf4:	10012698 	cmpnei	zero,r2,1178
10011cf8:	10012698 	cmpnei	zero,r2,1178
10011cfc:	100125bc 	xorhi	zero,r2,1174
10011d00:	100125e0 	cmpeqi	zero,r2,1175
10011d04:	10012698 	cmpnei	zero,r2,1178
10011d08:	10011ed8 	cmpnei	zero,r2,1147
10011d0c:	100125f4 	orhi	zero,r2,1175
10011d10:	10012698 	cmpnei	zero,r2,1178
10011d14:	100123c0 	call	1100123c <_gp+0xfda9bc>
10011d18:	100123cc 	andi	zero,r2,1167
10011d1c:	100123cc 	andi	zero,r2,1167
10011d20:	100123cc 	andi	zero,r2,1167
10011d24:	100123cc 	andi	zero,r2,1167
10011d28:	100123cc 	andi	zero,r2,1167
10011d2c:	100123cc 	andi	zero,r2,1167
10011d30:	100123cc 	andi	zero,r2,1167
10011d34:	100123cc 	andi	zero,r2,1167
10011d38:	100123cc 	andi	zero,r2,1167
10011d3c:	10012698 	cmpnei	zero,r2,1178
10011d40:	10012698 	cmpnei	zero,r2,1178
10011d44:	10012698 	cmpnei	zero,r2,1178
10011d48:	10012698 	cmpnei	zero,r2,1178
10011d4c:	10012698 	cmpnei	zero,r2,1178
10011d50:	10012698 	cmpnei	zero,r2,1178
10011d54:	10012698 	cmpnei	zero,r2,1178
10011d58:	10012698 	cmpnei	zero,r2,1178
10011d5c:	10012698 	cmpnei	zero,r2,1178
10011d60:	10012698 	cmpnei	zero,r2,1178
10011d64:	1001240c 	andi	zero,r2,1168
10011d68:	10012698 	cmpnei	zero,r2,1178
10011d6c:	10012698 	cmpnei	zero,r2,1178
10011d70:	10012698 	cmpnei	zero,r2,1178
10011d74:	10012698 	cmpnei	zero,r2,1178
10011d78:	10012698 	cmpnei	zero,r2,1178
10011d7c:	10012698 	cmpnei	zero,r2,1178
10011d80:	10012698 	cmpnei	zero,r2,1178
10011d84:	10012698 	cmpnei	zero,r2,1178
10011d88:	10012698 	cmpnei	zero,r2,1178
10011d8c:	10012698 	cmpnei	zero,r2,1178
10011d90:	10012448 	cmpgei	zero,r2,1169
10011d94:	10012698 	cmpnei	zero,r2,1178
10011d98:	10012698 	cmpnei	zero,r2,1178
10011d9c:	10012698 	cmpnei	zero,r2,1178
10011da0:	10012698 	cmpnei	zero,r2,1178
10011da4:	10012698 	cmpnei	zero,r2,1178
10011da8:	100124a4 	muli	zero,r2,1170
10011dac:	10012698 	cmpnei	zero,r2,1178
10011db0:	10012698 	cmpnei	zero,r2,1178
10011db4:	10012518 	cmpnei	zero,r2,1172
10011db8:	10012698 	cmpnei	zero,r2,1178
10011dbc:	10012698 	cmpnei	zero,r2,1178
10011dc0:	10012698 	cmpnei	zero,r2,1178
10011dc4:	10012698 	cmpnei	zero,r2,1178
10011dc8:	10012698 	cmpnei	zero,r2,1178
10011dcc:	10012698 	cmpnei	zero,r2,1178
10011dd0:	10012698 	cmpnei	zero,r2,1178
10011dd4:	10012698 	cmpnei	zero,r2,1178
10011dd8:	10012698 	cmpnei	zero,r2,1178
10011ddc:	10012698 	cmpnei	zero,r2,1178
10011de0:	100122c0 	call	1100122c <_gp+0xfda9ac>
10011de4:	100122f0 	cmpltui	zero,r2,1163
10011de8:	10012698 	cmpnei	zero,r2,1178
10011dec:	10012698 	cmpnei	zero,r2,1178
10011df0:	10012698 	cmpnei	zero,r2,1178
10011df4:	10012640 	call	11001264 <_gp+0xfda9e4>
10011df8:	100122f0 	cmpltui	zero,r2,1163
10011dfc:	10012698 	cmpnei	zero,r2,1178
10011e00:	10012698 	cmpnei	zero,r2,1178
10011e04:	10012198 	cmpnei	zero,r2,1158
10011e08:	10012698 	cmpnei	zero,r2,1178
10011e0c:	100121ac 	andhi	zero,r2,1158
10011e10:	100121e4 	muli	zero,r2,1159
10011e14:	10011ee4 	muli	zero,r2,1147
10011e18:	1001218c 	andi	zero,r2,1158
10011e1c:	10012698 	cmpnei	zero,r2,1178
10011e20:	10012558 	cmpnei	zero,r2,1173
10011e24:	10012698 	cmpnei	zero,r2,1178
10011e28:	100125a4 	muli	zero,r2,1174
10011e2c:	10012698 	cmpnei	zero,r2,1178
10011e30:	10012698 	cmpnei	zero,r2,1178
10011e34:	10012268 	cmpgeui	zero,r2,1161
10011e38:	42000204 	addi	r8,r8,8
10011e3c:	d8c02417 	ldw	r3,144(sp)
10011e40:	1c07883a 	add	r3,r3,r16
10011e44:	d8c02415 	stw	r3,144(sp)
10011e48:	003f8c06 	br	10011c7c <__alt_data_end+0xf8011c7c>
10011e4c:	d9402017 	ldw	r5,128(sp)
10011e50:	d9002117 	ldw	r4,132(sp)
10011e54:	0007dd80 	call	10007dd8 <__swsetup_r>
10011e58:	1003c11e 	bne	r2,zero,10012d60 <___vfiprintf_internal_r+0x1224>
10011e5c:	d9402017 	ldw	r5,128(sp)
10011e60:	00c00284 	movi	r3,10
10011e64:	2880030b 	ldhu	r2,12(r5)
10011e68:	1080068c 	andi	r2,r2,26
10011e6c:	10ff581e 	bne	r2,r3,10011bd0 <__alt_data_end+0xf8011bd0>
10011e70:	d8c02017 	ldw	r3,128(sp)
10011e74:	1880038f 	ldh	r2,14(r3)
10011e78:	103f5516 	blt	r2,zero,10011bd0 <__alt_data_end+0xf8011bd0>
10011e7c:	d9c02217 	ldw	r7,136(sp)
10011e80:	d9002117 	ldw	r4,132(sp)
10011e84:	a80d883a 	mov	r6,r21
10011e88:	180b883a 	mov	r5,r3
10011e8c:	00130640 	call	10013064 <__sbprintf>
10011e90:	dfc03517 	ldw	ra,212(sp)
10011e94:	df003417 	ldw	fp,208(sp)
10011e98:	ddc03317 	ldw	r23,204(sp)
10011e9c:	dd803217 	ldw	r22,200(sp)
10011ea0:	dd403117 	ldw	r21,196(sp)
10011ea4:	dd003017 	ldw	r20,192(sp)
10011ea8:	dcc02f17 	ldw	r19,188(sp)
10011eac:	dc802e17 	ldw	r18,184(sp)
10011eb0:	dc402d17 	ldw	r17,180(sp)
10011eb4:	dc002c17 	ldw	r16,176(sp)
10011eb8:	dec03604 	addi	sp,sp,216
10011ebc:	f800283a 	ret
10011ec0:	0009de40 	call	10009de4 <__sinit>
10011ec4:	003f2f06 	br	10011b84 <__alt_data_end+0xf8011b84>
10011ec8:	d8c02517 	ldw	r3,148(sp)
10011ecc:	d8802215 	stw	r2,136(sp)
10011ed0:	00c7c83a 	sub	r3,zero,r3
10011ed4:	d8c02515 	stw	r3,148(sp)
10011ed8:	8c400114 	ori	r17,r17,4
10011edc:	b0c00007 	ldb	r3,0(r22)
10011ee0:	003f7306 	br	10011cb0 <__alt_data_end+0xf8011cb0>
10011ee4:	00800c04 	movi	r2,48
10011ee8:	d9402217 	ldw	r5,136(sp)
10011eec:	d8801d05 	stb	r2,116(sp)
10011ef0:	00801e04 	movi	r2,120
10011ef4:	d8801d45 	stb	r2,117(sp)
10011ef8:	d8001d85 	stb	zero,118(sp)
10011efc:	b811883a 	mov	r8,r23
10011f00:	28c00104 	addi	r3,r5,4
10011f04:	2cc00017 	ldw	r19,0(r5)
10011f08:	0029883a 	mov	r20,zero
10011f0c:	88800094 	ori	r2,r17,2
10011f10:	80032516 	blt	r16,zero,10012ba8 <___vfiprintf_internal_r+0x106c>
10011f14:	00bfdfc4 	movi	r2,-129
10011f18:	88a2703a 	and	r17,r17,r2
10011f1c:	d8c02215 	stw	r3,136(sp)
10011f20:	8c400094 	ori	r17,r17,2
10011f24:	98032a1e 	bne	r19,zero,10012bd0 <___vfiprintf_internal_r+0x1094>
10011f28:	008400b4 	movhi	r2,4098
10011f2c:	10b1ac04 	addi	r2,r2,-14672
10011f30:	d8802615 	stw	r2,152(sp)
10011f34:	002b883a 	mov	r21,zero
10011f38:	8001741e 	bne	r16,zero,1001250c <___vfiprintf_internal_r+0x9d0>
10011f3c:	0021883a 	mov	r16,zero
10011f40:	0029883a 	mov	r20,zero
10011f44:	ddc01a04 	addi	r23,sp,104
10011f48:	8027883a 	mov	r19,r16
10011f4c:	8500010e 	bge	r16,r20,10011f54 <___vfiprintf_internal_r+0x418>
10011f50:	a027883a 	mov	r19,r20
10011f54:	ad403fcc 	andi	r21,r21,255
10011f58:	ad40201c 	xori	r21,r21,128
10011f5c:	ad7fe004 	addi	r21,r21,-128
10011f60:	a8000126 	beq	r21,zero,10011f68 <___vfiprintf_internal_r+0x42c>
10011f64:	9cc00044 	addi	r19,r19,1
10011f68:	89c0008c 	andi	r7,r17,2
10011f6c:	38000126 	beq	r7,zero,10011f74 <___vfiprintf_internal_r+0x438>
10011f70:	9cc00084 	addi	r19,r19,2
10011f74:	88c0210c 	andi	r3,r17,132
10011f78:	1801dd1e 	bne	r3,zero,100126f0 <___vfiprintf_internal_r+0xbb4>
10011f7c:	d9402517 	ldw	r5,148(sp)
10011f80:	2cebc83a 	sub	r21,r5,r19
10011f84:	0541da0e 	bge	zero,r21,100126f0 <___vfiprintf_internal_r+0xbb4>
10011f88:	07000404 	movi	fp,16
10011f8c:	d8801c17 	ldw	r2,112(sp)
10011f90:	e543be0e 	bge	fp,r21,10012e8c <___vfiprintf_internal_r+0x1350>
10011f94:	014400b4 	movhi	r5,4098
10011f98:	2972dc04 	addi	r5,r5,-13456
10011f9c:	dc002715 	stw	r16,156(sp)
10011fa0:	d9801b17 	ldw	r6,108(sp)
10011fa4:	a821883a 	mov	r16,r21
10011fa8:	d9402315 	stw	r5,140(sp)
10011fac:	028001c4 	movi	r10,7
10011fb0:	d9c02915 	stw	r7,164(sp)
10011fb4:	182b883a 	mov	r21,r3
10011fb8:	00000506 	br	10011fd0 <___vfiprintf_internal_r+0x494>
10011fbc:	31000084 	addi	r4,r6,2
10011fc0:	42000204 	addi	r8,r8,8
10011fc4:	180d883a 	mov	r6,r3
10011fc8:	843ffc04 	addi	r16,r16,-16
10011fcc:	e4000f0e 	bge	fp,r16,1001200c <___vfiprintf_internal_r+0x4d0>
10011fd0:	010400b4 	movhi	r4,4098
10011fd4:	10800404 	addi	r2,r2,16
10011fd8:	30c00044 	addi	r3,r6,1
10011fdc:	2132dc04 	addi	r4,r4,-13456
10011fe0:	41000015 	stw	r4,0(r8)
10011fe4:	47000115 	stw	fp,4(r8)
10011fe8:	d8801c15 	stw	r2,112(sp)
10011fec:	d8c01b15 	stw	r3,108(sp)
10011ff0:	50fff20e 	bge	r10,r3,10011fbc <__alt_data_end+0xf8011fbc>
10011ff4:	1001b21e 	bne	r2,zero,100126c0 <___vfiprintf_internal_r+0xb84>
10011ff8:	843ffc04 	addi	r16,r16,-16
10011ffc:	000d883a 	mov	r6,zero
10012000:	01000044 	movi	r4,1
10012004:	d811883a 	mov	r8,sp
10012008:	e43ff116 	blt	fp,r16,10011fd0 <__alt_data_end+0xf8011fd0>
1001200c:	a807883a 	mov	r3,r21
10012010:	d9c02917 	ldw	r7,164(sp)
10012014:	802b883a 	mov	r21,r16
10012018:	dc002717 	ldw	r16,156(sp)
1001201c:	d9402317 	ldw	r5,140(sp)
10012020:	a885883a 	add	r2,r21,r2
10012024:	45400115 	stw	r21,4(r8)
10012028:	41400015 	stw	r5,0(r8)
1001202c:	d8801c15 	stw	r2,112(sp)
10012030:	d9001b15 	stw	r4,108(sp)
10012034:	014001c4 	movi	r5,7
10012038:	29026216 	blt	r5,r4,100129c4 <___vfiprintf_internal_r+0xe88>
1001203c:	d9801d87 	ldb	r6,118(sp)
10012040:	42000204 	addi	r8,r8,8
10012044:	21400044 	addi	r5,r4,1
10012048:	3001ae1e 	bne	r6,zero,10012704 <___vfiprintf_internal_r+0xbc8>
1001204c:	3801bb26 	beq	r7,zero,1001273c <___vfiprintf_internal_r+0xc00>
10012050:	d9001d04 	addi	r4,sp,116
10012054:	10800084 	addi	r2,r2,2
10012058:	41000015 	stw	r4,0(r8)
1001205c:	01000084 	movi	r4,2
10012060:	41000115 	stw	r4,4(r8)
10012064:	d8801c15 	stw	r2,112(sp)
10012068:	d9401b15 	stw	r5,108(sp)
1001206c:	010001c4 	movi	r4,7
10012070:	2142680e 	bge	r4,r5,10012a14 <___vfiprintf_internal_r+0xed8>
10012074:	1002b11e 	bne	r2,zero,10012b3c <___vfiprintf_internal_r+0x1000>
10012078:	01802004 	movi	r6,128
1001207c:	01400044 	movi	r5,1
10012080:	0009883a 	mov	r4,zero
10012084:	d811883a 	mov	r8,sp
10012088:	1981ae1e 	bne	r3,r6,10012744 <___vfiprintf_internal_r+0xc08>
1001208c:	d8c02517 	ldw	r3,148(sp)
10012090:	1cf9c83a 	sub	fp,r3,r19
10012094:	0701ab0e 	bge	zero,fp,10012744 <___vfiprintf_internal_r+0xc08>
10012098:	05400404 	movi	r21,16
1001209c:	af03a90e 	bge	r21,fp,10012f44 <___vfiprintf_internal_r+0x1408>
100120a0:	014400b4 	movhi	r5,4098
100120a4:	2972d804 	addi	r5,r5,-13472
100120a8:	d9402315 	stw	r5,140(sp)
100120ac:	01c001c4 	movi	r7,7
100120b0:	00000506 	br	100120c8 <___vfiprintf_internal_r+0x58c>
100120b4:	21800084 	addi	r6,r4,2
100120b8:	42000204 	addi	r8,r8,8
100120bc:	1809883a 	mov	r4,r3
100120c0:	e73ffc04 	addi	fp,fp,-16
100120c4:	af000d0e 	bge	r21,fp,100120fc <___vfiprintf_internal_r+0x5c0>
100120c8:	10800404 	addi	r2,r2,16
100120cc:	20c00044 	addi	r3,r4,1
100120d0:	44800015 	stw	r18,0(r8)
100120d4:	45400115 	stw	r21,4(r8)
100120d8:	d8801c15 	stw	r2,112(sp)
100120dc:	d8c01b15 	stw	r3,108(sp)
100120e0:	38fff40e 	bge	r7,r3,100120b4 <__alt_data_end+0xf80120b4>
100120e4:	10022b1e 	bne	r2,zero,10012994 <___vfiprintf_internal_r+0xe58>
100120e8:	e73ffc04 	addi	fp,fp,-16
100120ec:	01800044 	movi	r6,1
100120f0:	0009883a 	mov	r4,zero
100120f4:	d811883a 	mov	r8,sp
100120f8:	af3ff316 	blt	r21,fp,100120c8 <__alt_data_end+0xf80120c8>
100120fc:	d8c02317 	ldw	r3,140(sp)
10012100:	1705883a 	add	r2,r2,fp
10012104:	47000115 	stw	fp,4(r8)
10012108:	40c00015 	stw	r3,0(r8)
1001210c:	d8801c15 	stw	r2,112(sp)
10012110:	d9801b15 	stw	r6,108(sp)
10012114:	00c001c4 	movi	r3,7
10012118:	19829416 	blt	r3,r6,10012b6c <___vfiprintf_internal_r+0x1030>
1001211c:	8521c83a 	sub	r16,r16,r20
10012120:	42000204 	addi	r8,r8,8
10012124:	31400044 	addi	r5,r6,1
10012128:	3009883a 	mov	r4,r6
1001212c:	04018716 	blt	zero,r16,1001274c <___vfiprintf_internal_r+0xc10>
10012130:	a085883a 	add	r2,r20,r2
10012134:	45c00015 	stw	r23,0(r8)
10012138:	45000115 	stw	r20,4(r8)
1001213c:	d8801c15 	stw	r2,112(sp)
10012140:	d9401b15 	stw	r5,108(sp)
10012144:	00c001c4 	movi	r3,7
10012148:	1941c20e 	bge	r3,r5,10012854 <___vfiprintf_internal_r+0xd18>
1001214c:	1002531e 	bne	r2,zero,10012a9c <___vfiprintf_internal_r+0xf60>
10012150:	d8001b15 	stw	zero,108(sp)
10012154:	8c40010c 	andi	r17,r17,4
10012158:	88023226 	beq	r17,zero,10012a24 <___vfiprintf_internal_r+0xee8>
1001215c:	d9002517 	ldw	r4,148(sp)
10012160:	24e3c83a 	sub	r17,r4,r19
10012164:	04432916 	blt	zero,r17,10012e0c <___vfiprintf_internal_r+0x12d0>
10012168:	d8802517 	ldw	r2,148(sp)
1001216c:	14c0010e 	bge	r2,r19,10012174 <___vfiprintf_internal_r+0x638>
10012170:	9805883a 	mov	r2,r19
10012174:	d8c02417 	ldw	r3,144(sp)
10012178:	1887883a 	add	r3,r3,r2
1001217c:	d8c02415 	stw	r3,144(sp)
10012180:	d8001b15 	stw	zero,108(sp)
10012184:	d811883a 	mov	r8,sp
10012188:	003ea006 	br	10011c0c <__alt_data_end+0xf8011c0c>
1001218c:	8c400814 	ori	r17,r17,32
10012190:	b0c00007 	ldb	r3,0(r22)
10012194:	003ec606 	br	10011cb0 <__alt_data_end+0xf8011cb0>
10012198:	b0c00007 	ldb	r3,0(r22)
1001219c:	00801b04 	movi	r2,108
100121a0:	18832026 	beq	r3,r2,10012e24 <___vfiprintf_internal_r+0x12e8>
100121a4:	8c400414 	ori	r17,r17,16
100121a8:	003ec106 	br	10011cb0 <__alt_data_end+0xf8011cb0>
100121ac:	9cc03fcc 	andi	r19,r19,255
100121b0:	b811883a 	mov	r8,r23
100121b4:	9803981e 	bne	r19,zero,10013018 <___vfiprintf_internal_r+0x14dc>
100121b8:	8880080c 	andi	r2,r17,32
100121bc:	1002be26 	beq	r2,zero,10012cb8 <___vfiprintf_internal_r+0x117c>
100121c0:	d9002217 	ldw	r4,136(sp)
100121c4:	d9402417 	ldw	r5,144(sp)
100121c8:	20800017 	ldw	r2,0(r4)
100121cc:	2807d7fa 	srai	r3,r5,31
100121d0:	21000104 	addi	r4,r4,4
100121d4:	d9002215 	stw	r4,136(sp)
100121d8:	11400015 	stw	r5,0(r2)
100121dc:	10c00115 	stw	r3,4(r2)
100121e0:	003e8a06 	br	10011c0c <__alt_data_end+0xf8011c0c>
100121e4:	9cc03fcc 	andi	r19,r19,255
100121e8:	b811883a 	mov	r8,r23
100121ec:	9803871e 	bne	r19,zero,1001300c <___vfiprintf_internal_r+0x14d0>
100121f0:	8880080c 	andi	r2,r17,32
100121f4:	10009a26 	beq	r2,zero,10012460 <___vfiprintf_internal_r+0x924>
100121f8:	d9002217 	ldw	r4,136(sp)
100121fc:	d8001d85 	stb	zero,118(sp)
10012200:	20800204 	addi	r2,r4,8
10012204:	24c00017 	ldw	r19,0(r4)
10012208:	25000117 	ldw	r20,4(r4)
1001220c:	8002a416 	blt	r16,zero,10012ca0 <___vfiprintf_internal_r+0x1164>
10012210:	013fdfc4 	movi	r4,-129
10012214:	9d06b03a 	or	r3,r19,r20
10012218:	d8802215 	stw	r2,136(sp)
1001221c:	8922703a 	and	r17,r17,r4
10012220:	18009b26 	beq	r3,zero,10012490 <___vfiprintf_internal_r+0x954>
10012224:	002b883a 	mov	r21,zero
10012228:	ddc01a04 	addi	r23,sp,104
1001222c:	9806d0fa 	srli	r3,r19,3
10012230:	a008977a 	slli	r4,r20,29
10012234:	a028d0fa 	srli	r20,r20,3
10012238:	9cc001cc 	andi	r19,r19,7
1001223c:	98800c04 	addi	r2,r19,48
10012240:	bdffffc4 	addi	r23,r23,-1
10012244:	20e6b03a 	or	r19,r4,r3
10012248:	b8800005 	stb	r2,0(r23)
1001224c:	9d06b03a 	or	r3,r19,r20
10012250:	183ff61e 	bne	r3,zero,1001222c <__alt_data_end+0xf801222c>
10012254:	88c0004c 	andi	r3,r17,1
10012258:	18021f1e 	bne	r3,zero,10012ad8 <___vfiprintf_internal_r+0xf9c>
1001225c:	d9401e17 	ldw	r5,120(sp)
10012260:	2de9c83a 	sub	r20,r5,r23
10012264:	003f3806 	br	10011f48 <__alt_data_end+0xf8011f48>
10012268:	9cc03fcc 	andi	r19,r19,255
1001226c:	b811883a 	mov	r8,r23
10012270:	98034f1e 	bne	r19,zero,10012fb0 <___vfiprintf_internal_r+0x1474>
10012274:	008400b4 	movhi	r2,4098
10012278:	10b1ac04 	addi	r2,r2,-14672
1001227c:	d8802615 	stw	r2,152(sp)
10012280:	8880080c 	andi	r2,r17,32
10012284:	1000ac26 	beq	r2,zero,10012538 <___vfiprintf_internal_r+0x9fc>
10012288:	d9002217 	ldw	r4,136(sp)
1001228c:	24c00017 	ldw	r19,0(r4)
10012290:	25000117 	ldw	r20,4(r4)
10012294:	21000204 	addi	r4,r4,8
10012298:	d9002215 	stw	r4,136(sp)
1001229c:	8880004c 	andi	r2,r17,1
100122a0:	1001e726 	beq	r2,zero,10012a40 <___vfiprintf_internal_r+0xf04>
100122a4:	9d04b03a 	or	r2,r19,r20
100122a8:	10025c1e 	bne	r2,zero,10012c1c <___vfiprintf_internal_r+0x10e0>
100122ac:	d8001d85 	stb	zero,118(sp)
100122b0:	80024416 	blt	r16,zero,10012bc4 <___vfiprintf_internal_r+0x1088>
100122b4:	00bfdfc4 	movi	r2,-129
100122b8:	88a2703a 	and	r17,r17,r2
100122bc:	003f1d06 	br	10011f34 <__alt_data_end+0xf8011f34>
100122c0:	d8c02217 	ldw	r3,136(sp)
100122c4:	04c00044 	movi	r19,1
100122c8:	b811883a 	mov	r8,r23
100122cc:	18800017 	ldw	r2,0(r3)
100122d0:	18c00104 	addi	r3,r3,4
100122d4:	d8001d85 	stb	zero,118(sp)
100122d8:	d8801005 	stb	r2,64(sp)
100122dc:	d8c02215 	stw	r3,136(sp)
100122e0:	9829883a 	mov	r20,r19
100122e4:	ddc01004 	addi	r23,sp,64
100122e8:	0021883a 	mov	r16,zero
100122ec:	003f1e06 	br	10011f68 <__alt_data_end+0xf8011f68>
100122f0:	9cc03fcc 	andi	r19,r19,255
100122f4:	b811883a 	mov	r8,r23
100122f8:	9803331e 	bne	r19,zero,10012fc8 <___vfiprintf_internal_r+0x148c>
100122fc:	8880080c 	andi	r2,r17,32
10012300:	10004826 	beq	r2,zero,10012424 <___vfiprintf_internal_r+0x8e8>
10012304:	d9002217 	ldw	r4,136(sp)
10012308:	20800117 	ldw	r2,4(r4)
1001230c:	24c00017 	ldw	r19,0(r4)
10012310:	21000204 	addi	r4,r4,8
10012314:	d9002215 	stw	r4,136(sp)
10012318:	1029883a 	mov	r20,r2
1001231c:	10024c16 	blt	r2,zero,10012c50 <___vfiprintf_internal_r+0x1114>
10012320:	dd401d83 	ldbu	r21,118(sp)
10012324:	80007116 	blt	r16,zero,100124ec <___vfiprintf_internal_r+0x9b0>
10012328:	00ffdfc4 	movi	r3,-129
1001232c:	9d04b03a 	or	r2,r19,r20
10012330:	88e2703a 	and	r17,r17,r3
10012334:	1000d126 	beq	r2,zero,1001267c <___vfiprintf_internal_r+0xb40>
10012338:	a0023526 	beq	r20,zero,10012c10 <___vfiprintf_internal_r+0x10d4>
1001233c:	ddc01a04 	addi	r23,sp,104
10012340:	4039883a 	mov	fp,r8
10012344:	9809883a 	mov	r4,r19
10012348:	a00b883a 	mov	r5,r20
1001234c:	01800284 	movi	r6,10
10012350:	000f883a 	mov	r7,zero
10012354:	00163d40 	call	100163d4 <__umoddi3>
10012358:	10800c04 	addi	r2,r2,48
1001235c:	bdffffc4 	addi	r23,r23,-1
10012360:	9809883a 	mov	r4,r19
10012364:	a00b883a 	mov	r5,r20
10012368:	b8800005 	stb	r2,0(r23)
1001236c:	01800284 	movi	r6,10
10012370:	000f883a 	mov	r7,zero
10012374:	0015dd80 	call	10015dd8 <__udivdi3>
10012378:	1027883a 	mov	r19,r2
1001237c:	10c4b03a 	or	r2,r2,r3
10012380:	1829883a 	mov	r20,r3
10012384:	103fef1e 	bne	r2,zero,10012344 <__alt_data_end+0xf8012344>
10012388:	d9001e17 	ldw	r4,120(sp)
1001238c:	e011883a 	mov	r8,fp
10012390:	25e9c83a 	sub	r20,r4,r23
10012394:	003eec06 	br	10011f48 <__alt_data_end+0xf8011f48>
10012398:	d8802307 	ldb	r2,140(sp)
1001239c:	1002361e 	bne	r2,zero,10012c78 <___vfiprintf_internal_r+0x113c>
100123a0:	00c00804 	movi	r3,32
100123a4:	d8c02305 	stb	r3,140(sp)
100123a8:	04c00044 	movi	r19,1
100123ac:	b0c00007 	ldb	r3,0(r22)
100123b0:	003e3f06 	br	10011cb0 <__alt_data_end+0xf8011cb0>
100123b4:	8c400054 	ori	r17,r17,1
100123b8:	b0c00007 	ldb	r3,0(r22)
100123bc:	003e3c06 	br	10011cb0 <__alt_data_end+0xf8011cb0>
100123c0:	8c402014 	ori	r17,r17,128
100123c4:	b0c00007 	ldb	r3,0(r22)
100123c8:	003e3906 	br	10011cb0 <__alt_data_end+0xf8011cb0>
100123cc:	dc002715 	stw	r16,156(sp)
100123d0:	d8002515 	stw	zero,148(sp)
100123d4:	1f3ff404 	addi	fp,r3,-48
100123d8:	0009883a 	mov	r4,zero
100123dc:	b021883a 	mov	r16,r22
100123e0:	01400284 	movi	r5,10
100123e4:	00034380 	call	10003438 <__mulsi3>
100123e8:	80c00007 	ldb	r3,0(r16)
100123ec:	e089883a 	add	r4,fp,r2
100123f0:	b5800044 	addi	r22,r22,1
100123f4:	1f3ff404 	addi	fp,r3,-48
100123f8:	b021883a 	mov	r16,r22
100123fc:	af3ff82e 	bgeu	r21,fp,100123e0 <__alt_data_end+0xf80123e0>
10012400:	d9002515 	stw	r4,148(sp)
10012404:	dc002717 	ldw	r16,156(sp)
10012408:	003e2a06 	br	10011cb4 <__alt_data_end+0xf8011cb4>
1001240c:	9cc03fcc 	andi	r19,r19,255
10012410:	b811883a 	mov	r8,r23
10012414:	9802e91e 	bne	r19,zero,10012fbc <___vfiprintf_internal_r+0x1480>
10012418:	8c400414 	ori	r17,r17,16
1001241c:	8880080c 	andi	r2,r17,32
10012420:	103fb81e 	bne	r2,zero,10012304 <__alt_data_end+0xf8012304>
10012424:	8880040c 	andi	r2,r17,16
10012428:	10022e26 	beq	r2,zero,10012ce4 <___vfiprintf_internal_r+0x11a8>
1001242c:	d9402217 	ldw	r5,136(sp)
10012430:	2cc00017 	ldw	r19,0(r5)
10012434:	29400104 	addi	r5,r5,4
10012438:	d9402215 	stw	r5,136(sp)
1001243c:	9829d7fa 	srai	r20,r19,31
10012440:	a005883a 	mov	r2,r20
10012444:	003fb506 	br	1001231c <__alt_data_end+0xf801231c>
10012448:	9cc03fcc 	andi	r19,r19,255
1001244c:	b811883a 	mov	r8,r23
10012450:	9802fa1e 	bne	r19,zero,1001303c <___vfiprintf_internal_r+0x1500>
10012454:	8c400414 	ori	r17,r17,16
10012458:	8880080c 	andi	r2,r17,32
1001245c:	103f661e 	bne	r2,zero,100121f8 <__alt_data_end+0xf80121f8>
10012460:	8880040c 	andi	r2,r17,16
10012464:	10020626 	beq	r2,zero,10012c80 <___vfiprintf_internal_r+0x1144>
10012468:	d9402217 	ldw	r5,136(sp)
1001246c:	d8001d85 	stb	zero,118(sp)
10012470:	0029883a 	mov	r20,zero
10012474:	28800104 	addi	r2,r5,4
10012478:	2cc00017 	ldw	r19,0(r5)
1001247c:	80020816 	blt	r16,zero,10012ca0 <___vfiprintf_internal_r+0x1164>
10012480:	00ffdfc4 	movi	r3,-129
10012484:	d8802215 	stw	r2,136(sp)
10012488:	88e2703a 	and	r17,r17,r3
1001248c:	983f651e 	bne	r19,zero,10012224 <__alt_data_end+0xf8012224>
10012490:	002b883a 	mov	r21,zero
10012494:	8002cf26 	beq	r16,zero,10012fd4 <___vfiprintf_internal_r+0x1498>
10012498:	0027883a 	mov	r19,zero
1001249c:	0029883a 	mov	r20,zero
100124a0:	003f6106 	br	10012228 <__alt_data_end+0xf8012228>
100124a4:	9cc03fcc 	andi	r19,r19,255
100124a8:	b811883a 	mov	r8,r23
100124ac:	9802e01e 	bne	r19,zero,10013030 <___vfiprintf_internal_r+0x14f4>
100124b0:	8c400414 	ori	r17,r17,16
100124b4:	8880080c 	andi	r2,r17,32
100124b8:	1000641e 	bne	r2,zero,1001264c <___vfiprintf_internal_r+0xb10>
100124bc:	8880040c 	andi	r2,r17,16
100124c0:	1001c81e 	bne	r2,zero,10012be4 <___vfiprintf_internal_r+0x10a8>
100124c4:	8880100c 	andi	r2,r17,64
100124c8:	d8001d85 	stb	zero,118(sp)
100124cc:	1002281e 	bne	r2,zero,10012d70 <___vfiprintf_internal_r+0x1234>
100124d0:	d9002217 	ldw	r4,136(sp)
100124d4:	0029883a 	mov	r20,zero
100124d8:	20800104 	addi	r2,r4,4
100124dc:	24c00017 	ldw	r19,0(r4)
100124e0:	8001c60e 	bge	r16,zero,10012bfc <___vfiprintf_internal_r+0x10c0>
100124e4:	d8802215 	stw	r2,136(sp)
100124e8:	002b883a 	mov	r21,zero
100124ec:	9d04b03a 	or	r2,r19,r20
100124f0:	103f911e 	bne	r2,zero,10012338 <__alt_data_end+0xf8012338>
100124f4:	00800044 	movi	r2,1
100124f8:	10803fcc 	andi	r2,r2,255
100124fc:	00c00044 	movi	r3,1
10012500:	10c05f26 	beq	r2,r3,10012680 <___vfiprintf_internal_r+0xb44>
10012504:	00c00084 	movi	r3,2
10012508:	10ffe31e 	bne	r2,r3,10012498 <__alt_data_end+0xf8012498>
1001250c:	0027883a 	mov	r19,zero
10012510:	0029883a 	mov	r20,zero
10012514:	00015106 	br	10012a5c <___vfiprintf_internal_r+0xf20>
10012518:	9cc03fcc 	andi	r19,r19,255
1001251c:	b811883a 	mov	r8,r23
10012520:	9802c01e 	bne	r19,zero,10013024 <___vfiprintf_internal_r+0x14e8>
10012524:	014400b4 	movhi	r5,4098
10012528:	2971a704 	addi	r5,r5,-14692
1001252c:	d9402615 	stw	r5,152(sp)
10012530:	8880080c 	andi	r2,r17,32
10012534:	103f541e 	bne	r2,zero,10012288 <__alt_data_end+0xf8012288>
10012538:	8880040c 	andi	r2,r17,16
1001253c:	1001f226 	beq	r2,zero,10012d08 <___vfiprintf_internal_r+0x11cc>
10012540:	d9402217 	ldw	r5,136(sp)
10012544:	0029883a 	mov	r20,zero
10012548:	2cc00017 	ldw	r19,0(r5)
1001254c:	29400104 	addi	r5,r5,4
10012550:	d9402215 	stw	r5,136(sp)
10012554:	003f5106 	br	1001229c <__alt_data_end+0xf801229c>
10012558:	d8c02217 	ldw	r3,136(sp)
1001255c:	b811883a 	mov	r8,r23
10012560:	d8001d85 	stb	zero,118(sp)
10012564:	1dc00017 	ldw	r23,0(r3)
10012568:	1f000104 	addi	fp,r3,4
1001256c:	b8025926 	beq	r23,zero,10012ed4 <___vfiprintf_internal_r+0x1398>
10012570:	80023316 	blt	r16,zero,10012e40 <___vfiprintf_internal_r+0x1304>
10012574:	800d883a 	mov	r6,r16
10012578:	000b883a 	mov	r5,zero
1001257c:	b809883a 	mov	r4,r23
10012580:	da002a15 	stw	r8,168(sp)
10012584:	000b0140 	call	1000b014 <memchr>
10012588:	da002a17 	ldw	r8,168(sp)
1001258c:	10026826 	beq	r2,zero,10012f30 <___vfiprintf_internal_r+0x13f4>
10012590:	15e9c83a 	sub	r20,r2,r23
10012594:	dd401d83 	ldbu	r21,118(sp)
10012598:	df002215 	stw	fp,136(sp)
1001259c:	0021883a 	mov	r16,zero
100125a0:	003e6906 	br	10011f48 <__alt_data_end+0xf8011f48>
100125a4:	9cc03fcc 	andi	r19,r19,255
100125a8:	b811883a 	mov	r8,r23
100125ac:	983fc126 	beq	r19,zero,100124b4 <__alt_data_end+0xf80124b4>
100125b0:	d8c02303 	ldbu	r3,140(sp)
100125b4:	d8c01d85 	stb	r3,118(sp)
100125b8:	003fbe06 	br	100124b4 <__alt_data_end+0xf80124b4>
100125bc:	d9002217 	ldw	r4,136(sp)
100125c0:	d9402217 	ldw	r5,136(sp)
100125c4:	21000017 	ldw	r4,0(r4)
100125c8:	28800104 	addi	r2,r5,4
100125cc:	d9002515 	stw	r4,148(sp)
100125d0:	203e3d16 	blt	r4,zero,10011ec8 <__alt_data_end+0xf8011ec8>
100125d4:	d8802215 	stw	r2,136(sp)
100125d8:	b0c00007 	ldb	r3,0(r22)
100125dc:	003db406 	br	10011cb0 <__alt_data_end+0xf8011cb0>
100125e0:	00c00ac4 	movi	r3,43
100125e4:	d8c02305 	stb	r3,140(sp)
100125e8:	04c00044 	movi	r19,1
100125ec:	b0c00007 	ldb	r3,0(r22)
100125f0:	003daf06 	br	10011cb0 <__alt_data_end+0xf8011cb0>
100125f4:	b0c00007 	ldb	r3,0(r22)
100125f8:	01000a84 	movi	r4,42
100125fc:	b4000044 	addi	r16,r22,1
10012600:	19025e26 	beq	r3,r4,10012f7c <___vfiprintf_internal_r+0x1440>
10012604:	1f3ff404 	addi	fp,r3,-48
10012608:	0009883a 	mov	r4,zero
1001260c:	af025236 	bltu	r21,fp,10012f58 <___vfiprintf_internal_r+0x141c>
10012610:	01400284 	movi	r5,10
10012614:	00034380 	call	10003438 <__mulsi3>
10012618:	80c00007 	ldb	r3,0(r16)
1001261c:	1709883a 	add	r4,r2,fp
10012620:	85800044 	addi	r22,r16,1
10012624:	1f3ff404 	addi	fp,r3,-48
10012628:	b021883a 	mov	r16,r22
1001262c:	af3ff82e 	bgeu	r21,fp,10012610 <__alt_data_end+0xf8012610>
10012630:	2021883a 	mov	r16,r4
10012634:	203d9f0e 	bge	r4,zero,10011cb4 <__alt_data_end+0xf8011cb4>
10012638:	043fffc4 	movi	r16,-1
1001263c:	003d9d06 	br	10011cb4 <__alt_data_end+0xf8011cb4>
10012640:	8c401014 	ori	r17,r17,64
10012644:	b0c00007 	ldb	r3,0(r22)
10012648:	003d9906 	br	10011cb0 <__alt_data_end+0xf8011cb0>
1001264c:	d9002217 	ldw	r4,136(sp)
10012650:	d8001d85 	stb	zero,118(sp)
10012654:	20c00204 	addi	r3,r4,8
10012658:	24c00017 	ldw	r19,0(r4)
1001265c:	25000117 	ldw	r20,4(r4)
10012660:	8001e716 	blt	r16,zero,10012e00 <___vfiprintf_internal_r+0x12c4>
10012664:	013fdfc4 	movi	r4,-129
10012668:	9d04b03a 	or	r2,r19,r20
1001266c:	d8c02215 	stw	r3,136(sp)
10012670:	8922703a 	and	r17,r17,r4
10012674:	002b883a 	mov	r21,zero
10012678:	103f2f1e 	bne	r2,zero,10012338 <__alt_data_end+0xf8012338>
1001267c:	803e2f26 	beq	r16,zero,10011f3c <__alt_data_end+0xf8011f3c>
10012680:	0027883a 	mov	r19,zero
10012684:	9cc00c04 	addi	r19,r19,48
10012688:	dcc019c5 	stb	r19,103(sp)
1001268c:	dd002817 	ldw	r20,160(sp)
10012690:	ddc019c4 	addi	r23,sp,103
10012694:	003e2c06 	br	10011f48 <__alt_data_end+0xf8011f48>
10012698:	9cc03fcc 	andi	r19,r19,255
1001269c:	b811883a 	mov	r8,r23
100126a0:	9802571e 	bne	r19,zero,10013000 <___vfiprintf_internal_r+0x14c4>
100126a4:	18005726 	beq	r3,zero,10012804 <___vfiprintf_internal_r+0xcc8>
100126a8:	04c00044 	movi	r19,1
100126ac:	d8c01005 	stb	r3,64(sp)
100126b0:	d8001d85 	stb	zero,118(sp)
100126b4:	9829883a 	mov	r20,r19
100126b8:	ddc01004 	addi	r23,sp,64
100126bc:	003f0a06 	br	100122e8 <__alt_data_end+0xf80122e8>
100126c0:	d9402017 	ldw	r5,128(sp)
100126c4:	d9002117 	ldw	r4,132(sp)
100126c8:	d9801a04 	addi	r6,sp,104
100126cc:	da802a15 	stw	r10,168(sp)
100126d0:	0011a280 	call	10011a28 <__sprint_r.part.0>
100126d4:	da802a17 	ldw	r10,168(sp)
100126d8:	1000501e 	bne	r2,zero,1001281c <___vfiprintf_internal_r+0xce0>
100126dc:	d9801b17 	ldw	r6,108(sp)
100126e0:	d8801c17 	ldw	r2,112(sp)
100126e4:	d811883a 	mov	r8,sp
100126e8:	31000044 	addi	r4,r6,1
100126ec:	003e3606 	br	10011fc8 <__alt_data_end+0xf8011fc8>
100126f0:	d9001b17 	ldw	r4,108(sp)
100126f4:	d8801c17 	ldw	r2,112(sp)
100126f8:	21400044 	addi	r5,r4,1
100126fc:	d9801d87 	ldb	r6,118(sp)
10012700:	303e5226 	beq	r6,zero,1001204c <__alt_data_end+0xf801204c>
10012704:	01800044 	movi	r6,1
10012708:	d9001d84 	addi	r4,sp,118
1001270c:	1185883a 	add	r2,r2,r6
10012710:	41000015 	stw	r4,0(r8)
10012714:	41800115 	stw	r6,4(r8)
10012718:	d8801c15 	stw	r2,112(sp)
1001271c:	d9401b15 	stw	r5,108(sp)
10012720:	010001c4 	movi	r4,7
10012724:	2140b00e 	bge	r4,r5,100129e8 <___vfiprintf_internal_r+0xeac>
10012728:	1000f61e 	bne	r2,zero,10012b04 <___vfiprintf_internal_r+0xfc8>
1001272c:	3800b31e 	bne	r7,zero,100129fc <___vfiprintf_internal_r+0xec0>
10012730:	0009883a 	mov	r4,zero
10012734:	300b883a 	mov	r5,r6
10012738:	d811883a 	mov	r8,sp
1001273c:	01802004 	movi	r6,128
10012740:	19be5226 	beq	r3,r6,1001208c <__alt_data_end+0xf801208c>
10012744:	8521c83a 	sub	r16,r16,r20
10012748:	043e790e 	bge	zero,r16,10012130 <__alt_data_end+0xf8012130>
1001274c:	05400404 	movi	r21,16
10012750:	ac01b00e 	bge	r21,r16,10012e14 <___vfiprintf_internal_r+0x12d8>
10012754:	014400b4 	movhi	r5,4098
10012758:	2972d804 	addi	r5,r5,-13472
1001275c:	d9402315 	stw	r5,140(sp)
10012760:	070001c4 	movi	fp,7
10012764:	00000506 	br	1001277c <___vfiprintf_internal_r+0xc40>
10012768:	21400084 	addi	r5,r4,2
1001276c:	42000204 	addi	r8,r8,8
10012770:	1809883a 	mov	r4,r3
10012774:	843ffc04 	addi	r16,r16,-16
10012778:	ac000d0e 	bge	r21,r16,100127b0 <___vfiprintf_internal_r+0xc74>
1001277c:	10800404 	addi	r2,r2,16
10012780:	20c00044 	addi	r3,r4,1
10012784:	44800015 	stw	r18,0(r8)
10012788:	45400115 	stw	r21,4(r8)
1001278c:	d8801c15 	stw	r2,112(sp)
10012790:	d8c01b15 	stw	r3,108(sp)
10012794:	e0fff40e 	bge	fp,r3,10012768 <__alt_data_end+0xf8012768>
10012798:	1000101e 	bne	r2,zero,100127dc <___vfiprintf_internal_r+0xca0>
1001279c:	843ffc04 	addi	r16,r16,-16
100127a0:	01400044 	movi	r5,1
100127a4:	0009883a 	mov	r4,zero
100127a8:	d811883a 	mov	r8,sp
100127ac:	ac3ff316 	blt	r21,r16,1001277c <__alt_data_end+0xf801277c>
100127b0:	d8c02317 	ldw	r3,140(sp)
100127b4:	1405883a 	add	r2,r2,r16
100127b8:	44000115 	stw	r16,4(r8)
100127bc:	40c00015 	stw	r3,0(r8)
100127c0:	d8801c15 	stw	r2,112(sp)
100127c4:	d9401b15 	stw	r5,108(sp)
100127c8:	00c001c4 	movi	r3,7
100127cc:	19401916 	blt	r3,r5,10012834 <___vfiprintf_internal_r+0xcf8>
100127d0:	42000204 	addi	r8,r8,8
100127d4:	29400044 	addi	r5,r5,1
100127d8:	003e5506 	br	10012130 <__alt_data_end+0xf8012130>
100127dc:	d9402017 	ldw	r5,128(sp)
100127e0:	d9002117 	ldw	r4,132(sp)
100127e4:	d9801a04 	addi	r6,sp,104
100127e8:	0011a280 	call	10011a28 <__sprint_r.part.0>
100127ec:	10000b1e 	bne	r2,zero,1001281c <___vfiprintf_internal_r+0xce0>
100127f0:	d9001b17 	ldw	r4,108(sp)
100127f4:	d8801c17 	ldw	r2,112(sp)
100127f8:	d811883a 	mov	r8,sp
100127fc:	21400044 	addi	r5,r4,1
10012800:	003fdc06 	br	10012774 <__alt_data_end+0xf8012774>
10012804:	d8801c17 	ldw	r2,112(sp)
10012808:	10000426 	beq	r2,zero,1001281c <___vfiprintf_internal_r+0xce0>
1001280c:	d9402017 	ldw	r5,128(sp)
10012810:	d9002117 	ldw	r4,132(sp)
10012814:	d9801a04 	addi	r6,sp,104
10012818:	0011a280 	call	10011a28 <__sprint_r.part.0>
1001281c:	d9402017 	ldw	r5,128(sp)
10012820:	2880030b 	ldhu	r2,12(r5)
10012824:	1080100c 	andi	r2,r2,64
10012828:	10014d1e 	bne	r2,zero,10012d60 <___vfiprintf_internal_r+0x1224>
1001282c:	d8802417 	ldw	r2,144(sp)
10012830:	003d9706 	br	10011e90 <__alt_data_end+0xf8011e90>
10012834:	1000d21e 	bne	r2,zero,10012b80 <___vfiprintf_internal_r+0x1044>
10012838:	00c00044 	movi	r3,1
1001283c:	a005883a 	mov	r2,r20
10012840:	ddc00015 	stw	r23,0(sp)
10012844:	dd000115 	stw	r20,4(sp)
10012848:	dd001c15 	stw	r20,112(sp)
1001284c:	d8c01b15 	stw	r3,108(sp)
10012850:	d811883a 	mov	r8,sp
10012854:	42000204 	addi	r8,r8,8
10012858:	8c40010c 	andi	r17,r17,4
1001285c:	88004026 	beq	r17,zero,10012960 <___vfiprintf_internal_r+0xe24>
10012860:	d9002517 	ldw	r4,148(sp)
10012864:	24e3c83a 	sub	r17,r4,r19
10012868:	04403d0e 	bge	zero,r17,10012960 <___vfiprintf_internal_r+0xe24>
1001286c:	04000404 	movi	r16,16
10012870:	8441a90e 	bge	r16,r17,10012f18 <___vfiprintf_internal_r+0x13dc>
10012874:	00c400b4 	movhi	r3,4098
10012878:	18f2dc04 	addi	r3,r3,-13456
1001287c:	d9001b17 	ldw	r4,108(sp)
10012880:	d8c02315 	stw	r3,140(sp)
10012884:	050001c4 	movi	r20,7
10012888:	dd402117 	ldw	r21,132(sp)
1001288c:	ddc02017 	ldw	r23,128(sp)
10012890:	00000506 	br	100128a8 <___vfiprintf_internal_r+0xd6c>
10012894:	21400084 	addi	r5,r4,2
10012898:	42000204 	addi	r8,r8,8
1001289c:	1809883a 	mov	r4,r3
100128a0:	8c7ffc04 	addi	r17,r17,-16
100128a4:	84400f0e 	bge	r16,r17,100128e4 <___vfiprintf_internal_r+0xda8>
100128a8:	014400b4 	movhi	r5,4098
100128ac:	10800404 	addi	r2,r2,16
100128b0:	20c00044 	addi	r3,r4,1
100128b4:	2972dc04 	addi	r5,r5,-13456
100128b8:	41400015 	stw	r5,0(r8)
100128bc:	44000115 	stw	r16,4(r8)
100128c0:	d8801c15 	stw	r2,112(sp)
100128c4:	d8c01b15 	stw	r3,108(sp)
100128c8:	a0fff20e 	bge	r20,r3,10012894 <__alt_data_end+0xf8012894>
100128cc:	1000141e 	bne	r2,zero,10012920 <___vfiprintf_internal_r+0xde4>
100128d0:	8c7ffc04 	addi	r17,r17,-16
100128d4:	01400044 	movi	r5,1
100128d8:	0009883a 	mov	r4,zero
100128dc:	d811883a 	mov	r8,sp
100128e0:	847ff116 	blt	r16,r17,100128a8 <__alt_data_end+0xf80128a8>
100128e4:	d8c02317 	ldw	r3,140(sp)
100128e8:	1445883a 	add	r2,r2,r17
100128ec:	44400115 	stw	r17,4(r8)
100128f0:	40c00015 	stw	r3,0(r8)
100128f4:	d8801c15 	stw	r2,112(sp)
100128f8:	d9401b15 	stw	r5,108(sp)
100128fc:	00c001c4 	movi	r3,7
10012900:	1940170e 	bge	r3,r5,10012960 <___vfiprintf_internal_r+0xe24>
10012904:	1000101e 	bne	r2,zero,10012948 <___vfiprintf_internal_r+0xe0c>
10012908:	d8802517 	ldw	r2,148(sp)
1001290c:	14c11616 	blt	r2,r19,10012d68 <___vfiprintf_internal_r+0x122c>
10012910:	d9002417 	ldw	r4,144(sp)
10012914:	2089883a 	add	r4,r4,r2
10012918:	d9002415 	stw	r4,144(sp)
1001291c:	003e1806 	br	10012180 <__alt_data_end+0xf8012180>
10012920:	d9801a04 	addi	r6,sp,104
10012924:	b80b883a 	mov	r5,r23
10012928:	a809883a 	mov	r4,r21
1001292c:	0011a280 	call	10011a28 <__sprint_r.part.0>
10012930:	103fba1e 	bne	r2,zero,1001281c <__alt_data_end+0xf801281c>
10012934:	d9001b17 	ldw	r4,108(sp)
10012938:	d8801c17 	ldw	r2,112(sp)
1001293c:	d811883a 	mov	r8,sp
10012940:	21400044 	addi	r5,r4,1
10012944:	003fd606 	br	100128a0 <__alt_data_end+0xf80128a0>
10012948:	d9402017 	ldw	r5,128(sp)
1001294c:	d9002117 	ldw	r4,132(sp)
10012950:	d9801a04 	addi	r6,sp,104
10012954:	0011a280 	call	10011a28 <__sprint_r.part.0>
10012958:	103fb01e 	bne	r2,zero,1001281c <__alt_data_end+0xf801281c>
1001295c:	d8801c17 	ldw	r2,112(sp)
10012960:	d8c02517 	ldw	r3,148(sp)
10012964:	1cc0010e 	bge	r3,r19,1001296c <___vfiprintf_internal_r+0xe30>
10012968:	9807883a 	mov	r3,r19
1001296c:	d9002417 	ldw	r4,144(sp)
10012970:	20c9883a 	add	r4,r4,r3
10012974:	d9002415 	stw	r4,144(sp)
10012978:	103e0126 	beq	r2,zero,10012180 <__alt_data_end+0xf8012180>
1001297c:	d9402017 	ldw	r5,128(sp)
10012980:	d9002117 	ldw	r4,132(sp)
10012984:	d9801a04 	addi	r6,sp,104
10012988:	0011a280 	call	10011a28 <__sprint_r.part.0>
1001298c:	103dfc26 	beq	r2,zero,10012180 <__alt_data_end+0xf8012180>
10012990:	003fa206 	br	1001281c <__alt_data_end+0xf801281c>
10012994:	d9402017 	ldw	r5,128(sp)
10012998:	d9002117 	ldw	r4,132(sp)
1001299c:	d9801a04 	addi	r6,sp,104
100129a0:	d9c02b15 	stw	r7,172(sp)
100129a4:	0011a280 	call	10011a28 <__sprint_r.part.0>
100129a8:	d9c02b17 	ldw	r7,172(sp)
100129ac:	103f9b1e 	bne	r2,zero,1001281c <__alt_data_end+0xf801281c>
100129b0:	d9001b17 	ldw	r4,108(sp)
100129b4:	d8801c17 	ldw	r2,112(sp)
100129b8:	d811883a 	mov	r8,sp
100129bc:	21800044 	addi	r6,r4,1
100129c0:	003dbf06 	br	100120c0 <__alt_data_end+0xf80120c0>
100129c4:	1000d81e 	bne	r2,zero,10012d28 <___vfiprintf_internal_r+0x11ec>
100129c8:	d9001d87 	ldb	r4,118(sp)
100129cc:	20000a26 	beq	r4,zero,100129f8 <___vfiprintf_internal_r+0xebc>
100129d0:	00800044 	movi	r2,1
100129d4:	d9001d84 	addi	r4,sp,118
100129d8:	100b883a 	mov	r5,r2
100129dc:	d9000015 	stw	r4,0(sp)
100129e0:	d8800115 	stw	r2,4(sp)
100129e4:	d811883a 	mov	r8,sp
100129e8:	2809883a 	mov	r4,r5
100129ec:	42000204 	addi	r8,r8,8
100129f0:	29400044 	addi	r5,r5,1
100129f4:	003d9506 	br	1001204c <__alt_data_end+0xf801204c>
100129f8:	3800fd26 	beq	r7,zero,10012df0 <___vfiprintf_internal_r+0x12b4>
100129fc:	00800084 	movi	r2,2
10012a00:	d9001d04 	addi	r4,sp,116
10012a04:	d9000015 	stw	r4,0(sp)
10012a08:	d8800115 	stw	r2,4(sp)
10012a0c:	01400044 	movi	r5,1
10012a10:	d811883a 	mov	r8,sp
10012a14:	2809883a 	mov	r4,r5
10012a18:	42000204 	addi	r8,r8,8
10012a1c:	29400044 	addi	r5,r5,1
10012a20:	003f4606 	br	1001273c <__alt_data_end+0xf801273c>
10012a24:	d8802517 	ldw	r2,148(sp)
10012a28:	14c0010e 	bge	r2,r19,10012a30 <___vfiprintf_internal_r+0xef4>
10012a2c:	9805883a 	mov	r2,r19
10012a30:	d9402417 	ldw	r5,144(sp)
10012a34:	288b883a 	add	r5,r5,r2
10012a38:	d9402415 	stw	r5,144(sp)
10012a3c:	003dd006 	br	10012180 <__alt_data_end+0xf8012180>
10012a40:	d8001d85 	stb	zero,118(sp)
10012a44:	80005d16 	blt	r16,zero,10012bbc <___vfiprintf_internal_r+0x1080>
10012a48:	00ffdfc4 	movi	r3,-129
10012a4c:	9d04b03a 	or	r2,r19,r20
10012a50:	88e2703a 	and	r17,r17,r3
10012a54:	103d3726 	beq	r2,zero,10011f34 <__alt_data_end+0xf8011f34>
10012a58:	002b883a 	mov	r21,zero
10012a5c:	d9002617 	ldw	r4,152(sp)
10012a60:	ddc01a04 	addi	r23,sp,104
10012a64:	988003cc 	andi	r2,r19,15
10012a68:	a006973a 	slli	r3,r20,28
10012a6c:	2085883a 	add	r2,r4,r2
10012a70:	9826d13a 	srli	r19,r19,4
10012a74:	10800003 	ldbu	r2,0(r2)
10012a78:	a028d13a 	srli	r20,r20,4
10012a7c:	bdffffc4 	addi	r23,r23,-1
10012a80:	1ce6b03a 	or	r19,r3,r19
10012a84:	b8800005 	stb	r2,0(r23)
10012a88:	9d04b03a 	or	r2,r19,r20
10012a8c:	103ff51e 	bne	r2,zero,10012a64 <__alt_data_end+0xf8012a64>
10012a90:	d8801e17 	ldw	r2,120(sp)
10012a94:	15e9c83a 	sub	r20,r2,r23
10012a98:	003d2b06 	br	10011f48 <__alt_data_end+0xf8011f48>
10012a9c:	d9402017 	ldw	r5,128(sp)
10012aa0:	d9002117 	ldw	r4,132(sp)
10012aa4:	d9801a04 	addi	r6,sp,104
10012aa8:	0011a280 	call	10011a28 <__sprint_r.part.0>
10012aac:	103f5b1e 	bne	r2,zero,1001281c <__alt_data_end+0xf801281c>
10012ab0:	d8801c17 	ldw	r2,112(sp)
10012ab4:	d811883a 	mov	r8,sp
10012ab8:	003f6706 	br	10012858 <__alt_data_end+0xf8012858>
10012abc:	d9402017 	ldw	r5,128(sp)
10012ac0:	d9002117 	ldw	r4,132(sp)
10012ac4:	d9801a04 	addi	r6,sp,104
10012ac8:	0011a280 	call	10011a28 <__sprint_r.part.0>
10012acc:	103f531e 	bne	r2,zero,1001281c <__alt_data_end+0xf801281c>
10012ad0:	d811883a 	mov	r8,sp
10012ad4:	003cd906 	br	10011e3c <__alt_data_end+0xf8011e3c>
10012ad8:	10803fcc 	andi	r2,r2,255
10012adc:	1080201c 	xori	r2,r2,128
10012ae0:	10bfe004 	addi	r2,r2,-128
10012ae4:	00c00c04 	movi	r3,48
10012ae8:	10ffe926 	beq	r2,r3,10012a90 <__alt_data_end+0xf8012a90>
10012aec:	b8ffffc5 	stb	r3,-1(r23)
10012af0:	d8c01e17 	ldw	r3,120(sp)
10012af4:	b8bfffc4 	addi	r2,r23,-1
10012af8:	102f883a 	mov	r23,r2
10012afc:	18a9c83a 	sub	r20,r3,r2
10012b00:	003d1106 	br	10011f48 <__alt_data_end+0xf8011f48>
10012b04:	d9402017 	ldw	r5,128(sp)
10012b08:	d9002117 	ldw	r4,132(sp)
10012b0c:	d9801a04 	addi	r6,sp,104
10012b10:	d8c02a15 	stw	r3,168(sp)
10012b14:	d9c02b15 	stw	r7,172(sp)
10012b18:	0011a280 	call	10011a28 <__sprint_r.part.0>
10012b1c:	d8c02a17 	ldw	r3,168(sp)
10012b20:	d9c02b17 	ldw	r7,172(sp)
10012b24:	103f3d1e 	bne	r2,zero,1001281c <__alt_data_end+0xf801281c>
10012b28:	d9001b17 	ldw	r4,108(sp)
10012b2c:	d8801c17 	ldw	r2,112(sp)
10012b30:	d811883a 	mov	r8,sp
10012b34:	21400044 	addi	r5,r4,1
10012b38:	003d4406 	br	1001204c <__alt_data_end+0xf801204c>
10012b3c:	d9402017 	ldw	r5,128(sp)
10012b40:	d9002117 	ldw	r4,132(sp)
10012b44:	d9801a04 	addi	r6,sp,104
10012b48:	d8c02a15 	stw	r3,168(sp)
10012b4c:	0011a280 	call	10011a28 <__sprint_r.part.0>
10012b50:	d8c02a17 	ldw	r3,168(sp)
10012b54:	103f311e 	bne	r2,zero,1001281c <__alt_data_end+0xf801281c>
10012b58:	d9001b17 	ldw	r4,108(sp)
10012b5c:	d8801c17 	ldw	r2,112(sp)
10012b60:	d811883a 	mov	r8,sp
10012b64:	21400044 	addi	r5,r4,1
10012b68:	003ef406 	br	1001273c <__alt_data_end+0xf801273c>
10012b6c:	1000bd1e 	bne	r2,zero,10012e64 <___vfiprintf_internal_r+0x1328>
10012b70:	01400044 	movi	r5,1
10012b74:	0009883a 	mov	r4,zero
10012b78:	d811883a 	mov	r8,sp
10012b7c:	003ef106 	br	10012744 <__alt_data_end+0xf8012744>
10012b80:	d9402017 	ldw	r5,128(sp)
10012b84:	d9002117 	ldw	r4,132(sp)
10012b88:	d9801a04 	addi	r6,sp,104
10012b8c:	0011a280 	call	10011a28 <__sprint_r.part.0>
10012b90:	103f221e 	bne	r2,zero,1001281c <__alt_data_end+0xf801281c>
10012b94:	d9401b17 	ldw	r5,108(sp)
10012b98:	d8801c17 	ldw	r2,112(sp)
10012b9c:	d811883a 	mov	r8,sp
10012ba0:	29400044 	addi	r5,r5,1
10012ba4:	003d6206 	br	10012130 <__alt_data_end+0xf8012130>
10012ba8:	014400b4 	movhi	r5,4098
10012bac:	2971ac04 	addi	r5,r5,-14672
10012bb0:	d9402615 	stw	r5,152(sp)
10012bb4:	d8c02215 	stw	r3,136(sp)
10012bb8:	1023883a 	mov	r17,r2
10012bbc:	9d04b03a 	or	r2,r19,r20
10012bc0:	103fa51e 	bne	r2,zero,10012a58 <__alt_data_end+0xf8012a58>
10012bc4:	002b883a 	mov	r21,zero
10012bc8:	00800084 	movi	r2,2
10012bcc:	003e4a06 	br	100124f8 <__alt_data_end+0xf80124f8>
10012bd0:	014400b4 	movhi	r5,4098
10012bd4:	2971ac04 	addi	r5,r5,-14672
10012bd8:	002b883a 	mov	r21,zero
10012bdc:	d9402615 	stw	r5,152(sp)
10012be0:	003f9e06 	br	10012a5c <__alt_data_end+0xf8012a5c>
10012be4:	d9402217 	ldw	r5,136(sp)
10012be8:	d8001d85 	stb	zero,118(sp)
10012bec:	0029883a 	mov	r20,zero
10012bf0:	28800104 	addi	r2,r5,4
10012bf4:	2cc00017 	ldw	r19,0(r5)
10012bf8:	803e3a16 	blt	r16,zero,100124e4 <__alt_data_end+0xf80124e4>
10012bfc:	00ffdfc4 	movi	r3,-129
10012c00:	d8802215 	stw	r2,136(sp)
10012c04:	88e2703a 	and	r17,r17,r3
10012c08:	002b883a 	mov	r21,zero
10012c0c:	983e9b26 	beq	r19,zero,1001267c <__alt_data_end+0xf801267c>
10012c10:	00800244 	movi	r2,9
10012c14:	14fdc936 	bltu	r2,r19,1001233c <__alt_data_end+0xf801233c>
10012c18:	003e9a06 	br	10012684 <__alt_data_end+0xf8012684>
10012c1c:	00800c04 	movi	r2,48
10012c20:	d8c01d45 	stb	r3,117(sp)
10012c24:	d8801d05 	stb	r2,116(sp)
10012c28:	d8001d85 	stb	zero,118(sp)
10012c2c:	88c00094 	ori	r3,r17,2
10012c30:	80009c16 	blt	r16,zero,10012ea4 <___vfiprintf_internal_r+0x1368>
10012c34:	00bfdfc4 	movi	r2,-129
10012c38:	88a2703a 	and	r17,r17,r2
10012c3c:	8c400094 	ori	r17,r17,2
10012c40:	002b883a 	mov	r21,zero
10012c44:	003f8506 	br	10012a5c <__alt_data_end+0xf8012a5c>
10012c48:	b029883a 	mov	r20,r22
10012c4c:	003c0b06 	br	10011c7c <__alt_data_end+0xf8011c7c>
10012c50:	04e7c83a 	sub	r19,zero,r19
10012c54:	05400b44 	movi	r21,45
10012c58:	9804c03a 	cmpne	r2,r19,zero
10012c5c:	0529c83a 	sub	r20,zero,r20
10012c60:	dd401d85 	stb	r21,118(sp)
10012c64:	a0a9c83a 	sub	r20,r20,r2
10012c68:	80009716 	blt	r16,zero,10012ec8 <___vfiprintf_internal_r+0x138c>
10012c6c:	00bfdfc4 	movi	r2,-129
10012c70:	88a2703a 	and	r17,r17,r2
10012c74:	003db006 	br	10012338 <__alt_data_end+0xf8012338>
10012c78:	b0c00007 	ldb	r3,0(r22)
10012c7c:	003c0c06 	br	10011cb0 <__alt_data_end+0xf8011cb0>
10012c80:	8880100c 	andi	r2,r17,64
10012c84:	d8001d85 	stb	zero,118(sp)
10012c88:	1000461e 	bne	r2,zero,10012da4 <___vfiprintf_internal_r+0x1268>
10012c8c:	d9002217 	ldw	r4,136(sp)
10012c90:	0029883a 	mov	r20,zero
10012c94:	20800104 	addi	r2,r4,4
10012c98:	24c00017 	ldw	r19,0(r4)
10012c9c:	803df80e 	bge	r16,zero,10012480 <__alt_data_end+0xf8012480>
10012ca0:	9d06b03a 	or	r3,r19,r20
10012ca4:	d8802215 	stw	r2,136(sp)
10012ca8:	183d5e1e 	bne	r3,zero,10012224 <__alt_data_end+0xf8012224>
10012cac:	002b883a 	mov	r21,zero
10012cb0:	0005883a 	mov	r2,zero
10012cb4:	003e1006 	br	100124f8 <__alt_data_end+0xf80124f8>
10012cb8:	8880040c 	andi	r2,r17,16
10012cbc:	1000321e 	bne	r2,zero,10012d88 <___vfiprintf_internal_r+0x124c>
10012cc0:	8c40100c 	andi	r17,r17,64
10012cc4:	88008d26 	beq	r17,zero,10012efc <___vfiprintf_internal_r+0x13c0>
10012cc8:	d9402217 	ldw	r5,136(sp)
10012ccc:	d8c02417 	ldw	r3,144(sp)
10012cd0:	28800017 	ldw	r2,0(r5)
10012cd4:	29400104 	addi	r5,r5,4
10012cd8:	d9402215 	stw	r5,136(sp)
10012cdc:	10c0000d 	sth	r3,0(r2)
10012ce0:	003bca06 	br	10011c0c <__alt_data_end+0xf8011c0c>
10012ce4:	8880100c 	andi	r2,r17,64
10012ce8:	10003a26 	beq	r2,zero,10012dd4 <___vfiprintf_internal_r+0x1298>
10012cec:	d8802217 	ldw	r2,136(sp)
10012cf0:	14c0000f 	ldh	r19,0(r2)
10012cf4:	10800104 	addi	r2,r2,4
10012cf8:	d8802215 	stw	r2,136(sp)
10012cfc:	9829d7fa 	srai	r20,r19,31
10012d00:	a005883a 	mov	r2,r20
10012d04:	003d8506 	br	1001231c <__alt_data_end+0xf801231c>
10012d08:	8880100c 	andi	r2,r17,64
10012d0c:	10002b26 	beq	r2,zero,10012dbc <___vfiprintf_internal_r+0x1280>
10012d10:	d8802217 	ldw	r2,136(sp)
10012d14:	0029883a 	mov	r20,zero
10012d18:	14c0000b 	ldhu	r19,0(r2)
10012d1c:	10800104 	addi	r2,r2,4
10012d20:	d8802215 	stw	r2,136(sp)
10012d24:	003d5d06 	br	1001229c <__alt_data_end+0xf801229c>
10012d28:	d9402017 	ldw	r5,128(sp)
10012d2c:	d9002117 	ldw	r4,132(sp)
10012d30:	d9801a04 	addi	r6,sp,104
10012d34:	d8c02a15 	stw	r3,168(sp)
10012d38:	d9c02b15 	stw	r7,172(sp)
10012d3c:	0011a280 	call	10011a28 <__sprint_r.part.0>
10012d40:	d8c02a17 	ldw	r3,168(sp)
10012d44:	d9c02b17 	ldw	r7,172(sp)
10012d48:	103eb41e 	bne	r2,zero,1001281c <__alt_data_end+0xf801281c>
10012d4c:	d9001b17 	ldw	r4,108(sp)
10012d50:	d8801c17 	ldw	r2,112(sp)
10012d54:	d811883a 	mov	r8,sp
10012d58:	21400044 	addi	r5,r4,1
10012d5c:	003e6706 	br	100126fc <__alt_data_end+0xf80126fc>
10012d60:	00bfffc4 	movi	r2,-1
10012d64:	003c4a06 	br	10011e90 <__alt_data_end+0xf8011e90>
10012d68:	9805883a 	mov	r2,r19
10012d6c:	003ee806 	br	10012910 <__alt_data_end+0xf8012910>
10012d70:	d8c02217 	ldw	r3,136(sp)
10012d74:	0029883a 	mov	r20,zero
10012d78:	18800104 	addi	r2,r3,4
10012d7c:	1cc0000b 	ldhu	r19,0(r3)
10012d80:	803f9e0e 	bge	r16,zero,10012bfc <__alt_data_end+0xf8012bfc>
10012d84:	003dd706 	br	100124e4 <__alt_data_end+0xf80124e4>
10012d88:	d8c02217 	ldw	r3,136(sp)
10012d8c:	d9002417 	ldw	r4,144(sp)
10012d90:	18800017 	ldw	r2,0(r3)
10012d94:	18c00104 	addi	r3,r3,4
10012d98:	d8c02215 	stw	r3,136(sp)
10012d9c:	11000015 	stw	r4,0(r2)
10012da0:	003b9a06 	br	10011c0c <__alt_data_end+0xf8011c0c>
10012da4:	d8c02217 	ldw	r3,136(sp)
10012da8:	0029883a 	mov	r20,zero
10012dac:	18800104 	addi	r2,r3,4
10012db0:	1cc0000b 	ldhu	r19,0(r3)
10012db4:	803db20e 	bge	r16,zero,10012480 <__alt_data_end+0xf8012480>
10012db8:	003fb906 	br	10012ca0 <__alt_data_end+0xf8012ca0>
10012dbc:	d9002217 	ldw	r4,136(sp)
10012dc0:	0029883a 	mov	r20,zero
10012dc4:	24c00017 	ldw	r19,0(r4)
10012dc8:	21000104 	addi	r4,r4,4
10012dcc:	d9002215 	stw	r4,136(sp)
10012dd0:	003d3206 	br	1001229c <__alt_data_end+0xf801229c>
10012dd4:	d8c02217 	ldw	r3,136(sp)
10012dd8:	1cc00017 	ldw	r19,0(r3)
10012ddc:	18c00104 	addi	r3,r3,4
10012de0:	d8c02215 	stw	r3,136(sp)
10012de4:	9829d7fa 	srai	r20,r19,31
10012de8:	a005883a 	mov	r2,r20
10012dec:	003d4b06 	br	1001231c <__alt_data_end+0xf801231c>
10012df0:	0009883a 	mov	r4,zero
10012df4:	01400044 	movi	r5,1
10012df8:	d811883a 	mov	r8,sp
10012dfc:	003e4f06 	br	1001273c <__alt_data_end+0xf801273c>
10012e00:	d8c02215 	stw	r3,136(sp)
10012e04:	002b883a 	mov	r21,zero
10012e08:	003db806 	br	100124ec <__alt_data_end+0xf80124ec>
10012e0c:	d811883a 	mov	r8,sp
10012e10:	003e9606 	br	1001286c <__alt_data_end+0xf801286c>
10012e14:	010400b4 	movhi	r4,4098
10012e18:	2132d804 	addi	r4,r4,-13472
10012e1c:	d9002315 	stw	r4,140(sp)
10012e20:	003e6306 	br	100127b0 <__alt_data_end+0xf80127b0>
10012e24:	b0c00043 	ldbu	r3,1(r22)
10012e28:	8c400814 	ori	r17,r17,32
10012e2c:	b5800044 	addi	r22,r22,1
10012e30:	18c03fcc 	andi	r3,r3,255
10012e34:	18c0201c 	xori	r3,r3,128
10012e38:	18ffe004 	addi	r3,r3,-128
10012e3c:	003b9c06 	br	10011cb0 <__alt_data_end+0xf8011cb0>
10012e40:	b809883a 	mov	r4,r23
10012e44:	da002a15 	stw	r8,168(sp)
10012e48:	0003f300 	call	10003f30 <strlen>
10012e4c:	1029883a 	mov	r20,r2
10012e50:	dd401d83 	ldbu	r21,118(sp)
10012e54:	df002215 	stw	fp,136(sp)
10012e58:	0021883a 	mov	r16,zero
10012e5c:	da002a17 	ldw	r8,168(sp)
10012e60:	003c3906 	br	10011f48 <__alt_data_end+0xf8011f48>
10012e64:	d9402017 	ldw	r5,128(sp)
10012e68:	d9002117 	ldw	r4,132(sp)
10012e6c:	d9801a04 	addi	r6,sp,104
10012e70:	0011a280 	call	10011a28 <__sprint_r.part.0>
10012e74:	103e691e 	bne	r2,zero,1001281c <__alt_data_end+0xf801281c>
10012e78:	d9001b17 	ldw	r4,108(sp)
10012e7c:	d8801c17 	ldw	r2,112(sp)
10012e80:	d811883a 	mov	r8,sp
10012e84:	21400044 	addi	r5,r4,1
10012e88:	003e2e06 	br	10012744 <__alt_data_end+0xf8012744>
10012e8c:	010400b4 	movhi	r4,4098
10012e90:	2132dc04 	addi	r4,r4,-13456
10012e94:	d9002315 	stw	r4,140(sp)
10012e98:	d9001b17 	ldw	r4,108(sp)
10012e9c:	21000044 	addi	r4,r4,1
10012ea0:	003c5e06 	br	1001201c <__alt_data_end+0xf801201c>
10012ea4:	002b883a 	mov	r21,zero
10012ea8:	00800084 	movi	r2,2
10012eac:	10803fcc 	andi	r2,r2,255
10012eb0:	01000044 	movi	r4,1
10012eb4:	11002b26 	beq	r2,r4,10012f64 <___vfiprintf_internal_r+0x1428>
10012eb8:	01000084 	movi	r4,2
10012ebc:	11002b1e 	bne	r2,r4,10012f6c <___vfiprintf_internal_r+0x1430>
10012ec0:	1823883a 	mov	r17,r3
10012ec4:	003ee506 	br	10012a5c <__alt_data_end+0xf8012a5c>
10012ec8:	8807883a 	mov	r3,r17
10012ecc:	00800044 	movi	r2,1
10012ed0:	003ff606 	br	10012eac <__alt_data_end+0xf8012eac>
10012ed4:	00800184 	movi	r2,6
10012ed8:	1400012e 	bgeu	r2,r16,10012ee0 <___vfiprintf_internal_r+0x13a4>
10012edc:	1021883a 	mov	r16,r2
10012ee0:	8029883a 	mov	r20,r16
10012ee4:	8027883a 	mov	r19,r16
10012ee8:	80002216 	blt	r16,zero,10012f74 <___vfiprintf_internal_r+0x1438>
10012eec:	05c400b4 	movhi	r23,4098
10012ef0:	df002215 	stw	fp,136(sp)
10012ef4:	bdf1b104 	addi	r23,r23,-14652
10012ef8:	003cfb06 	br	100122e8 <__alt_data_end+0xf80122e8>
10012efc:	d9002217 	ldw	r4,136(sp)
10012f00:	d9402417 	ldw	r5,144(sp)
10012f04:	20800017 	ldw	r2,0(r4)
10012f08:	21000104 	addi	r4,r4,4
10012f0c:	d9002215 	stw	r4,136(sp)
10012f10:	11400015 	stw	r5,0(r2)
10012f14:	003b3d06 	br	10011c0c <__alt_data_end+0xf8011c0c>
10012f18:	014400b4 	movhi	r5,4098
10012f1c:	2972dc04 	addi	r5,r5,-13456
10012f20:	d9402315 	stw	r5,140(sp)
10012f24:	d9401b17 	ldw	r5,108(sp)
10012f28:	29400044 	addi	r5,r5,1
10012f2c:	003e6d06 	br	100128e4 <__alt_data_end+0xf80128e4>
10012f30:	8029883a 	mov	r20,r16
10012f34:	dd401d83 	ldbu	r21,118(sp)
10012f38:	df002215 	stw	fp,136(sp)
10012f3c:	0021883a 	mov	r16,zero
10012f40:	003c0106 	br	10011f48 <__alt_data_end+0xf8011f48>
10012f44:	00c400b4 	movhi	r3,4098
10012f48:	18f2d804 	addi	r3,r3,-13472
10012f4c:	d8c02315 	stw	r3,140(sp)
10012f50:	280d883a 	mov	r6,r5
10012f54:	003c6906 	br	100120fc <__alt_data_end+0xf80120fc>
10012f58:	802d883a 	mov	r22,r16
10012f5c:	0021883a 	mov	r16,zero
10012f60:	003b5406 	br	10011cb4 <__alt_data_end+0xf8011cb4>
10012f64:	1823883a 	mov	r17,r3
10012f68:	003cf306 	br	10012338 <__alt_data_end+0xf8012338>
10012f6c:	1823883a 	mov	r17,r3
10012f70:	003cad06 	br	10012228 <__alt_data_end+0xf8012228>
10012f74:	0027883a 	mov	r19,zero
10012f78:	003fdc06 	br	10012eec <__alt_data_end+0xf8012eec>
10012f7c:	d9402217 	ldw	r5,136(sp)
10012f80:	8005883a 	mov	r2,r16
10012f84:	b0c00043 	ldbu	r3,1(r22)
10012f88:	2c000017 	ldw	r16,0(r5)
10012f8c:	29000104 	addi	r4,r5,4
10012f90:	d9002215 	stw	r4,136(sp)
10012f94:	102d883a 	mov	r22,r2
10012f98:	803fa50e 	bge	r16,zero,10012e30 <__alt_data_end+0xf8012e30>
10012f9c:	18c03fcc 	andi	r3,r3,255
10012fa0:	18c0201c 	xori	r3,r3,128
10012fa4:	043fffc4 	movi	r16,-1
10012fa8:	18ffe004 	addi	r3,r3,-128
10012fac:	003b4006 	br	10011cb0 <__alt_data_end+0xf8011cb0>
10012fb0:	d9402303 	ldbu	r5,140(sp)
10012fb4:	d9401d85 	stb	r5,118(sp)
10012fb8:	003cae06 	br	10012274 <__alt_data_end+0xf8012274>
10012fbc:	d8c02303 	ldbu	r3,140(sp)
10012fc0:	d8c01d85 	stb	r3,118(sp)
10012fc4:	003d1406 	br	10012418 <__alt_data_end+0xf8012418>
10012fc8:	d8c02303 	ldbu	r3,140(sp)
10012fcc:	d8c01d85 	stb	r3,118(sp)
10012fd0:	003cca06 	br	100122fc <__alt_data_end+0xf80122fc>
10012fd4:	8880004c 	andi	r2,r17,1
10012fd8:	002b883a 	mov	r21,zero
10012fdc:	10000526 	beq	r2,zero,10012ff4 <___vfiprintf_internal_r+0x14b8>
10012fe0:	00800c04 	movi	r2,48
10012fe4:	d88019c5 	stb	r2,103(sp)
10012fe8:	dd002817 	ldw	r20,160(sp)
10012fec:	ddc019c4 	addi	r23,sp,103
10012ff0:	003bd506 	br	10011f48 <__alt_data_end+0xf8011f48>
10012ff4:	0029883a 	mov	r20,zero
10012ff8:	ddc01a04 	addi	r23,sp,104
10012ffc:	003bd206 	br	10011f48 <__alt_data_end+0xf8011f48>
10013000:	d9002303 	ldbu	r4,140(sp)
10013004:	d9001d85 	stb	r4,118(sp)
10013008:	003da606 	br	100126a4 <__alt_data_end+0xf80126a4>
1001300c:	d8c02303 	ldbu	r3,140(sp)
10013010:	d8c01d85 	stb	r3,118(sp)
10013014:	003c7606 	br	100121f0 <__alt_data_end+0xf80121f0>
10013018:	d8c02303 	ldbu	r3,140(sp)
1001301c:	d8c01d85 	stb	r3,118(sp)
10013020:	003c6506 	br	100121b8 <__alt_data_end+0xf80121b8>
10013024:	d9002303 	ldbu	r4,140(sp)
10013028:	d9001d85 	stb	r4,118(sp)
1001302c:	003d3d06 	br	10012524 <__alt_data_end+0xf8012524>
10013030:	d8c02303 	ldbu	r3,140(sp)
10013034:	d8c01d85 	stb	r3,118(sp)
10013038:	003d1d06 	br	100124b0 <__alt_data_end+0xf80124b0>
1001303c:	d8c02303 	ldbu	r3,140(sp)
10013040:	d8c01d85 	stb	r3,118(sp)
10013044:	003d0306 	br	10012454 <__alt_data_end+0xf8012454>

10013048 <__vfiprintf_internal>:
10013048:	008400b4 	movhi	r2,4098
1001304c:	10ba2504 	addi	r2,r2,-5996
10013050:	300f883a 	mov	r7,r6
10013054:	280d883a 	mov	r6,r5
10013058:	200b883a 	mov	r5,r4
1001305c:	11000017 	ldw	r4,0(r2)
10013060:	0011b3c1 	jmpi	10011b3c <___vfiprintf_internal_r>

10013064 <__sbprintf>:
10013064:	2880030b 	ldhu	r2,12(r5)
10013068:	2ac01917 	ldw	r11,100(r5)
1001306c:	2a80038b 	ldhu	r10,14(r5)
10013070:	2a400717 	ldw	r9,28(r5)
10013074:	2a000917 	ldw	r8,36(r5)
10013078:	defee204 	addi	sp,sp,-1144
1001307c:	00c10004 	movi	r3,1024
10013080:	dc011a15 	stw	r16,1128(sp)
10013084:	10bfff4c 	andi	r2,r2,65533
10013088:	2821883a 	mov	r16,r5
1001308c:	d8cb883a 	add	r5,sp,r3
10013090:	dc811c15 	stw	r18,1136(sp)
10013094:	dc411b15 	stw	r17,1132(sp)
10013098:	dfc11d15 	stw	ra,1140(sp)
1001309c:	2025883a 	mov	r18,r4
100130a0:	d881030d 	sth	r2,1036(sp)
100130a4:	dac11915 	stw	r11,1124(sp)
100130a8:	da81038d 	sth	r10,1038(sp)
100130ac:	da410715 	stw	r9,1052(sp)
100130b0:	da010915 	stw	r8,1060(sp)
100130b4:	dec10015 	stw	sp,1024(sp)
100130b8:	dec10415 	stw	sp,1040(sp)
100130bc:	d8c10215 	stw	r3,1032(sp)
100130c0:	d8c10515 	stw	r3,1044(sp)
100130c4:	d8010615 	stw	zero,1048(sp)
100130c8:	0011b3c0 	call	10011b3c <___vfiprintf_internal_r>
100130cc:	1023883a 	mov	r17,r2
100130d0:	10000416 	blt	r2,zero,100130e4 <__sbprintf+0x80>
100130d4:	d9410004 	addi	r5,sp,1024
100130d8:	9009883a 	mov	r4,r18
100130dc:	00099f80 	call	100099f8 <_fflush_r>
100130e0:	10000d1e 	bne	r2,zero,10013118 <__sbprintf+0xb4>
100130e4:	d881030b 	ldhu	r2,1036(sp)
100130e8:	1080100c 	andi	r2,r2,64
100130ec:	10000326 	beq	r2,zero,100130fc <__sbprintf+0x98>
100130f0:	8080030b 	ldhu	r2,12(r16)
100130f4:	10801014 	ori	r2,r2,64
100130f8:	8080030d 	sth	r2,12(r16)
100130fc:	8805883a 	mov	r2,r17
10013100:	dfc11d17 	ldw	ra,1140(sp)
10013104:	dc811c17 	ldw	r18,1136(sp)
10013108:	dc411b17 	ldw	r17,1132(sp)
1001310c:	dc011a17 	ldw	r16,1128(sp)
10013110:	dec11e04 	addi	sp,sp,1144
10013114:	f800283a 	ret
10013118:	047fffc4 	movi	r17,-1
1001311c:	003ff106 	br	100130e4 <__alt_data_end+0xf80130e4>

10013120 <__swbuf_r>:
10013120:	defffb04 	addi	sp,sp,-20
10013124:	dcc00315 	stw	r19,12(sp)
10013128:	dc800215 	stw	r18,8(sp)
1001312c:	dc000015 	stw	r16,0(sp)
10013130:	dfc00415 	stw	ra,16(sp)
10013134:	dc400115 	stw	r17,4(sp)
10013138:	2025883a 	mov	r18,r4
1001313c:	2827883a 	mov	r19,r5
10013140:	3021883a 	mov	r16,r6
10013144:	20000226 	beq	r4,zero,10013150 <__swbuf_r+0x30>
10013148:	20800e17 	ldw	r2,56(r4)
1001314c:	10004226 	beq	r2,zero,10013258 <__swbuf_r+0x138>
10013150:	80800617 	ldw	r2,24(r16)
10013154:	8100030b 	ldhu	r4,12(r16)
10013158:	80800215 	stw	r2,8(r16)
1001315c:	2080020c 	andi	r2,r4,8
10013160:	10003626 	beq	r2,zero,1001323c <__swbuf_r+0x11c>
10013164:	80c00417 	ldw	r3,16(r16)
10013168:	18003426 	beq	r3,zero,1001323c <__swbuf_r+0x11c>
1001316c:	2088000c 	andi	r2,r4,8192
10013170:	9c403fcc 	andi	r17,r19,255
10013174:	10001a26 	beq	r2,zero,100131e0 <__swbuf_r+0xc0>
10013178:	80800017 	ldw	r2,0(r16)
1001317c:	81000517 	ldw	r4,20(r16)
10013180:	10c7c83a 	sub	r3,r2,r3
10013184:	1900200e 	bge	r3,r4,10013208 <__swbuf_r+0xe8>
10013188:	18c00044 	addi	r3,r3,1
1001318c:	81000217 	ldw	r4,8(r16)
10013190:	11400044 	addi	r5,r2,1
10013194:	81400015 	stw	r5,0(r16)
10013198:	213fffc4 	addi	r4,r4,-1
1001319c:	81000215 	stw	r4,8(r16)
100131a0:	14c00005 	stb	r19,0(r2)
100131a4:	80800517 	ldw	r2,20(r16)
100131a8:	10c01e26 	beq	r2,r3,10013224 <__swbuf_r+0x104>
100131ac:	8080030b 	ldhu	r2,12(r16)
100131b0:	1080004c 	andi	r2,r2,1
100131b4:	10000226 	beq	r2,zero,100131c0 <__swbuf_r+0xa0>
100131b8:	00800284 	movi	r2,10
100131bc:	88801926 	beq	r17,r2,10013224 <__swbuf_r+0x104>
100131c0:	8805883a 	mov	r2,r17
100131c4:	dfc00417 	ldw	ra,16(sp)
100131c8:	dcc00317 	ldw	r19,12(sp)
100131cc:	dc800217 	ldw	r18,8(sp)
100131d0:	dc400117 	ldw	r17,4(sp)
100131d4:	dc000017 	ldw	r16,0(sp)
100131d8:	dec00504 	addi	sp,sp,20
100131dc:	f800283a 	ret
100131e0:	81401917 	ldw	r5,100(r16)
100131e4:	00b7ffc4 	movi	r2,-8193
100131e8:	21080014 	ori	r4,r4,8192
100131ec:	2884703a 	and	r2,r5,r2
100131f0:	80801915 	stw	r2,100(r16)
100131f4:	80800017 	ldw	r2,0(r16)
100131f8:	8100030d 	sth	r4,12(r16)
100131fc:	81000517 	ldw	r4,20(r16)
10013200:	10c7c83a 	sub	r3,r2,r3
10013204:	193fe016 	blt	r3,r4,10013188 <__alt_data_end+0xf8013188>
10013208:	800b883a 	mov	r5,r16
1001320c:	9009883a 	mov	r4,r18
10013210:	00099f80 	call	100099f8 <_fflush_r>
10013214:	1000071e 	bne	r2,zero,10013234 <__swbuf_r+0x114>
10013218:	80800017 	ldw	r2,0(r16)
1001321c:	00c00044 	movi	r3,1
10013220:	003fda06 	br	1001318c <__alt_data_end+0xf801318c>
10013224:	800b883a 	mov	r5,r16
10013228:	9009883a 	mov	r4,r18
1001322c:	00099f80 	call	100099f8 <_fflush_r>
10013230:	103fe326 	beq	r2,zero,100131c0 <__alt_data_end+0xf80131c0>
10013234:	00bfffc4 	movi	r2,-1
10013238:	003fe206 	br	100131c4 <__alt_data_end+0xf80131c4>
1001323c:	800b883a 	mov	r5,r16
10013240:	9009883a 	mov	r4,r18
10013244:	0007dd80 	call	10007dd8 <__swsetup_r>
10013248:	103ffa1e 	bne	r2,zero,10013234 <__alt_data_end+0xf8013234>
1001324c:	8100030b 	ldhu	r4,12(r16)
10013250:	80c00417 	ldw	r3,16(r16)
10013254:	003fc506 	br	1001316c <__alt_data_end+0xf801316c>
10013258:	0009de40 	call	10009de4 <__sinit>
1001325c:	003fbc06 	br	10013150 <__alt_data_end+0xf8013150>

10013260 <__swbuf>:
10013260:	008400b4 	movhi	r2,4098
10013264:	10ba2504 	addi	r2,r2,-5996
10013268:	280d883a 	mov	r6,r5
1001326c:	200b883a 	mov	r5,r4
10013270:	11000017 	ldw	r4,0(r2)
10013274:	00131201 	jmpi	10013120 <__swbuf_r>

10013278 <_write_r>:
10013278:	defffd04 	addi	sp,sp,-12
1001327c:	2805883a 	mov	r2,r5
10013280:	dc000015 	stw	r16,0(sp)
10013284:	040400b4 	movhi	r16,4098
10013288:	dc400115 	stw	r17,4(sp)
1001328c:	300b883a 	mov	r5,r6
10013290:	8400f504 	addi	r16,r16,980
10013294:	2023883a 	mov	r17,r4
10013298:	380d883a 	mov	r6,r7
1001329c:	1009883a 	mov	r4,r2
100132a0:	dfc00215 	stw	ra,8(sp)
100132a4:	80000015 	stw	zero,0(r16)
100132a8:	0019ea40 	call	10019ea4 <write>
100132ac:	00ffffc4 	movi	r3,-1
100132b0:	10c00526 	beq	r2,r3,100132c8 <_write_r+0x50>
100132b4:	dfc00217 	ldw	ra,8(sp)
100132b8:	dc400117 	ldw	r17,4(sp)
100132bc:	dc000017 	ldw	r16,0(sp)
100132c0:	dec00304 	addi	sp,sp,12
100132c4:	f800283a 	ret
100132c8:	80c00017 	ldw	r3,0(r16)
100132cc:	183ff926 	beq	r3,zero,100132b4 <__alt_data_end+0xf80132b4>
100132d0:	88c00015 	stw	r3,0(r17)
100132d4:	003ff706 	br	100132b4 <__alt_data_end+0xf80132b4>

100132d8 <_close_r>:
100132d8:	defffd04 	addi	sp,sp,-12
100132dc:	dc000015 	stw	r16,0(sp)
100132e0:	040400b4 	movhi	r16,4098
100132e4:	dc400115 	stw	r17,4(sp)
100132e8:	8400f504 	addi	r16,r16,980
100132ec:	2023883a 	mov	r17,r4
100132f0:	2809883a 	mov	r4,r5
100132f4:	dfc00215 	stw	ra,8(sp)
100132f8:	80000015 	stw	zero,0(r16)
100132fc:	001961c0 	call	1001961c <close>
10013300:	00ffffc4 	movi	r3,-1
10013304:	10c00526 	beq	r2,r3,1001331c <_close_r+0x44>
10013308:	dfc00217 	ldw	ra,8(sp)
1001330c:	dc400117 	ldw	r17,4(sp)
10013310:	dc000017 	ldw	r16,0(sp)
10013314:	dec00304 	addi	sp,sp,12
10013318:	f800283a 	ret
1001331c:	80c00017 	ldw	r3,0(r16)
10013320:	183ff926 	beq	r3,zero,10013308 <__alt_data_end+0xf8013308>
10013324:	88c00015 	stw	r3,0(r17)
10013328:	003ff706 	br	10013308 <__alt_data_end+0xf8013308>

1001332c <_calloc_r>:
1001332c:	defffe04 	addi	sp,sp,-8
10013330:	2805883a 	mov	r2,r5
10013334:	dc000015 	stw	r16,0(sp)
10013338:	300b883a 	mov	r5,r6
1001333c:	2021883a 	mov	r16,r4
10013340:	1009883a 	mov	r4,r2
10013344:	dfc00115 	stw	ra,4(sp)
10013348:	00034380 	call	10003438 <__mulsi3>
1001334c:	100b883a 	mov	r5,r2
10013350:	8009883a 	mov	r4,r16
10013354:	00034880 	call	10003488 <_malloc_r>
10013358:	10002926 	beq	r2,zero,10013400 <_calloc_r+0xd4>
1001335c:	11bfff17 	ldw	r6,-4(r2)
10013360:	1021883a 	mov	r16,r2
10013364:	00bfff04 	movi	r2,-4
10013368:	308c703a 	and	r6,r6,r2
1001336c:	00c00904 	movi	r3,36
10013370:	308d883a 	add	r6,r6,r2
10013374:	19801636 	bltu	r3,r6,100133d0 <_calloc_r+0xa4>
10013378:	008004c4 	movi	r2,19
1001337c:	11800b2e 	bgeu	r2,r6,100133ac <_calloc_r+0x80>
10013380:	80000015 	stw	zero,0(r16)
10013384:	80000115 	stw	zero,4(r16)
10013388:	008006c4 	movi	r2,27
1001338c:	11801a2e 	bgeu	r2,r6,100133f8 <_calloc_r+0xcc>
10013390:	80000215 	stw	zero,8(r16)
10013394:	80000315 	stw	zero,12(r16)
10013398:	30c0151e 	bne	r6,r3,100133f0 <_calloc_r+0xc4>
1001339c:	80000415 	stw	zero,16(r16)
100133a0:	80800604 	addi	r2,r16,24
100133a4:	80000515 	stw	zero,20(r16)
100133a8:	00000106 	br	100133b0 <_calloc_r+0x84>
100133ac:	8005883a 	mov	r2,r16
100133b0:	10000015 	stw	zero,0(r2)
100133b4:	10000115 	stw	zero,4(r2)
100133b8:	10000215 	stw	zero,8(r2)
100133bc:	8005883a 	mov	r2,r16
100133c0:	dfc00117 	ldw	ra,4(sp)
100133c4:	dc000017 	ldw	r16,0(sp)
100133c8:	dec00204 	addi	sp,sp,8
100133cc:	f800283a 	ret
100133d0:	000b883a 	mov	r5,zero
100133d4:	8009883a 	mov	r4,r16
100133d8:	000b39c0 	call	1000b39c <memset>
100133dc:	8005883a 	mov	r2,r16
100133e0:	dfc00117 	ldw	ra,4(sp)
100133e4:	dc000017 	ldw	r16,0(sp)
100133e8:	dec00204 	addi	sp,sp,8
100133ec:	f800283a 	ret
100133f0:	80800404 	addi	r2,r16,16
100133f4:	003fee06 	br	100133b0 <__alt_data_end+0xf80133b0>
100133f8:	80800204 	addi	r2,r16,8
100133fc:	003fec06 	br	100133b0 <__alt_data_end+0xf80133b0>
10013400:	0005883a 	mov	r2,zero
10013404:	003fee06 	br	100133c0 <__alt_data_end+0xf80133c0>

10013408 <_fclose_r>:
10013408:	28003926 	beq	r5,zero,100134f0 <_fclose_r+0xe8>
1001340c:	defffc04 	addi	sp,sp,-16
10013410:	dc400115 	stw	r17,4(sp)
10013414:	dc000015 	stw	r16,0(sp)
10013418:	dfc00315 	stw	ra,12(sp)
1001341c:	dc800215 	stw	r18,8(sp)
10013420:	2023883a 	mov	r17,r4
10013424:	2821883a 	mov	r16,r5
10013428:	20000226 	beq	r4,zero,10013434 <_fclose_r+0x2c>
1001342c:	20800e17 	ldw	r2,56(r4)
10013430:	10002726 	beq	r2,zero,100134d0 <_fclose_r+0xc8>
10013434:	8080030f 	ldh	r2,12(r16)
10013438:	1000071e 	bne	r2,zero,10013458 <_fclose_r+0x50>
1001343c:	0005883a 	mov	r2,zero
10013440:	dfc00317 	ldw	ra,12(sp)
10013444:	dc800217 	ldw	r18,8(sp)
10013448:	dc400117 	ldw	r17,4(sp)
1001344c:	dc000017 	ldw	r16,0(sp)
10013450:	dec00404 	addi	sp,sp,16
10013454:	f800283a 	ret
10013458:	800b883a 	mov	r5,r16
1001345c:	8809883a 	mov	r4,r17
10013460:	00097dc0 	call	100097dc <__sflush_r>
10013464:	1025883a 	mov	r18,r2
10013468:	80800b17 	ldw	r2,44(r16)
1001346c:	10000426 	beq	r2,zero,10013480 <_fclose_r+0x78>
10013470:	81400717 	ldw	r5,28(r16)
10013474:	8809883a 	mov	r4,r17
10013478:	103ee83a 	callr	r2
1001347c:	10001616 	blt	r2,zero,100134d8 <_fclose_r+0xd0>
10013480:	8080030b 	ldhu	r2,12(r16)
10013484:	1080200c 	andi	r2,r2,128
10013488:	1000151e 	bne	r2,zero,100134e0 <_fclose_r+0xd8>
1001348c:	81400c17 	ldw	r5,48(r16)
10013490:	28000526 	beq	r5,zero,100134a8 <_fclose_r+0xa0>
10013494:	80801004 	addi	r2,r16,64
10013498:	28800226 	beq	r5,r2,100134a4 <_fclose_r+0x9c>
1001349c:	8809883a 	mov	r4,r17
100134a0:	000a1c80 	call	1000a1c8 <_free_r>
100134a4:	80000c15 	stw	zero,48(r16)
100134a8:	81401117 	ldw	r5,68(r16)
100134ac:	28000326 	beq	r5,zero,100134bc <_fclose_r+0xb4>
100134b0:	8809883a 	mov	r4,r17
100134b4:	000a1c80 	call	1000a1c8 <_free_r>
100134b8:	80001115 	stw	zero,68(r16)
100134bc:	0009df40 	call	10009df4 <__sfp_lock_acquire>
100134c0:	8000030d 	sth	zero,12(r16)
100134c4:	0009df80 	call	10009df8 <__sfp_lock_release>
100134c8:	9005883a 	mov	r2,r18
100134cc:	003fdc06 	br	10013440 <__alt_data_end+0xf8013440>
100134d0:	0009de40 	call	10009de4 <__sinit>
100134d4:	003fd706 	br	10013434 <__alt_data_end+0xf8013434>
100134d8:	04bfffc4 	movi	r18,-1
100134dc:	003fe806 	br	10013480 <__alt_data_end+0xf8013480>
100134e0:	81400417 	ldw	r5,16(r16)
100134e4:	8809883a 	mov	r4,r17
100134e8:	000a1c80 	call	1000a1c8 <_free_r>
100134ec:	003fe706 	br	1001348c <__alt_data_end+0xf801348c>
100134f0:	0005883a 	mov	r2,zero
100134f4:	f800283a 	ret

100134f8 <fclose>:
100134f8:	008400b4 	movhi	r2,4098
100134fc:	10ba2504 	addi	r2,r2,-5996
10013500:	200b883a 	mov	r5,r4
10013504:	11000017 	ldw	r4,0(r2)
10013508:	00134081 	jmpi	10013408 <_fclose_r>

1001350c <__fputwc>:
1001350c:	defff804 	addi	sp,sp,-32
10013510:	dcc00415 	stw	r19,16(sp)
10013514:	dc800315 	stw	r18,12(sp)
10013518:	dc000115 	stw	r16,4(sp)
1001351c:	dfc00715 	stw	ra,28(sp)
10013520:	dd400615 	stw	r21,24(sp)
10013524:	dd000515 	stw	r20,20(sp)
10013528:	dc400215 	stw	r17,8(sp)
1001352c:	2027883a 	mov	r19,r4
10013530:	2825883a 	mov	r18,r5
10013534:	3021883a 	mov	r16,r6
10013538:	000abe00 	call	1000abe0 <__locale_mb_cur_max>
1001353c:	00c00044 	movi	r3,1
10013540:	10c03e26 	beq	r2,r3,1001363c <__fputwc+0x130>
10013544:	81c01704 	addi	r7,r16,92
10013548:	900d883a 	mov	r6,r18
1001354c:	d80b883a 	mov	r5,sp
10013550:	9809883a 	mov	r4,r19
10013554:	0015a700 	call	10015a70 <_wcrtomb_r>
10013558:	1029883a 	mov	r20,r2
1001355c:	00bfffc4 	movi	r2,-1
10013560:	a0802026 	beq	r20,r2,100135e4 <__fputwc+0xd8>
10013564:	d9400003 	ldbu	r5,0(sp)
10013568:	a0001c26 	beq	r20,zero,100135dc <__fputwc+0xd0>
1001356c:	0023883a 	mov	r17,zero
10013570:	05400284 	movi	r21,10
10013574:	00000906 	br	1001359c <__fputwc+0x90>
10013578:	80800017 	ldw	r2,0(r16)
1001357c:	11400005 	stb	r5,0(r2)
10013580:	80c00017 	ldw	r3,0(r16)
10013584:	18c00044 	addi	r3,r3,1
10013588:	80c00015 	stw	r3,0(r16)
1001358c:	8c400044 	addi	r17,r17,1
10013590:	dc45883a 	add	r2,sp,r17
10013594:	8d00112e 	bgeu	r17,r20,100135dc <__fputwc+0xd0>
10013598:	11400003 	ldbu	r5,0(r2)
1001359c:	80c00217 	ldw	r3,8(r16)
100135a0:	18ffffc4 	addi	r3,r3,-1
100135a4:	80c00215 	stw	r3,8(r16)
100135a8:	183ff30e 	bge	r3,zero,10013578 <__alt_data_end+0xf8013578>
100135ac:	80800617 	ldw	r2,24(r16)
100135b0:	18801916 	blt	r3,r2,10013618 <__fputwc+0x10c>
100135b4:	80800017 	ldw	r2,0(r16)
100135b8:	11400005 	stb	r5,0(r2)
100135bc:	80800017 	ldw	r2,0(r16)
100135c0:	10c00003 	ldbu	r3,0(r2)
100135c4:	10800044 	addi	r2,r2,1
100135c8:	1d402326 	beq	r3,r21,10013658 <__fputwc+0x14c>
100135cc:	80800015 	stw	r2,0(r16)
100135d0:	8c400044 	addi	r17,r17,1
100135d4:	dc45883a 	add	r2,sp,r17
100135d8:	8d3fef36 	bltu	r17,r20,10013598 <__alt_data_end+0xf8013598>
100135dc:	9005883a 	mov	r2,r18
100135e0:	00000406 	br	100135f4 <__fputwc+0xe8>
100135e4:	80c0030b 	ldhu	r3,12(r16)
100135e8:	a005883a 	mov	r2,r20
100135ec:	18c01014 	ori	r3,r3,64
100135f0:	80c0030d 	sth	r3,12(r16)
100135f4:	dfc00717 	ldw	ra,28(sp)
100135f8:	dd400617 	ldw	r21,24(sp)
100135fc:	dd000517 	ldw	r20,20(sp)
10013600:	dcc00417 	ldw	r19,16(sp)
10013604:	dc800317 	ldw	r18,12(sp)
10013608:	dc400217 	ldw	r17,8(sp)
1001360c:	dc000117 	ldw	r16,4(sp)
10013610:	dec00804 	addi	sp,sp,32
10013614:	f800283a 	ret
10013618:	800d883a 	mov	r6,r16
1001361c:	29403fcc 	andi	r5,r5,255
10013620:	9809883a 	mov	r4,r19
10013624:	00131200 	call	10013120 <__swbuf_r>
10013628:	10bfffe0 	cmpeqi	r2,r2,-1
1001362c:	10803fcc 	andi	r2,r2,255
10013630:	103fd626 	beq	r2,zero,1001358c <__alt_data_end+0xf801358c>
10013634:	00bfffc4 	movi	r2,-1
10013638:	003fee06 	br	100135f4 <__alt_data_end+0xf80135f4>
1001363c:	90ffffc4 	addi	r3,r18,-1
10013640:	01003f84 	movi	r4,254
10013644:	20ffbf36 	bltu	r4,r3,10013544 <__alt_data_end+0xf8013544>
10013648:	900b883a 	mov	r5,r18
1001364c:	dc800005 	stb	r18,0(sp)
10013650:	1029883a 	mov	r20,r2
10013654:	003fc506 	br	1001356c <__alt_data_end+0xf801356c>
10013658:	800d883a 	mov	r6,r16
1001365c:	a80b883a 	mov	r5,r21
10013660:	9809883a 	mov	r4,r19
10013664:	00131200 	call	10013120 <__swbuf_r>
10013668:	10bfffe0 	cmpeqi	r2,r2,-1
1001366c:	003fef06 	br	1001362c <__alt_data_end+0xf801362c>

10013670 <_fputwc_r>:
10013670:	3080030b 	ldhu	r2,12(r6)
10013674:	10c8000c 	andi	r3,r2,8192
10013678:	1800051e 	bne	r3,zero,10013690 <_fputwc_r+0x20>
1001367c:	30c01917 	ldw	r3,100(r6)
10013680:	10880014 	ori	r2,r2,8192
10013684:	3080030d 	sth	r2,12(r6)
10013688:	18880014 	ori	r2,r3,8192
1001368c:	30801915 	stw	r2,100(r6)
10013690:	001350c1 	jmpi	1001350c <__fputwc>

10013694 <fputwc>:
10013694:	008400b4 	movhi	r2,4098
10013698:	defffc04 	addi	sp,sp,-16
1001369c:	10ba2504 	addi	r2,r2,-5996
100136a0:	dc000115 	stw	r16,4(sp)
100136a4:	14000017 	ldw	r16,0(r2)
100136a8:	dc400215 	stw	r17,8(sp)
100136ac:	dfc00315 	stw	ra,12(sp)
100136b0:	2023883a 	mov	r17,r4
100136b4:	80000226 	beq	r16,zero,100136c0 <fputwc+0x2c>
100136b8:	80800e17 	ldw	r2,56(r16)
100136bc:	10001026 	beq	r2,zero,10013700 <fputwc+0x6c>
100136c0:	2880030b 	ldhu	r2,12(r5)
100136c4:	10c8000c 	andi	r3,r2,8192
100136c8:	1800051e 	bne	r3,zero,100136e0 <fputwc+0x4c>
100136cc:	28c01917 	ldw	r3,100(r5)
100136d0:	10880014 	ori	r2,r2,8192
100136d4:	2880030d 	sth	r2,12(r5)
100136d8:	18880014 	ori	r2,r3,8192
100136dc:	28801915 	stw	r2,100(r5)
100136e0:	280d883a 	mov	r6,r5
100136e4:	8009883a 	mov	r4,r16
100136e8:	880b883a 	mov	r5,r17
100136ec:	dfc00317 	ldw	ra,12(sp)
100136f0:	dc400217 	ldw	r17,8(sp)
100136f4:	dc000117 	ldw	r16,4(sp)
100136f8:	dec00404 	addi	sp,sp,16
100136fc:	001350c1 	jmpi	1001350c <__fputwc>
10013700:	8009883a 	mov	r4,r16
10013704:	d9400015 	stw	r5,0(sp)
10013708:	0009de40 	call	10009de4 <__sinit>
1001370c:	d9400017 	ldw	r5,0(sp)
10013710:	003feb06 	br	100136c0 <__alt_data_end+0xf80136c0>

10013714 <_fstat_r>:
10013714:	defffd04 	addi	sp,sp,-12
10013718:	2805883a 	mov	r2,r5
1001371c:	dc000015 	stw	r16,0(sp)
10013720:	040400b4 	movhi	r16,4098
10013724:	dc400115 	stw	r17,4(sp)
10013728:	8400f504 	addi	r16,r16,980
1001372c:	2023883a 	mov	r17,r4
10013730:	300b883a 	mov	r5,r6
10013734:	1009883a 	mov	r4,r2
10013738:	dfc00215 	stw	ra,8(sp)
1001373c:	80000015 	stw	zero,0(r16)
10013740:	001975c0 	call	1001975c <fstat>
10013744:	00ffffc4 	movi	r3,-1
10013748:	10c00526 	beq	r2,r3,10013760 <_fstat_r+0x4c>
1001374c:	dfc00217 	ldw	ra,8(sp)
10013750:	dc400117 	ldw	r17,4(sp)
10013754:	dc000017 	ldw	r16,0(sp)
10013758:	dec00304 	addi	sp,sp,12
1001375c:	f800283a 	ret
10013760:	80c00017 	ldw	r3,0(r16)
10013764:	183ff926 	beq	r3,zero,1001374c <__alt_data_end+0xf801374c>
10013768:	88c00015 	stw	r3,0(r17)
1001376c:	003ff706 	br	1001374c <__alt_data_end+0xf801374c>

10013770 <rshift>:
10013770:	2807d17a 	srai	r3,r5,5
10013774:	20800417 	ldw	r2,16(r4)
10013778:	22000504 	addi	r8,r4,20
1001377c:	1880250e 	bge	r3,r2,10013814 <rshift+0xa4>
10013780:	1085883a 	add	r2,r2,r2
10013784:	18c7883a 	add	r3,r3,r3
10013788:	1085883a 	add	r2,r2,r2
1001378c:	18c7883a 	add	r3,r3,r3
10013790:	294007cc 	andi	r5,r5,31
10013794:	4085883a 	add	r2,r8,r2
10013798:	40c7883a 	add	r3,r8,r3
1001379c:	28002026 	beq	r5,zero,10013820 <rshift+0xb0>
100137a0:	19800017 	ldw	r6,0(r3)
100137a4:	02c00804 	movi	r11,32
100137a8:	19c00104 	addi	r7,r3,4
100137ac:	5957c83a 	sub	r11,r11,r5
100137b0:	314cd83a 	srl	r6,r6,r5
100137b4:	38802c2e 	bgeu	r7,r2,10013868 <rshift+0xf8>
100137b8:	4015883a 	mov	r10,r8
100137bc:	3a400017 	ldw	r9,0(r7)
100137c0:	52800104 	addi	r10,r10,4
100137c4:	39c00104 	addi	r7,r7,4
100137c8:	4ad2983a 	sll	r9,r9,r11
100137cc:	498cb03a 	or	r6,r9,r6
100137d0:	51bfff15 	stw	r6,-4(r10)
100137d4:	39bfff17 	ldw	r6,-4(r7)
100137d8:	314cd83a 	srl	r6,r6,r5
100137dc:	38bff736 	bltu	r7,r2,100137bc <__alt_data_end+0xf80137bc>
100137e0:	10c7c83a 	sub	r3,r2,r3
100137e4:	18fffec4 	addi	r3,r3,-5
100137e8:	1806d0ba 	srli	r3,r3,2
100137ec:	18c00044 	addi	r3,r3,1
100137f0:	18c7883a 	add	r3,r3,r3
100137f4:	18c7883a 	add	r3,r3,r3
100137f8:	40c7883a 	add	r3,r8,r3
100137fc:	19800015 	stw	r6,0(r3)
10013800:	30000126 	beq	r6,zero,10013808 <rshift+0x98>
10013804:	18c00104 	addi	r3,r3,4
10013808:	1a05c83a 	sub	r2,r3,r8
1001380c:	1005d0ba 	srai	r2,r2,2
10013810:	00001206 	br	1001385c <rshift+0xec>
10013814:	20000415 	stw	zero,16(r4)
10013818:	20000515 	stw	zero,20(r4)
1001381c:	f800283a 	ret
10013820:	18bffc2e 	bgeu	r3,r2,10013814 <__alt_data_end+0xf8013814>
10013824:	180d883a 	mov	r6,r3
10013828:	400b883a 	mov	r5,r8
1001382c:	31c00017 	ldw	r7,0(r6)
10013830:	29400104 	addi	r5,r5,4
10013834:	31800104 	addi	r6,r6,4
10013838:	29ffff15 	stw	r7,-4(r5)
1001383c:	30bffb36 	bltu	r6,r2,1001382c <__alt_data_end+0xf801382c>
10013840:	00c6303a 	nor	r3,zero,r3
10013844:	1885883a 	add	r2,r3,r2
10013848:	1004d0ba 	srli	r2,r2,2
1001384c:	10800044 	addi	r2,r2,1
10013850:	1085883a 	add	r2,r2,r2
10013854:	1085883a 	add	r2,r2,r2
10013858:	1005d0ba 	srai	r2,r2,2
1001385c:	20800415 	stw	r2,16(r4)
10013860:	103fed26 	beq	r2,zero,10013818 <__alt_data_end+0xf8013818>
10013864:	f800283a 	ret
10013868:	4007883a 	mov	r3,r8
1001386c:	003fe306 	br	100137fc <__alt_data_end+0xf80137fc>

10013870 <__gethex>:
10013870:	deffea04 	addi	sp,sp,-88
10013874:	d9c00415 	stw	r7,16(sp)
10013878:	dfc01515 	stw	ra,84(sp)
1001387c:	dd001015 	stw	r20,64(sp)
10013880:	dcc00f15 	stw	r19,60(sp)
10013884:	2829883a 	mov	r20,r5
10013888:	dc800e15 	stw	r18,56(sp)
1001388c:	d9000215 	stw	r4,8(sp)
10013890:	d9800115 	stw	r6,4(sp)
10013894:	df001415 	stw	fp,80(sp)
10013898:	ddc01315 	stw	r23,76(sp)
1001389c:	dd801215 	stw	r22,72(sp)
100138a0:	dd401115 	stw	r21,68(sp)
100138a4:	dc400d15 	stw	r17,52(sp)
100138a8:	dc000c15 	stw	r16,48(sp)
100138ac:	000ac040 	call	1000ac04 <_localeconv_r>
100138b0:	14800017 	ldw	r18,0(r2)
100138b4:	9009883a 	mov	r4,r18
100138b8:	0003f300 	call	10003f30 <strlen>
100138bc:	a1c00017 	ldw	r7,0(r20)
100138c0:	1027883a 	mov	r19,r2
100138c4:	9085883a 	add	r2,r18,r2
100138c8:	10bfffc3 	ldbu	r2,-1(r2)
100138cc:	38c00083 	ldbu	r3,2(r7)
100138d0:	d8800305 	stb	r2,12(sp)
100138d4:	00800c04 	movi	r2,48
100138d8:	18815a1e 	bne	r3,r2,10013e44 <__gethex+0x5d4>
100138dc:	013fff84 	movi	r4,-2
100138e0:	388000c4 	addi	r2,r7,3
100138e4:	21c9c83a 	sub	r4,r4,r7
100138e8:	180b883a 	mov	r5,r3
100138ec:	20b9883a 	add	fp,r4,r2
100138f0:	102f883a 	mov	r23,r2
100138f4:	10800044 	addi	r2,r2,1
100138f8:	10ffffc3 	ldbu	r3,-1(r2)
100138fc:	197ffb26 	beq	r3,r5,100138ec <__alt_data_end+0xf80138ec>
10013900:	058400b4 	movhi	r22,4098
10013904:	b5b2e004 	addi	r22,r22,-13440
10013908:	b0c7883a 	add	r3,r22,r3
1001390c:	18800003 	ldbu	r2,0(r3)
10013910:	10008726 	beq	r2,zero,10013b30 <__gethex+0x2c0>
10013914:	b8800003 	ldbu	r2,0(r23)
10013918:	d8000015 	stw	zero,0(sp)
1001391c:	0021883a 	mov	r16,zero
10013920:	b085883a 	add	r2,r22,r2
10013924:	10800003 	ldbu	r2,0(r2)
10013928:	b823883a 	mov	r17,r23
1001392c:	10000526 	beq	r2,zero,10013944 <__gethex+0xd4>
10013930:	8c400044 	addi	r17,r17,1
10013934:	88800003 	ldbu	r2,0(r17)
10013938:	b085883a 	add	r2,r22,r2
1001393c:	10800003 	ldbu	r2,0(r2)
10013940:	103ffb1e 	bne	r2,zero,10013930 <__alt_data_end+0xf8013930>
10013944:	980d883a 	mov	r6,r19
10013948:	900b883a 	mov	r5,r18
1001394c:	8809883a 	mov	r4,r17
10013950:	00144300 	call	10014430 <strncmp>
10013954:	1000031e 	bne	r2,zero,10013964 <__gethex+0xf4>
10013958:	80015c26 	beq	r16,zero,10013ecc <__gethex+0x65c>
1001395c:	88800003 	ldbu	r2,0(r17)
10013960:	00000206 	br	1001396c <__gethex+0xfc>
10013964:	88800003 	ldbu	r2,0(r17)
10013968:	80012926 	beq	r16,zero,10013e10 <__gethex+0x5a0>
1001396c:	8c21c83a 	sub	r16,r17,r16
10013970:	8421883a 	add	r16,r16,r16
10013974:	8421883a 	add	r16,r16,r16
10013978:	0421c83a 	sub	r16,zero,r16
1001397c:	10803fcc 	andi	r2,r2,255
10013980:	01001404 	movi	r4,80
10013984:	11008826 	beq	r2,r4,10013ba8 <__gethex+0x338>
10013988:	01001c04 	movi	r4,112
1001398c:	11008626 	beq	r2,r4,10013ba8 <__gethex+0x338>
10013990:	882b883a 	mov	r21,r17
10013994:	d8c00017 	ldw	r3,0(sp)
10013998:	a4400015 	stw	r17,0(r20)
1001399c:	1800711e 	bne	r3,zero,10013b64 <__gethex+0x2f4>
100139a0:	adc5c83a 	sub	r2,r21,r23
100139a4:	10bfffc4 	addi	r2,r2,-1
100139a8:	00c001c4 	movi	r3,7
100139ac:	000b883a 	mov	r5,zero
100139b0:	1880030e 	bge	r3,r2,100139c0 <__gethex+0x150>
100139b4:	1005d07a 	srai	r2,r2,1
100139b8:	29400044 	addi	r5,r5,1
100139bc:	18bffd16 	blt	r3,r2,100139b4 <__alt_data_end+0xf80139b4>
100139c0:	d9000217 	ldw	r4,8(sp)
100139c4:	000b4c40 	call	1000b4c4 <_Balloc>
100139c8:	10c00504 	addi	r3,r2,20
100139cc:	d8c00015 	stw	r3,0(sp)
100139d0:	1029883a 	mov	r20,r2
100139d4:	bd417c2e 	bgeu	r23,r21,10013fc8 <__gethex+0x758>
100139d8:	dc400303 	ldbu	r17,12(sp)
100139dc:	03000044 	movi	r12,1
100139e0:	1813883a 	mov	r9,r3
100139e4:	0039883a 	mov	fp,zero
100139e8:	0007883a 	mov	r3,zero
100139ec:	64d9c83a 	sub	r12,r12,r19
100139f0:	02800804 	movi	r10,32
100139f4:	a8bfffc3 	ldbu	r2,-1(r21)
100139f8:	ab7fffc4 	addi	r13,r21,-1
100139fc:	88803026 	beq	r17,r2,10013ac0 <__gethex+0x250>
10013a00:	e2804526 	beq	fp,r10,10013b18 <__gethex+0x2a8>
10013a04:	e00b883a 	mov	r5,fp
10013a08:	e7000104 	addi	fp,fp,4
10013a0c:	a93fffc3 	ldbu	r4,-1(r21)
10013a10:	682b883a 	mov	r21,r13
10013a14:	b109883a 	add	r4,r22,r4
10013a18:	20800003 	ldbu	r2,0(r4)
10013a1c:	108003cc 	andi	r2,r2,15
10013a20:	1144983a 	sll	r2,r2,r5
10013a24:	1886b03a 	or	r3,r3,r2
10013a28:	bd7ff236 	bltu	r23,r21,100139f4 <__alt_data_end+0xf80139f4>
10013a2c:	d9000017 	ldw	r4,0(sp)
10013a30:	48800104 	addi	r2,r9,4
10013a34:	48c00015 	stw	r3,0(r9)
10013a38:	1105c83a 	sub	r2,r2,r4
10013a3c:	1005d0ba 	srai	r2,r2,2
10013a40:	1809883a 	mov	r4,r3
10013a44:	a0800415 	stw	r2,16(r20)
10013a48:	1022917a 	slli	r17,r2,5
10013a4c:	000b7e00 	call	1000b7e0 <__hi0bits>
10013a50:	d8c00117 	ldw	r3,4(sp)
10013a54:	8885c83a 	sub	r2,r17,r2
10013a58:	1c800017 	ldw	r18,0(r3)
10013a5c:	9080d016 	blt	r18,r2,10013da0 <__gethex+0x530>
10013a60:	1480ed16 	blt	r2,r18,10013e18 <__gethex+0x5a8>
10013a64:	0027883a 	mov	r19,zero
10013a68:	d8c00117 	ldw	r3,4(sp)
10013a6c:	18800217 	ldw	r2,8(r3)
10013a70:	14009416 	blt	r2,r16,10013cc4 <__gethex+0x454>
10013a74:	d8c00117 	ldw	r3,4(sp)
10013a78:	18800117 	ldw	r2,4(r3)
10013a7c:	8080b30e 	bge	r16,r2,10013d4c <__gethex+0x4dc>
10013a80:	1421c83a 	sub	r16,r2,r16
10013a84:	8480f616 	blt	r16,r18,10013e60 <__gethex+0x5f0>
10013a88:	18c00317 	ldw	r3,12(r3)
10013a8c:	01000084 	movi	r4,2
10013a90:	19015226 	beq	r3,r4,10013fdc <__gethex+0x76c>
10013a94:	010000c4 	movi	r4,3
10013a98:	19013726 	beq	r3,r4,10013f78 <__gethex+0x708>
10013a9c:	01000044 	movi	r4,1
10013aa0:	19015126 	beq	r3,r4,10013fe8 <__gethex+0x778>
10013aa4:	d9000217 	ldw	r4,8(sp)
10013aa8:	a00b883a 	mov	r5,r20
10013aac:	000b56c0 	call	1000b56c <_Bfree>
10013ab0:	d8801617 	ldw	r2,88(sp)
10013ab4:	10000015 	stw	zero,0(r2)
10013ab8:	00801404 	movi	r2,80
10013abc:	00002b06 	br	10013b6c <__gethex+0x2fc>
10013ac0:	6b1d883a 	add	r14,r13,r12
10013ac4:	75ffce36 	bltu	r14,r23,10013a00 <__alt_data_end+0xf8013a00>
10013ac8:	7009883a 	mov	r4,r14
10013acc:	980d883a 	mov	r6,r19
10013ad0:	900b883a 	mov	r5,r18
10013ad4:	d8c00715 	stw	r3,28(sp)
10013ad8:	da400615 	stw	r9,24(sp)
10013adc:	da800b15 	stw	r10,44(sp)
10013ae0:	db000a15 	stw	r12,40(sp)
10013ae4:	db400815 	stw	r13,32(sp)
10013ae8:	db800915 	stw	r14,36(sp)
10013aec:	00144300 	call	10014430 <strncmp>
10013af0:	d8c00717 	ldw	r3,28(sp)
10013af4:	da400617 	ldw	r9,24(sp)
10013af8:	da800b17 	ldw	r10,44(sp)
10013afc:	db000a17 	ldw	r12,40(sp)
10013b00:	db400817 	ldw	r13,32(sp)
10013b04:	db800917 	ldw	r14,36(sp)
10013b08:	103fbd1e 	bne	r2,zero,10013a00 <__alt_data_end+0xf8013a00>
10013b0c:	702b883a 	mov	r21,r14
10013b10:	bd7fb836 	bltu	r23,r21,100139f4 <__alt_data_end+0xf80139f4>
10013b14:	003fc506 	br	10013a2c <__alt_data_end+0xf8013a2c>
10013b18:	07000104 	movi	fp,4
10013b1c:	48c00015 	stw	r3,0(r9)
10013b20:	000b883a 	mov	r5,zero
10013b24:	4f13883a 	add	r9,r9,fp
10013b28:	0007883a 	mov	r3,zero
10013b2c:	003fb706 	br	10013a0c <__alt_data_end+0xf8013a0c>
10013b30:	980d883a 	mov	r6,r19
10013b34:	900b883a 	mov	r5,r18
10013b38:	b809883a 	mov	r4,r23
10013b3c:	00144300 	call	10014430 <strncmp>
10013b40:	10006c26 	beq	r2,zero,10013cf4 <__gethex+0x484>
10013b44:	b8800003 	ldbu	r2,0(r23)
10013b48:	b823883a 	mov	r17,r23
10013b4c:	10803fcc 	andi	r2,r2,255
10013b50:	01001404 	movi	r4,80
10013b54:	11001126 	beq	r2,r4,10013b9c <__gethex+0x32c>
10013b58:	01001c04 	movi	r4,112
10013b5c:	11000f26 	beq	r2,r4,10013b9c <__gethex+0x32c>
10013b60:	a4400015 	stw	r17,0(r20)
10013b64:	e0008c1e 	bne	fp,zero,10013d98 <__gethex+0x528>
10013b68:	00800184 	movi	r2,6
10013b6c:	dfc01517 	ldw	ra,84(sp)
10013b70:	df001417 	ldw	fp,80(sp)
10013b74:	ddc01317 	ldw	r23,76(sp)
10013b78:	dd801217 	ldw	r22,72(sp)
10013b7c:	dd401117 	ldw	r21,68(sp)
10013b80:	dd001017 	ldw	r20,64(sp)
10013b84:	dcc00f17 	ldw	r19,60(sp)
10013b88:	dc800e17 	ldw	r18,56(sp)
10013b8c:	dc400d17 	ldw	r17,52(sp)
10013b90:	dc000c17 	ldw	r16,48(sp)
10013b94:	dec01604 	addi	sp,sp,88
10013b98:	f800283a 	ret
10013b9c:	00c00044 	movi	r3,1
10013ba0:	0021883a 	mov	r16,zero
10013ba4:	d8c00015 	stw	r3,0(sp)
10013ba8:	88800043 	ldbu	r2,1(r17)
10013bac:	01400ac4 	movi	r5,43
10013bb0:	11003fcc 	andi	r4,r2,255
10013bb4:	21407626 	beq	r4,r5,10013d90 <__gethex+0x520>
10013bb8:	01400b44 	movi	r5,45
10013bbc:	21404826 	beq	r4,r5,10013ce0 <__gethex+0x470>
10013bc0:	8ac00044 	addi	r11,r17,1
10013bc4:	d8000515 	stw	zero,20(sp)
10013bc8:	10803fcc 	andi	r2,r2,255
10013bcc:	b085883a 	add	r2,r22,r2
10013bd0:	11000003 	ldbu	r4,0(r2)
10013bd4:	05400604 	movi	r21,24
10013bd8:	20bfffc4 	addi	r2,r4,-1
10013bdc:	10803fcc 	andi	r2,r2,255
10013be0:	a8bf6b36 	bltu	r21,r2,10013990 <__alt_data_end+0xf8013990>
10013be4:	58800043 	ldbu	r2,1(r11)
10013be8:	014400b4 	movhi	r5,4098
10013bec:	2972e004 	addi	r5,r5,-13440
10013bf0:	2885883a 	add	r2,r5,r2
10013bf4:	12800003 	ldbu	r10,0(r2)
10013bf8:	21003fcc 	andi	r4,r4,255
10013bfc:	213ffc04 	addi	r4,r4,-16
10013c00:	50bfffc4 	addi	r2,r10,-1
10013c04:	10803fcc 	andi	r2,r2,255
10013c08:	5ac00044 	addi	r11,r11,1
10013c0c:	51803fcc 	andi	r6,r10,255
10013c10:	a8801036 	bltu	r21,r2,10013c54 <__gethex+0x3e4>
10013c14:	5ac00044 	addi	r11,r11,1
10013c18:	01400284 	movi	r5,10
10013c1c:	d9800715 	stw	r6,28(sp)
10013c20:	dac00615 	stw	r11,24(sp)
10013c24:	00034380 	call	10003438 <__mulsi3>
10013c28:	dac00617 	ldw	r11,24(sp)
10013c2c:	d9800717 	ldw	r6,28(sp)
10013c30:	5a800003 	ldbu	r10,0(r11)
10013c34:	1185883a 	add	r2,r2,r6
10013c38:	113ffc04 	addi	r4,r2,-16
10013c3c:	b295883a 	add	r10,r22,r10
10013c40:	51400003 	ldbu	r5,0(r10)
10013c44:	2abfffc4 	addi	r10,r5,-1
10013c48:	52803fcc 	andi	r10,r10,255
10013c4c:	29803fcc 	andi	r6,r5,255
10013c50:	aabff02e 	bgeu	r21,r10,10013c14 <__alt_data_end+0xf8013c14>
10013c54:	d8c00517 	ldw	r3,20(sp)
10013c58:	18000126 	beq	r3,zero,10013c60 <__gethex+0x3f0>
10013c5c:	0109c83a 	sub	r4,zero,r4
10013c60:	882b883a 	mov	r21,r17
10013c64:	8121883a 	add	r16,r16,r4
10013c68:	5823883a 	mov	r17,r11
10013c6c:	003f4906 	br	10013994 <__alt_data_end+0xf8013994>
10013c70:	a0800217 	ldw	r2,8(r20)
10013c74:	a880f20e 	bge	r21,r2,10014040 <__gethex+0x7d0>
10013c78:	a807883a 	mov	r3,r21
10013c7c:	18800144 	addi	r2,r3,5
10013c80:	1085883a 	add	r2,r2,r2
10013c84:	18c00044 	addi	r3,r3,1
10013c88:	1085883a 	add	r2,r2,r2
10013c8c:	a085883a 	add	r2,r20,r2
10013c90:	a0c00415 	stw	r3,16(r20)
10013c94:	01000044 	movi	r4,1
10013c98:	11000015 	stw	r4,0(r2)
10013c9c:	00800084 	movi	r2,2
10013ca0:	8880da26 	beq	r17,r2,1001400c <__gethex+0x79c>
10013ca4:	a8c0ae0e 	bge	r21,r3,10013f60 <__gethex+0x6f0>
10013ca8:	01400044 	movi	r5,1
10013cac:	a009883a 	mov	r4,r20
10013cb0:	00137700 	call	10013770 <rshift>
10013cb4:	d8c00117 	ldw	r3,4(sp)
10013cb8:	84000044 	addi	r16,r16,1
10013cbc:	18800217 	ldw	r2,8(r3)
10013cc0:	1400a90e 	bge	r2,r16,10013f68 <__gethex+0x6f8>
10013cc4:	d9000217 	ldw	r4,8(sp)
10013cc8:	a00b883a 	mov	r5,r20
10013ccc:	000b56c0 	call	1000b56c <_Bfree>
10013cd0:	d9001617 	ldw	r4,88(sp)
10013cd4:	008028c4 	movi	r2,163
10013cd8:	20000015 	stw	zero,0(r4)
10013cdc:	003fa306 	br	10013b6c <__alt_data_end+0xf8013b6c>
10013ce0:	00c00044 	movi	r3,1
10013ce4:	d8c00515 	stw	r3,20(sp)
10013ce8:	88800083 	ldbu	r2,2(r17)
10013cec:	8ac00084 	addi	r11,r17,2
10013cf0:	003fb506 	br	10013bc8 <__alt_data_end+0xf8013bc8>
10013cf4:	bce3883a 	add	r17,r23,r19
10013cf8:	89000003 	ldbu	r4,0(r17)
10013cfc:	21403fcc 	andi	r5,r4,255
10013d00:	b145883a 	add	r2,r22,r5
10013d04:	10800003 	ldbu	r2,0(r2)
10013d08:	11803fcc 	andi	r6,r2,255
10013d0c:	30005026 	beq	r6,zero,10013e50 <__gethex+0x5e0>
10013d10:	01000c04 	movi	r4,48
10013d14:	882f883a 	mov	r23,r17
10013d18:	2900061e 	bne	r5,r4,10013d34 <__gethex+0x4c4>
10013d1c:	2809883a 	mov	r4,r5
10013d20:	bdc00044 	addi	r23,r23,1
10013d24:	b8800003 	ldbu	r2,0(r23)
10013d28:	113ffd26 	beq	r2,r4,10013d20 <__alt_data_end+0xf8013d20>
10013d2c:	b085883a 	add	r2,r22,r2
10013d30:	10800003 	ldbu	r2,0(r2)
10013d34:	10803fcc 	andi	r2,r2,255
10013d38:	1007003a 	cmpeq	r3,r2,zero
10013d3c:	d8c00015 	stw	r3,0(sp)
10013d40:	8821883a 	mov	r16,r17
10013d44:	07000044 	movi	fp,1
10013d48:	003ef706 	br	10013928 <__alt_data_end+0xf8013928>
10013d4c:	04400044 	movi	r17,1
10013d50:	98000926 	beq	r19,zero,10013d78 <__gethex+0x508>
10013d54:	d8c00117 	ldw	r3,4(sp)
10013d58:	18800317 	ldw	r2,12(r3)
10013d5c:	00c00084 	movi	r3,2
10013d60:	10c06826 	beq	r2,r3,10013f04 <__gethex+0x694>
10013d64:	00c000c4 	movi	r3,3
10013d68:	10c06a26 	beq	r2,r3,10013f14 <__gethex+0x6a4>
10013d6c:	00c00044 	movi	r3,1
10013d70:	10c08d26 	beq	r2,r3,10013fa8 <__gethex+0x738>
10013d74:	8c400414 	ori	r17,r17,16
10013d78:	d9001617 	ldw	r4,88(sp)
10013d7c:	d8c00417 	ldw	r3,16(sp)
10013d80:	8805883a 	mov	r2,r17
10013d84:	25000015 	stw	r20,0(r4)
10013d88:	1c000015 	stw	r16,0(r3)
10013d8c:	003f7706 	br	10013b6c <__alt_data_end+0xf8013b6c>
10013d90:	d8000515 	stw	zero,20(sp)
10013d94:	003fd406 	br	10013ce8 <__alt_data_end+0xf8013ce8>
10013d98:	0005883a 	mov	r2,zero
10013d9c:	003f7306 	br	10013b6c <__alt_data_end+0xf8013b6c>
10013da0:	14a3c83a 	sub	r17,r2,r18
10013da4:	880b883a 	mov	r5,r17
10013da8:	a009883a 	mov	r4,r20
10013dac:	000c4f00 	call	1000c4f0 <__any_on>
10013db0:	10002926 	beq	r2,zero,10013e58 <__gethex+0x5e8>
10013db4:	897fffc4 	addi	r5,r17,-1
10013db8:	2807d17a 	srai	r3,r5,5
10013dbc:	d8800017 	ldw	r2,0(sp)
10013dc0:	290007cc 	andi	r4,r5,31
10013dc4:	18c7883a 	add	r3,r3,r3
10013dc8:	18c7883a 	add	r3,r3,r3
10013dcc:	04c00044 	movi	r19,1
10013dd0:	10c7883a 	add	r3,r2,r3
10013dd4:	9908983a 	sll	r4,r19,r4
10013dd8:	18c00017 	ldw	r3,0(r3)
10013ddc:	20c6703a 	and	r3,r4,r3
10013de0:	18000626 	beq	r3,zero,10013dfc <__gethex+0x58c>
10013de4:	99407b0e 	bge	r19,r5,10013fd4 <__gethex+0x764>
10013de8:	897fff84 	addi	r5,r17,-2
10013dec:	a009883a 	mov	r4,r20
10013df0:	000c4f00 	call	1000c4f0 <__any_on>
10013df4:	10007726 	beq	r2,zero,10013fd4 <__gethex+0x764>
10013df8:	04c000c4 	movi	r19,3
10013dfc:	880b883a 	mov	r5,r17
10013e00:	a009883a 	mov	r4,r20
10013e04:	00137700 	call	10013770 <rshift>
10013e08:	8461883a 	add	r16,r16,r17
10013e0c:	003f1606 	br	10013a68 <__alt_data_end+0xf8013a68>
10013e10:	0021883a 	mov	r16,zero
10013e14:	003ed906 	br	1001397c <__alt_data_end+0xf801397c>
10013e18:	d9000217 	ldw	r4,8(sp)
10013e1c:	90a3c83a 	sub	r17,r18,r2
10013e20:	a00b883a 	mov	r5,r20
10013e24:	880d883a 	mov	r6,r17
10013e28:	000bd000 	call	1000bd00 <__lshift>
10013e2c:	10c00504 	addi	r3,r2,20
10013e30:	1029883a 	mov	r20,r2
10013e34:	8461c83a 	sub	r16,r16,r17
10013e38:	d8c00015 	stw	r3,0(sp)
10013e3c:	0027883a 	mov	r19,zero
10013e40:	003f0906 	br	10013a68 <__alt_data_end+0xf8013a68>
10013e44:	3dc00084 	addi	r23,r7,2
10013e48:	0039883a 	mov	fp,zero
10013e4c:	003eac06 	br	10013900 <__alt_data_end+0xf8013900>
10013e50:	2005883a 	mov	r2,r4
10013e54:	003f3d06 	br	10013b4c <__alt_data_end+0xf8013b4c>
10013e58:	0027883a 	mov	r19,zero
10013e5c:	003fe706 	br	10013dfc <__alt_data_end+0xf8013dfc>
10013e60:	847fffc4 	addi	r17,r16,-1
10013e64:	9800421e 	bne	r19,zero,10013f70 <__gethex+0x700>
10013e68:	88000426 	beq	r17,zero,10013e7c <__gethex+0x60c>
10013e6c:	880b883a 	mov	r5,r17
10013e70:	a009883a 	mov	r4,r20
10013e74:	000c4f00 	call	1000c4f0 <__any_on>
10013e78:	1027883a 	mov	r19,r2
10013e7c:	8805d17a 	srai	r2,r17,5
10013e80:	d8c00017 	ldw	r3,0(sp)
10013e84:	8c4007cc 	andi	r17,r17,31
10013e88:	1085883a 	add	r2,r2,r2
10013e8c:	1085883a 	add	r2,r2,r2
10013e90:	1885883a 	add	r2,r3,r2
10013e94:	00c00044 	movi	r3,1
10013e98:	1c62983a 	sll	r17,r3,r17
10013e9c:	10800017 	ldw	r2,0(r2)
10013ea0:	8884703a 	and	r2,r17,r2
10013ea4:	10000126 	beq	r2,zero,10013eac <__gethex+0x63c>
10013ea8:	9cc00094 	ori	r19,r19,2
10013eac:	800b883a 	mov	r5,r16
10013eb0:	a009883a 	mov	r4,r20
10013eb4:	00137700 	call	10013770 <rshift>
10013eb8:	d8c00117 	ldw	r3,4(sp)
10013ebc:	9425c83a 	sub	r18,r18,r16
10013ec0:	04400084 	movi	r17,2
10013ec4:	1c000117 	ldw	r16,4(r3)
10013ec8:	003fa106 	br	10013d50 <__alt_data_end+0xf8013d50>
10013ecc:	8ce1883a 	add	r16,r17,r19
10013ed0:	80800003 	ldbu	r2,0(r16)
10013ed4:	8023883a 	mov	r17,r16
10013ed8:	10c03fcc 	andi	r3,r2,255
10013edc:	b0c7883a 	add	r3,r22,r3
10013ee0:	18c00003 	ldbu	r3,0(r3)
10013ee4:	183ea026 	beq	r3,zero,10013968 <__alt_data_end+0xf8013968>
10013ee8:	8c400044 	addi	r17,r17,1
10013eec:	88800003 	ldbu	r2,0(r17)
10013ef0:	11003fcc 	andi	r4,r2,255
10013ef4:	b109883a 	add	r4,r22,r4
10013ef8:	21000003 	ldbu	r4,0(r4)
10013efc:	203ffa1e 	bne	r4,zero,10013ee8 <__alt_data_end+0xf8013ee8>
10013f00:	003e9906 	br	10013968 <__alt_data_end+0xf8013968>
10013f04:	d9001717 	ldw	r4,92(sp)
10013f08:	00800044 	movi	r2,1
10013f0c:	1109c83a 	sub	r4,r2,r4
10013f10:	d9001715 	stw	r4,92(sp)
10013f14:	d8801717 	ldw	r2,92(sp)
10013f18:	103f9626 	beq	r2,zero,10013d74 <__alt_data_end+0xf8013d74>
10013f1c:	a5400417 	ldw	r21,16(r20)
10013f20:	d9800017 	ldw	r6,0(sp)
10013f24:	013fffc4 	movi	r4,-1
10013f28:	ad67883a 	add	r19,r21,r21
10013f2c:	9ce7883a 	add	r19,r19,r19
10013f30:	3005883a 	mov	r2,r6
10013f34:	34cb883a 	add	r5,r6,r19
10013f38:	00000306 	br	10013f48 <__gethex+0x6d8>
10013f3c:	10000015 	stw	zero,0(r2)
10013f40:	10800104 	addi	r2,r2,4
10013f44:	117f4a2e 	bgeu	r2,r5,10013c70 <__alt_data_end+0xf8013c70>
10013f48:	10c00017 	ldw	r3,0(r2)
10013f4c:	193ffb26 	beq	r3,r4,10013f3c <__alt_data_end+0xf8013f3c>
10013f50:	18c00044 	addi	r3,r3,1
10013f54:	10c00015 	stw	r3,0(r2)
10013f58:	00800084 	movi	r2,2
10013f5c:	88802b26 	beq	r17,r2,1001400c <__gethex+0x79c>
10013f60:	948007cc 	andi	r18,r18,31
10013f64:	90002f1e 	bne	r18,zero,10014024 <__gethex+0x7b4>
10013f68:	04400844 	movi	r17,33
10013f6c:	003f8206 	br	10013d78 <__alt_data_end+0xf8013d78>
10013f70:	04c00044 	movi	r19,1
10013f74:	003fc106 	br	10013e7c <__alt_data_end+0xf8013e7c>
10013f78:	d8c01717 	ldw	r3,92(sp)
10013f7c:	183ec926 	beq	r3,zero,10013aa4 <__alt_data_end+0xf8013aa4>
10013f80:	d8c00417 	ldw	r3,16(sp)
10013f84:	d9001617 	ldw	r4,88(sp)
10013f88:	18800015 	stw	r2,0(r3)
10013f8c:	d8c00017 	ldw	r3,0(sp)
10013f90:	00800044 	movi	r2,1
10013f94:	a0800415 	stw	r2,16(r20)
10013f98:	18800015 	stw	r2,0(r3)
10013f9c:	25000015 	stw	r20,0(r4)
10013fa0:	00801884 	movi	r2,98
10013fa4:	003ef106 	br	10013b6c <__alt_data_end+0xf8013b6c>
10013fa8:	9880008c 	andi	r2,r19,2
10013fac:	103f7126 	beq	r2,zero,10013d74 <__alt_data_end+0xf8013d74>
10013fb0:	d8c00017 	ldw	r3,0(sp)
10013fb4:	18800017 	ldw	r2,0(r3)
10013fb8:	9884b03a 	or	r2,r19,r2
10013fbc:	1080004c 	andi	r2,r2,1
10013fc0:	103fd61e 	bne	r2,zero,10013f1c <__alt_data_end+0xf8013f1c>
10013fc4:	003f6b06 	br	10013d74 <__alt_data_end+0xf8013d74>
10013fc8:	da400017 	ldw	r9,0(sp)
10013fcc:	0007883a 	mov	r3,zero
10013fd0:	003e9606 	br	10013a2c <__alt_data_end+0xf8013a2c>
10013fd4:	04c00084 	movi	r19,2
10013fd8:	003f8806 	br	10013dfc <__alt_data_end+0xf8013dfc>
10013fdc:	d9001717 	ldw	r4,92(sp)
10013fe0:	203fe726 	beq	r4,zero,10013f80 <__alt_data_end+0xf8013f80>
10013fe4:	003eaf06 	br	10013aa4 <__alt_data_end+0xf8013aa4>
10013fe8:	943eae1e 	bne	r18,r16,10013aa4 <__alt_data_end+0xf8013aa4>
10013fec:	1cbfe40e 	bge	r3,r18,10013f80 <__alt_data_end+0xf8013f80>
10013ff0:	917fffc4 	addi	r5,r18,-1
10013ff4:	a009883a 	mov	r4,r20
10013ff8:	000c4f00 	call	1000c4f0 <__any_on>
10013ffc:	103ea926 	beq	r2,zero,10013aa4 <__alt_data_end+0xf8013aa4>
10014000:	d8c00117 	ldw	r3,4(sp)
10014004:	18800117 	ldw	r2,4(r3)
10014008:	003fdd06 	br	10013f80 <__alt_data_end+0xf8013f80>
1001400c:	d8c00117 	ldw	r3,4(sp)
10014010:	18800017 	ldw	r2,0(r3)
10014014:	10bfffc4 	addi	r2,r2,-1
10014018:	90801c26 	beq	r18,r2,1001408c <__gethex+0x81c>
1001401c:	04400884 	movi	r17,34
10014020:	003f5506 	br	10013d78 <__alt_data_end+0xf8013d78>
10014024:	34c5883a 	add	r2,r6,r19
10014028:	113fff17 	ldw	r4,-4(r2)
1001402c:	000b7e00 	call	1000b7e0 <__hi0bits>
10014030:	00c00804 	movi	r3,32
10014034:	1ca5c83a 	sub	r18,r3,r18
10014038:	14bfcb0e 	bge	r2,r18,10013f68 <__alt_data_end+0xf8013f68>
1001403c:	003f1a06 	br	10013ca8 <__alt_data_end+0xf8013ca8>
10014040:	a1400117 	ldw	r5,4(r20)
10014044:	d9000217 	ldw	r4,8(sp)
10014048:	29400044 	addi	r5,r5,1
1001404c:	000b4c40 	call	1000b4c4 <_Balloc>
10014050:	a1800417 	ldw	r6,16(r20)
10014054:	a1400304 	addi	r5,r20,12
10014058:	11000304 	addi	r4,r2,12
1001405c:	31800084 	addi	r6,r6,2
10014060:	318d883a 	add	r6,r6,r6
10014064:	318d883a 	add	r6,r6,r6
10014068:	102d883a 	mov	r22,r2
1001406c:	000b0f80 	call	1000b0f8 <memcpy>
10014070:	d9000217 	ldw	r4,8(sp)
10014074:	a00b883a 	mov	r5,r20
10014078:	b029883a 	mov	r20,r22
1001407c:	000b56c0 	call	1000b56c <_Bfree>
10014080:	b0c00417 	ldw	r3,16(r22)
10014084:	b1800504 	addi	r6,r22,20
10014088:	003efc06 	br	10013c7c <__alt_data_end+0xf8013c7c>
1001408c:	9005d17a 	srai	r2,r18,5
10014090:	944007cc 	andi	r17,r18,31
10014094:	1085883a 	add	r2,r2,r2
10014098:	1085883a 	add	r2,r2,r2
1001409c:	3087883a 	add	r3,r6,r2
100140a0:	00800044 	movi	r2,1
100140a4:	1462983a 	sll	r17,r2,r17
100140a8:	18800017 	ldw	r2,0(r3)
100140ac:	8884703a 	and	r2,r17,r2
100140b0:	1022c03a 	cmpne	r17,r2,zero
100140b4:	00800884 	movi	r2,34
100140b8:	1463c83a 	sub	r17,r2,r17
100140bc:	003f2e06 	br	10013d78 <__alt_data_end+0xf8013d78>

100140c0 <__hexnan>:
100140c0:	defff904 	addi	sp,sp,-28
100140c4:	dc800215 	stw	r18,8(sp)
100140c8:	2c800017 	ldw	r18,0(r5)
100140cc:	dfc00615 	stw	ra,24(sp)
100140d0:	dd400515 	stw	r21,20(sp)
100140d4:	901fd17a 	srai	r15,r18,5
100140d8:	dd000415 	stw	r20,16(sp)
100140dc:	dcc00315 	stw	r19,12(sp)
100140e0:	7bdf883a 	add	r15,r15,r15
100140e4:	7bdf883a 	add	r15,r15,r15
100140e8:	dc400115 	stw	r17,4(sp)
100140ec:	dc000015 	stw	r16,0(sp)
100140f0:	948007cc 	andi	r18,r18,31
100140f4:	33df883a 	add	r15,r6,r15
100140f8:	90000126 	beq	r18,zero,10014100 <__hexnan+0x40>
100140fc:	7bc00104 	addi	r15,r15,4
10014100:	22000017 	ldw	r8,0(r4)
10014104:	7affff04 	addi	r11,r15,-4
10014108:	038400b4 	movhi	r14,4098
1001410c:	783fff15 	stw	zero,-4(r15)
10014110:	581b883a 	mov	r13,r11
10014114:	580b883a 	mov	r5,r11
10014118:	000f883a 	mov	r7,zero
1001411c:	003f883a 	mov	ra,zero
10014120:	0019883a 	mov	r12,zero
10014124:	73b2e004 	addi	r14,r14,-13440
10014128:	04400204 	movi	r17,8
1001412c:	04000804 	movi	r16,32
10014130:	04c001c4 	movi	r19,7
10014134:	42000044 	addi	r8,r8,1
10014138:	40c00003 	ldbu	r3,0(r8)
1001413c:	18001d26 	beq	r3,zero,100141b4 <__hexnan+0xf4>
10014140:	70c5883a 	add	r2,r14,r3
10014144:	10800003 	ldbu	r2,0(r2)
10014148:	12403fcc 	andi	r9,r2,255
1001414c:	4800301e 	bne	r9,zero,10014210 <__hexnan+0x150>
10014150:	80c04236 	bltu	r16,r3,1001425c <__hexnan+0x19c>
10014154:	fb3ff70e 	bge	ra,r12,10014134 <__alt_data_end+0xf8014134>
10014158:	2b40112e 	bgeu	r5,r13,100141a0 <__hexnan+0xe0>
1001415c:	99c01016 	blt	r19,r7,100141a0 <__hexnan+0xe0>
10014160:	89e9c83a 	sub	r20,r17,r7
10014164:	a529883a 	add	r20,r20,r20
10014168:	2a800017 	ldw	r10,0(r5)
1001416c:	a529883a 	add	r20,r20,r20
10014170:	852bc83a 	sub	r21,r16,r20
10014174:	28c00104 	addi	r3,r5,4
10014178:	2805883a 	mov	r2,r5
1001417c:	19c00017 	ldw	r7,0(r3)
10014180:	10800104 	addi	r2,r2,4
10014184:	18c00104 	addi	r3,r3,4
10014188:	3d52983a 	sll	r9,r7,r21
1001418c:	4a92b03a 	or	r9,r9,r10
10014190:	3d14d83a 	srl	r10,r7,r20
10014194:	127fff15 	stw	r9,-4(r2)
10014198:	1abfff15 	stw	r10,-4(r3)
1001419c:	137ff736 	bltu	r2,r13,1001417c <__alt_data_end+0xf801417c>
100141a0:	31402836 	bltu	r6,r5,10014244 <__hexnan+0x184>
100141a4:	42000044 	addi	r8,r8,1
100141a8:	40c00003 	ldbu	r3,0(r8)
100141ac:	01c00204 	movi	r7,8
100141b0:	183fe31e 	bne	r3,zero,10014140 <__alt_data_end+0xf8014140>
100141b4:	60002b26 	beq	r12,zero,10014264 <__hexnan+0x1a4>
100141b8:	2b40022e 	bgeu	r5,r13,100141c4 <__hexnan+0x104>
100141bc:	008001c4 	movi	r2,7
100141c0:	11c0430e 	bge	r2,r7,100142d0 <__hexnan+0x210>
100141c4:	3140312e 	bgeu	r6,r5,1001428c <__hexnan+0x1cc>
100141c8:	3007883a 	mov	r3,r6
100141cc:	29000017 	ldw	r4,0(r5)
100141d0:	18800104 	addi	r2,r3,4
100141d4:	29400104 	addi	r5,r5,4
100141d8:	19000015 	stw	r4,0(r3)
100141dc:	1007883a 	mov	r3,r2
100141e0:	597ffa2e 	bgeu	r11,r5,100141cc <__alt_data_end+0xf80141cc>
100141e4:	10000015 	stw	zero,0(r2)
100141e8:	10800104 	addi	r2,r2,4
100141ec:	58bffd2e 	bgeu	r11,r2,100141e4 <__alt_data_end+0xf80141e4>
100141f0:	78bfff17 	ldw	r2,-4(r15)
100141f4:	1000041e 	bne	r2,zero,10014208 <__hexnan+0x148>
100141f8:	32c02d26 	beq	r6,r11,100142b0 <__hexnan+0x1f0>
100141fc:	5affff04 	addi	r11,r11,-4
10014200:	58800017 	ldw	r2,0(r11)
10014204:	103ffc26 	beq	r2,zero,100141f8 <__alt_data_end+0xf80141f8>
10014208:	00800144 	movi	r2,5
1001420c:	00001606 	br	10014268 <__hexnan+0x1a8>
10014210:	39c00044 	addi	r7,r7,1
10014214:	63000044 	addi	r12,r12,1
10014218:	89c0040e 	bge	r17,r7,1001422c <__hexnan+0x16c>
1001421c:	317fc52e 	bgeu	r6,r5,10014134 <__alt_data_end+0xf8014134>
10014220:	283fff15 	stw	zero,-4(r5)
10014224:	01c00044 	movi	r7,1
10014228:	297fff04 	addi	r5,r5,-4
1001422c:	28c00017 	ldw	r3,0(r5)
10014230:	108003cc 	andi	r2,r2,15
10014234:	1806913a 	slli	r3,r3,4
10014238:	1884b03a 	or	r2,r3,r2
1001423c:	28800015 	stw	r2,0(r5)
10014240:	003fbc06 	br	10014134 <__alt_data_end+0xf8014134>
10014244:	2b7fff04 	addi	r13,r5,-4
10014248:	283fff15 	stw	zero,-4(r5)
1001424c:	603f883a 	mov	ra,r12
10014250:	680b883a 	mov	r5,r13
10014254:	000f883a 	mov	r7,zero
10014258:	003fb606 	br	10014134 <__alt_data_end+0xf8014134>
1001425c:	00800a44 	movi	r2,41
10014260:	18801726 	beq	r3,r2,100142c0 <__hexnan+0x200>
10014264:	00800104 	movi	r2,4
10014268:	dfc00617 	ldw	ra,24(sp)
1001426c:	dd400517 	ldw	r21,20(sp)
10014270:	dd000417 	ldw	r20,16(sp)
10014274:	dcc00317 	ldw	r19,12(sp)
10014278:	dc800217 	ldw	r18,8(sp)
1001427c:	dc400117 	ldw	r17,4(sp)
10014280:	dc000017 	ldw	r16,0(sp)
10014284:	dec00704 	addi	sp,sp,28
10014288:	f800283a 	ret
1001428c:	903fd826 	beq	r18,zero,100141f0 <__alt_data_end+0xf80141f0>
10014290:	00c00804 	movi	r3,32
10014294:	1ca5c83a 	sub	r18,r3,r18
10014298:	00ffffc4 	movi	r3,-1
1001429c:	78bfff17 	ldw	r2,-4(r15)
100142a0:	1c86d83a 	srl	r3,r3,r18
100142a4:	1884703a 	and	r2,r3,r2
100142a8:	78bfff15 	stw	r2,-4(r15)
100142ac:	003fd106 	br	100141f4 <__alt_data_end+0xf80141f4>
100142b0:	00800044 	movi	r2,1
100142b4:	58800015 	stw	r2,0(r11)
100142b8:	00800144 	movi	r2,5
100142bc:	003fea06 	br	10014268 <__alt_data_end+0xf8014268>
100142c0:	42000044 	addi	r8,r8,1
100142c4:	22000015 	stw	r8,0(r4)
100142c8:	603fbb1e 	bne	r12,zero,100141b8 <__alt_data_end+0xf80141b8>
100142cc:	003fe506 	br	10014264 <__alt_data_end+0xf8014264>
100142d0:	02400204 	movi	r9,8
100142d4:	49d3c83a 	sub	r9,r9,r7
100142d8:	4a53883a 	add	r9,r9,r9
100142dc:	2a000017 	ldw	r8,0(r5)
100142e0:	4a53883a 	add	r9,r9,r9
100142e4:	02800804 	movi	r10,32
100142e8:	5255c83a 	sub	r10,r10,r9
100142ec:	28c00104 	addi	r3,r5,4
100142f0:	2805883a 	mov	r2,r5
100142f4:	19c00017 	ldw	r7,0(r3)
100142f8:	10800104 	addi	r2,r2,4
100142fc:	18c00104 	addi	r3,r3,4
10014300:	3a88983a 	sll	r4,r7,r10
10014304:	2208b03a 	or	r4,r4,r8
10014308:	3a50d83a 	srl	r8,r7,r9
1001430c:	113fff15 	stw	r4,-4(r2)
10014310:	1a3fff15 	stw	r8,-4(r3)
10014314:	137ff736 	bltu	r2,r13,100142f4 <__alt_data_end+0xf80142f4>
10014318:	003faa06 	br	100141c4 <__alt_data_end+0xf80141c4>

1001431c <_isatty_r>:
1001431c:	defffd04 	addi	sp,sp,-12
10014320:	dc000015 	stw	r16,0(sp)
10014324:	040400b4 	movhi	r16,4098
10014328:	dc400115 	stw	r17,4(sp)
1001432c:	8400f504 	addi	r16,r16,980
10014330:	2023883a 	mov	r17,r4
10014334:	2809883a 	mov	r4,r5
10014338:	dfc00215 	stw	ra,8(sp)
1001433c:	80000015 	stw	zero,0(r16)
10014340:	00198500 	call	10019850 <isatty>
10014344:	00ffffc4 	movi	r3,-1
10014348:	10c00526 	beq	r2,r3,10014360 <_isatty_r+0x44>
1001434c:	dfc00217 	ldw	ra,8(sp)
10014350:	dc400117 	ldw	r17,4(sp)
10014354:	dc000017 	ldw	r16,0(sp)
10014358:	dec00304 	addi	sp,sp,12
1001435c:	f800283a 	ret
10014360:	80c00017 	ldw	r3,0(r16)
10014364:	183ff926 	beq	r3,zero,1001434c <__alt_data_end+0xf801434c>
10014368:	88c00015 	stw	r3,0(r17)
1001436c:	003ff706 	br	1001434c <__alt_data_end+0xf801434c>

10014370 <_lseek_r>:
10014370:	defffd04 	addi	sp,sp,-12
10014374:	2805883a 	mov	r2,r5
10014378:	dc000015 	stw	r16,0(sp)
1001437c:	040400b4 	movhi	r16,4098
10014380:	dc400115 	stw	r17,4(sp)
10014384:	300b883a 	mov	r5,r6
10014388:	8400f504 	addi	r16,r16,980
1001438c:	2023883a 	mov	r17,r4
10014390:	380d883a 	mov	r6,r7
10014394:	1009883a 	mov	r4,r2
10014398:	dfc00215 	stw	ra,8(sp)
1001439c:	80000015 	stw	zero,0(r16)
100143a0:	0019a240 	call	10019a24 <lseek>
100143a4:	00ffffc4 	movi	r3,-1
100143a8:	10c00526 	beq	r2,r3,100143c0 <_lseek_r+0x50>
100143ac:	dfc00217 	ldw	ra,8(sp)
100143b0:	dc400117 	ldw	r17,4(sp)
100143b4:	dc000017 	ldw	r16,0(sp)
100143b8:	dec00304 	addi	sp,sp,12
100143bc:	f800283a 	ret
100143c0:	80c00017 	ldw	r3,0(r16)
100143c4:	183ff926 	beq	r3,zero,100143ac <__alt_data_end+0xf80143ac>
100143c8:	88c00015 	stw	r3,0(r17)
100143cc:	003ff706 	br	100143ac <__alt_data_end+0xf80143ac>

100143d0 <_read_r>:
100143d0:	defffd04 	addi	sp,sp,-12
100143d4:	2805883a 	mov	r2,r5
100143d8:	dc000015 	stw	r16,0(sp)
100143dc:	040400b4 	movhi	r16,4098
100143e0:	dc400115 	stw	r17,4(sp)
100143e4:	300b883a 	mov	r5,r6
100143e8:	8400f504 	addi	r16,r16,980
100143ec:	2023883a 	mov	r17,r4
100143f0:	380d883a 	mov	r6,r7
100143f4:	1009883a 	mov	r4,r2
100143f8:	dfc00215 	stw	ra,8(sp)
100143fc:	80000015 	stw	zero,0(r16)
10014400:	0019c000 	call	10019c00 <read>
10014404:	00ffffc4 	movi	r3,-1
10014408:	10c00526 	beq	r2,r3,10014420 <_read_r+0x50>
1001440c:	dfc00217 	ldw	ra,8(sp)
10014410:	dc400117 	ldw	r17,4(sp)
10014414:	dc000017 	ldw	r16,0(sp)
10014418:	dec00304 	addi	sp,sp,12
1001441c:	f800283a 	ret
10014420:	80c00017 	ldw	r3,0(r16)
10014424:	183ff926 	beq	r3,zero,1001440c <__alt_data_end+0xf801440c>
10014428:	88c00015 	stw	r3,0(r17)
1001442c:	003ff706 	br	1001440c <__alt_data_end+0xf801440c>

10014430 <strncmp>:
10014430:	30003126 	beq	r6,zero,100144f8 <strncmp+0xc8>
10014434:	2144b03a 	or	r2,r4,r5
10014438:	108000cc 	andi	r2,r2,3
1001443c:	10001e1e 	bne	r2,zero,100144b8 <strncmp+0x88>
10014440:	024000c4 	movi	r9,3
10014444:	49801c2e 	bgeu	r9,r6,100144b8 <strncmp+0x88>
10014448:	20800017 	ldw	r2,0(r4)
1001444c:	28c00017 	ldw	r3,0(r5)
10014450:	10c0191e 	bne	r2,r3,100144b8 <strncmp+0x88>
10014454:	31bfff04 	addi	r6,r6,-4
10014458:	30002726 	beq	r6,zero,100144f8 <strncmp+0xc8>
1001445c:	02ffbff4 	movhi	r11,65279
10014460:	5affbfc4 	addi	r11,r11,-257
10014464:	0086303a 	nor	r3,zero,r2
10014468:	02a02074 	movhi	r10,32897
1001446c:	12c5883a 	add	r2,r2,r11
10014470:	52a02004 	addi	r10,r10,-32640
10014474:	10c4703a 	and	r2,r2,r3
10014478:	1284703a 	and	r2,r2,r10
1001447c:	10000b26 	beq	r2,zero,100144ac <strncmp+0x7c>
10014480:	00001d06 	br	100144f8 <strncmp+0xc8>
10014484:	20c00017 	ldw	r3,0(r4)
10014488:	29c00017 	ldw	r7,0(r5)
1001448c:	1ad1883a 	add	r8,r3,r11
10014490:	00c4303a 	nor	r2,zero,r3
10014494:	4084703a 	and	r2,r8,r2
10014498:	1284703a 	and	r2,r2,r10
1001449c:	19c0061e 	bne	r3,r7,100144b8 <strncmp+0x88>
100144a0:	31bfff04 	addi	r6,r6,-4
100144a4:	30001426 	beq	r6,zero,100144f8 <strncmp+0xc8>
100144a8:	1000131e 	bne	r2,zero,100144f8 <strncmp+0xc8>
100144ac:	21000104 	addi	r4,r4,4
100144b0:	29400104 	addi	r5,r5,4
100144b4:	49bff336 	bltu	r9,r6,10014484 <__alt_data_end+0xf8014484>
100144b8:	28800007 	ldb	r2,0(r5)
100144bc:	20c00007 	ldb	r3,0(r4)
100144c0:	31bfffc4 	addi	r6,r6,-1
100144c4:	10c0081e 	bne	r2,r3,100144e8 <strncmp+0xb8>
100144c8:	30000b26 	beq	r6,zero,100144f8 <strncmp+0xc8>
100144cc:	10000a26 	beq	r2,zero,100144f8 <strncmp+0xc8>
100144d0:	21000044 	addi	r4,r4,1
100144d4:	29400044 	addi	r5,r5,1
100144d8:	20800007 	ldb	r2,0(r4)
100144dc:	28c00007 	ldb	r3,0(r5)
100144e0:	31bfffc4 	addi	r6,r6,-1
100144e4:	10fff826 	beq	r2,r3,100144c8 <__alt_data_end+0xf80144c8>
100144e8:	20800003 	ldbu	r2,0(r4)
100144ec:	28c00003 	ldbu	r3,0(r5)
100144f0:	10c5c83a 	sub	r2,r2,r3
100144f4:	f800283a 	ret
100144f8:	0005883a 	mov	r2,zero
100144fc:	f800283a 	ret

10014500 <__ssprint_r>:
10014500:	30800217 	ldw	r2,8(r6)
10014504:	defff604 	addi	sp,sp,-40
10014508:	dc800215 	stw	r18,8(sp)
1001450c:	dfc00915 	stw	ra,36(sp)
10014510:	df000815 	stw	fp,32(sp)
10014514:	ddc00715 	stw	r23,28(sp)
10014518:	dd800615 	stw	r22,24(sp)
1001451c:	dd400515 	stw	r21,20(sp)
10014520:	dd000415 	stw	r20,16(sp)
10014524:	dcc00315 	stw	r19,12(sp)
10014528:	dc400115 	stw	r17,4(sp)
1001452c:	dc000015 	stw	r16,0(sp)
10014530:	3025883a 	mov	r18,r6
10014534:	10005826 	beq	r2,zero,10014698 <__ssprint_r+0x198>
10014538:	2027883a 	mov	r19,r4
1001453c:	35c00017 	ldw	r23,0(r6)
10014540:	29000017 	ldw	r4,0(r5)
10014544:	28800217 	ldw	r2,8(r5)
10014548:	2823883a 	mov	r17,r5
1001454c:	0039883a 	mov	fp,zero
10014550:	0021883a 	mov	r16,zero
10014554:	80003926 	beq	r16,zero,1001463c <__ssprint_r+0x13c>
10014558:	102b883a 	mov	r21,r2
1001455c:	102d883a 	mov	r22,r2
10014560:	80803a36 	bltu	r16,r2,1001464c <__ssprint_r+0x14c>
10014564:	88c0030b 	ldhu	r3,12(r17)
10014568:	1881200c 	andi	r2,r3,1152
1001456c:	10002626 	beq	r2,zero,10014608 <__ssprint_r+0x108>
10014570:	88800517 	ldw	r2,20(r17)
10014574:	89400417 	ldw	r5,16(r17)
10014578:	81800044 	addi	r6,r16,1
1001457c:	108f883a 	add	r7,r2,r2
10014580:	3885883a 	add	r2,r7,r2
10014584:	100ed7fa 	srli	r7,r2,31
10014588:	216dc83a 	sub	r22,r4,r5
1001458c:	3589883a 	add	r4,r6,r22
10014590:	3885883a 	add	r2,r7,r2
10014594:	102bd07a 	srai	r21,r2,1
10014598:	a80d883a 	mov	r6,r21
1001459c:	a900022e 	bgeu	r21,r4,100145a8 <__ssprint_r+0xa8>
100145a0:	202b883a 	mov	r21,r4
100145a4:	200d883a 	mov	r6,r4
100145a8:	18c1000c 	andi	r3,r3,1024
100145ac:	18002a26 	beq	r3,zero,10014658 <__ssprint_r+0x158>
100145b0:	300b883a 	mov	r5,r6
100145b4:	9809883a 	mov	r4,r19
100145b8:	00034880 	call	10003488 <_malloc_r>
100145bc:	1029883a 	mov	r20,r2
100145c0:	10002c26 	beq	r2,zero,10014674 <__ssprint_r+0x174>
100145c4:	89400417 	ldw	r5,16(r17)
100145c8:	b00d883a 	mov	r6,r22
100145cc:	1009883a 	mov	r4,r2
100145d0:	000b0f80 	call	1000b0f8 <memcpy>
100145d4:	8880030b 	ldhu	r2,12(r17)
100145d8:	00fedfc4 	movi	r3,-1153
100145dc:	10c4703a 	and	r2,r2,r3
100145e0:	10802014 	ori	r2,r2,128
100145e4:	8880030d 	sth	r2,12(r17)
100145e8:	a589883a 	add	r4,r20,r22
100145ec:	adadc83a 	sub	r22,r21,r22
100145f0:	8d400515 	stw	r21,20(r17)
100145f4:	8d800215 	stw	r22,8(r17)
100145f8:	8d000415 	stw	r20,16(r17)
100145fc:	89000015 	stw	r4,0(r17)
10014600:	802b883a 	mov	r21,r16
10014604:	802d883a 	mov	r22,r16
10014608:	b00d883a 	mov	r6,r22
1001460c:	e00b883a 	mov	r5,fp
10014610:	000b2400 	call	1000b240 <memmove>
10014614:	88800217 	ldw	r2,8(r17)
10014618:	89000017 	ldw	r4,0(r17)
1001461c:	90c00217 	ldw	r3,8(r18)
10014620:	1545c83a 	sub	r2,r2,r21
10014624:	2589883a 	add	r4,r4,r22
10014628:	88800215 	stw	r2,8(r17)
1001462c:	89000015 	stw	r4,0(r17)
10014630:	1c21c83a 	sub	r16,r3,r16
10014634:	94000215 	stw	r16,8(r18)
10014638:	80001726 	beq	r16,zero,10014698 <__ssprint_r+0x198>
1001463c:	bf000017 	ldw	fp,0(r23)
10014640:	bc000117 	ldw	r16,4(r23)
10014644:	bdc00204 	addi	r23,r23,8
10014648:	003fc206 	br	10014554 <__alt_data_end+0xf8014554>
1001464c:	802b883a 	mov	r21,r16
10014650:	802d883a 	mov	r22,r16
10014654:	003fec06 	br	10014608 <__alt_data_end+0xf8014608>
10014658:	9809883a 	mov	r4,r19
1001465c:	000c6e40 	call	1000c6e4 <_realloc_r>
10014660:	1029883a 	mov	r20,r2
10014664:	103fe01e 	bne	r2,zero,100145e8 <__alt_data_end+0xf80145e8>
10014668:	89400417 	ldw	r5,16(r17)
1001466c:	9809883a 	mov	r4,r19
10014670:	000a1c80 	call	1000a1c8 <_free_r>
10014674:	88c0030b 	ldhu	r3,12(r17)
10014678:	00800304 	movi	r2,12
1001467c:	98800015 	stw	r2,0(r19)
10014680:	18c01014 	ori	r3,r3,64
10014684:	88c0030d 	sth	r3,12(r17)
10014688:	00bfffc4 	movi	r2,-1
1001468c:	90000215 	stw	zero,8(r18)
10014690:	90000115 	stw	zero,4(r18)
10014694:	00000206 	br	100146a0 <__ssprint_r+0x1a0>
10014698:	90000115 	stw	zero,4(r18)
1001469c:	0005883a 	mov	r2,zero
100146a0:	dfc00917 	ldw	ra,36(sp)
100146a4:	df000817 	ldw	fp,32(sp)
100146a8:	ddc00717 	ldw	r23,28(sp)
100146ac:	dd800617 	ldw	r22,24(sp)
100146b0:	dd400517 	ldw	r21,20(sp)
100146b4:	dd000417 	ldw	r20,16(sp)
100146b8:	dcc00317 	ldw	r19,12(sp)
100146bc:	dc800217 	ldw	r18,8(sp)
100146c0:	dc400117 	ldw	r17,4(sp)
100146c4:	dc000017 	ldw	r16,0(sp)
100146c8:	dec00a04 	addi	sp,sp,40
100146cc:	f800283a 	ret

100146d0 <___svfiprintf_internal_r>:
100146d0:	2880030b 	ldhu	r2,12(r5)
100146d4:	deffc804 	addi	sp,sp,-224
100146d8:	dcc03115 	stw	r19,196(sp)
100146dc:	dfc03715 	stw	ra,220(sp)
100146e0:	df003615 	stw	fp,216(sp)
100146e4:	ddc03515 	stw	r23,212(sp)
100146e8:	dd803415 	stw	r22,208(sp)
100146ec:	dd403315 	stw	r21,204(sp)
100146f0:	dd003215 	stw	r20,200(sp)
100146f4:	dc803015 	stw	r18,192(sp)
100146f8:	dc402f15 	stw	r17,188(sp)
100146fc:	dc002e15 	stw	r16,184(sp)
10014700:	d9402315 	stw	r5,140(sp)
10014704:	d9002715 	stw	r4,156(sp)
10014708:	1080200c 	andi	r2,r2,128
1001470c:	d9c02415 	stw	r7,144(sp)
10014710:	3027883a 	mov	r19,r6
10014714:	10000226 	beq	r2,zero,10014720 <___svfiprintf_internal_r+0x50>
10014718:	28800417 	ldw	r2,16(r5)
1001471c:	10046d26 	beq	r2,zero,100158d4 <___svfiprintf_internal_r+0x1204>
10014720:	d8801a04 	addi	r2,sp,104
10014724:	d8c019c4 	addi	r3,sp,103
10014728:	058400b4 	movhi	r22,4098
1001472c:	10c9c83a 	sub	r4,r2,r3
10014730:	b5b32004 	addi	r22,r22,-13184
10014734:	d8801e15 	stw	r2,120(sp)
10014738:	d8c01f15 	stw	r3,124(sp)
1001473c:	dec01a15 	stw	sp,104(sp)
10014740:	d8001c15 	stw	zero,112(sp)
10014744:	d8001b15 	stw	zero,108(sp)
10014748:	d811883a 	mov	r8,sp
1001474c:	d8002915 	stw	zero,164(sp)
10014750:	d8002615 	stw	zero,152(sp)
10014754:	d9002c15 	stw	r4,176(sp)
10014758:	98800007 	ldb	r2,0(r19)
1001475c:	10031426 	beq	r2,zero,100153b0 <___svfiprintf_internal_r+0xce0>
10014760:	00c00944 	movi	r3,37
10014764:	9825883a 	mov	r18,r19
10014768:	10c0021e 	bne	r2,r3,10014774 <___svfiprintf_internal_r+0xa4>
1001476c:	00001406 	br	100147c0 <___svfiprintf_internal_r+0xf0>
10014770:	10c00326 	beq	r2,r3,10014780 <___svfiprintf_internal_r+0xb0>
10014774:	94800044 	addi	r18,r18,1
10014778:	90800007 	ldb	r2,0(r18)
1001477c:	103ffc1e 	bne	r2,zero,10014770 <__alt_data_end+0xf8014770>
10014780:	94e1c83a 	sub	r16,r18,r19
10014784:	80000e26 	beq	r16,zero,100147c0 <___svfiprintf_internal_r+0xf0>
10014788:	d8c01c17 	ldw	r3,112(sp)
1001478c:	d8801b17 	ldw	r2,108(sp)
10014790:	44c00015 	stw	r19,0(r8)
10014794:	1c07883a 	add	r3,r3,r16
10014798:	10800044 	addi	r2,r2,1
1001479c:	d8c01c15 	stw	r3,112(sp)
100147a0:	44000115 	stw	r16,4(r8)
100147a4:	d8801b15 	stw	r2,108(sp)
100147a8:	00c001c4 	movi	r3,7
100147ac:	18835c16 	blt	r3,r2,10015520 <___svfiprintf_internal_r+0xe50>
100147b0:	42000204 	addi	r8,r8,8
100147b4:	d9402617 	ldw	r5,152(sp)
100147b8:	2c0b883a 	add	r5,r5,r16
100147bc:	d9402615 	stw	r5,152(sp)
100147c0:	90800007 	ldb	r2,0(r18)
100147c4:	1002fc26 	beq	r2,zero,100153b8 <___svfiprintf_internal_r+0xce8>
100147c8:	0023883a 	mov	r17,zero
100147cc:	00bfffc4 	movi	r2,-1
100147d0:	0021883a 	mov	r16,zero
100147d4:	94c00044 	addi	r19,r18,1
100147d8:	90c00047 	ldb	r3,1(r18)
100147dc:	dc402105 	stb	r17,132(sp)
100147e0:	d8001d85 	stb	zero,118(sp)
100147e4:	002b883a 	mov	r21,zero
100147e8:	d8802015 	stw	r2,128(sp)
100147ec:	d8002515 	stw	zero,148(sp)
100147f0:	04801604 	movi	r18,88
100147f4:	05000244 	movi	r20,9
100147f8:	402f883a 	mov	r23,r8
100147fc:	8023883a 	mov	r17,r16
10014800:	9cc00044 	addi	r19,r19,1
10014804:	18bff804 	addi	r2,r3,-32
10014808:	9081fb36 	bltu	r18,r2,10014ff8 <___svfiprintf_internal_r+0x928>
1001480c:	100490ba 	slli	r2,r2,2
10014810:	01040074 	movhi	r4,4097
10014814:	21120904 	addi	r4,r4,18468
10014818:	1105883a 	add	r2,r2,r4
1001481c:	10800017 	ldw	r2,0(r2)
10014820:	1000683a 	jmp	r2
10014824:	10014a24 	muli	zero,r2,1320
10014828:	10014ff8 	rdprs	zero,r2,1343
1001482c:	10014ff8 	rdprs	zero,r2,1343
10014830:	10014a18 	cmpnei	zero,r2,1320
10014834:	10014ff8 	rdprs	zero,r2,1343
10014838:	10014ff8 	rdprs	zero,r2,1343
1001483c:	10014ff8 	rdprs	zero,r2,1343
10014840:	10014ff8 	rdprs	zero,r2,1343
10014844:	10014ff8 	rdprs	zero,r2,1343
10014848:	10014ff8 	rdprs	zero,r2,1343
1001484c:	10014988 	cmpgei	zero,r2,1318
10014850:	10014b84 	addi	zero,r2,1326
10014854:	10014ff8 	rdprs	zero,r2,1343
10014858:	100149b0 	cmpltui	zero,r2,1318
1001485c:	10015034 	orhi	zero,r2,1344
10014860:	10014ff8 	rdprs	zero,r2,1343
10014864:	10015028 	cmpgeui	zero,r2,1344
10014868:	10014fbc 	xorhi	zero,r2,1342
1001486c:	10014fbc 	xorhi	zero,r2,1342
10014870:	10014fbc 	xorhi	zero,r2,1342
10014874:	10014fbc 	xorhi	zero,r2,1342
10014878:	10014fbc 	xorhi	zero,r2,1342
1001487c:	10014fbc 	xorhi	zero,r2,1342
10014880:	10014fbc 	xorhi	zero,r2,1342
10014884:	10014fbc 	xorhi	zero,r2,1342
10014888:	10014fbc 	xorhi	zero,r2,1342
1001488c:	10014ff8 	rdprs	zero,r2,1343
10014890:	10014ff8 	rdprs	zero,r2,1343
10014894:	10014ff8 	rdprs	zero,r2,1343
10014898:	10014ff8 	rdprs	zero,r2,1343
1001489c:	10014ff8 	rdprs	zero,r2,1343
100148a0:	10014ff8 	rdprs	zero,r2,1343
100148a4:	10014ff8 	rdprs	zero,r2,1343
100148a8:	10014ff8 	rdprs	zero,r2,1343
100148ac:	10014ff8 	rdprs	zero,r2,1343
100148b0:	10014ff8 	rdprs	zero,r2,1343
100148b4:	10014f40 	call	110014f4 <_gp+0xfdac74>
100148b8:	10014ff8 	rdprs	zero,r2,1343
100148bc:	10014ff8 	rdprs	zero,r2,1343
100148c0:	10014ff8 	rdprs	zero,r2,1343
100148c4:	10014ff8 	rdprs	zero,r2,1343
100148c8:	10014ff8 	rdprs	zero,r2,1343
100148cc:	10014ff8 	rdprs	zero,r2,1343
100148d0:	10014ff8 	rdprs	zero,r2,1343
100148d4:	10014ff8 	rdprs	zero,r2,1343
100148d8:	10014ff8 	rdprs	zero,r2,1343
100148dc:	10014ff8 	rdprs	zero,r2,1343
100148e0:	100150f0 	cmpltui	zero,r2,1347
100148e4:	10014ff8 	rdprs	zero,r2,1343
100148e8:	10014ff8 	rdprs	zero,r2,1343
100148ec:	10014ff8 	rdprs	zero,r2,1343
100148f0:	10014ff8 	rdprs	zero,r2,1343
100148f4:	10014ff8 	rdprs	zero,r2,1343
100148f8:	1001507c 	xorhi	zero,r2,1345
100148fc:	10014ff8 	rdprs	zero,r2,1343
10014900:	10014ff8 	rdprs	zero,r2,1343
10014904:	10014d7c 	xorhi	zero,r2,1333
10014908:	10014ff8 	rdprs	zero,r2,1343
1001490c:	10014ff8 	rdprs	zero,r2,1343
10014910:	10014ff8 	rdprs	zero,r2,1343
10014914:	10014ff8 	rdprs	zero,r2,1343
10014918:	10014ff8 	rdprs	zero,r2,1343
1001491c:	10014ff8 	rdprs	zero,r2,1343
10014920:	10014ff8 	rdprs	zero,r2,1343
10014924:	10014ff8 	rdprs	zero,r2,1343
10014928:	10014ff8 	rdprs	zero,r2,1343
1001492c:	10014ff8 	rdprs	zero,r2,1343
10014930:	10014c48 	cmpgei	zero,r2,1329
10014934:	10014e2c 	andhi	zero,r2,1336
10014938:	10014ff8 	rdprs	zero,r2,1343
1001493c:	10014ff8 	rdprs	zero,r2,1343
10014940:	10014ff8 	rdprs	zero,r2,1343
10014944:	10014e20 	cmpeqi	zero,r2,1336
10014948:	10014e2c 	andhi	zero,r2,1336
1001494c:	10014ff8 	rdprs	zero,r2,1343
10014950:	10014ff8 	rdprs	zero,r2,1343
10014954:	10014e0c 	andi	zero,r2,1336
10014958:	10014ff8 	rdprs	zero,r2,1343
1001495c:	10014dcc 	andi	zero,r2,1335
10014960:	10014b98 	cmpnei	zero,r2,1326
10014964:	100149bc 	xorhi	zero,r2,1318
10014968:	10014f34 	orhi	zero,r2,1340
1001496c:	10014ff8 	rdprs	zero,r2,1343
10014970:	10014ee0 	cmpeqi	zero,r2,1339
10014974:	10014ff8 	rdprs	zero,r2,1343
10014978:	10014afc 	xorhi	zero,r2,1323
1001497c:	10014ff8 	rdprs	zero,r2,1343
10014980:	10014ff8 	rdprs	zero,r2,1343
10014984:	10014a48 	cmpgei	zero,r2,1321
10014988:	d9002417 	ldw	r4,144(sp)
1001498c:	d9402417 	ldw	r5,144(sp)
10014990:	21000017 	ldw	r4,0(r4)
10014994:	28800104 	addi	r2,r5,4
10014998:	d9002515 	stw	r4,148(sp)
1001499c:	20032b0e 	bge	r4,zero,1001564c <___svfiprintf_internal_r+0xf7c>
100149a0:	d8c02517 	ldw	r3,148(sp)
100149a4:	d8802415 	stw	r2,144(sp)
100149a8:	00c7c83a 	sub	r3,zero,r3
100149ac:	d8c02515 	stw	r3,148(sp)
100149b0:	8c400114 	ori	r17,r17,4
100149b4:	98c00007 	ldb	r3,0(r19)
100149b8:	003f9106 	br	10014800 <__alt_data_end+0xf8014800>
100149bc:	00800c04 	movi	r2,48
100149c0:	d9402417 	ldw	r5,144(sp)
100149c4:	d9002017 	ldw	r4,128(sp)
100149c8:	d8801d05 	stb	r2,116(sp)
100149cc:	00801e04 	movi	r2,120
100149d0:	d8801d45 	stb	r2,117(sp)
100149d4:	d8001d85 	stb	zero,118(sp)
100149d8:	b811883a 	mov	r8,r23
100149dc:	28c00104 	addi	r3,r5,4
100149e0:	2c800017 	ldw	r18,0(r5)
100149e4:	0029883a 	mov	r20,zero
100149e8:	88800094 	ori	r2,r17,2
100149ec:	20036316 	blt	r4,zero,1001577c <___svfiprintf_internal_r+0x10ac>
100149f0:	00bfdfc4 	movi	r2,-129
100149f4:	88a0703a 	and	r16,r17,r2
100149f8:	d8c02415 	stw	r3,144(sp)
100149fc:	84000094 	ori	r16,r16,2
10014a00:	90031c26 	beq	r18,zero,10015674 <___svfiprintf_internal_r+0xfa4>
10014a04:	014400b4 	movhi	r5,4098
10014a08:	2971ac04 	addi	r5,r5,-14672
10014a0c:	002b883a 	mov	r21,zero
10014a10:	d9402915 	stw	r5,164(sp)
10014a14:	00002906 	br	10014abc <___svfiprintf_internal_r+0x3ec>
10014a18:	8c400054 	ori	r17,r17,1
10014a1c:	98c00007 	ldb	r3,0(r19)
10014a20:	003f7706 	br	10014800 <__alt_data_end+0xf8014800>
10014a24:	a8803fcc 	andi	r2,r21,255
10014a28:	1080201c 	xori	r2,r2,128
10014a2c:	10bfe004 	addi	r2,r2,-128
10014a30:	10032a1e 	bne	r2,zero,100156dc <___svfiprintf_internal_r+0x100c>
10014a34:	00c00044 	movi	r3,1
10014a38:	d8c02105 	stb	r3,132(sp)
10014a3c:	05400804 	movi	r21,32
10014a40:	98c00007 	ldb	r3,0(r19)
10014a44:	003f6e06 	br	10014800 <__alt_data_end+0xf8014800>
10014a48:	8821883a 	mov	r16,r17
10014a4c:	dc402103 	ldbu	r17,132(sp)
10014a50:	b811883a 	mov	r8,r23
10014a54:	8c403fcc 	andi	r17,r17,255
10014a58:	8803f01e 	bne	r17,zero,10015a1c <___svfiprintf_internal_r+0x134c>
10014a5c:	008400b4 	movhi	r2,4098
10014a60:	10b1ac04 	addi	r2,r2,-14672
10014a64:	d8802915 	stw	r2,164(sp)
10014a68:	8080080c 	andi	r2,r16,32
10014a6c:	1000cd26 	beq	r2,zero,10014da4 <___svfiprintf_internal_r+0x6d4>
10014a70:	d9002417 	ldw	r4,144(sp)
10014a74:	24800017 	ldw	r18,0(r4)
10014a78:	25000117 	ldw	r20,4(r4)
10014a7c:	21000204 	addi	r4,r4,8
10014a80:	d9002415 	stw	r4,144(sp)
10014a84:	8080004c 	andi	r2,r16,1
10014a88:	1002c726 	beq	r2,zero,100155a8 <___svfiprintf_internal_r+0xed8>
10014a8c:	9504b03a 	or	r2,r18,r20
10014a90:	1003061e 	bne	r2,zero,100156ac <___svfiprintf_internal_r+0xfdc>
10014a94:	d9002017 	ldw	r4,128(sp)
10014a98:	d8001d85 	stb	zero,118(sp)
10014a9c:	20033e16 	blt	r4,zero,10015798 <___svfiprintf_internal_r+0x10c8>
10014aa0:	00bfdfc4 	movi	r2,-129
10014aa4:	80a0703a 	and	r16,r16,r2
10014aa8:	d9402017 	ldw	r5,128(sp)
10014aac:	002b883a 	mov	r21,zero
10014ab0:	28002826 	beq	r5,zero,10014b54 <___svfiprintf_internal_r+0x484>
10014ab4:	0025883a 	mov	r18,zero
10014ab8:	0029883a 	mov	r20,zero
10014abc:	d9002917 	ldw	r4,164(sp)
10014ac0:	dc401a04 	addi	r17,sp,104
10014ac4:	908003cc 	andi	r2,r18,15
10014ac8:	a006973a 	slli	r3,r20,28
10014acc:	2085883a 	add	r2,r4,r2
10014ad0:	9024d13a 	srli	r18,r18,4
10014ad4:	10800003 	ldbu	r2,0(r2)
10014ad8:	a028d13a 	srli	r20,r20,4
10014adc:	8c7fffc4 	addi	r17,r17,-1
10014ae0:	1ca4b03a 	or	r18,r3,r18
10014ae4:	88800005 	stb	r2,0(r17)
10014ae8:	9504b03a 	or	r2,r18,r20
10014aec:	103ff51e 	bne	r2,zero,10014ac4 <__alt_data_end+0xf8014ac4>
10014af0:	d8801e17 	ldw	r2,120(sp)
10014af4:	1469c83a 	sub	r20,r2,r17
10014af8:	00001906 	br	10014b60 <___svfiprintf_internal_r+0x490>
10014afc:	8821883a 	mov	r16,r17
10014b00:	dc402103 	ldbu	r17,132(sp)
10014b04:	b811883a 	mov	r8,r23
10014b08:	8c403fcc 	andi	r17,r17,255
10014b0c:	8803d01e 	bne	r17,zero,10015a50 <___svfiprintf_internal_r+0x1380>
10014b10:	8080080c 	andi	r2,r16,32
10014b14:	10016126 	beq	r2,zero,1001509c <___svfiprintf_internal_r+0x9cc>
10014b18:	d9002417 	ldw	r4,144(sp)
10014b1c:	d9402017 	ldw	r5,128(sp)
10014b20:	d8001d85 	stb	zero,118(sp)
10014b24:	20c00204 	addi	r3,r4,8
10014b28:	24800017 	ldw	r18,0(r4)
10014b2c:	25000117 	ldw	r20,4(r4)
10014b30:	28030f16 	blt	r5,zero,10015770 <___svfiprintf_internal_r+0x10a0>
10014b34:	013fdfc4 	movi	r4,-129
10014b38:	9504b03a 	or	r2,r18,r20
10014b3c:	d8c02415 	stw	r3,144(sp)
10014b40:	8120703a 	and	r16,r16,r4
10014b44:	002b883a 	mov	r21,zero
10014b48:	1000cd1e 	bne	r2,zero,10014e80 <___svfiprintf_internal_r+0x7b0>
10014b4c:	d8c02017 	ldw	r3,128(sp)
10014b50:	1803141e 	bne	r3,zero,100157a4 <___svfiprintf_internal_r+0x10d4>
10014b54:	d8002015 	stw	zero,128(sp)
10014b58:	0029883a 	mov	r20,zero
10014b5c:	dc401a04 	addi	r17,sp,104
10014b60:	dc802017 	ldw	r18,128(sp)
10014b64:	9500010e 	bge	r18,r20,10014b6c <___svfiprintf_internal_r+0x49c>
10014b68:	a025883a 	mov	r18,r20
10014b6c:	ad403fcc 	andi	r21,r21,255
10014b70:	ad40201c 	xori	r21,r21,128
10014b74:	ad7fe004 	addi	r21,r21,-128
10014b78:	a8003f26 	beq	r21,zero,10014c78 <___svfiprintf_internal_r+0x5a8>
10014b7c:	94800044 	addi	r18,r18,1
10014b80:	00003d06 	br	10014c78 <___svfiprintf_internal_r+0x5a8>
10014b84:	00c00044 	movi	r3,1
10014b88:	d8c02105 	stb	r3,132(sp)
10014b8c:	05400ac4 	movi	r21,43
10014b90:	98c00007 	ldb	r3,0(r19)
10014b94:	003f1a06 	br	10014800 <__alt_data_end+0xf8014800>
10014b98:	8821883a 	mov	r16,r17
10014b9c:	dc402103 	ldbu	r17,132(sp)
10014ba0:	b811883a 	mov	r8,r23
10014ba4:	8c403fcc 	andi	r17,r17,255
10014ba8:	8803a71e 	bne	r17,zero,10015a48 <___svfiprintf_internal_r+0x1378>
10014bac:	8080080c 	andi	r2,r16,32
10014bb0:	10015726 	beq	r2,zero,10015110 <___svfiprintf_internal_r+0xa40>
10014bb4:	d8c02417 	ldw	r3,144(sp)
10014bb8:	d9002017 	ldw	r4,128(sp)
10014bbc:	d8001d85 	stb	zero,118(sp)
10014bc0:	18800204 	addi	r2,r3,8
10014bc4:	1c800017 	ldw	r18,0(r3)
10014bc8:	1d000117 	ldw	r20,4(r3)
10014bcc:	2002db16 	blt	r4,zero,1001573c <___svfiprintf_internal_r+0x106c>
10014bd0:	013fdfc4 	movi	r4,-129
10014bd4:	9506b03a 	or	r3,r18,r20
10014bd8:	d8802415 	stw	r2,144(sp)
10014bdc:	8120703a 	and	r16,r16,r4
10014be0:	18015826 	beq	r3,zero,10015144 <___svfiprintf_internal_r+0xa74>
10014be4:	002b883a 	mov	r21,zero
10014be8:	dc401a04 	addi	r17,sp,104
10014bec:	9006d0fa 	srli	r3,r18,3
10014bf0:	a008977a 	slli	r4,r20,29
10014bf4:	a028d0fa 	srli	r20,r20,3
10014bf8:	948001cc 	andi	r18,r18,7
10014bfc:	90800c04 	addi	r2,r18,48
10014c00:	8c7fffc4 	addi	r17,r17,-1
10014c04:	20e4b03a 	or	r18,r4,r3
10014c08:	88800005 	stb	r2,0(r17)
10014c0c:	9506b03a 	or	r3,r18,r20
10014c10:	183ff61e 	bne	r3,zero,10014bec <__alt_data_end+0xf8014bec>
10014c14:	80c0004c 	andi	r3,r16,1
10014c18:	18028926 	beq	r3,zero,10015640 <___svfiprintf_internal_r+0xf70>
10014c1c:	10803fcc 	andi	r2,r2,255
10014c20:	1080201c 	xori	r2,r2,128
10014c24:	10bfe004 	addi	r2,r2,-128
10014c28:	00c00c04 	movi	r3,48
10014c2c:	10ffb026 	beq	r2,r3,10014af0 <__alt_data_end+0xf8014af0>
10014c30:	88ffffc5 	stb	r3,-1(r17)
10014c34:	d8c01e17 	ldw	r3,120(sp)
10014c38:	88bfffc4 	addi	r2,r17,-1
10014c3c:	1023883a 	mov	r17,r2
10014c40:	18a9c83a 	sub	r20,r3,r2
10014c44:	003fc606 	br	10014b60 <__alt_data_end+0xf8014b60>
10014c48:	d8c02417 	ldw	r3,144(sp)
10014c4c:	04800044 	movi	r18,1
10014c50:	8821883a 	mov	r16,r17
10014c54:	18800017 	ldw	r2,0(r3)
10014c58:	18c00104 	addi	r3,r3,4
10014c5c:	b811883a 	mov	r8,r23
10014c60:	d8001d85 	stb	zero,118(sp)
10014c64:	d8801005 	stb	r2,64(sp)
10014c68:	d8c02415 	stw	r3,144(sp)
10014c6c:	9029883a 	mov	r20,r18
10014c70:	dc401004 	addi	r17,sp,64
10014c74:	d8002015 	stw	zero,128(sp)
10014c78:	80c0008c 	andi	r3,r16,2
10014c7c:	d8c02115 	stw	r3,132(sp)
10014c80:	18000126 	beq	r3,zero,10014c88 <___svfiprintf_internal_r+0x5b8>
10014c84:	94800084 	addi	r18,r18,2
10014c88:	80c0210c 	andi	r3,r16,132
10014c8c:	d8c02215 	stw	r3,136(sp)
10014c90:	1801321e 	bne	r3,zero,1001515c <___svfiprintf_internal_r+0xa8c>
10014c94:	d9002517 	ldw	r4,148(sp)
10014c98:	24b9c83a 	sub	fp,r4,r18
10014c9c:	07012f0e 	bge	zero,fp,1001515c <___svfiprintf_internal_r+0xa8c>
10014ca0:	02400404 	movi	r9,16
10014ca4:	d8c01c17 	ldw	r3,112(sp)
10014ca8:	d8801b17 	ldw	r2,108(sp)
10014cac:	4f03250e 	bge	r9,fp,10015944 <___svfiprintf_internal_r+0x1274>
10014cb0:	010400b4 	movhi	r4,4098
10014cb4:	21332404 	addi	r4,r4,-13168
10014cb8:	dc002a15 	stw	r16,168(sp)
10014cbc:	dc402b15 	stw	r17,172(sp)
10014cc0:	d9002815 	stw	r4,160(sp)
10014cc4:	e023883a 	mov	r17,fp
10014cc8:	482f883a 	mov	r23,r9
10014ccc:	9839883a 	mov	fp,r19
10014cd0:	054001c4 	movi	r21,7
10014cd4:	9027883a 	mov	r19,r18
10014cd8:	dc002717 	ldw	r16,156(sp)
10014cdc:	dc802317 	ldw	r18,140(sp)
10014ce0:	00000306 	br	10014cf0 <___svfiprintf_internal_r+0x620>
10014ce4:	8c7ffc04 	addi	r17,r17,-16
10014ce8:	42000204 	addi	r8,r8,8
10014cec:	bc40130e 	bge	r23,r17,10014d3c <___svfiprintf_internal_r+0x66c>
10014cf0:	014400b4 	movhi	r5,4098
10014cf4:	18c00404 	addi	r3,r3,16
10014cf8:	10800044 	addi	r2,r2,1
10014cfc:	29732404 	addi	r5,r5,-13168
10014d00:	41400015 	stw	r5,0(r8)
10014d04:	45c00115 	stw	r23,4(r8)
10014d08:	d8c01c15 	stw	r3,112(sp)
10014d0c:	d8801b15 	stw	r2,108(sp)
10014d10:	a8bff40e 	bge	r21,r2,10014ce4 <__alt_data_end+0xf8014ce4>
10014d14:	d9801a04 	addi	r6,sp,104
10014d18:	900b883a 	mov	r5,r18
10014d1c:	8009883a 	mov	r4,r16
10014d20:	00145000 	call	10014500 <__ssprint_r>
10014d24:	1001aa1e 	bne	r2,zero,100153d0 <___svfiprintf_internal_r+0xd00>
10014d28:	8c7ffc04 	addi	r17,r17,-16
10014d2c:	d8c01c17 	ldw	r3,112(sp)
10014d30:	d8801b17 	ldw	r2,108(sp)
10014d34:	d811883a 	mov	r8,sp
10014d38:	bc7fed16 	blt	r23,r17,10014cf0 <__alt_data_end+0xf8014cf0>
10014d3c:	9825883a 	mov	r18,r19
10014d40:	dc002a17 	ldw	r16,168(sp)
10014d44:	e027883a 	mov	r19,fp
10014d48:	8839883a 	mov	fp,r17
10014d4c:	dc402b17 	ldw	r17,172(sp)
10014d50:	d9002817 	ldw	r4,160(sp)
10014d54:	e0c7883a 	add	r3,fp,r3
10014d58:	10800044 	addi	r2,r2,1
10014d5c:	41000015 	stw	r4,0(r8)
10014d60:	47000115 	stw	fp,4(r8)
10014d64:	d8c01c15 	stw	r3,112(sp)
10014d68:	d8801b15 	stw	r2,108(sp)
10014d6c:	010001c4 	movi	r4,7
10014d70:	20821616 	blt	r4,r2,100155cc <___svfiprintf_internal_r+0xefc>
10014d74:	42000204 	addi	r8,r8,8
10014d78:	0000fa06 	br	10015164 <___svfiprintf_internal_r+0xa94>
10014d7c:	8821883a 	mov	r16,r17
10014d80:	dc402103 	ldbu	r17,132(sp)
10014d84:	b811883a 	mov	r8,r23
10014d88:	8c403fcc 	andi	r17,r17,255
10014d8c:	8803361e 	bne	r17,zero,10015a68 <___svfiprintf_internal_r+0x1398>
10014d90:	014400b4 	movhi	r5,4098
10014d94:	2971a704 	addi	r5,r5,-14692
10014d98:	d9402915 	stw	r5,164(sp)
10014d9c:	8080080c 	andi	r2,r16,32
10014da0:	103f331e 	bne	r2,zero,10014a70 <__alt_data_end+0xf8014a70>
10014da4:	8080040c 	andi	r2,r16,16
10014da8:	1002551e 	bne	r2,zero,10015700 <___svfiprintf_internal_r+0x1030>
10014dac:	8080100c 	andi	r2,r16,64
10014db0:	1002a626 	beq	r2,zero,1001584c <___svfiprintf_internal_r+0x117c>
10014db4:	d8802417 	ldw	r2,144(sp)
10014db8:	0029883a 	mov	r20,zero
10014dbc:	1480000b 	ldhu	r18,0(r2)
10014dc0:	10800104 	addi	r2,r2,4
10014dc4:	d8802415 	stw	r2,144(sp)
10014dc8:	003f2e06 	br	10014a84 <__alt_data_end+0xf8014a84>
10014dcc:	8821883a 	mov	r16,r17
10014dd0:	dc402103 	ldbu	r17,132(sp)
10014dd4:	b811883a 	mov	r8,r23
10014dd8:	8c403fcc 	andi	r17,r17,255
10014ddc:	88030b1e 	bne	r17,zero,10015a0c <___svfiprintf_internal_r+0x133c>
10014de0:	8080080c 	andi	r2,r16,32
10014de4:	1002271e 	bne	r2,zero,10015684 <___svfiprintf_internal_r+0xfb4>
10014de8:	8080040c 	andi	r2,r16,16
10014dec:	10028e26 	beq	r2,zero,10015828 <___svfiprintf_internal_r+0x1158>
10014df0:	d8c02417 	ldw	r3,144(sp)
10014df4:	d9002617 	ldw	r4,152(sp)
10014df8:	18800017 	ldw	r2,0(r3)
10014dfc:	18c00104 	addi	r3,r3,4
10014e00:	d8c02415 	stw	r3,144(sp)
10014e04:	11000015 	stw	r4,0(r2)
10014e08:	003e5306 	br	10014758 <__alt_data_end+0xf8014758>
10014e0c:	98c00007 	ldb	r3,0(r19)
10014e10:	01401b04 	movi	r5,108
10014e14:	19424f26 	beq	r3,r5,10015754 <___svfiprintf_internal_r+0x1084>
10014e18:	8c400414 	ori	r17,r17,16
10014e1c:	003e7806 	br	10014800 <__alt_data_end+0xf8014800>
10014e20:	8c401014 	ori	r17,r17,64
10014e24:	98c00007 	ldb	r3,0(r19)
10014e28:	003e7506 	br	10014800 <__alt_data_end+0xf8014800>
10014e2c:	8821883a 	mov	r16,r17
10014e30:	dc402103 	ldbu	r17,132(sp)
10014e34:	b811883a 	mov	r8,r23
10014e38:	8c403fcc 	andi	r17,r17,255
10014e3c:	8802fe1e 	bne	r17,zero,10015a38 <___svfiprintf_internal_r+0x1368>
10014e40:	8080080c 	andi	r2,r16,32
10014e44:	10004626 	beq	r2,zero,10014f60 <___svfiprintf_internal_r+0x890>
10014e48:	d9002417 	ldw	r4,144(sp)
10014e4c:	20800117 	ldw	r2,4(r4)
10014e50:	24800017 	ldw	r18,0(r4)
10014e54:	21000204 	addi	r4,r4,8
10014e58:	d9002415 	stw	r4,144(sp)
10014e5c:	1029883a 	mov	r20,r2
10014e60:	10004a16 	blt	r2,zero,10014f8c <___svfiprintf_internal_r+0x8bc>
10014e64:	d9002017 	ldw	r4,128(sp)
10014e68:	dd401d83 	ldbu	r21,118(sp)
10014e6c:	2001eb16 	blt	r4,zero,1001561c <___svfiprintf_internal_r+0xf4c>
10014e70:	00ffdfc4 	movi	r3,-129
10014e74:	9504b03a 	or	r2,r18,r20
10014e78:	80e0703a 	and	r16,r16,r3
10014e7c:	103f3326 	beq	r2,zero,10014b4c <__alt_data_end+0xf8014b4c>
10014e80:	a0009426 	beq	r20,zero,100150d4 <___svfiprintf_internal_r+0xa04>
10014e84:	dc401a04 	addi	r17,sp,104
10014e88:	402f883a 	mov	r23,r8
10014e8c:	9009883a 	mov	r4,r18
10014e90:	a00b883a 	mov	r5,r20
10014e94:	01800284 	movi	r6,10
10014e98:	000f883a 	mov	r7,zero
10014e9c:	00163d40 	call	100163d4 <__umoddi3>
10014ea0:	10800c04 	addi	r2,r2,48
10014ea4:	8c7fffc4 	addi	r17,r17,-1
10014ea8:	9009883a 	mov	r4,r18
10014eac:	a00b883a 	mov	r5,r20
10014eb0:	88800005 	stb	r2,0(r17)
10014eb4:	01800284 	movi	r6,10
10014eb8:	000f883a 	mov	r7,zero
10014ebc:	0015dd80 	call	10015dd8 <__udivdi3>
10014ec0:	1025883a 	mov	r18,r2
10014ec4:	10c4b03a 	or	r2,r2,r3
10014ec8:	1829883a 	mov	r20,r3
10014ecc:	103fef1e 	bne	r2,zero,10014e8c <__alt_data_end+0xf8014e8c>
10014ed0:	d9001e17 	ldw	r4,120(sp)
10014ed4:	b811883a 	mov	r8,r23
10014ed8:	2469c83a 	sub	r20,r4,r17
10014edc:	003f2006 	br	10014b60 <__alt_data_end+0xf8014b60>
10014ee0:	d8802417 	ldw	r2,144(sp)
10014ee4:	8821883a 	mov	r16,r17
10014ee8:	d8001d85 	stb	zero,118(sp)
10014eec:	14400017 	ldw	r17,0(r2)
10014ef0:	b811883a 	mov	r8,r23
10014ef4:	15c00104 	addi	r23,r2,4
10014ef8:	88026c26 	beq	r17,zero,100158ac <___svfiprintf_internal_r+0x11dc>
10014efc:	d8c02017 	ldw	r3,128(sp)
10014f00:	18025f16 	blt	r3,zero,10015880 <___svfiprintf_internal_r+0x11b0>
10014f04:	180d883a 	mov	r6,r3
10014f08:	000b883a 	mov	r5,zero
10014f0c:	8809883a 	mov	r4,r17
10014f10:	da002d15 	stw	r8,180(sp)
10014f14:	000b0140 	call	1000b014 <memchr>
10014f18:	da002d17 	ldw	r8,180(sp)
10014f1c:	1002a526 	beq	r2,zero,100159b4 <___svfiprintf_internal_r+0x12e4>
10014f20:	1469c83a 	sub	r20,r2,r17
10014f24:	dd401d83 	ldbu	r21,118(sp)
10014f28:	ddc02415 	stw	r23,144(sp)
10014f2c:	d8002015 	stw	zero,128(sp)
10014f30:	003f0b06 	br	10014b60 <__alt_data_end+0xf8014b60>
10014f34:	8c400814 	ori	r17,r17,32
10014f38:	98c00007 	ldb	r3,0(r19)
10014f3c:	003e3006 	br	10014800 <__alt_data_end+0xf8014800>
10014f40:	8821883a 	mov	r16,r17
10014f44:	dc402103 	ldbu	r17,132(sp)
10014f48:	b811883a 	mov	r8,r23
10014f4c:	8c403fcc 	andi	r17,r17,255
10014f50:	8802b01e 	bne	r17,zero,10015a14 <___svfiprintf_internal_r+0x1344>
10014f54:	84000414 	ori	r16,r16,16
10014f58:	8080080c 	andi	r2,r16,32
10014f5c:	103fba1e 	bne	r2,zero,10014e48 <__alt_data_end+0xf8014e48>
10014f60:	8080040c 	andi	r2,r16,16
10014f64:	1001df1e 	bne	r2,zero,100156e4 <___svfiprintf_internal_r+0x1014>
10014f68:	8080100c 	andi	r2,r16,64
10014f6c:	10023d26 	beq	r2,zero,10015864 <___svfiprintf_internal_r+0x1194>
10014f70:	d8802417 	ldw	r2,144(sp)
10014f74:	1480000f 	ldh	r18,0(r2)
10014f78:	10800104 	addi	r2,r2,4
10014f7c:	d8802415 	stw	r2,144(sp)
10014f80:	9029d7fa 	srai	r20,r18,31
10014f84:	a005883a 	mov	r2,r20
10014f88:	103fb60e 	bge	r2,zero,10014e64 <__alt_data_end+0xf8014e64>
10014f8c:	d9402017 	ldw	r5,128(sp)
10014f90:	04a5c83a 	sub	r18,zero,r18
10014f94:	05400b44 	movi	r21,45
10014f98:	9004c03a 	cmpne	r2,r18,zero
10014f9c:	0529c83a 	sub	r20,zero,r20
10014fa0:	dd401d85 	stb	r21,118(sp)
10014fa4:	a0a9c83a 	sub	r20,r20,r2
10014fa8:	28026c16 	blt	r5,zero,1001595c <___svfiprintf_internal_r+0x128c>
10014fac:	00bfdfc4 	movi	r2,-129
10014fb0:	80a0703a 	and	r16,r16,r2
10014fb4:	a03fb31e 	bne	r20,zero,10014e84 <__alt_data_end+0xf8014e84>
10014fb8:	00004606 	br	100150d4 <___svfiprintf_internal_r+0xa04>
10014fbc:	9839883a 	mov	fp,r19
10014fc0:	d8002515 	stw	zero,148(sp)
10014fc4:	1c3ff404 	addi	r16,r3,-48
10014fc8:	0009883a 	mov	r4,zero
10014fcc:	01400284 	movi	r5,10
10014fd0:	00034380 	call	10003438 <__mulsi3>
10014fd4:	e0c00007 	ldb	r3,0(fp)
10014fd8:	8089883a 	add	r4,r16,r2
10014fdc:	9cc00044 	addi	r19,r19,1
10014fe0:	1c3ff404 	addi	r16,r3,-48
10014fe4:	9839883a 	mov	fp,r19
10014fe8:	a43ff82e 	bgeu	r20,r16,10014fcc <__alt_data_end+0xf8014fcc>
10014fec:	d9002515 	stw	r4,148(sp)
10014ff0:	18bff804 	addi	r2,r3,-32
10014ff4:	90be052e 	bgeu	r18,r2,1001480c <__alt_data_end+0xf801480c>
10014ff8:	8821883a 	mov	r16,r17
10014ffc:	dc402103 	ldbu	r17,132(sp)
10015000:	b811883a 	mov	r8,r23
10015004:	8c403fcc 	andi	r17,r17,255
10015008:	88028d1e 	bne	r17,zero,10015a40 <___svfiprintf_internal_r+0x1370>
1001500c:	1800ea26 	beq	r3,zero,100153b8 <___svfiprintf_internal_r+0xce8>
10015010:	04800044 	movi	r18,1
10015014:	d8c01005 	stb	r3,64(sp)
10015018:	d8001d85 	stb	zero,118(sp)
1001501c:	9029883a 	mov	r20,r18
10015020:	dc401004 	addi	r17,sp,64
10015024:	003f1306 	br	10014c74 <__alt_data_end+0xf8014c74>
10015028:	8c402014 	ori	r17,r17,128
1001502c:	98c00007 	ldb	r3,0(r19)
10015030:	003df306 	br	10014800 <__alt_data_end+0xf8014800>
10015034:	98c00007 	ldb	r3,0(r19)
10015038:	01000a84 	movi	r4,42
1001503c:	9f000044 	addi	fp,r19,1
10015040:	19026326 	beq	r3,r4,100159d0 <___svfiprintf_internal_r+0x1300>
10015044:	1c3ff404 	addi	r16,r3,-48
10015048:	0009883a 	mov	r4,zero
1001504c:	a4025636 	bltu	r20,r16,100159a8 <___svfiprintf_internal_r+0x12d8>
10015050:	01400284 	movi	r5,10
10015054:	00034380 	call	10003438 <__mulsi3>
10015058:	e0c00007 	ldb	r3,0(fp)
1001505c:	1409883a 	add	r4,r2,r16
10015060:	e4c00044 	addi	r19,fp,1
10015064:	1c3ff404 	addi	r16,r3,-48
10015068:	9839883a 	mov	fp,r19
1001506c:	a43ff82e 	bgeu	r20,r16,10015050 <__alt_data_end+0xf8015050>
10015070:	20020c16 	blt	r4,zero,100158a4 <___svfiprintf_internal_r+0x11d4>
10015074:	d9002015 	stw	r4,128(sp)
10015078:	003de206 	br	10014804 <__alt_data_end+0xf8014804>
1001507c:	8821883a 	mov	r16,r17
10015080:	dc402103 	ldbu	r17,132(sp)
10015084:	b811883a 	mov	r8,r23
10015088:	8c403fcc 	andi	r17,r17,255
1001508c:	8802721e 	bne	r17,zero,10015a58 <___svfiprintf_internal_r+0x1388>
10015090:	84000414 	ori	r16,r16,16
10015094:	8080080c 	andi	r2,r16,32
10015098:	103e9f1e 	bne	r2,zero,10014b18 <__alt_data_end+0xf8014b18>
1001509c:	8080040c 	andi	r2,r16,16
100150a0:	10015326 	beq	r2,zero,100155f0 <___svfiprintf_internal_r+0xf20>
100150a4:	d8c02417 	ldw	r3,144(sp)
100150a8:	d9002017 	ldw	r4,128(sp)
100150ac:	d8001d85 	stb	zero,118(sp)
100150b0:	18800104 	addi	r2,r3,4
100150b4:	1c800017 	ldw	r18,0(r3)
100150b8:	0029883a 	mov	r20,zero
100150bc:	20015516 	blt	r4,zero,10015614 <___svfiprintf_internal_r+0xf44>
100150c0:	00ffdfc4 	movi	r3,-129
100150c4:	d8802415 	stw	r2,144(sp)
100150c8:	80e0703a 	and	r16,r16,r3
100150cc:	002b883a 	mov	r21,zero
100150d0:	903e9e26 	beq	r18,zero,10014b4c <__alt_data_end+0xf8014b4c>
100150d4:	00800244 	movi	r2,9
100150d8:	14bf6a36 	bltu	r2,r18,10014e84 <__alt_data_end+0xf8014e84>
100150dc:	94800c04 	addi	r18,r18,48
100150e0:	dc8019c5 	stb	r18,103(sp)
100150e4:	dd002c17 	ldw	r20,176(sp)
100150e8:	dc4019c4 	addi	r17,sp,103
100150ec:	003e9c06 	br	10014b60 <__alt_data_end+0xf8014b60>
100150f0:	8821883a 	mov	r16,r17
100150f4:	dc402103 	ldbu	r17,132(sp)
100150f8:	b811883a 	mov	r8,r23
100150fc:	8c403fcc 	andi	r17,r17,255
10015100:	8802571e 	bne	r17,zero,10015a60 <___svfiprintf_internal_r+0x1390>
10015104:	84000414 	ori	r16,r16,16
10015108:	8080080c 	andi	r2,r16,32
1001510c:	103ea91e 	bne	r2,zero,10014bb4 <__alt_data_end+0xf8014bb4>
10015110:	8080040c 	andi	r2,r16,16
10015114:	10018026 	beq	r2,zero,10015718 <___svfiprintf_internal_r+0x1048>
10015118:	d9402417 	ldw	r5,144(sp)
1001511c:	d8c02017 	ldw	r3,128(sp)
10015120:	d8001d85 	stb	zero,118(sp)
10015124:	28800104 	addi	r2,r5,4
10015128:	2c800017 	ldw	r18,0(r5)
1001512c:	0029883a 	mov	r20,zero
10015130:	18018216 	blt	r3,zero,1001573c <___svfiprintf_internal_r+0x106c>
10015134:	00ffdfc4 	movi	r3,-129
10015138:	d8802415 	stw	r2,144(sp)
1001513c:	80e0703a 	and	r16,r16,r3
10015140:	903ea81e 	bne	r18,zero,10014be4 <__alt_data_end+0xf8014be4>
10015144:	d8802017 	ldw	r2,128(sp)
10015148:	002b883a 	mov	r21,zero
1001514c:	1001f226 	beq	r2,zero,10015918 <___svfiprintf_internal_r+0x1248>
10015150:	0025883a 	mov	r18,zero
10015154:	0029883a 	mov	r20,zero
10015158:	003ea306 	br	10014be8 <__alt_data_end+0xf8014be8>
1001515c:	d8c01c17 	ldw	r3,112(sp)
10015160:	d8801b17 	ldw	r2,108(sp)
10015164:	d9001d87 	ldb	r4,118(sp)
10015168:	20000b26 	beq	r4,zero,10015198 <___svfiprintf_internal_r+0xac8>
1001516c:	d9001d84 	addi	r4,sp,118
10015170:	18c00044 	addi	r3,r3,1
10015174:	10800044 	addi	r2,r2,1
10015178:	41000015 	stw	r4,0(r8)
1001517c:	01000044 	movi	r4,1
10015180:	41000115 	stw	r4,4(r8)
10015184:	d8c01c15 	stw	r3,112(sp)
10015188:	d8801b15 	stw	r2,108(sp)
1001518c:	010001c4 	movi	r4,7
10015190:	2080f316 	blt	r4,r2,10015560 <___svfiprintf_internal_r+0xe90>
10015194:	42000204 	addi	r8,r8,8
10015198:	d9402117 	ldw	r5,132(sp)
1001519c:	28000b26 	beq	r5,zero,100151cc <___svfiprintf_internal_r+0xafc>
100151a0:	d9001d04 	addi	r4,sp,116
100151a4:	18c00084 	addi	r3,r3,2
100151a8:	10800044 	addi	r2,r2,1
100151ac:	41000015 	stw	r4,0(r8)
100151b0:	01000084 	movi	r4,2
100151b4:	41000115 	stw	r4,4(r8)
100151b8:	d8c01c15 	stw	r3,112(sp)
100151bc:	d8801b15 	stw	r2,108(sp)
100151c0:	010001c4 	movi	r4,7
100151c4:	2080ef16 	blt	r4,r2,10015584 <___svfiprintf_internal_r+0xeb4>
100151c8:	42000204 	addi	r8,r8,8
100151cc:	d9402217 	ldw	r5,136(sp)
100151d0:	01002004 	movi	r4,128
100151d4:	29008f26 	beq	r5,r4,10015414 <___svfiprintf_internal_r+0xd44>
100151d8:	d9002017 	ldw	r4,128(sp)
100151dc:	252fc83a 	sub	r23,r4,r20
100151e0:	05c0310e 	bge	zero,r23,100152a8 <___svfiprintf_internal_r+0xbd8>
100151e4:	07000404 	movi	fp,16
100151e8:	e5c17d0e 	bge	fp,r23,100157e0 <___svfiprintf_internal_r+0x1110>
100151ec:	010400b4 	movhi	r4,4098
100151f0:	21332004 	addi	r4,r4,-13184
100151f4:	dc002015 	stw	r16,128(sp)
100151f8:	dc402215 	stw	r17,136(sp)
100151fc:	d9002115 	stw	r4,132(sp)
10015200:	b823883a 	mov	r17,r23
10015204:	054001c4 	movi	r21,7
10015208:	982f883a 	mov	r23,r19
1001520c:	dc002717 	ldw	r16,156(sp)
10015210:	9027883a 	mov	r19,r18
10015214:	dc802317 	ldw	r18,140(sp)
10015218:	00000306 	br	10015228 <___svfiprintf_internal_r+0xb58>
1001521c:	8c7ffc04 	addi	r17,r17,-16
10015220:	42000204 	addi	r8,r8,8
10015224:	e440110e 	bge	fp,r17,1001526c <___svfiprintf_internal_r+0xb9c>
10015228:	18c00404 	addi	r3,r3,16
1001522c:	10800044 	addi	r2,r2,1
10015230:	45800015 	stw	r22,0(r8)
10015234:	47000115 	stw	fp,4(r8)
10015238:	d8c01c15 	stw	r3,112(sp)
1001523c:	d8801b15 	stw	r2,108(sp)
10015240:	a8bff60e 	bge	r21,r2,1001521c <__alt_data_end+0xf801521c>
10015244:	d9801a04 	addi	r6,sp,104
10015248:	900b883a 	mov	r5,r18
1001524c:	8009883a 	mov	r4,r16
10015250:	00145000 	call	10014500 <__ssprint_r>
10015254:	10005e1e 	bne	r2,zero,100153d0 <___svfiprintf_internal_r+0xd00>
10015258:	8c7ffc04 	addi	r17,r17,-16
1001525c:	d8c01c17 	ldw	r3,112(sp)
10015260:	d8801b17 	ldw	r2,108(sp)
10015264:	d811883a 	mov	r8,sp
10015268:	e47fef16 	blt	fp,r17,10015228 <__alt_data_end+0xf8015228>
1001526c:	9825883a 	mov	r18,r19
10015270:	dc002017 	ldw	r16,128(sp)
10015274:	b827883a 	mov	r19,r23
10015278:	882f883a 	mov	r23,r17
1001527c:	dc402217 	ldw	r17,136(sp)
10015280:	d9402117 	ldw	r5,132(sp)
10015284:	1dc7883a 	add	r3,r3,r23
10015288:	10800044 	addi	r2,r2,1
1001528c:	41400015 	stw	r5,0(r8)
10015290:	45c00115 	stw	r23,4(r8)
10015294:	d8c01c15 	stw	r3,112(sp)
10015298:	d8801b15 	stw	r2,108(sp)
1001529c:	010001c4 	movi	r4,7
100152a0:	2080a616 	blt	r4,r2,1001553c <___svfiprintf_internal_r+0xe6c>
100152a4:	42000204 	addi	r8,r8,8
100152a8:	a0c7883a 	add	r3,r20,r3
100152ac:	10800044 	addi	r2,r2,1
100152b0:	44400015 	stw	r17,0(r8)
100152b4:	45000115 	stw	r20,4(r8)
100152b8:	d8c01c15 	stw	r3,112(sp)
100152bc:	d8801b15 	stw	r2,108(sp)
100152c0:	010001c4 	movi	r4,7
100152c4:	20808816 	blt	r4,r2,100154e8 <___svfiprintf_internal_r+0xe18>
100152c8:	42000204 	addi	r8,r8,8
100152cc:	8400010c 	andi	r16,r16,4
100152d0:	80002c26 	beq	r16,zero,10015384 <___svfiprintf_internal_r+0xcb4>
100152d4:	d8802517 	ldw	r2,148(sp)
100152d8:	14a1c83a 	sub	r16,r2,r18
100152dc:	0400290e 	bge	zero,r16,10015384 <___svfiprintf_internal_r+0xcb4>
100152e0:	04400404 	movi	r17,16
100152e4:	d8801b17 	ldw	r2,108(sp)
100152e8:	8c01a70e 	bge	r17,r16,10015988 <___svfiprintf_internal_r+0x12b8>
100152ec:	014400b4 	movhi	r5,4098
100152f0:	29732404 	addi	r5,r5,-13168
100152f4:	d9402815 	stw	r5,160(sp)
100152f8:	050001c4 	movi	r20,7
100152fc:	dd402717 	ldw	r21,156(sp)
10015300:	ddc02317 	ldw	r23,140(sp)
10015304:	00000306 	br	10015314 <___svfiprintf_internal_r+0xc44>
10015308:	843ffc04 	addi	r16,r16,-16
1001530c:	42000204 	addi	r8,r8,8
10015310:	8c00130e 	bge	r17,r16,10015360 <___svfiprintf_internal_r+0xc90>
10015314:	010400b4 	movhi	r4,4098
10015318:	18c00404 	addi	r3,r3,16
1001531c:	10800044 	addi	r2,r2,1
10015320:	21332404 	addi	r4,r4,-13168
10015324:	41000015 	stw	r4,0(r8)
10015328:	44400115 	stw	r17,4(r8)
1001532c:	d8c01c15 	stw	r3,112(sp)
10015330:	d8801b15 	stw	r2,108(sp)
10015334:	a0bff40e 	bge	r20,r2,10015308 <__alt_data_end+0xf8015308>
10015338:	d9801a04 	addi	r6,sp,104
1001533c:	b80b883a 	mov	r5,r23
10015340:	a809883a 	mov	r4,r21
10015344:	00145000 	call	10014500 <__ssprint_r>
10015348:	1000211e 	bne	r2,zero,100153d0 <___svfiprintf_internal_r+0xd00>
1001534c:	843ffc04 	addi	r16,r16,-16
10015350:	d8c01c17 	ldw	r3,112(sp)
10015354:	d8801b17 	ldw	r2,108(sp)
10015358:	d811883a 	mov	r8,sp
1001535c:	8c3fed16 	blt	r17,r16,10015314 <__alt_data_end+0xf8015314>
10015360:	d9402817 	ldw	r5,160(sp)
10015364:	1c07883a 	add	r3,r3,r16
10015368:	10800044 	addi	r2,r2,1
1001536c:	41400015 	stw	r5,0(r8)
10015370:	44000115 	stw	r16,4(r8)
10015374:	d8c01c15 	stw	r3,112(sp)
10015378:	d8801b15 	stw	r2,108(sp)
1001537c:	010001c4 	movi	r4,7
10015380:	2080b516 	blt	r4,r2,10015658 <___svfiprintf_internal_r+0xf88>
10015384:	d8802517 	ldw	r2,148(sp)
10015388:	1480010e 	bge	r2,r18,10015390 <___svfiprintf_internal_r+0xcc0>
1001538c:	9005883a 	mov	r2,r18
10015390:	d9002617 	ldw	r4,152(sp)
10015394:	2089883a 	add	r4,r4,r2
10015398:	d9002615 	stw	r4,152(sp)
1001539c:	18005a1e 	bne	r3,zero,10015508 <___svfiprintf_internal_r+0xe38>
100153a0:	98800007 	ldb	r2,0(r19)
100153a4:	d8001b15 	stw	zero,108(sp)
100153a8:	d811883a 	mov	r8,sp
100153ac:	103cec1e 	bne	r2,zero,10014760 <__alt_data_end+0xf8014760>
100153b0:	9825883a 	mov	r18,r19
100153b4:	003d0206 	br	100147c0 <__alt_data_end+0xf80147c0>
100153b8:	d8801c17 	ldw	r2,112(sp)
100153bc:	10000426 	beq	r2,zero,100153d0 <___svfiprintf_internal_r+0xd00>
100153c0:	d9402317 	ldw	r5,140(sp)
100153c4:	d9002717 	ldw	r4,156(sp)
100153c8:	d9801a04 	addi	r6,sp,104
100153cc:	00145000 	call	10014500 <__ssprint_r>
100153d0:	d9402317 	ldw	r5,140(sp)
100153d4:	d8802617 	ldw	r2,152(sp)
100153d8:	28c0030b 	ldhu	r3,12(r5)
100153dc:	18c0100c 	andi	r3,r3,64
100153e0:	18015c1e 	bne	r3,zero,10015954 <___svfiprintf_internal_r+0x1284>
100153e4:	dfc03717 	ldw	ra,220(sp)
100153e8:	df003617 	ldw	fp,216(sp)
100153ec:	ddc03517 	ldw	r23,212(sp)
100153f0:	dd803417 	ldw	r22,208(sp)
100153f4:	dd403317 	ldw	r21,204(sp)
100153f8:	dd003217 	ldw	r20,200(sp)
100153fc:	dcc03117 	ldw	r19,196(sp)
10015400:	dc803017 	ldw	r18,192(sp)
10015404:	dc402f17 	ldw	r17,188(sp)
10015408:	dc002e17 	ldw	r16,184(sp)
1001540c:	dec03804 	addi	sp,sp,224
10015410:	f800283a 	ret
10015414:	d9002517 	ldw	r4,148(sp)
10015418:	24afc83a 	sub	r23,r4,r18
1001541c:	05ff6e0e 	bge	zero,r23,100151d8 <__alt_data_end+0xf80151d8>
10015420:	07000404 	movi	fp,16
10015424:	e5c15c0e 	bge	fp,r23,10015998 <___svfiprintf_internal_r+0x12c8>
10015428:	010400b4 	movhi	r4,4098
1001542c:	21332004 	addi	r4,r4,-13184
10015430:	dc002215 	stw	r16,136(sp)
10015434:	dc402815 	stw	r17,160(sp)
10015438:	d9002115 	stw	r4,132(sp)
1001543c:	b823883a 	mov	r17,r23
10015440:	054001c4 	movi	r21,7
10015444:	982f883a 	mov	r23,r19
10015448:	dc002717 	ldw	r16,156(sp)
1001544c:	9027883a 	mov	r19,r18
10015450:	dc802317 	ldw	r18,140(sp)
10015454:	00000306 	br	10015464 <___svfiprintf_internal_r+0xd94>
10015458:	8c7ffc04 	addi	r17,r17,-16
1001545c:	42000204 	addi	r8,r8,8
10015460:	e440110e 	bge	fp,r17,100154a8 <___svfiprintf_internal_r+0xdd8>
10015464:	18c00404 	addi	r3,r3,16
10015468:	10800044 	addi	r2,r2,1
1001546c:	45800015 	stw	r22,0(r8)
10015470:	47000115 	stw	fp,4(r8)
10015474:	d8c01c15 	stw	r3,112(sp)
10015478:	d8801b15 	stw	r2,108(sp)
1001547c:	a8bff60e 	bge	r21,r2,10015458 <__alt_data_end+0xf8015458>
10015480:	d9801a04 	addi	r6,sp,104
10015484:	900b883a 	mov	r5,r18
10015488:	8009883a 	mov	r4,r16
1001548c:	00145000 	call	10014500 <__ssprint_r>
10015490:	103fcf1e 	bne	r2,zero,100153d0 <__alt_data_end+0xf80153d0>
10015494:	8c7ffc04 	addi	r17,r17,-16
10015498:	d8c01c17 	ldw	r3,112(sp)
1001549c:	d8801b17 	ldw	r2,108(sp)
100154a0:	d811883a 	mov	r8,sp
100154a4:	e47fef16 	blt	fp,r17,10015464 <__alt_data_end+0xf8015464>
100154a8:	9825883a 	mov	r18,r19
100154ac:	dc002217 	ldw	r16,136(sp)
100154b0:	b827883a 	mov	r19,r23
100154b4:	882f883a 	mov	r23,r17
100154b8:	dc402817 	ldw	r17,160(sp)
100154bc:	d9402117 	ldw	r5,132(sp)
100154c0:	1dc7883a 	add	r3,r3,r23
100154c4:	10800044 	addi	r2,r2,1
100154c8:	41400015 	stw	r5,0(r8)
100154cc:	45c00115 	stw	r23,4(r8)
100154d0:	d8c01c15 	stw	r3,112(sp)
100154d4:	d8801b15 	stw	r2,108(sp)
100154d8:	010001c4 	movi	r4,7
100154dc:	2080b716 	blt	r4,r2,100157bc <___svfiprintf_internal_r+0x10ec>
100154e0:	42000204 	addi	r8,r8,8
100154e4:	003f3c06 	br	100151d8 <__alt_data_end+0xf80151d8>
100154e8:	d9402317 	ldw	r5,140(sp)
100154ec:	d9002717 	ldw	r4,156(sp)
100154f0:	d9801a04 	addi	r6,sp,104
100154f4:	00145000 	call	10014500 <__ssprint_r>
100154f8:	103fb51e 	bne	r2,zero,100153d0 <__alt_data_end+0xf80153d0>
100154fc:	d8c01c17 	ldw	r3,112(sp)
10015500:	d811883a 	mov	r8,sp
10015504:	003f7106 	br	100152cc <__alt_data_end+0xf80152cc>
10015508:	d9402317 	ldw	r5,140(sp)
1001550c:	d9002717 	ldw	r4,156(sp)
10015510:	d9801a04 	addi	r6,sp,104
10015514:	00145000 	call	10014500 <__ssprint_r>
10015518:	103fa126 	beq	r2,zero,100153a0 <__alt_data_end+0xf80153a0>
1001551c:	003fac06 	br	100153d0 <__alt_data_end+0xf80153d0>
10015520:	d9402317 	ldw	r5,140(sp)
10015524:	d9002717 	ldw	r4,156(sp)
10015528:	d9801a04 	addi	r6,sp,104
1001552c:	00145000 	call	10014500 <__ssprint_r>
10015530:	103fa71e 	bne	r2,zero,100153d0 <__alt_data_end+0xf80153d0>
10015534:	d811883a 	mov	r8,sp
10015538:	003c9e06 	br	100147b4 <__alt_data_end+0xf80147b4>
1001553c:	d9402317 	ldw	r5,140(sp)
10015540:	d9002717 	ldw	r4,156(sp)
10015544:	d9801a04 	addi	r6,sp,104
10015548:	00145000 	call	10014500 <__ssprint_r>
1001554c:	103fa01e 	bne	r2,zero,100153d0 <__alt_data_end+0xf80153d0>
10015550:	d8c01c17 	ldw	r3,112(sp)
10015554:	d8801b17 	ldw	r2,108(sp)
10015558:	d811883a 	mov	r8,sp
1001555c:	003f5206 	br	100152a8 <__alt_data_end+0xf80152a8>
10015560:	d9402317 	ldw	r5,140(sp)
10015564:	d9002717 	ldw	r4,156(sp)
10015568:	d9801a04 	addi	r6,sp,104
1001556c:	00145000 	call	10014500 <__ssprint_r>
10015570:	103f971e 	bne	r2,zero,100153d0 <__alt_data_end+0xf80153d0>
10015574:	d8c01c17 	ldw	r3,112(sp)
10015578:	d8801b17 	ldw	r2,108(sp)
1001557c:	d811883a 	mov	r8,sp
10015580:	003f0506 	br	10015198 <__alt_data_end+0xf8015198>
10015584:	d9402317 	ldw	r5,140(sp)
10015588:	d9002717 	ldw	r4,156(sp)
1001558c:	d9801a04 	addi	r6,sp,104
10015590:	00145000 	call	10014500 <__ssprint_r>
10015594:	103f8e1e 	bne	r2,zero,100153d0 <__alt_data_end+0xf80153d0>
10015598:	d8c01c17 	ldw	r3,112(sp)
1001559c:	d8801b17 	ldw	r2,108(sp)
100155a0:	d811883a 	mov	r8,sp
100155a4:	003f0906 	br	100151cc <__alt_data_end+0xf80151cc>
100155a8:	d9402017 	ldw	r5,128(sp)
100155ac:	d8001d85 	stb	zero,118(sp)
100155b0:	28007716 	blt	r5,zero,10015790 <___svfiprintf_internal_r+0x10c0>
100155b4:	00ffdfc4 	movi	r3,-129
100155b8:	9504b03a 	or	r2,r18,r20
100155bc:	80e0703a 	and	r16,r16,r3
100155c0:	103d3926 	beq	r2,zero,10014aa8 <__alt_data_end+0xf8014aa8>
100155c4:	002b883a 	mov	r21,zero
100155c8:	003d3c06 	br	10014abc <__alt_data_end+0xf8014abc>
100155cc:	d9402317 	ldw	r5,140(sp)
100155d0:	d9002717 	ldw	r4,156(sp)
100155d4:	d9801a04 	addi	r6,sp,104
100155d8:	00145000 	call	10014500 <__ssprint_r>
100155dc:	103f7c1e 	bne	r2,zero,100153d0 <__alt_data_end+0xf80153d0>
100155e0:	d8c01c17 	ldw	r3,112(sp)
100155e4:	d8801b17 	ldw	r2,108(sp)
100155e8:	d811883a 	mov	r8,sp
100155ec:	003edd06 	br	10015164 <__alt_data_end+0xf8015164>
100155f0:	8080100c 	andi	r2,r16,64
100155f4:	d8001d85 	stb	zero,118(sp)
100155f8:	10008426 	beq	r2,zero,1001580c <___svfiprintf_internal_r+0x113c>
100155fc:	d9402417 	ldw	r5,144(sp)
10015600:	d8c02017 	ldw	r3,128(sp)
10015604:	0029883a 	mov	r20,zero
10015608:	28800104 	addi	r2,r5,4
1001560c:	2c80000b 	ldhu	r18,0(r5)
10015610:	183eab0e 	bge	r3,zero,100150c0 <__alt_data_end+0xf80150c0>
10015614:	d8802415 	stw	r2,144(sp)
10015618:	002b883a 	mov	r21,zero
1001561c:	9504b03a 	or	r2,r18,r20
10015620:	103e171e 	bne	r2,zero,10014e80 <__alt_data_end+0xf8014e80>
10015624:	00800044 	movi	r2,1
10015628:	10803fcc 	andi	r2,r2,255
1001562c:	00c00044 	movi	r3,1
10015630:	10c05c26 	beq	r2,r3,100157a4 <___svfiprintf_internal_r+0x10d4>
10015634:	00c00084 	movi	r3,2
10015638:	10fd1e26 	beq	r2,r3,10014ab4 <__alt_data_end+0xf8014ab4>
1001563c:	003ec406 	br	10015150 <__alt_data_end+0xf8015150>
10015640:	d9401e17 	ldw	r5,120(sp)
10015644:	2c69c83a 	sub	r20,r5,r17
10015648:	003d4506 	br	10014b60 <__alt_data_end+0xf8014b60>
1001564c:	d8802415 	stw	r2,144(sp)
10015650:	98c00007 	ldb	r3,0(r19)
10015654:	003c6a06 	br	10014800 <__alt_data_end+0xf8014800>
10015658:	d9402317 	ldw	r5,140(sp)
1001565c:	d9002717 	ldw	r4,156(sp)
10015660:	d9801a04 	addi	r6,sp,104
10015664:	00145000 	call	10014500 <__ssprint_r>
10015668:	103f591e 	bne	r2,zero,100153d0 <__alt_data_end+0xf80153d0>
1001566c:	d8c01c17 	ldw	r3,112(sp)
10015670:	003f4406 	br	10015384 <__alt_data_end+0xf8015384>
10015674:	014400b4 	movhi	r5,4098
10015678:	2971ac04 	addi	r5,r5,-14672
1001567c:	d9402915 	stw	r5,164(sp)
10015680:	003d0906 	br	10014aa8 <__alt_data_end+0xf8014aa8>
10015684:	d8c02417 	ldw	r3,144(sp)
10015688:	d9002617 	ldw	r4,152(sp)
1001568c:	d9402417 	ldw	r5,144(sp)
10015690:	18800017 	ldw	r2,0(r3)
10015694:	2007d7fa 	srai	r3,r4,31
10015698:	29400104 	addi	r5,r5,4
1001569c:	d9402415 	stw	r5,144(sp)
100156a0:	11000015 	stw	r4,0(r2)
100156a4:	10c00115 	stw	r3,4(r2)
100156a8:	003c2b06 	br	10014758 <__alt_data_end+0xf8014758>
100156ac:	d8c01d45 	stb	r3,117(sp)
100156b0:	d8c02017 	ldw	r3,128(sp)
100156b4:	00800c04 	movi	r2,48
100156b8:	d8801d05 	stb	r2,116(sp)
100156bc:	d8001d85 	stb	zero,118(sp)
100156c0:	80800094 	ori	r2,r16,2
100156c4:	1800ac16 	blt	r3,zero,10015978 <___svfiprintf_internal_r+0x12a8>
100156c8:	00bfdfc4 	movi	r2,-129
100156cc:	80a0703a 	and	r16,r16,r2
100156d0:	84000094 	ori	r16,r16,2
100156d4:	002b883a 	mov	r21,zero
100156d8:	003cf806 	br	10014abc <__alt_data_end+0xf8014abc>
100156dc:	98c00007 	ldb	r3,0(r19)
100156e0:	003c4706 	br	10014800 <__alt_data_end+0xf8014800>
100156e4:	d9402417 	ldw	r5,144(sp)
100156e8:	2c800017 	ldw	r18,0(r5)
100156ec:	29400104 	addi	r5,r5,4
100156f0:	d9402415 	stw	r5,144(sp)
100156f4:	9029d7fa 	srai	r20,r18,31
100156f8:	a005883a 	mov	r2,r20
100156fc:	003dd806 	br	10014e60 <__alt_data_end+0xf8014e60>
10015700:	d9402417 	ldw	r5,144(sp)
10015704:	0029883a 	mov	r20,zero
10015708:	2c800017 	ldw	r18,0(r5)
1001570c:	29400104 	addi	r5,r5,4
10015710:	d9402415 	stw	r5,144(sp)
10015714:	003cdb06 	br	10014a84 <__alt_data_end+0xf8014a84>
10015718:	8080100c 	andi	r2,r16,64
1001571c:	d8001d85 	stb	zero,118(sp)
10015720:	10003326 	beq	r2,zero,100157f0 <___svfiprintf_internal_r+0x1120>
10015724:	d9002417 	ldw	r4,144(sp)
10015728:	d9402017 	ldw	r5,128(sp)
1001572c:	0029883a 	mov	r20,zero
10015730:	20800104 	addi	r2,r4,4
10015734:	2480000b 	ldhu	r18,0(r4)
10015738:	283e7e0e 	bge	r5,zero,10015134 <__alt_data_end+0xf8015134>
1001573c:	9506b03a 	or	r3,r18,r20
10015740:	d8802415 	stw	r2,144(sp)
10015744:	183d271e 	bne	r3,zero,10014be4 <__alt_data_end+0xf8014be4>
10015748:	002b883a 	mov	r21,zero
1001574c:	0005883a 	mov	r2,zero
10015750:	003fb506 	br	10015628 <__alt_data_end+0xf8015628>
10015754:	98c00043 	ldbu	r3,1(r19)
10015758:	8c400814 	ori	r17,r17,32
1001575c:	9cc00044 	addi	r19,r19,1
10015760:	18c03fcc 	andi	r3,r3,255
10015764:	18c0201c 	xori	r3,r3,128
10015768:	18ffe004 	addi	r3,r3,-128
1001576c:	003c2406 	br	10014800 <__alt_data_end+0xf8014800>
10015770:	d8c02415 	stw	r3,144(sp)
10015774:	002b883a 	mov	r21,zero
10015778:	003fa806 	br	1001561c <__alt_data_end+0xf801561c>
1001577c:	010400b4 	movhi	r4,4098
10015780:	2131ac04 	addi	r4,r4,-14672
10015784:	d9002915 	stw	r4,164(sp)
10015788:	d8c02415 	stw	r3,144(sp)
1001578c:	1021883a 	mov	r16,r2
10015790:	9504b03a 	or	r2,r18,r20
10015794:	103f8b1e 	bne	r2,zero,100155c4 <__alt_data_end+0xf80155c4>
10015798:	002b883a 	mov	r21,zero
1001579c:	00800084 	movi	r2,2
100157a0:	003fa106 	br	10015628 <__alt_data_end+0xf8015628>
100157a4:	0025883a 	mov	r18,zero
100157a8:	94800c04 	addi	r18,r18,48
100157ac:	dc8019c5 	stb	r18,103(sp)
100157b0:	dd002c17 	ldw	r20,176(sp)
100157b4:	dc4019c4 	addi	r17,sp,103
100157b8:	003ce906 	br	10014b60 <__alt_data_end+0xf8014b60>
100157bc:	d9402317 	ldw	r5,140(sp)
100157c0:	d9002717 	ldw	r4,156(sp)
100157c4:	d9801a04 	addi	r6,sp,104
100157c8:	00145000 	call	10014500 <__ssprint_r>
100157cc:	103f001e 	bne	r2,zero,100153d0 <__alt_data_end+0xf80153d0>
100157d0:	d8c01c17 	ldw	r3,112(sp)
100157d4:	d8801b17 	ldw	r2,108(sp)
100157d8:	d811883a 	mov	r8,sp
100157dc:	003e7e06 	br	100151d8 <__alt_data_end+0xf80151d8>
100157e0:	014400b4 	movhi	r5,4098
100157e4:	29732004 	addi	r5,r5,-13184
100157e8:	d9402115 	stw	r5,132(sp)
100157ec:	003ea406 	br	10015280 <__alt_data_end+0xf8015280>
100157f0:	d8c02417 	ldw	r3,144(sp)
100157f4:	d9002017 	ldw	r4,128(sp)
100157f8:	0029883a 	mov	r20,zero
100157fc:	18800104 	addi	r2,r3,4
10015800:	1c800017 	ldw	r18,0(r3)
10015804:	203e4b0e 	bge	r4,zero,10015134 <__alt_data_end+0xf8015134>
10015808:	003fcc06 	br	1001573c <__alt_data_end+0xf801573c>
1001580c:	d9002417 	ldw	r4,144(sp)
10015810:	d9402017 	ldw	r5,128(sp)
10015814:	0029883a 	mov	r20,zero
10015818:	20800104 	addi	r2,r4,4
1001581c:	24800017 	ldw	r18,0(r4)
10015820:	283e270e 	bge	r5,zero,100150c0 <__alt_data_end+0xf80150c0>
10015824:	003f7b06 	br	10015614 <__alt_data_end+0xf8015614>
10015828:	8400100c 	andi	r16,r16,64
1001582c:	80003326 	beq	r16,zero,100158fc <___svfiprintf_internal_r+0x122c>
10015830:	d9402417 	ldw	r5,144(sp)
10015834:	d8c02617 	ldw	r3,152(sp)
10015838:	28800017 	ldw	r2,0(r5)
1001583c:	29400104 	addi	r5,r5,4
10015840:	d9402415 	stw	r5,144(sp)
10015844:	10c0000d 	sth	r3,0(r2)
10015848:	003bc306 	br	10014758 <__alt_data_end+0xf8014758>
1001584c:	d9002417 	ldw	r4,144(sp)
10015850:	0029883a 	mov	r20,zero
10015854:	24800017 	ldw	r18,0(r4)
10015858:	21000104 	addi	r4,r4,4
1001585c:	d9002415 	stw	r4,144(sp)
10015860:	003c8806 	br	10014a84 <__alt_data_end+0xf8014a84>
10015864:	d8c02417 	ldw	r3,144(sp)
10015868:	1c800017 	ldw	r18,0(r3)
1001586c:	18c00104 	addi	r3,r3,4
10015870:	d8c02415 	stw	r3,144(sp)
10015874:	9029d7fa 	srai	r20,r18,31
10015878:	a005883a 	mov	r2,r20
1001587c:	003d7806 	br	10014e60 <__alt_data_end+0xf8014e60>
10015880:	8809883a 	mov	r4,r17
10015884:	da002d15 	stw	r8,180(sp)
10015888:	0003f300 	call	10003f30 <strlen>
1001588c:	1029883a 	mov	r20,r2
10015890:	dd401d83 	ldbu	r21,118(sp)
10015894:	ddc02415 	stw	r23,144(sp)
10015898:	d8002015 	stw	zero,128(sp)
1001589c:	da002d17 	ldw	r8,180(sp)
100158a0:	003caf06 	br	10014b60 <__alt_data_end+0xf8014b60>
100158a4:	013fffc4 	movi	r4,-1
100158a8:	003df206 	br	10015074 <__alt_data_end+0xf8015074>
100158ac:	dd002017 	ldw	r20,128(sp)
100158b0:	00800184 	movi	r2,6
100158b4:	1500012e 	bgeu	r2,r20,100158bc <___svfiprintf_internal_r+0x11ec>
100158b8:	1029883a 	mov	r20,r2
100158bc:	a025883a 	mov	r18,r20
100158c0:	a0004116 	blt	r20,zero,100159c8 <___svfiprintf_internal_r+0x12f8>
100158c4:	044400b4 	movhi	r17,4098
100158c8:	ddc02415 	stw	r23,144(sp)
100158cc:	8c71b104 	addi	r17,r17,-14652
100158d0:	003ce806 	br	10014c74 <__alt_data_end+0xf8014c74>
100158d4:	04001004 	movi	r16,64
100158d8:	800b883a 	mov	r5,r16
100158dc:	00034880 	call	10003488 <_malloc_r>
100158e0:	d8c02317 	ldw	r3,140(sp)
100158e4:	18800015 	stw	r2,0(r3)
100158e8:	18800415 	stw	r2,16(r3)
100158ec:	10004d26 	beq	r2,zero,10015a24 <___svfiprintf_internal_r+0x1354>
100158f0:	d9402317 	ldw	r5,140(sp)
100158f4:	2c000515 	stw	r16,20(r5)
100158f8:	003b8906 	br	10014720 <__alt_data_end+0xf8014720>
100158fc:	d9002417 	ldw	r4,144(sp)
10015900:	d9402617 	ldw	r5,152(sp)
10015904:	20800017 	ldw	r2,0(r4)
10015908:	21000104 	addi	r4,r4,4
1001590c:	d9002415 	stw	r4,144(sp)
10015910:	11400015 	stw	r5,0(r2)
10015914:	003b9006 	br	10014758 <__alt_data_end+0xf8014758>
10015918:	8080004c 	andi	r2,r16,1
1001591c:	002b883a 	mov	r21,zero
10015920:	10000526 	beq	r2,zero,10015938 <___svfiprintf_internal_r+0x1268>
10015924:	00800c04 	movi	r2,48
10015928:	d88019c5 	stb	r2,103(sp)
1001592c:	dd002c17 	ldw	r20,176(sp)
10015930:	dc4019c4 	addi	r17,sp,103
10015934:	003c8a06 	br	10014b60 <__alt_data_end+0xf8014b60>
10015938:	0029883a 	mov	r20,zero
1001593c:	dc401a04 	addi	r17,sp,104
10015940:	003c8706 	br	10014b60 <__alt_data_end+0xf8014b60>
10015944:	014400b4 	movhi	r5,4098
10015948:	29732404 	addi	r5,r5,-13168
1001594c:	d9402815 	stw	r5,160(sp)
10015950:	003cff06 	br	10014d50 <__alt_data_end+0xf8014d50>
10015954:	00bfffc4 	movi	r2,-1
10015958:	003ea206 	br	100153e4 <__alt_data_end+0xf80153e4>
1001595c:	00800044 	movi	r2,1
10015960:	10803fcc 	andi	r2,r2,255
10015964:	00c00044 	movi	r3,1
10015968:	10fd4526 	beq	r2,r3,10014e80 <__alt_data_end+0xf8014e80>
1001596c:	00c00084 	movi	r3,2
10015970:	10fc5226 	beq	r2,r3,10014abc <__alt_data_end+0xf8014abc>
10015974:	003c9c06 	br	10014be8 <__alt_data_end+0xf8014be8>
10015978:	1021883a 	mov	r16,r2
1001597c:	002b883a 	mov	r21,zero
10015980:	00800084 	movi	r2,2
10015984:	003ff606 	br	10015960 <__alt_data_end+0xf8015960>
10015988:	010400b4 	movhi	r4,4098
1001598c:	21332404 	addi	r4,r4,-13168
10015990:	d9002815 	stw	r4,160(sp)
10015994:	003e7206 	br	10015360 <__alt_data_end+0xf8015360>
10015998:	014400b4 	movhi	r5,4098
1001599c:	29732004 	addi	r5,r5,-13184
100159a0:	d9402115 	stw	r5,132(sp)
100159a4:	003ec506 	br	100154bc <__alt_data_end+0xf80154bc>
100159a8:	e027883a 	mov	r19,fp
100159ac:	d8002015 	stw	zero,128(sp)
100159b0:	003b9406 	br	10014804 <__alt_data_end+0xf8014804>
100159b4:	dd002017 	ldw	r20,128(sp)
100159b8:	dd401d83 	ldbu	r21,118(sp)
100159bc:	ddc02415 	stw	r23,144(sp)
100159c0:	d8002015 	stw	zero,128(sp)
100159c4:	003c6606 	br	10014b60 <__alt_data_end+0xf8014b60>
100159c8:	0025883a 	mov	r18,zero
100159cc:	003fbd06 	br	100158c4 <__alt_data_end+0xf80158c4>
100159d0:	d9402417 	ldw	r5,144(sp)
100159d4:	d8c02417 	ldw	r3,144(sp)
100159d8:	29400017 	ldw	r5,0(r5)
100159dc:	19000104 	addi	r4,r3,4
100159e0:	d9002415 	stw	r4,144(sp)
100159e4:	d9402015 	stw	r5,128(sp)
100159e8:	98c00043 	ldbu	r3,1(r19)
100159ec:	e027883a 	mov	r19,fp
100159f0:	283f5b0e 	bge	r5,zero,10015760 <__alt_data_end+0xf8015760>
100159f4:	18c03fcc 	andi	r3,r3,255
100159f8:	013fffc4 	movi	r4,-1
100159fc:	18c0201c 	xori	r3,r3,128
10015a00:	d9002015 	stw	r4,128(sp)
10015a04:	18ffe004 	addi	r3,r3,-128
10015a08:	003b7d06 	br	10014800 <__alt_data_end+0xf8014800>
10015a0c:	dd401d85 	stb	r21,118(sp)
10015a10:	003cf306 	br	10014de0 <__alt_data_end+0xf8014de0>
10015a14:	dd401d85 	stb	r21,118(sp)
10015a18:	003d4e06 	br	10014f54 <__alt_data_end+0xf8014f54>
10015a1c:	dd401d85 	stb	r21,118(sp)
10015a20:	003c0e06 	br	10014a5c <__alt_data_end+0xf8014a5c>
10015a24:	d9002717 	ldw	r4,156(sp)
10015a28:	00800304 	movi	r2,12
10015a2c:	20800015 	stw	r2,0(r4)
10015a30:	00bfffc4 	movi	r2,-1
10015a34:	003e6b06 	br	100153e4 <__alt_data_end+0xf80153e4>
10015a38:	dd401d85 	stb	r21,118(sp)
10015a3c:	003d0006 	br	10014e40 <__alt_data_end+0xf8014e40>
10015a40:	dd401d85 	stb	r21,118(sp)
10015a44:	003d7106 	br	1001500c <__alt_data_end+0xf801500c>
10015a48:	dd401d85 	stb	r21,118(sp)
10015a4c:	003c5706 	br	10014bac <__alt_data_end+0xf8014bac>
10015a50:	dd401d85 	stb	r21,118(sp)
10015a54:	003c2e06 	br	10014b10 <__alt_data_end+0xf8014b10>
10015a58:	dd401d85 	stb	r21,118(sp)
10015a5c:	003d8c06 	br	10015090 <__alt_data_end+0xf8015090>
10015a60:	dd401d85 	stb	r21,118(sp)
10015a64:	003da706 	br	10015104 <__alt_data_end+0xf8015104>
10015a68:	dd401d85 	stb	r21,118(sp)
10015a6c:	003cc806 	br	10014d90 <__alt_data_end+0xf8014d90>

10015a70 <_wcrtomb_r>:
10015a70:	defff604 	addi	sp,sp,-40
10015a74:	008400b4 	movhi	r2,4098
10015a78:	dc800815 	stw	r18,32(sp)
10015a7c:	dc400715 	stw	r17,28(sp)
10015a80:	dc000615 	stw	r16,24(sp)
10015a84:	10ba2804 	addi	r2,r2,-5984
10015a88:	dfc00915 	stw	ra,36(sp)
10015a8c:	2021883a 	mov	r16,r4
10015a90:	3823883a 	mov	r17,r7
10015a94:	14800017 	ldw	r18,0(r2)
10015a98:	28001426 	beq	r5,zero,10015aec <_wcrtomb_r+0x7c>
10015a9c:	d9400415 	stw	r5,16(sp)
10015aa0:	d9800515 	stw	r6,20(sp)
10015aa4:	000abd40 	call	1000abd4 <__locale_charset>
10015aa8:	d9800517 	ldw	r6,20(sp)
10015aac:	d9400417 	ldw	r5,16(sp)
10015ab0:	100f883a 	mov	r7,r2
10015ab4:	dc400015 	stw	r17,0(sp)
10015ab8:	8009883a 	mov	r4,r16
10015abc:	903ee83a 	callr	r18
10015ac0:	00ffffc4 	movi	r3,-1
10015ac4:	10c0031e 	bne	r2,r3,10015ad4 <_wcrtomb_r+0x64>
10015ac8:	88000015 	stw	zero,0(r17)
10015acc:	00c02284 	movi	r3,138
10015ad0:	80c00015 	stw	r3,0(r16)
10015ad4:	dfc00917 	ldw	ra,36(sp)
10015ad8:	dc800817 	ldw	r18,32(sp)
10015adc:	dc400717 	ldw	r17,28(sp)
10015ae0:	dc000617 	ldw	r16,24(sp)
10015ae4:	dec00a04 	addi	sp,sp,40
10015ae8:	f800283a 	ret
10015aec:	000abd40 	call	1000abd4 <__locale_charset>
10015af0:	100f883a 	mov	r7,r2
10015af4:	dc400015 	stw	r17,0(sp)
10015af8:	000d883a 	mov	r6,zero
10015afc:	d9400104 	addi	r5,sp,4
10015b00:	8009883a 	mov	r4,r16
10015b04:	903ee83a 	callr	r18
10015b08:	003fed06 	br	10015ac0 <__alt_data_end+0xf8015ac0>

10015b0c <wcrtomb>:
10015b0c:	defff604 	addi	sp,sp,-40
10015b10:	008400b4 	movhi	r2,4098
10015b14:	dc800615 	stw	r18,24(sp)
10015b18:	dc400515 	stw	r17,20(sp)
10015b1c:	10ba2504 	addi	r2,r2,-5996
10015b20:	dfc00915 	stw	ra,36(sp)
10015b24:	dd000815 	stw	r20,32(sp)
10015b28:	dcc00715 	stw	r19,28(sp)
10015b2c:	dc000415 	stw	r16,16(sp)
10015b30:	3025883a 	mov	r18,r6
10015b34:	14400017 	ldw	r17,0(r2)
10015b38:	20001926 	beq	r4,zero,10015ba0 <wcrtomb+0x94>
10015b3c:	008400b4 	movhi	r2,4098
10015b40:	10ba2804 	addi	r2,r2,-5984
10015b44:	15000017 	ldw	r20,0(r2)
10015b48:	2021883a 	mov	r16,r4
10015b4c:	2827883a 	mov	r19,r5
10015b50:	000abd40 	call	1000abd4 <__locale_charset>
10015b54:	100f883a 	mov	r7,r2
10015b58:	dc800015 	stw	r18,0(sp)
10015b5c:	980d883a 	mov	r6,r19
10015b60:	800b883a 	mov	r5,r16
10015b64:	8809883a 	mov	r4,r17
10015b68:	a03ee83a 	callr	r20
10015b6c:	00ffffc4 	movi	r3,-1
10015b70:	10c0031e 	bne	r2,r3,10015b80 <wcrtomb+0x74>
10015b74:	90000015 	stw	zero,0(r18)
10015b78:	00c02284 	movi	r3,138
10015b7c:	88c00015 	stw	r3,0(r17)
10015b80:	dfc00917 	ldw	ra,36(sp)
10015b84:	dd000817 	ldw	r20,32(sp)
10015b88:	dcc00717 	ldw	r19,28(sp)
10015b8c:	dc800617 	ldw	r18,24(sp)
10015b90:	dc400517 	ldw	r17,20(sp)
10015b94:	dc000417 	ldw	r16,16(sp)
10015b98:	dec00a04 	addi	sp,sp,40
10015b9c:	f800283a 	ret
10015ba0:	008400b4 	movhi	r2,4098
10015ba4:	10ba2804 	addi	r2,r2,-5984
10015ba8:	14000017 	ldw	r16,0(r2)
10015bac:	000abd40 	call	1000abd4 <__locale_charset>
10015bb0:	100f883a 	mov	r7,r2
10015bb4:	dc800015 	stw	r18,0(sp)
10015bb8:	000d883a 	mov	r6,zero
10015bbc:	d9400104 	addi	r5,sp,4
10015bc0:	8809883a 	mov	r4,r17
10015bc4:	803ee83a 	callr	r16
10015bc8:	003fe806 	br	10015b6c <__alt_data_end+0xf8015b6c>

10015bcc <__ascii_wctomb>:
10015bcc:	28000526 	beq	r5,zero,10015be4 <__ascii_wctomb+0x18>
10015bd0:	00803fc4 	movi	r2,255
10015bd4:	11800536 	bltu	r2,r6,10015bec <__ascii_wctomb+0x20>
10015bd8:	29800005 	stb	r6,0(r5)
10015bdc:	00800044 	movi	r2,1
10015be0:	f800283a 	ret
10015be4:	0005883a 	mov	r2,zero
10015be8:	f800283a 	ret
10015bec:	00802284 	movi	r2,138
10015bf0:	20800015 	stw	r2,0(r4)
10015bf4:	00bfffc4 	movi	r2,-1
10015bf8:	f800283a 	ret

10015bfc <_wctomb_r>:
10015bfc:	008400b4 	movhi	r2,4098
10015c00:	defff904 	addi	sp,sp,-28
10015c04:	10ba2804 	addi	r2,r2,-5984
10015c08:	dfc00615 	stw	ra,24(sp)
10015c0c:	dc400515 	stw	r17,20(sp)
10015c10:	dc000415 	stw	r16,16(sp)
10015c14:	3823883a 	mov	r17,r7
10015c18:	14000017 	ldw	r16,0(r2)
10015c1c:	d9000115 	stw	r4,4(sp)
10015c20:	d9400215 	stw	r5,8(sp)
10015c24:	d9800315 	stw	r6,12(sp)
10015c28:	000abd40 	call	1000abd4 <__locale_charset>
10015c2c:	d9800317 	ldw	r6,12(sp)
10015c30:	d9400217 	ldw	r5,8(sp)
10015c34:	d9000117 	ldw	r4,4(sp)
10015c38:	100f883a 	mov	r7,r2
10015c3c:	dc400015 	stw	r17,0(sp)
10015c40:	803ee83a 	callr	r16
10015c44:	dfc00617 	ldw	ra,24(sp)
10015c48:	dc400517 	ldw	r17,20(sp)
10015c4c:	dc000417 	ldw	r16,16(sp)
10015c50:	dec00704 	addi	sp,sp,28
10015c54:	f800283a 	ret

10015c58 <__muldi3>:
10015c58:	defff604 	addi	sp,sp,-40
10015c5c:	dd800615 	stw	r22,24(sp)
10015c60:	dd400515 	stw	r21,20(sp)
10015c64:	dc400115 	stw	r17,4(sp)
10015c68:	357fffcc 	andi	r21,r6,65535
10015c6c:	2022d43a 	srli	r17,r4,16
10015c70:	25bfffcc 	andi	r22,r4,65535
10015c74:	dcc00315 	stw	r19,12(sp)
10015c78:	dc800215 	stw	r18,8(sp)
10015c7c:	2027883a 	mov	r19,r4
10015c80:	2825883a 	mov	r18,r5
10015c84:	b009883a 	mov	r4,r22
10015c88:	a80b883a 	mov	r5,r21
10015c8c:	dfc00915 	stw	ra,36(sp)
10015c90:	df000815 	stw	fp,32(sp)
10015c94:	ddc00715 	stw	r23,28(sp)
10015c98:	3839883a 	mov	fp,r7
10015c9c:	302ed43a 	srli	r23,r6,16
10015ca0:	dd000415 	stw	r20,16(sp)
10015ca4:	dc000015 	stw	r16,0(sp)
10015ca8:	3029883a 	mov	r20,r6
10015cac:	00034380 	call	10003438 <__mulsi3>
10015cb0:	a80b883a 	mov	r5,r21
10015cb4:	8809883a 	mov	r4,r17
10015cb8:	1021883a 	mov	r16,r2
10015cbc:	00034380 	call	10003438 <__mulsi3>
10015cc0:	8809883a 	mov	r4,r17
10015cc4:	b80b883a 	mov	r5,r23
10015cc8:	102b883a 	mov	r21,r2
10015ccc:	00034380 	call	10003438 <__mulsi3>
10015cd0:	b80b883a 	mov	r5,r23
10015cd4:	b009883a 	mov	r4,r22
10015cd8:	1023883a 	mov	r17,r2
10015cdc:	00034380 	call	10003438 <__mulsi3>
10015ce0:	8006d43a 	srli	r3,r16,16
10015ce4:	1545883a 	add	r2,r2,r21
10015ce8:	1885883a 	add	r2,r3,r2
10015cec:	1540022e 	bgeu	r2,r21,10015cf8 <__muldi3+0xa0>
10015cf0:	00c00074 	movhi	r3,1
10015cf4:	88e3883a 	add	r17,r17,r3
10015cf8:	1006d43a 	srli	r3,r2,16
10015cfc:	1004943a 	slli	r2,r2,16
10015d00:	e00b883a 	mov	r5,fp
10015d04:	9809883a 	mov	r4,r19
10015d08:	843fffcc 	andi	r16,r16,65535
10015d0c:	1c63883a 	add	r17,r3,r17
10015d10:	1421883a 	add	r16,r2,r16
10015d14:	00034380 	call	10003438 <__mulsi3>
10015d18:	900b883a 	mov	r5,r18
10015d1c:	a009883a 	mov	r4,r20
10015d20:	1027883a 	mov	r19,r2
10015d24:	00034380 	call	10003438 <__mulsi3>
10015d28:	9885883a 	add	r2,r19,r2
10015d2c:	1447883a 	add	r3,r2,r17
10015d30:	8005883a 	mov	r2,r16
10015d34:	dfc00917 	ldw	ra,36(sp)
10015d38:	df000817 	ldw	fp,32(sp)
10015d3c:	ddc00717 	ldw	r23,28(sp)
10015d40:	dd800617 	ldw	r22,24(sp)
10015d44:	dd400517 	ldw	r21,20(sp)
10015d48:	dd000417 	ldw	r20,16(sp)
10015d4c:	dcc00317 	ldw	r19,12(sp)
10015d50:	dc800217 	ldw	r18,8(sp)
10015d54:	dc400117 	ldw	r17,4(sp)
10015d58:	dc000017 	ldw	r16,0(sp)
10015d5c:	dec00a04 	addi	sp,sp,40
10015d60:	f800283a 	ret

10015d64 <__fixunsdfsi>:
10015d64:	defffd04 	addi	sp,sp,-12
10015d68:	000d883a 	mov	r6,zero
10015d6c:	01d07834 	movhi	r7,16864
10015d70:	dc400115 	stw	r17,4(sp)
10015d74:	dc000015 	stw	r16,0(sp)
10015d78:	dfc00215 	stw	ra,8(sp)
10015d7c:	2023883a 	mov	r17,r4
10015d80:	2821883a 	mov	r16,r5
10015d84:	0017e980 	call	10017e98 <__gedf2>
10015d88:	1000080e 	bge	r2,zero,10015dac <__fixunsdfsi+0x48>
10015d8c:	8809883a 	mov	r4,r17
10015d90:	800b883a 	mov	r5,r16
10015d94:	00191d00 	call	100191d0 <__fixdfsi>
10015d98:	dfc00217 	ldw	ra,8(sp)
10015d9c:	dc400117 	ldw	r17,4(sp)
10015da0:	dc000017 	ldw	r16,0(sp)
10015da4:	dec00304 	addi	sp,sp,12
10015da8:	f800283a 	ret
10015dac:	000d883a 	mov	r6,zero
10015db0:	01d07834 	movhi	r7,16864
10015db4:	8809883a 	mov	r4,r17
10015db8:	800b883a 	mov	r5,r16
10015dbc:	00188d40 	call	100188d4 <__subdf3>
10015dc0:	180b883a 	mov	r5,r3
10015dc4:	1009883a 	mov	r4,r2
10015dc8:	00191d00 	call	100191d0 <__fixdfsi>
10015dcc:	00e00034 	movhi	r3,32768
10015dd0:	10c5883a 	add	r2,r2,r3
10015dd4:	003ff006 	br	10015d98 <__alt_data_end+0xf8015d98>

10015dd8 <__udivdi3>:
10015dd8:	defff404 	addi	sp,sp,-48
10015ddc:	dcc00515 	stw	r19,20(sp)
10015de0:	dc000215 	stw	r16,8(sp)
10015de4:	dfc00b15 	stw	ra,44(sp)
10015de8:	df000a15 	stw	fp,40(sp)
10015dec:	ddc00915 	stw	r23,36(sp)
10015df0:	dd800815 	stw	r22,32(sp)
10015df4:	dd400715 	stw	r21,28(sp)
10015df8:	dd000615 	stw	r20,24(sp)
10015dfc:	dc800415 	stw	r18,16(sp)
10015e00:	dc400315 	stw	r17,12(sp)
10015e04:	2027883a 	mov	r19,r4
10015e08:	2821883a 	mov	r16,r5
10015e0c:	3800461e 	bne	r7,zero,10015f28 <__udivdi3+0x150>
10015e10:	3023883a 	mov	r17,r6
10015e14:	2025883a 	mov	r18,r4
10015e18:	2980572e 	bgeu	r5,r6,10015f78 <__udivdi3+0x1a0>
10015e1c:	00bfffd4 	movui	r2,65535
10015e20:	282d883a 	mov	r22,r5
10015e24:	1180b236 	bltu	r2,r6,100160f0 <__udivdi3+0x318>
10015e28:	00803fc4 	movi	r2,255
10015e2c:	1185803a 	cmpltu	r2,r2,r6
10015e30:	100490fa 	slli	r2,r2,3
10015e34:	3086d83a 	srl	r3,r6,r2
10015e38:	010400b4 	movhi	r4,4098
10015e3c:	21332804 	addi	r4,r4,-13152
10015e40:	20c7883a 	add	r3,r4,r3
10015e44:	18c00003 	ldbu	r3,0(r3)
10015e48:	1885883a 	add	r2,r3,r2
10015e4c:	00c00804 	movi	r3,32
10015e50:	1887c83a 	sub	r3,r3,r2
10015e54:	18000526 	beq	r3,zero,10015e6c <__udivdi3+0x94>
10015e58:	80e0983a 	sll	r16,r16,r3
10015e5c:	9884d83a 	srl	r2,r19,r2
10015e60:	30e2983a 	sll	r17,r6,r3
10015e64:	98e4983a 	sll	r18,r19,r3
10015e68:	142cb03a 	or	r22,r2,r16
10015e6c:	882ad43a 	srli	r21,r17,16
10015e70:	b009883a 	mov	r4,r22
10015e74:	8d3fffcc 	andi	r20,r17,65535
10015e78:	a80b883a 	mov	r5,r21
10015e7c:	00033e00 	call	100033e0 <__umodsi3>
10015e80:	b009883a 	mov	r4,r22
10015e84:	a80b883a 	mov	r5,r21
10015e88:	1027883a 	mov	r19,r2
10015e8c:	000337c0 	call	1000337c <__udivsi3>
10015e90:	100b883a 	mov	r5,r2
10015e94:	a009883a 	mov	r4,r20
10015e98:	102d883a 	mov	r22,r2
10015e9c:	00034380 	call	10003438 <__mulsi3>
10015ea0:	9826943a 	slli	r19,r19,16
10015ea4:	9006d43a 	srli	r3,r18,16
10015ea8:	1cc6b03a 	or	r3,r3,r19
10015eac:	1880052e 	bgeu	r3,r2,10015ec4 <__udivdi3+0xec>
10015eb0:	1c47883a 	add	r3,r3,r17
10015eb4:	b13fffc4 	addi	r4,r22,-1
10015eb8:	1c400136 	bltu	r3,r17,10015ec0 <__udivdi3+0xe8>
10015ebc:	18814236 	bltu	r3,r2,100163c8 <__udivdi3+0x5f0>
10015ec0:	202d883a 	mov	r22,r4
10015ec4:	18a1c83a 	sub	r16,r3,r2
10015ec8:	8009883a 	mov	r4,r16
10015ecc:	a80b883a 	mov	r5,r21
10015ed0:	00033e00 	call	100033e0 <__umodsi3>
10015ed4:	1027883a 	mov	r19,r2
10015ed8:	8009883a 	mov	r4,r16
10015edc:	a80b883a 	mov	r5,r21
10015ee0:	9826943a 	slli	r19,r19,16
10015ee4:	000337c0 	call	1000337c <__udivsi3>
10015ee8:	100b883a 	mov	r5,r2
10015eec:	a009883a 	mov	r4,r20
10015ef0:	94bfffcc 	andi	r18,r18,65535
10015ef4:	1021883a 	mov	r16,r2
10015ef8:	94e4b03a 	or	r18,r18,r19
10015efc:	00034380 	call	10003438 <__mulsi3>
10015f00:	9080052e 	bgeu	r18,r2,10015f18 <__udivdi3+0x140>
10015f04:	8ca5883a 	add	r18,r17,r18
10015f08:	80ffffc4 	addi	r3,r16,-1
10015f0c:	94410c36 	bltu	r18,r17,10016340 <__udivdi3+0x568>
10015f10:	90810b2e 	bgeu	r18,r2,10016340 <__udivdi3+0x568>
10015f14:	843fff84 	addi	r16,r16,-2
10015f18:	b004943a 	slli	r2,r22,16
10015f1c:	0007883a 	mov	r3,zero
10015f20:	1404b03a 	or	r2,r2,r16
10015f24:	00005e06 	br	100160a0 <__udivdi3+0x2c8>
10015f28:	29c05b36 	bltu	r5,r7,10016098 <__udivdi3+0x2c0>
10015f2c:	00bfffd4 	movui	r2,65535
10015f30:	11c0672e 	bgeu	r2,r7,100160d0 <__udivdi3+0x2f8>
10015f34:	00804034 	movhi	r2,256
10015f38:	10bfffc4 	addi	r2,r2,-1
10015f3c:	11c10a36 	bltu	r2,r7,10016368 <__udivdi3+0x590>
10015f40:	00800404 	movi	r2,16
10015f44:	3886d83a 	srl	r3,r7,r2
10015f48:	010400b4 	movhi	r4,4098
10015f4c:	21332804 	addi	r4,r4,-13152
10015f50:	20c7883a 	add	r3,r4,r3
10015f54:	18c00003 	ldbu	r3,0(r3)
10015f58:	05c00804 	movi	r23,32
10015f5c:	1885883a 	add	r2,r3,r2
10015f60:	b8afc83a 	sub	r23,r23,r2
10015f64:	b800671e 	bne	r23,zero,10016104 <__udivdi3+0x32c>
10015f68:	3c010536 	bltu	r7,r16,10016380 <__udivdi3+0x5a8>
10015f6c:	9985403a 	cmpgeu	r2,r19,r6
10015f70:	0007883a 	mov	r3,zero
10015f74:	00004a06 	br	100160a0 <__udivdi3+0x2c8>
10015f78:	3000041e 	bne	r6,zero,10015f8c <__udivdi3+0x1b4>
10015f7c:	000b883a 	mov	r5,zero
10015f80:	01000044 	movi	r4,1
10015f84:	000337c0 	call	1000337c <__udivsi3>
10015f88:	1023883a 	mov	r17,r2
10015f8c:	00bfffd4 	movui	r2,65535
10015f90:	1440532e 	bgeu	r2,r17,100160e0 <__udivdi3+0x308>
10015f94:	00804034 	movhi	r2,256
10015f98:	10bfffc4 	addi	r2,r2,-1
10015f9c:	1440f436 	bltu	r2,r17,10016370 <__udivdi3+0x598>
10015fa0:	00800404 	movi	r2,16
10015fa4:	8886d83a 	srl	r3,r17,r2
10015fa8:	010400b4 	movhi	r4,4098
10015fac:	21332804 	addi	r4,r4,-13152
10015fb0:	20c7883a 	add	r3,r4,r3
10015fb4:	18c00003 	ldbu	r3,0(r3)
10015fb8:	1885883a 	add	r2,r3,r2
10015fbc:	00c00804 	movi	r3,32
10015fc0:	1887c83a 	sub	r3,r3,r2
10015fc4:	1800a51e 	bne	r3,zero,1001625c <__udivdi3+0x484>
10015fc8:	882ad43a 	srli	r21,r17,16
10015fcc:	8461c83a 	sub	r16,r16,r17
10015fd0:	8d3fffcc 	andi	r20,r17,65535
10015fd4:	00c00044 	movi	r3,1
10015fd8:	a80b883a 	mov	r5,r21
10015fdc:	8009883a 	mov	r4,r16
10015fe0:	d8c00115 	stw	r3,4(sp)
10015fe4:	00033e00 	call	100033e0 <__umodsi3>
10015fe8:	a80b883a 	mov	r5,r21
10015fec:	8009883a 	mov	r4,r16
10015ff0:	1027883a 	mov	r19,r2
10015ff4:	000337c0 	call	1000337c <__udivsi3>
10015ff8:	a00b883a 	mov	r5,r20
10015ffc:	1009883a 	mov	r4,r2
10016000:	102d883a 	mov	r22,r2
10016004:	00034380 	call	10003438 <__mulsi3>
10016008:	9826943a 	slli	r19,r19,16
1001600c:	900ed43a 	srli	r7,r18,16
10016010:	d8c00117 	ldw	r3,4(sp)
10016014:	3cceb03a 	or	r7,r7,r19
10016018:	3880052e 	bgeu	r7,r2,10016030 <__udivdi3+0x258>
1001601c:	3c4f883a 	add	r7,r7,r17
10016020:	b13fffc4 	addi	r4,r22,-1
10016024:	3c400136 	bltu	r7,r17,1001602c <__udivdi3+0x254>
10016028:	3880e436 	bltu	r7,r2,100163bc <__udivdi3+0x5e4>
1001602c:	202d883a 	mov	r22,r4
10016030:	38a1c83a 	sub	r16,r7,r2
10016034:	8009883a 	mov	r4,r16
10016038:	a80b883a 	mov	r5,r21
1001603c:	d8c00115 	stw	r3,4(sp)
10016040:	00033e00 	call	100033e0 <__umodsi3>
10016044:	1027883a 	mov	r19,r2
10016048:	8009883a 	mov	r4,r16
1001604c:	a80b883a 	mov	r5,r21
10016050:	9826943a 	slli	r19,r19,16
10016054:	000337c0 	call	1000337c <__udivsi3>
10016058:	a00b883a 	mov	r5,r20
1001605c:	1009883a 	mov	r4,r2
10016060:	94bfffcc 	andi	r18,r18,65535
10016064:	1021883a 	mov	r16,r2
10016068:	94e4b03a 	or	r18,r18,r19
1001606c:	00034380 	call	10003438 <__mulsi3>
10016070:	d8c00117 	ldw	r3,4(sp)
10016074:	9080052e 	bgeu	r18,r2,1001608c <__udivdi3+0x2b4>
10016078:	8ca5883a 	add	r18,r17,r18
1001607c:	813fffc4 	addi	r4,r16,-1
10016080:	9440ad36 	bltu	r18,r17,10016338 <__udivdi3+0x560>
10016084:	9080ac2e 	bgeu	r18,r2,10016338 <__udivdi3+0x560>
10016088:	843fff84 	addi	r16,r16,-2
1001608c:	b004943a 	slli	r2,r22,16
10016090:	1404b03a 	or	r2,r2,r16
10016094:	00000206 	br	100160a0 <__udivdi3+0x2c8>
10016098:	0007883a 	mov	r3,zero
1001609c:	0005883a 	mov	r2,zero
100160a0:	dfc00b17 	ldw	ra,44(sp)
100160a4:	df000a17 	ldw	fp,40(sp)
100160a8:	ddc00917 	ldw	r23,36(sp)
100160ac:	dd800817 	ldw	r22,32(sp)
100160b0:	dd400717 	ldw	r21,28(sp)
100160b4:	dd000617 	ldw	r20,24(sp)
100160b8:	dcc00517 	ldw	r19,20(sp)
100160bc:	dc800417 	ldw	r18,16(sp)
100160c0:	dc400317 	ldw	r17,12(sp)
100160c4:	dc000217 	ldw	r16,8(sp)
100160c8:	dec00c04 	addi	sp,sp,48
100160cc:	f800283a 	ret
100160d0:	00803fc4 	movi	r2,255
100160d4:	11c5803a 	cmpltu	r2,r2,r7
100160d8:	100490fa 	slli	r2,r2,3
100160dc:	003f9906 	br	10015f44 <__alt_data_end+0xf8015f44>
100160e0:	00803fc4 	movi	r2,255
100160e4:	1445803a 	cmpltu	r2,r2,r17
100160e8:	100490fa 	slli	r2,r2,3
100160ec:	003fad06 	br	10015fa4 <__alt_data_end+0xf8015fa4>
100160f0:	00804034 	movhi	r2,256
100160f4:	10bfffc4 	addi	r2,r2,-1
100160f8:	11809f36 	bltu	r2,r6,10016378 <__udivdi3+0x5a0>
100160fc:	00800404 	movi	r2,16
10016100:	003f4c06 	br	10015e34 <__alt_data_end+0xf8015e34>
10016104:	3dce983a 	sll	r7,r7,r23
10016108:	30b8d83a 	srl	fp,r6,r2
1001610c:	80a2d83a 	srl	r17,r16,r2
10016110:	35cc983a 	sll	r6,r6,r23
10016114:	3f38b03a 	or	fp,r7,fp
10016118:	e024d43a 	srli	r18,fp,16
1001611c:	9884d83a 	srl	r2,r19,r2
10016120:	85e0983a 	sll	r16,r16,r23
10016124:	8809883a 	mov	r4,r17
10016128:	900b883a 	mov	r5,r18
1001612c:	d9800015 	stw	r6,0(sp)
10016130:	1420b03a 	or	r16,r2,r16
10016134:	00033e00 	call	100033e0 <__umodsi3>
10016138:	900b883a 	mov	r5,r18
1001613c:	8809883a 	mov	r4,r17
10016140:	1029883a 	mov	r20,r2
10016144:	e5bfffcc 	andi	r22,fp,65535
10016148:	000337c0 	call	1000337c <__udivsi3>
1001614c:	100b883a 	mov	r5,r2
10016150:	b009883a 	mov	r4,r22
10016154:	102b883a 	mov	r21,r2
10016158:	00034380 	call	10003438 <__mulsi3>
1001615c:	a028943a 	slli	r20,r20,16
10016160:	8006d43a 	srli	r3,r16,16
10016164:	1d06b03a 	or	r3,r3,r20
10016168:	1880042e 	bgeu	r3,r2,1001617c <__udivdi3+0x3a4>
1001616c:	1f07883a 	add	r3,r3,fp
10016170:	a93fffc4 	addi	r4,r21,-1
10016174:	1f00892e 	bgeu	r3,fp,1001639c <__udivdi3+0x5c4>
10016178:	202b883a 	mov	r21,r4
1001617c:	18a3c83a 	sub	r17,r3,r2
10016180:	8809883a 	mov	r4,r17
10016184:	900b883a 	mov	r5,r18
10016188:	00033e00 	call	100033e0 <__umodsi3>
1001618c:	1029883a 	mov	r20,r2
10016190:	8809883a 	mov	r4,r17
10016194:	900b883a 	mov	r5,r18
10016198:	a028943a 	slli	r20,r20,16
1001619c:	000337c0 	call	1000337c <__udivsi3>
100161a0:	100b883a 	mov	r5,r2
100161a4:	b009883a 	mov	r4,r22
100161a8:	843fffcc 	andi	r16,r16,65535
100161ac:	1023883a 	mov	r17,r2
100161b0:	8520b03a 	or	r16,r16,r20
100161b4:	00034380 	call	10003438 <__mulsi3>
100161b8:	8080042e 	bgeu	r16,r2,100161cc <__udivdi3+0x3f4>
100161bc:	8721883a 	add	r16,r16,fp
100161c0:	88ffffc4 	addi	r3,r17,-1
100161c4:	8700712e 	bgeu	r16,fp,1001638c <__udivdi3+0x5b4>
100161c8:	1823883a 	mov	r17,r3
100161cc:	a80e943a 	slli	r7,r21,16
100161d0:	d8c00017 	ldw	r3,0(sp)
100161d4:	80a1c83a 	sub	r16,r16,r2
100161d8:	3c64b03a 	or	r18,r7,r17
100161dc:	1d3fffcc 	andi	r20,r3,65535
100161e0:	9022d43a 	srli	r17,r18,16
100161e4:	95bfffcc 	andi	r22,r18,65535
100161e8:	a00b883a 	mov	r5,r20
100161ec:	b009883a 	mov	r4,r22
100161f0:	182ad43a 	srli	r21,r3,16
100161f4:	00034380 	call	10003438 <__mulsi3>
100161f8:	a00b883a 	mov	r5,r20
100161fc:	8809883a 	mov	r4,r17
10016200:	1039883a 	mov	fp,r2
10016204:	00034380 	call	10003438 <__mulsi3>
10016208:	8809883a 	mov	r4,r17
1001620c:	a80b883a 	mov	r5,r21
10016210:	1029883a 	mov	r20,r2
10016214:	00034380 	call	10003438 <__mulsi3>
10016218:	a80b883a 	mov	r5,r21
1001621c:	b009883a 	mov	r4,r22
10016220:	1023883a 	mov	r17,r2
10016224:	00034380 	call	10003438 <__mulsi3>
10016228:	e006d43a 	srli	r3,fp,16
1001622c:	1505883a 	add	r2,r2,r20
10016230:	1887883a 	add	r3,r3,r2
10016234:	1d00022e 	bgeu	r3,r20,10016240 <__udivdi3+0x468>
10016238:	00800074 	movhi	r2,1
1001623c:	88a3883a 	add	r17,r17,r2
10016240:	1804d43a 	srli	r2,r3,16
10016244:	1463883a 	add	r17,r2,r17
10016248:	84404436 	bltu	r16,r17,1001635c <__udivdi3+0x584>
1001624c:	84403e26 	beq	r16,r17,10016348 <__udivdi3+0x570>
10016250:	9005883a 	mov	r2,r18
10016254:	0007883a 	mov	r3,zero
10016258:	003f9106 	br	100160a0 <__alt_data_end+0xf80160a0>
1001625c:	88e2983a 	sll	r17,r17,r3
10016260:	80aed83a 	srl	r23,r16,r2
10016264:	80e0983a 	sll	r16,r16,r3
10016268:	882ad43a 	srli	r21,r17,16
1001626c:	9884d83a 	srl	r2,r19,r2
10016270:	b809883a 	mov	r4,r23
10016274:	a80b883a 	mov	r5,r21
10016278:	98e4983a 	sll	r18,r19,r3
1001627c:	142cb03a 	or	r22,r2,r16
10016280:	00033e00 	call	100033e0 <__umodsi3>
10016284:	b809883a 	mov	r4,r23
10016288:	a80b883a 	mov	r5,r21
1001628c:	1027883a 	mov	r19,r2
10016290:	8d3fffcc 	andi	r20,r17,65535
10016294:	000337c0 	call	1000337c <__udivsi3>
10016298:	a009883a 	mov	r4,r20
1001629c:	100b883a 	mov	r5,r2
100162a0:	102f883a 	mov	r23,r2
100162a4:	00034380 	call	10003438 <__mulsi3>
100162a8:	9826943a 	slli	r19,r19,16
100162ac:	b008d43a 	srli	r4,r22,16
100162b0:	24c8b03a 	or	r4,r4,r19
100162b4:	2080062e 	bgeu	r4,r2,100162d0 <__udivdi3+0x4f8>
100162b8:	2449883a 	add	r4,r4,r17
100162bc:	b8ffffc4 	addi	r3,r23,-1
100162c0:	24403c36 	bltu	r4,r17,100163b4 <__udivdi3+0x5dc>
100162c4:	20803b2e 	bgeu	r4,r2,100163b4 <__udivdi3+0x5dc>
100162c8:	bdffff84 	addi	r23,r23,-2
100162cc:	2449883a 	add	r4,r4,r17
100162d0:	20a1c83a 	sub	r16,r4,r2
100162d4:	a80b883a 	mov	r5,r21
100162d8:	8009883a 	mov	r4,r16
100162dc:	00033e00 	call	100033e0 <__umodsi3>
100162e0:	a80b883a 	mov	r5,r21
100162e4:	8009883a 	mov	r4,r16
100162e8:	1027883a 	mov	r19,r2
100162ec:	000337c0 	call	1000337c <__udivsi3>
100162f0:	a009883a 	mov	r4,r20
100162f4:	100b883a 	mov	r5,r2
100162f8:	9826943a 	slli	r19,r19,16
100162fc:	1039883a 	mov	fp,r2
10016300:	00034380 	call	10003438 <__mulsi3>
10016304:	b13fffcc 	andi	r4,r22,65535
10016308:	24c8b03a 	or	r4,r4,r19
1001630c:	2080062e 	bgeu	r4,r2,10016328 <__udivdi3+0x550>
10016310:	2449883a 	add	r4,r4,r17
10016314:	e0ffffc4 	addi	r3,fp,-1
10016318:	24402436 	bltu	r4,r17,100163ac <__udivdi3+0x5d4>
1001631c:	2080232e 	bgeu	r4,r2,100163ac <__udivdi3+0x5d4>
10016320:	e73fff84 	addi	fp,fp,-2
10016324:	2449883a 	add	r4,r4,r17
10016328:	b82e943a 	slli	r23,r23,16
1001632c:	20a1c83a 	sub	r16,r4,r2
10016330:	bf06b03a 	or	r3,r23,fp
10016334:	003f2806 	br	10015fd8 <__alt_data_end+0xf8015fd8>
10016338:	2021883a 	mov	r16,r4
1001633c:	003f5306 	br	1001608c <__alt_data_end+0xf801608c>
10016340:	1821883a 	mov	r16,r3
10016344:	003ef406 	br	10015f18 <__alt_data_end+0xf8015f18>
10016348:	1806943a 	slli	r3,r3,16
1001634c:	9de6983a 	sll	r19,r19,r23
10016350:	e73fffcc 	andi	fp,fp,65535
10016354:	1f07883a 	add	r3,r3,fp
10016358:	98ffbd2e 	bgeu	r19,r3,10016250 <__alt_data_end+0xf8016250>
1001635c:	90bfffc4 	addi	r2,r18,-1
10016360:	0007883a 	mov	r3,zero
10016364:	003f4e06 	br	100160a0 <__alt_data_end+0xf80160a0>
10016368:	00800604 	movi	r2,24
1001636c:	003ef506 	br	10015f44 <__alt_data_end+0xf8015f44>
10016370:	00800604 	movi	r2,24
10016374:	003f0b06 	br	10015fa4 <__alt_data_end+0xf8015fa4>
10016378:	00800604 	movi	r2,24
1001637c:	003ead06 	br	10015e34 <__alt_data_end+0xf8015e34>
10016380:	0007883a 	mov	r3,zero
10016384:	00800044 	movi	r2,1
10016388:	003f4506 	br	100160a0 <__alt_data_end+0xf80160a0>
1001638c:	80bf8e2e 	bgeu	r16,r2,100161c8 <__alt_data_end+0xf80161c8>
10016390:	8c7fff84 	addi	r17,r17,-2
10016394:	8721883a 	add	r16,r16,fp
10016398:	003f8c06 	br	100161cc <__alt_data_end+0xf80161cc>
1001639c:	18bf762e 	bgeu	r3,r2,10016178 <__alt_data_end+0xf8016178>
100163a0:	ad7fff84 	addi	r21,r21,-2
100163a4:	1f07883a 	add	r3,r3,fp
100163a8:	003f7406 	br	1001617c <__alt_data_end+0xf801617c>
100163ac:	1839883a 	mov	fp,r3
100163b0:	003fdd06 	br	10016328 <__alt_data_end+0xf8016328>
100163b4:	182f883a 	mov	r23,r3
100163b8:	003fc506 	br	100162d0 <__alt_data_end+0xf80162d0>
100163bc:	b5bfff84 	addi	r22,r22,-2
100163c0:	3c4f883a 	add	r7,r7,r17
100163c4:	003f1a06 	br	10016030 <__alt_data_end+0xf8016030>
100163c8:	b5bfff84 	addi	r22,r22,-2
100163cc:	1c47883a 	add	r3,r3,r17
100163d0:	003ebc06 	br	10015ec4 <__alt_data_end+0xf8015ec4>

100163d4 <__umoddi3>:
100163d4:	defff304 	addi	sp,sp,-52
100163d8:	df000b15 	stw	fp,44(sp)
100163dc:	dc400415 	stw	r17,16(sp)
100163e0:	dc000315 	stw	r16,12(sp)
100163e4:	dfc00c15 	stw	ra,48(sp)
100163e8:	ddc00a15 	stw	r23,40(sp)
100163ec:	dd800915 	stw	r22,36(sp)
100163f0:	dd400815 	stw	r21,32(sp)
100163f4:	dd000715 	stw	r20,28(sp)
100163f8:	dcc00615 	stw	r19,24(sp)
100163fc:	dc800515 	stw	r18,20(sp)
10016400:	2021883a 	mov	r16,r4
10016404:	2823883a 	mov	r17,r5
10016408:	2839883a 	mov	fp,r5
1001640c:	3800401e 	bne	r7,zero,10016510 <__umoddi3+0x13c>
10016410:	3027883a 	mov	r19,r6
10016414:	2029883a 	mov	r20,r4
10016418:	2980552e 	bgeu	r5,r6,10016570 <__umoddi3+0x19c>
1001641c:	00bfffd4 	movui	r2,65535
10016420:	1180a236 	bltu	r2,r6,100166ac <__umoddi3+0x2d8>
10016424:	01003fc4 	movi	r4,255
10016428:	2189803a 	cmpltu	r4,r4,r6
1001642c:	200890fa 	slli	r4,r4,3
10016430:	3104d83a 	srl	r2,r6,r4
10016434:	00c400b4 	movhi	r3,4098
10016438:	18f32804 	addi	r3,r3,-13152
1001643c:	1885883a 	add	r2,r3,r2
10016440:	10c00003 	ldbu	r3,0(r2)
10016444:	00800804 	movi	r2,32
10016448:	1909883a 	add	r4,r3,r4
1001644c:	1125c83a 	sub	r18,r2,r4
10016450:	90000526 	beq	r18,zero,10016468 <__umoddi3+0x94>
10016454:	8ca2983a 	sll	r17,r17,r18
10016458:	8108d83a 	srl	r4,r16,r4
1001645c:	34a6983a 	sll	r19,r6,r18
10016460:	84a8983a 	sll	r20,r16,r18
10016464:	2478b03a 	or	fp,r4,r17
10016468:	982cd43a 	srli	r22,r19,16
1001646c:	e009883a 	mov	r4,fp
10016470:	9dffffcc 	andi	r23,r19,65535
10016474:	b00b883a 	mov	r5,r22
10016478:	00033e00 	call	100033e0 <__umodsi3>
1001647c:	b00b883a 	mov	r5,r22
10016480:	e009883a 	mov	r4,fp
10016484:	102b883a 	mov	r21,r2
10016488:	000337c0 	call	1000337c <__udivsi3>
1001648c:	100b883a 	mov	r5,r2
10016490:	b809883a 	mov	r4,r23
10016494:	00034380 	call	10003438 <__mulsi3>
10016498:	a82a943a 	slli	r21,r21,16
1001649c:	a006d43a 	srli	r3,r20,16
100164a0:	1d46b03a 	or	r3,r3,r21
100164a4:	1880032e 	bgeu	r3,r2,100164b4 <__umoddi3+0xe0>
100164a8:	1cc7883a 	add	r3,r3,r19
100164ac:	1cc00136 	bltu	r3,r19,100164b4 <__umoddi3+0xe0>
100164b0:	18813136 	bltu	r3,r2,10016978 <__umoddi3+0x5a4>
100164b4:	18a1c83a 	sub	r16,r3,r2
100164b8:	b00b883a 	mov	r5,r22
100164bc:	8009883a 	mov	r4,r16
100164c0:	00033e00 	call	100033e0 <__umodsi3>
100164c4:	b00b883a 	mov	r5,r22
100164c8:	8009883a 	mov	r4,r16
100164cc:	1023883a 	mov	r17,r2
100164d0:	000337c0 	call	1000337c <__udivsi3>
100164d4:	100b883a 	mov	r5,r2
100164d8:	b809883a 	mov	r4,r23
100164dc:	8822943a 	slli	r17,r17,16
100164e0:	00034380 	call	10003438 <__mulsi3>
100164e4:	a0ffffcc 	andi	r3,r20,65535
100164e8:	1c46b03a 	or	r3,r3,r17
100164ec:	1880042e 	bgeu	r3,r2,10016500 <__umoddi3+0x12c>
100164f0:	1cc7883a 	add	r3,r3,r19
100164f4:	1cc00236 	bltu	r3,r19,10016500 <__umoddi3+0x12c>
100164f8:	1880012e 	bgeu	r3,r2,10016500 <__umoddi3+0x12c>
100164fc:	1cc7883a 	add	r3,r3,r19
10016500:	1885c83a 	sub	r2,r3,r2
10016504:	1484d83a 	srl	r2,r2,r18
10016508:	0007883a 	mov	r3,zero
1001650c:	00005306 	br	1001665c <__umoddi3+0x288>
10016510:	29c05036 	bltu	r5,r7,10016654 <__umoddi3+0x280>
10016514:	00bfffd4 	movui	r2,65535
10016518:	11c05c2e 	bgeu	r2,r7,1001668c <__umoddi3+0x2b8>
1001651c:	00804034 	movhi	r2,256
10016520:	10bfffc4 	addi	r2,r2,-1
10016524:	11c10636 	bltu	r2,r7,10016940 <__umoddi3+0x56c>
10016528:	01000404 	movi	r4,16
1001652c:	3904d83a 	srl	r2,r7,r4
10016530:	00c400b4 	movhi	r3,4098
10016534:	18f32804 	addi	r3,r3,-13152
10016538:	1885883a 	add	r2,r3,r2
1001653c:	14c00003 	ldbu	r19,0(r2)
10016540:	00c00804 	movi	r3,32
10016544:	9927883a 	add	r19,r19,r4
10016548:	1ce9c83a 	sub	r20,r3,r19
1001654c:	a0005c1e 	bne	r20,zero,100166c0 <__umoddi3+0x2ec>
10016550:	3c400136 	bltu	r7,r17,10016558 <__umoddi3+0x184>
10016554:	81810a36 	bltu	r16,r6,10016980 <__umoddi3+0x5ac>
10016558:	8185c83a 	sub	r2,r16,r6
1001655c:	89e3c83a 	sub	r17,r17,r7
10016560:	8089803a 	cmpltu	r4,r16,r2
10016564:	8939c83a 	sub	fp,r17,r4
10016568:	e007883a 	mov	r3,fp
1001656c:	00003b06 	br	1001665c <__umoddi3+0x288>
10016570:	3000041e 	bne	r6,zero,10016584 <__umoddi3+0x1b0>
10016574:	000b883a 	mov	r5,zero
10016578:	01000044 	movi	r4,1
1001657c:	000337c0 	call	1000337c <__udivsi3>
10016580:	1027883a 	mov	r19,r2
10016584:	00bfffd4 	movui	r2,65535
10016588:	14c0442e 	bgeu	r2,r19,1001669c <__umoddi3+0x2c8>
1001658c:	00804034 	movhi	r2,256
10016590:	10bfffc4 	addi	r2,r2,-1
10016594:	14c0ec36 	bltu	r2,r19,10016948 <__umoddi3+0x574>
10016598:	00800404 	movi	r2,16
1001659c:	9886d83a 	srl	r3,r19,r2
100165a0:	010400b4 	movhi	r4,4098
100165a4:	21332804 	addi	r4,r4,-13152
100165a8:	20c7883a 	add	r3,r4,r3
100165ac:	18c00003 	ldbu	r3,0(r3)
100165b0:	1887883a 	add	r3,r3,r2
100165b4:	00800804 	movi	r2,32
100165b8:	10e5c83a 	sub	r18,r2,r3
100165bc:	9000ab1e 	bne	r18,zero,1001686c <__umoddi3+0x498>
100165c0:	982cd43a 	srli	r22,r19,16
100165c4:	8ce3c83a 	sub	r17,r17,r19
100165c8:	9dffffcc 	andi	r23,r19,65535
100165cc:	b00b883a 	mov	r5,r22
100165d0:	8809883a 	mov	r4,r17
100165d4:	00033e00 	call	100033e0 <__umodsi3>
100165d8:	b00b883a 	mov	r5,r22
100165dc:	8809883a 	mov	r4,r17
100165e0:	102b883a 	mov	r21,r2
100165e4:	000337c0 	call	1000337c <__udivsi3>
100165e8:	b80b883a 	mov	r5,r23
100165ec:	1009883a 	mov	r4,r2
100165f0:	00034380 	call	10003438 <__mulsi3>
100165f4:	a82a943a 	slli	r21,r21,16
100165f8:	a006d43a 	srli	r3,r20,16
100165fc:	1d46b03a 	or	r3,r3,r21
10016600:	1880042e 	bgeu	r3,r2,10016614 <__umoddi3+0x240>
10016604:	1cc7883a 	add	r3,r3,r19
10016608:	1cc00236 	bltu	r3,r19,10016614 <__umoddi3+0x240>
1001660c:	1880012e 	bgeu	r3,r2,10016614 <__umoddi3+0x240>
10016610:	1cc7883a 	add	r3,r3,r19
10016614:	18a1c83a 	sub	r16,r3,r2
10016618:	b00b883a 	mov	r5,r22
1001661c:	8009883a 	mov	r4,r16
10016620:	00033e00 	call	100033e0 <__umodsi3>
10016624:	1023883a 	mov	r17,r2
10016628:	b00b883a 	mov	r5,r22
1001662c:	8009883a 	mov	r4,r16
10016630:	000337c0 	call	1000337c <__udivsi3>
10016634:	8822943a 	slli	r17,r17,16
10016638:	b80b883a 	mov	r5,r23
1001663c:	1009883a 	mov	r4,r2
10016640:	00034380 	call	10003438 <__mulsi3>
10016644:	a53fffcc 	andi	r20,r20,65535
10016648:	a446b03a 	or	r3,r20,r17
1001664c:	18bfac2e 	bgeu	r3,r2,10016500 <__alt_data_end+0xf8016500>
10016650:	003fa706 	br	100164f0 <__alt_data_end+0xf80164f0>
10016654:	2005883a 	mov	r2,r4
10016658:	2807883a 	mov	r3,r5
1001665c:	dfc00c17 	ldw	ra,48(sp)
10016660:	df000b17 	ldw	fp,44(sp)
10016664:	ddc00a17 	ldw	r23,40(sp)
10016668:	dd800917 	ldw	r22,36(sp)
1001666c:	dd400817 	ldw	r21,32(sp)
10016670:	dd000717 	ldw	r20,28(sp)
10016674:	dcc00617 	ldw	r19,24(sp)
10016678:	dc800517 	ldw	r18,20(sp)
1001667c:	dc400417 	ldw	r17,16(sp)
10016680:	dc000317 	ldw	r16,12(sp)
10016684:	dec00d04 	addi	sp,sp,52
10016688:	f800283a 	ret
1001668c:	04c03fc4 	movi	r19,255
10016690:	99c9803a 	cmpltu	r4,r19,r7
10016694:	200890fa 	slli	r4,r4,3
10016698:	003fa406 	br	1001652c <__alt_data_end+0xf801652c>
1001669c:	00803fc4 	movi	r2,255
100166a0:	14c5803a 	cmpltu	r2,r2,r19
100166a4:	100490fa 	slli	r2,r2,3
100166a8:	003fbc06 	br	1001659c <__alt_data_end+0xf801659c>
100166ac:	00804034 	movhi	r2,256
100166b0:	10bfffc4 	addi	r2,r2,-1
100166b4:	1180a636 	bltu	r2,r6,10016950 <__umoddi3+0x57c>
100166b8:	01000404 	movi	r4,16
100166bc:	003f5c06 	br	10016430 <__alt_data_end+0xf8016430>
100166c0:	3d0e983a 	sll	r7,r7,r20
100166c4:	34ead83a 	srl	r21,r6,r19
100166c8:	8cc6d83a 	srl	r3,r17,r19
100166cc:	8d10983a 	sll	r8,r17,r20
100166d0:	3d6ab03a 	or	r21,r7,r21
100166d4:	a82cd43a 	srli	r22,r21,16
100166d8:	84e2d83a 	srl	r17,r16,r19
100166dc:	1809883a 	mov	r4,r3
100166e0:	b00b883a 	mov	r5,r22
100166e4:	8a22b03a 	or	r17,r17,r8
100166e8:	3524983a 	sll	r18,r6,r20
100166ec:	dc400015 	stw	r17,0(sp)
100166f0:	d8c00115 	stw	r3,4(sp)
100166f4:	00033e00 	call	100033e0 <__umodsi3>
100166f8:	d8c00117 	ldw	r3,4(sp)
100166fc:	b00b883a 	mov	r5,r22
10016700:	1039883a 	mov	fp,r2
10016704:	1809883a 	mov	r4,r3
10016708:	000337c0 	call	1000337c <__udivsi3>
1001670c:	adffffcc 	andi	r23,r21,65535
10016710:	100b883a 	mov	r5,r2
10016714:	b809883a 	mov	r4,r23
10016718:	1023883a 	mov	r17,r2
1001671c:	00034380 	call	10003438 <__mulsi3>
10016720:	d9400017 	ldw	r5,0(sp)
10016724:	e008943a 	slli	r4,fp,16
10016728:	8520983a 	sll	r16,r16,r20
1001672c:	2806d43a 	srli	r3,r5,16
10016730:	1906b03a 	or	r3,r3,r4
10016734:	1880042e 	bgeu	r3,r2,10016748 <__umoddi3+0x374>
10016738:	1d47883a 	add	r3,r3,r21
1001673c:	893fffc4 	addi	r4,r17,-1
10016740:	1d40892e 	bgeu	r3,r21,10016968 <__umoddi3+0x594>
10016744:	2023883a 	mov	r17,r4
10016748:	18b9c83a 	sub	fp,r3,r2
1001674c:	b00b883a 	mov	r5,r22
10016750:	e009883a 	mov	r4,fp
10016754:	00033e00 	call	100033e0 <__umodsi3>
10016758:	b00b883a 	mov	r5,r22
1001675c:	e009883a 	mov	r4,fp
10016760:	d8800215 	stw	r2,8(sp)
10016764:	000337c0 	call	1000337c <__udivsi3>
10016768:	100b883a 	mov	r5,r2
1001676c:	b809883a 	mov	r4,r23
10016770:	102d883a 	mov	r22,r2
10016774:	00034380 	call	10003438 <__mulsi3>
10016778:	d9800217 	ldw	r6,8(sp)
1001677c:	d8c00017 	ldw	r3,0(sp)
10016780:	300c943a 	slli	r6,r6,16
10016784:	1a3fffcc 	andi	r8,r3,65535
10016788:	4190b03a 	or	r8,r8,r6
1001678c:	4080042e 	bgeu	r8,r2,100167a0 <__umoddi3+0x3cc>
10016790:	4551883a 	add	r8,r8,r21
10016794:	b0ffffc4 	addi	r3,r22,-1
10016798:	45406f2e 	bgeu	r8,r21,10016958 <__umoddi3+0x584>
1001679c:	182d883a 	mov	r22,r3
100167a0:	880e943a 	slli	r7,r17,16
100167a4:	9006d43a 	srli	r3,r18,16
100167a8:	91bfffcc 	andi	r6,r18,65535
100167ac:	3dacb03a 	or	r22,r7,r22
100167b0:	b02ed43a 	srli	r23,r22,16
100167b4:	b5bfffcc 	andi	r22,r22,65535
100167b8:	300b883a 	mov	r5,r6
100167bc:	b009883a 	mov	r4,r22
100167c0:	40a3c83a 	sub	r17,r8,r2
100167c4:	d8c00115 	stw	r3,4(sp)
100167c8:	d9800215 	stw	r6,8(sp)
100167cc:	00034380 	call	10003438 <__mulsi3>
100167d0:	d9800217 	ldw	r6,8(sp)
100167d4:	b809883a 	mov	r4,r23
100167d8:	1039883a 	mov	fp,r2
100167dc:	300b883a 	mov	r5,r6
100167e0:	00034380 	call	10003438 <__mulsi3>
100167e4:	d8c00117 	ldw	r3,4(sp)
100167e8:	b809883a 	mov	r4,r23
100167ec:	d8800215 	stw	r2,8(sp)
100167f0:	180b883a 	mov	r5,r3
100167f4:	00034380 	call	10003438 <__mulsi3>
100167f8:	d8c00117 	ldw	r3,4(sp)
100167fc:	b009883a 	mov	r4,r22
10016800:	102f883a 	mov	r23,r2
10016804:	180b883a 	mov	r5,r3
10016808:	00034380 	call	10003438 <__mulsi3>
1001680c:	d9800217 	ldw	r6,8(sp)
10016810:	e006d43a 	srli	r3,fp,16
10016814:	1185883a 	add	r2,r2,r6
10016818:	1885883a 	add	r2,r3,r2
1001681c:	1180022e 	bgeu	r2,r6,10016828 <__umoddi3+0x454>
10016820:	00c00074 	movhi	r3,1
10016824:	b8ef883a 	add	r23,r23,r3
10016828:	1006d43a 	srli	r3,r2,16
1001682c:	1004943a 	slli	r2,r2,16
10016830:	e73fffcc 	andi	fp,fp,65535
10016834:	1dc7883a 	add	r3,r3,r23
10016838:	1739883a 	add	fp,r2,fp
1001683c:	88c03a36 	bltu	r17,r3,10016928 <__umoddi3+0x554>
10016840:	88c05126 	beq	r17,r3,10016988 <__umoddi3+0x5b4>
10016844:	88c9c83a 	sub	r4,r17,r3
10016848:	e00f883a 	mov	r7,fp
1001684c:	81cfc83a 	sub	r7,r16,r7
10016850:	81c7803a 	cmpltu	r3,r16,r7
10016854:	20c7c83a 	sub	r3,r4,r3
10016858:	1cc4983a 	sll	r2,r3,r19
1001685c:	3d0ed83a 	srl	r7,r7,r20
10016860:	1d06d83a 	srl	r3,r3,r20
10016864:	11c4b03a 	or	r2,r2,r7
10016868:	003f7c06 	br	1001665c <__alt_data_end+0xf801665c>
1001686c:	9ca6983a 	sll	r19,r19,r18
10016870:	88f8d83a 	srl	fp,r17,r3
10016874:	80c4d83a 	srl	r2,r16,r3
10016878:	982cd43a 	srli	r22,r19,16
1001687c:	8ca2983a 	sll	r17,r17,r18
10016880:	e009883a 	mov	r4,fp
10016884:	b00b883a 	mov	r5,r22
10016888:	146ab03a 	or	r21,r2,r17
1001688c:	00033e00 	call	100033e0 <__umodsi3>
10016890:	b00b883a 	mov	r5,r22
10016894:	e009883a 	mov	r4,fp
10016898:	1029883a 	mov	r20,r2
1001689c:	9dffffcc 	andi	r23,r19,65535
100168a0:	000337c0 	call	1000337c <__udivsi3>
100168a4:	b809883a 	mov	r4,r23
100168a8:	100b883a 	mov	r5,r2
100168ac:	00034380 	call	10003438 <__mulsi3>
100168b0:	a008943a 	slli	r4,r20,16
100168b4:	a806d43a 	srli	r3,r21,16
100168b8:	84a8983a 	sll	r20,r16,r18
100168bc:	1906b03a 	or	r3,r3,r4
100168c0:	1880042e 	bgeu	r3,r2,100168d4 <__umoddi3+0x500>
100168c4:	1cc7883a 	add	r3,r3,r19
100168c8:	1cc00236 	bltu	r3,r19,100168d4 <__umoddi3+0x500>
100168cc:	1880012e 	bgeu	r3,r2,100168d4 <__umoddi3+0x500>
100168d0:	1cc7883a 	add	r3,r3,r19
100168d4:	18a3c83a 	sub	r17,r3,r2
100168d8:	b00b883a 	mov	r5,r22
100168dc:	8809883a 	mov	r4,r17
100168e0:	00033e00 	call	100033e0 <__umodsi3>
100168e4:	b00b883a 	mov	r5,r22
100168e8:	8809883a 	mov	r4,r17
100168ec:	1021883a 	mov	r16,r2
100168f0:	000337c0 	call	1000337c <__udivsi3>
100168f4:	100b883a 	mov	r5,r2
100168f8:	b809883a 	mov	r4,r23
100168fc:	8020943a 	slli	r16,r16,16
10016900:	00034380 	call	10003438 <__mulsi3>
10016904:	a8ffffcc 	andi	r3,r21,65535
10016908:	1c06b03a 	or	r3,r3,r16
1001690c:	1880042e 	bgeu	r3,r2,10016920 <__umoddi3+0x54c>
10016910:	1cc7883a 	add	r3,r3,r19
10016914:	1cc00236 	bltu	r3,r19,10016920 <__umoddi3+0x54c>
10016918:	1880012e 	bgeu	r3,r2,10016920 <__umoddi3+0x54c>
1001691c:	1cc7883a 	add	r3,r3,r19
10016920:	18a3c83a 	sub	r17,r3,r2
10016924:	003f2906 	br	100165cc <__alt_data_end+0xf80165cc>
10016928:	e48fc83a 	sub	r7,fp,r18
1001692c:	1d49c83a 	sub	r4,r3,r21
10016930:	e1f9803a 	cmpltu	fp,fp,r7
10016934:	2739c83a 	sub	fp,r4,fp
10016938:	8f09c83a 	sub	r4,r17,fp
1001693c:	003fc306 	br	1001684c <__alt_data_end+0xf801684c>
10016940:	01000604 	movi	r4,24
10016944:	003ef906 	br	1001652c <__alt_data_end+0xf801652c>
10016948:	00800604 	movi	r2,24
1001694c:	003f1306 	br	1001659c <__alt_data_end+0xf801659c>
10016950:	01000604 	movi	r4,24
10016954:	003eb606 	br	10016430 <__alt_data_end+0xf8016430>
10016958:	40bf902e 	bgeu	r8,r2,1001679c <__alt_data_end+0xf801679c>
1001695c:	b5bfff84 	addi	r22,r22,-2
10016960:	4551883a 	add	r8,r8,r21
10016964:	003f8e06 	br	100167a0 <__alt_data_end+0xf80167a0>
10016968:	18bf762e 	bgeu	r3,r2,10016744 <__alt_data_end+0xf8016744>
1001696c:	8c7fff84 	addi	r17,r17,-2
10016970:	1d47883a 	add	r3,r3,r21
10016974:	003f7406 	br	10016748 <__alt_data_end+0xf8016748>
10016978:	1cc7883a 	add	r3,r3,r19
1001697c:	003ecd06 	br	100164b4 <__alt_data_end+0xf80164b4>
10016980:	8005883a 	mov	r2,r16
10016984:	003ef806 	br	10016568 <__alt_data_end+0xf8016568>
10016988:	873fe736 	bltu	r16,fp,10016928 <__alt_data_end+0xf8016928>
1001698c:	e00f883a 	mov	r7,fp
10016990:	0009883a 	mov	r4,zero
10016994:	003fad06 	br	1001684c <__alt_data_end+0xf801684c>

10016998 <__eqsf2>:
10016998:	2006d5fa 	srli	r3,r4,23
1001699c:	280cd5fa 	srli	r6,r5,23
100169a0:	01c02034 	movhi	r7,128
100169a4:	39ffffc4 	addi	r7,r7,-1
100169a8:	18c03fcc 	andi	r3,r3,255
100169ac:	02003fc4 	movi	r8,255
100169b0:	3904703a 	and	r2,r7,r4
100169b4:	31803fcc 	andi	r6,r6,255
100169b8:	394e703a 	and	r7,r7,r5
100169bc:	2008d7fa 	srli	r4,r4,31
100169c0:	280ad7fa 	srli	r5,r5,31
100169c4:	1a000d26 	beq	r3,r8,100169fc <__eqsf2+0x64>
100169c8:	02003fc4 	movi	r8,255
100169cc:	32000826 	beq	r6,r8,100169f0 <__eqsf2+0x58>
100169d0:	19800226 	beq	r3,r6,100169dc <__eqsf2+0x44>
100169d4:	00800044 	movi	r2,1
100169d8:	f800283a 	ret
100169dc:	11fffd1e 	bne	r2,r7,100169d4 <__alt_data_end+0xf80169d4>
100169e0:	21400926 	beq	r4,r5,10016a08 <__eqsf2+0x70>
100169e4:	183ffb1e 	bne	r3,zero,100169d4 <__alt_data_end+0xf80169d4>
100169e8:	1004c03a 	cmpne	r2,r2,zero
100169ec:	f800283a 	ret
100169f0:	383ff726 	beq	r7,zero,100169d0 <__alt_data_end+0xf80169d0>
100169f4:	00800044 	movi	r2,1
100169f8:	f800283a 	ret
100169fc:	103ff226 	beq	r2,zero,100169c8 <__alt_data_end+0xf80169c8>
10016a00:	00800044 	movi	r2,1
10016a04:	f800283a 	ret
10016a08:	0005883a 	mov	r2,zero
10016a0c:	f800283a 	ret

10016a10 <__gesf2>:
10016a10:	2004d5fa 	srli	r2,r4,23
10016a14:	2806d5fa 	srli	r3,r5,23
10016a18:	01802034 	movhi	r6,128
10016a1c:	31bfffc4 	addi	r6,r6,-1
10016a20:	10803fcc 	andi	r2,r2,255
10016a24:	01c03fc4 	movi	r7,255
10016a28:	3110703a 	and	r8,r6,r4
10016a2c:	18c03fcc 	andi	r3,r3,255
10016a30:	314c703a 	and	r6,r6,r5
10016a34:	2008d7fa 	srli	r4,r4,31
10016a38:	280ad7fa 	srli	r5,r5,31
10016a3c:	11c01926 	beq	r2,r7,10016aa4 <__gesf2+0x94>
10016a40:	01c03fc4 	movi	r7,255
10016a44:	19c00f26 	beq	r3,r7,10016a84 <__gesf2+0x74>
10016a48:	1000061e 	bne	r2,zero,10016a64 <__gesf2+0x54>
10016a4c:	400f003a 	cmpeq	r7,r8,zero
10016a50:	1800071e 	bne	r3,zero,10016a70 <__gesf2+0x60>
10016a54:	3000061e 	bne	r6,zero,10016a70 <__gesf2+0x60>
10016a58:	0005883a 	mov	r2,zero
10016a5c:	40000e1e 	bne	r8,zero,10016a98 <__gesf2+0x88>
10016a60:	f800283a 	ret
10016a64:	18000a1e 	bne	r3,zero,10016a90 <__gesf2+0x80>
10016a68:	30000b26 	beq	r6,zero,10016a98 <__gesf2+0x88>
10016a6c:	000f883a 	mov	r7,zero
10016a70:	29403fcc 	andi	r5,r5,255
10016a74:	38000726 	beq	r7,zero,10016a94 <__gesf2+0x84>
10016a78:	28000826 	beq	r5,zero,10016a9c <__gesf2+0x8c>
10016a7c:	00800044 	movi	r2,1
10016a80:	f800283a 	ret
10016a84:	303ff026 	beq	r6,zero,10016a48 <__alt_data_end+0xf8016a48>
10016a88:	00bfff84 	movi	r2,-2
10016a8c:	f800283a 	ret
10016a90:	29403fcc 	andi	r5,r5,255
10016a94:	21400526 	beq	r4,r5,10016aac <__gesf2+0x9c>
10016a98:	203ff826 	beq	r4,zero,10016a7c <__alt_data_end+0xf8016a7c>
10016a9c:	00bfffc4 	movi	r2,-1
10016aa0:	f800283a 	ret
10016aa4:	403fe626 	beq	r8,zero,10016a40 <__alt_data_end+0xf8016a40>
10016aa8:	003ff706 	br	10016a88 <__alt_data_end+0xf8016a88>
10016aac:	18bffa16 	blt	r3,r2,10016a98 <__alt_data_end+0xf8016a98>
10016ab0:	10c00216 	blt	r2,r3,10016abc <__gesf2+0xac>
10016ab4:	323ff836 	bltu	r6,r8,10016a98 <__alt_data_end+0xf8016a98>
10016ab8:	4180022e 	bgeu	r8,r6,10016ac4 <__gesf2+0xb4>
10016abc:	203fef1e 	bne	r4,zero,10016a7c <__alt_data_end+0xf8016a7c>
10016ac0:	003ff606 	br	10016a9c <__alt_data_end+0xf8016a9c>
10016ac4:	0005883a 	mov	r2,zero
10016ac8:	f800283a 	ret

10016acc <__lesf2>:
10016acc:	2004d5fa 	srli	r2,r4,23
10016ad0:	280cd5fa 	srli	r6,r5,23
10016ad4:	00c02034 	movhi	r3,128
10016ad8:	18ffffc4 	addi	r3,r3,-1
10016adc:	10803fcc 	andi	r2,r2,255
10016ae0:	01c03fc4 	movi	r7,255
10016ae4:	1910703a 	and	r8,r3,r4
10016ae8:	31803fcc 	andi	r6,r6,255
10016aec:	1946703a 	and	r3,r3,r5
10016af0:	2008d7fa 	srli	r4,r4,31
10016af4:	280ad7fa 	srli	r5,r5,31
10016af8:	11c01b26 	beq	r2,r7,10016b68 <__lesf2+0x9c>
10016afc:	01c03fc4 	movi	r7,255
10016b00:	31c01126 	beq	r6,r7,10016b48 <__lesf2+0x7c>
10016b04:	1000071e 	bne	r2,zero,10016b24 <__lesf2+0x58>
10016b08:	400f003a 	cmpeq	r7,r8,zero
10016b0c:	21003fcc 	andi	r4,r4,255
10016b10:	3000081e 	bne	r6,zero,10016b34 <__lesf2+0x68>
10016b14:	1800071e 	bne	r3,zero,10016b34 <__lesf2+0x68>
10016b18:	0005883a 	mov	r2,zero
10016b1c:	40000f1e 	bne	r8,zero,10016b5c <__lesf2+0x90>
10016b20:	f800283a 	ret
10016b24:	21003fcc 	andi	r4,r4,255
10016b28:	30000a1e 	bne	r6,zero,10016b54 <__lesf2+0x88>
10016b2c:	18000b26 	beq	r3,zero,10016b5c <__lesf2+0x90>
10016b30:	000f883a 	mov	r7,zero
10016b34:	29403fcc 	andi	r5,r5,255
10016b38:	38000726 	beq	r7,zero,10016b58 <__lesf2+0x8c>
10016b3c:	28000826 	beq	r5,zero,10016b60 <__lesf2+0x94>
10016b40:	00800044 	movi	r2,1
10016b44:	f800283a 	ret
10016b48:	183fee26 	beq	r3,zero,10016b04 <__alt_data_end+0xf8016b04>
10016b4c:	00800084 	movi	r2,2
10016b50:	f800283a 	ret
10016b54:	29403fcc 	andi	r5,r5,255
10016b58:	21400626 	beq	r4,r5,10016b74 <__lesf2+0xa8>
10016b5c:	203ff826 	beq	r4,zero,10016b40 <__alt_data_end+0xf8016b40>
10016b60:	00bfffc4 	movi	r2,-1
10016b64:	f800283a 	ret
10016b68:	403fe426 	beq	r8,zero,10016afc <__alt_data_end+0xf8016afc>
10016b6c:	00800084 	movi	r2,2
10016b70:	f800283a 	ret
10016b74:	30bff916 	blt	r6,r2,10016b5c <__alt_data_end+0xf8016b5c>
10016b78:	11800216 	blt	r2,r6,10016b84 <__lesf2+0xb8>
10016b7c:	1a3ff736 	bltu	r3,r8,10016b5c <__alt_data_end+0xf8016b5c>
10016b80:	40c0022e 	bgeu	r8,r3,10016b8c <__lesf2+0xc0>
10016b84:	203fee1e 	bne	r4,zero,10016b40 <__alt_data_end+0xf8016b40>
10016b88:	003ff506 	br	10016b60 <__alt_data_end+0xf8016b60>
10016b8c:	0005883a 	mov	r2,zero
10016b90:	f800283a 	ret

10016b94 <__adddf3>:
10016b94:	02c00434 	movhi	r11,16
10016b98:	5affffc4 	addi	r11,r11,-1
10016b9c:	2806d7fa 	srli	r3,r5,31
10016ba0:	2ad4703a 	and	r10,r5,r11
10016ba4:	3ad2703a 	and	r9,r7,r11
10016ba8:	3804d53a 	srli	r2,r7,20
10016bac:	3018d77a 	srli	r12,r6,29
10016bb0:	280ad53a 	srli	r5,r5,20
10016bb4:	501490fa 	slli	r10,r10,3
10016bb8:	2010d77a 	srli	r8,r4,29
10016bbc:	481290fa 	slli	r9,r9,3
10016bc0:	380ed7fa 	srli	r7,r7,31
10016bc4:	defffb04 	addi	sp,sp,-20
10016bc8:	dc800215 	stw	r18,8(sp)
10016bcc:	dc400115 	stw	r17,4(sp)
10016bd0:	dc000015 	stw	r16,0(sp)
10016bd4:	dfc00415 	stw	ra,16(sp)
10016bd8:	dcc00315 	stw	r19,12(sp)
10016bdc:	1c803fcc 	andi	r18,r3,255
10016be0:	2c01ffcc 	andi	r16,r5,2047
10016be4:	5210b03a 	or	r8,r10,r8
10016be8:	202290fa 	slli	r17,r4,3
10016bec:	1081ffcc 	andi	r2,r2,2047
10016bf0:	4b12b03a 	or	r9,r9,r12
10016bf4:	300c90fa 	slli	r6,r6,3
10016bf8:	91c07526 	beq	r18,r7,10016dd0 <__adddf3+0x23c>
10016bfc:	8087c83a 	sub	r3,r16,r2
10016c00:	00c0ab0e 	bge	zero,r3,10016eb0 <__adddf3+0x31c>
10016c04:	10002a1e 	bne	r2,zero,10016cb0 <__adddf3+0x11c>
10016c08:	4984b03a 	or	r2,r9,r6
10016c0c:	1000961e 	bne	r2,zero,10016e68 <__adddf3+0x2d4>
10016c10:	888001cc 	andi	r2,r17,7
10016c14:	10000726 	beq	r2,zero,10016c34 <__adddf3+0xa0>
10016c18:	888003cc 	andi	r2,r17,15
10016c1c:	00c00104 	movi	r3,4
10016c20:	10c00426 	beq	r2,r3,10016c34 <__adddf3+0xa0>
10016c24:	88c7883a 	add	r3,r17,r3
10016c28:	1c63803a 	cmpltu	r17,r3,r17
10016c2c:	4451883a 	add	r8,r8,r17
10016c30:	1823883a 	mov	r17,r3
10016c34:	4080202c 	andhi	r2,r8,128
10016c38:	10005926 	beq	r2,zero,10016da0 <__adddf3+0x20c>
10016c3c:	84000044 	addi	r16,r16,1
10016c40:	0081ffc4 	movi	r2,2047
10016c44:	8080ba26 	beq	r16,r2,10016f30 <__adddf3+0x39c>
10016c48:	00bfe034 	movhi	r2,65408
10016c4c:	10bfffc4 	addi	r2,r2,-1
10016c50:	4090703a 	and	r8,r8,r2
10016c54:	4004977a 	slli	r2,r8,29
10016c58:	4010927a 	slli	r8,r8,9
10016c5c:	8822d0fa 	srli	r17,r17,3
10016c60:	8401ffcc 	andi	r16,r16,2047
10016c64:	4010d33a 	srli	r8,r8,12
10016c68:	9007883a 	mov	r3,r18
10016c6c:	1444b03a 	or	r2,r2,r17
10016c70:	8401ffcc 	andi	r16,r16,2047
10016c74:	8020953a 	slli	r16,r16,20
10016c78:	18c03fcc 	andi	r3,r3,255
10016c7c:	01000434 	movhi	r4,16
10016c80:	213fffc4 	addi	r4,r4,-1
10016c84:	180697fa 	slli	r3,r3,31
10016c88:	4110703a 	and	r8,r8,r4
10016c8c:	4410b03a 	or	r8,r8,r16
10016c90:	40c6b03a 	or	r3,r8,r3
10016c94:	dfc00417 	ldw	ra,16(sp)
10016c98:	dcc00317 	ldw	r19,12(sp)
10016c9c:	dc800217 	ldw	r18,8(sp)
10016ca0:	dc400117 	ldw	r17,4(sp)
10016ca4:	dc000017 	ldw	r16,0(sp)
10016ca8:	dec00504 	addi	sp,sp,20
10016cac:	f800283a 	ret
10016cb0:	0081ffc4 	movi	r2,2047
10016cb4:	80bfd626 	beq	r16,r2,10016c10 <__alt_data_end+0xf8016c10>
10016cb8:	4a402034 	orhi	r9,r9,128
10016cbc:	00800e04 	movi	r2,56
10016cc0:	10c09f16 	blt	r2,r3,10016f40 <__adddf3+0x3ac>
10016cc4:	008007c4 	movi	r2,31
10016cc8:	10c0c216 	blt	r2,r3,10016fd4 <__adddf3+0x440>
10016ccc:	00800804 	movi	r2,32
10016cd0:	10c5c83a 	sub	r2,r2,r3
10016cd4:	488a983a 	sll	r5,r9,r2
10016cd8:	30c8d83a 	srl	r4,r6,r3
10016cdc:	3084983a 	sll	r2,r6,r2
10016ce0:	48c6d83a 	srl	r3,r9,r3
10016ce4:	290cb03a 	or	r6,r5,r4
10016ce8:	1004c03a 	cmpne	r2,r2,zero
10016cec:	308cb03a 	or	r6,r6,r2
10016cf0:	898dc83a 	sub	r6,r17,r6
10016cf4:	89a3803a 	cmpltu	r17,r17,r6
10016cf8:	40d1c83a 	sub	r8,r8,r3
10016cfc:	4451c83a 	sub	r8,r8,r17
10016d00:	3023883a 	mov	r17,r6
10016d04:	4080202c 	andhi	r2,r8,128
10016d08:	10002326 	beq	r2,zero,10016d98 <__adddf3+0x204>
10016d0c:	04c02034 	movhi	r19,128
10016d10:	9cffffc4 	addi	r19,r19,-1
10016d14:	44e6703a 	and	r19,r8,r19
10016d18:	98007626 	beq	r19,zero,10016ef4 <__adddf3+0x360>
10016d1c:	9809883a 	mov	r4,r19
10016d20:	001957c0 	call	1001957c <__clzsi2>
10016d24:	10fffe04 	addi	r3,r2,-8
10016d28:	010007c4 	movi	r4,31
10016d2c:	20c07716 	blt	r4,r3,10016f0c <__adddf3+0x378>
10016d30:	00800804 	movi	r2,32
10016d34:	10c5c83a 	sub	r2,r2,r3
10016d38:	8884d83a 	srl	r2,r17,r2
10016d3c:	98d0983a 	sll	r8,r19,r3
10016d40:	88e2983a 	sll	r17,r17,r3
10016d44:	1204b03a 	or	r2,r2,r8
10016d48:	1c007416 	blt	r3,r16,10016f1c <__adddf3+0x388>
10016d4c:	1c21c83a 	sub	r16,r3,r16
10016d50:	82000044 	addi	r8,r16,1
10016d54:	00c007c4 	movi	r3,31
10016d58:	1a009116 	blt	r3,r8,10016fa0 <__adddf3+0x40c>
10016d5c:	00c00804 	movi	r3,32
10016d60:	1a07c83a 	sub	r3,r3,r8
10016d64:	8a08d83a 	srl	r4,r17,r8
10016d68:	88e2983a 	sll	r17,r17,r3
10016d6c:	10c6983a 	sll	r3,r2,r3
10016d70:	1210d83a 	srl	r8,r2,r8
10016d74:	8804c03a 	cmpne	r2,r17,zero
10016d78:	1906b03a 	or	r3,r3,r4
10016d7c:	18a2b03a 	or	r17,r3,r2
10016d80:	0021883a 	mov	r16,zero
10016d84:	003fa206 	br	10016c10 <__alt_data_end+0xf8016c10>
10016d88:	1890b03a 	or	r8,r3,r2
10016d8c:	40017d26 	beq	r8,zero,10017384 <__adddf3+0x7f0>
10016d90:	1011883a 	mov	r8,r2
10016d94:	1823883a 	mov	r17,r3
10016d98:	888001cc 	andi	r2,r17,7
10016d9c:	103f9e1e 	bne	r2,zero,10016c18 <__alt_data_end+0xf8016c18>
10016da0:	4004977a 	slli	r2,r8,29
10016da4:	8822d0fa 	srli	r17,r17,3
10016da8:	4010d0fa 	srli	r8,r8,3
10016dac:	9007883a 	mov	r3,r18
10016db0:	1444b03a 	or	r2,r2,r17
10016db4:	0101ffc4 	movi	r4,2047
10016db8:	81002426 	beq	r16,r4,10016e4c <__adddf3+0x2b8>
10016dbc:	8120703a 	and	r16,r16,r4
10016dc0:	01000434 	movhi	r4,16
10016dc4:	213fffc4 	addi	r4,r4,-1
10016dc8:	4110703a 	and	r8,r8,r4
10016dcc:	003fa806 	br	10016c70 <__alt_data_end+0xf8016c70>
10016dd0:	8089c83a 	sub	r4,r16,r2
10016dd4:	01005e0e 	bge	zero,r4,10016f50 <__adddf3+0x3bc>
10016dd8:	10002b26 	beq	r2,zero,10016e88 <__adddf3+0x2f4>
10016ddc:	0081ffc4 	movi	r2,2047
10016de0:	80bf8b26 	beq	r16,r2,10016c10 <__alt_data_end+0xf8016c10>
10016de4:	4a402034 	orhi	r9,r9,128
10016de8:	00800e04 	movi	r2,56
10016dec:	1100a40e 	bge	r2,r4,10017080 <__adddf3+0x4ec>
10016df0:	498cb03a 	or	r6,r9,r6
10016df4:	300ac03a 	cmpne	r5,r6,zero
10016df8:	0013883a 	mov	r9,zero
10016dfc:	2c4b883a 	add	r5,r5,r17
10016e00:	2c63803a 	cmpltu	r17,r5,r17
10016e04:	4a11883a 	add	r8,r9,r8
10016e08:	8a11883a 	add	r8,r17,r8
10016e0c:	2823883a 	mov	r17,r5
10016e10:	4080202c 	andhi	r2,r8,128
10016e14:	103fe026 	beq	r2,zero,10016d98 <__alt_data_end+0xf8016d98>
10016e18:	84000044 	addi	r16,r16,1
10016e1c:	0081ffc4 	movi	r2,2047
10016e20:	8080d226 	beq	r16,r2,1001716c <__adddf3+0x5d8>
10016e24:	00bfe034 	movhi	r2,65408
10016e28:	10bfffc4 	addi	r2,r2,-1
10016e2c:	4090703a 	and	r8,r8,r2
10016e30:	880ad07a 	srli	r5,r17,1
10016e34:	400897fa 	slli	r4,r8,31
10016e38:	88c0004c 	andi	r3,r17,1
10016e3c:	28e2b03a 	or	r17,r5,r3
10016e40:	4010d07a 	srli	r8,r8,1
10016e44:	2462b03a 	or	r17,r4,r17
10016e48:	003f7106 	br	10016c10 <__alt_data_end+0xf8016c10>
10016e4c:	4088b03a 	or	r4,r8,r2
10016e50:	20014526 	beq	r4,zero,10017368 <__adddf3+0x7d4>
10016e54:	01000434 	movhi	r4,16
10016e58:	42000234 	orhi	r8,r8,8
10016e5c:	213fffc4 	addi	r4,r4,-1
10016e60:	4110703a 	and	r8,r8,r4
10016e64:	003f8206 	br	10016c70 <__alt_data_end+0xf8016c70>
10016e68:	18ffffc4 	addi	r3,r3,-1
10016e6c:	1800491e 	bne	r3,zero,10016f94 <__adddf3+0x400>
10016e70:	898bc83a 	sub	r5,r17,r6
10016e74:	8963803a 	cmpltu	r17,r17,r5
10016e78:	4251c83a 	sub	r8,r8,r9
10016e7c:	4451c83a 	sub	r8,r8,r17
10016e80:	2823883a 	mov	r17,r5
10016e84:	003f9f06 	br	10016d04 <__alt_data_end+0xf8016d04>
10016e88:	4984b03a 	or	r2,r9,r6
10016e8c:	103f6026 	beq	r2,zero,10016c10 <__alt_data_end+0xf8016c10>
10016e90:	213fffc4 	addi	r4,r4,-1
10016e94:	2000931e 	bne	r4,zero,100170e4 <__adddf3+0x550>
10016e98:	898d883a 	add	r6,r17,r6
10016e9c:	3463803a 	cmpltu	r17,r6,r17
10016ea0:	4251883a 	add	r8,r8,r9
10016ea4:	8a11883a 	add	r8,r17,r8
10016ea8:	3023883a 	mov	r17,r6
10016eac:	003fd806 	br	10016e10 <__alt_data_end+0xf8016e10>
10016eb0:	1800541e 	bne	r3,zero,10017004 <__adddf3+0x470>
10016eb4:	80800044 	addi	r2,r16,1
10016eb8:	1081ffcc 	andi	r2,r2,2047
10016ebc:	00c00044 	movi	r3,1
10016ec0:	1880a00e 	bge	r3,r2,10017144 <__adddf3+0x5b0>
10016ec4:	8989c83a 	sub	r4,r17,r6
10016ec8:	8905803a 	cmpltu	r2,r17,r4
10016ecc:	4267c83a 	sub	r19,r8,r9
10016ed0:	98a7c83a 	sub	r19,r19,r2
10016ed4:	9880202c 	andhi	r2,r19,128
10016ed8:	10006326 	beq	r2,zero,10017068 <__adddf3+0x4d4>
10016edc:	3463c83a 	sub	r17,r6,r17
10016ee0:	4a07c83a 	sub	r3,r9,r8
10016ee4:	344d803a 	cmpltu	r6,r6,r17
10016ee8:	19a7c83a 	sub	r19,r3,r6
10016eec:	3825883a 	mov	r18,r7
10016ef0:	983f8a1e 	bne	r19,zero,10016d1c <__alt_data_end+0xf8016d1c>
10016ef4:	8809883a 	mov	r4,r17
10016ef8:	001957c0 	call	1001957c <__clzsi2>
10016efc:	10800804 	addi	r2,r2,32
10016f00:	10fffe04 	addi	r3,r2,-8
10016f04:	010007c4 	movi	r4,31
10016f08:	20ff890e 	bge	r4,r3,10016d30 <__alt_data_end+0xf8016d30>
10016f0c:	10bff604 	addi	r2,r2,-40
10016f10:	8884983a 	sll	r2,r17,r2
10016f14:	0023883a 	mov	r17,zero
10016f18:	1c3f8c0e 	bge	r3,r16,10016d4c <__alt_data_end+0xf8016d4c>
10016f1c:	023fe034 	movhi	r8,65408
10016f20:	423fffc4 	addi	r8,r8,-1
10016f24:	80e1c83a 	sub	r16,r16,r3
10016f28:	1210703a 	and	r8,r2,r8
10016f2c:	003f3806 	br	10016c10 <__alt_data_end+0xf8016c10>
10016f30:	9007883a 	mov	r3,r18
10016f34:	0011883a 	mov	r8,zero
10016f38:	0005883a 	mov	r2,zero
10016f3c:	003f4c06 	br	10016c70 <__alt_data_end+0xf8016c70>
10016f40:	498cb03a 	or	r6,r9,r6
10016f44:	300cc03a 	cmpne	r6,r6,zero
10016f48:	0007883a 	mov	r3,zero
10016f4c:	003f6806 	br	10016cf0 <__alt_data_end+0xf8016cf0>
10016f50:	20009c1e 	bne	r4,zero,100171c4 <__adddf3+0x630>
10016f54:	80800044 	addi	r2,r16,1
10016f58:	1141ffcc 	andi	r5,r2,2047
10016f5c:	01000044 	movi	r4,1
10016f60:	2140670e 	bge	r4,r5,10017100 <__adddf3+0x56c>
10016f64:	0101ffc4 	movi	r4,2047
10016f68:	11007f26 	beq	r2,r4,10017168 <__adddf3+0x5d4>
10016f6c:	898d883a 	add	r6,r17,r6
10016f70:	4247883a 	add	r3,r8,r9
10016f74:	3451803a 	cmpltu	r8,r6,r17
10016f78:	40d1883a 	add	r8,r8,r3
10016f7c:	402297fa 	slli	r17,r8,31
10016f80:	300cd07a 	srli	r6,r6,1
10016f84:	4010d07a 	srli	r8,r8,1
10016f88:	1021883a 	mov	r16,r2
10016f8c:	89a2b03a 	or	r17,r17,r6
10016f90:	003f1f06 	br	10016c10 <__alt_data_end+0xf8016c10>
10016f94:	0081ffc4 	movi	r2,2047
10016f98:	80bf481e 	bne	r16,r2,10016cbc <__alt_data_end+0xf8016cbc>
10016f9c:	003f1c06 	br	10016c10 <__alt_data_end+0xf8016c10>
10016fa0:	843ff844 	addi	r16,r16,-31
10016fa4:	01000804 	movi	r4,32
10016fa8:	1406d83a 	srl	r3,r2,r16
10016fac:	41005026 	beq	r8,r4,100170f0 <__adddf3+0x55c>
10016fb0:	01001004 	movi	r4,64
10016fb4:	2211c83a 	sub	r8,r4,r8
10016fb8:	1204983a 	sll	r2,r2,r8
10016fbc:	88a2b03a 	or	r17,r17,r2
10016fc0:	8822c03a 	cmpne	r17,r17,zero
10016fc4:	1c62b03a 	or	r17,r3,r17
10016fc8:	0011883a 	mov	r8,zero
10016fcc:	0021883a 	mov	r16,zero
10016fd0:	003f7106 	br	10016d98 <__alt_data_end+0xf8016d98>
10016fd4:	193ff804 	addi	r4,r3,-32
10016fd8:	00800804 	movi	r2,32
10016fdc:	4908d83a 	srl	r4,r9,r4
10016fe0:	18804526 	beq	r3,r2,100170f8 <__adddf3+0x564>
10016fe4:	00801004 	movi	r2,64
10016fe8:	10c5c83a 	sub	r2,r2,r3
10016fec:	4886983a 	sll	r3,r9,r2
10016ff0:	198cb03a 	or	r6,r3,r6
10016ff4:	300cc03a 	cmpne	r6,r6,zero
10016ff8:	218cb03a 	or	r6,r4,r6
10016ffc:	0007883a 	mov	r3,zero
10017000:	003f3b06 	br	10016cf0 <__alt_data_end+0xf8016cf0>
10017004:	80002a26 	beq	r16,zero,100170b0 <__adddf3+0x51c>
10017008:	0101ffc4 	movi	r4,2047
1001700c:	11006826 	beq	r2,r4,100171b0 <__adddf3+0x61c>
10017010:	00c7c83a 	sub	r3,zero,r3
10017014:	42002034 	orhi	r8,r8,128
10017018:	01000e04 	movi	r4,56
1001701c:	20c07c16 	blt	r4,r3,10017210 <__adddf3+0x67c>
10017020:	010007c4 	movi	r4,31
10017024:	20c0da16 	blt	r4,r3,10017390 <__adddf3+0x7fc>
10017028:	01000804 	movi	r4,32
1001702c:	20c9c83a 	sub	r4,r4,r3
10017030:	4114983a 	sll	r10,r8,r4
10017034:	88cad83a 	srl	r5,r17,r3
10017038:	8908983a 	sll	r4,r17,r4
1001703c:	40c6d83a 	srl	r3,r8,r3
10017040:	5162b03a 	or	r17,r10,r5
10017044:	2008c03a 	cmpne	r4,r4,zero
10017048:	8922b03a 	or	r17,r17,r4
1001704c:	3463c83a 	sub	r17,r6,r17
10017050:	48c7c83a 	sub	r3,r9,r3
10017054:	344d803a 	cmpltu	r6,r6,r17
10017058:	1991c83a 	sub	r8,r3,r6
1001705c:	1021883a 	mov	r16,r2
10017060:	3825883a 	mov	r18,r7
10017064:	003f2706 	br	10016d04 <__alt_data_end+0xf8016d04>
10017068:	24d0b03a 	or	r8,r4,r19
1001706c:	40001b1e 	bne	r8,zero,100170dc <__adddf3+0x548>
10017070:	0005883a 	mov	r2,zero
10017074:	0007883a 	mov	r3,zero
10017078:	0021883a 	mov	r16,zero
1001707c:	003f4d06 	br	10016db4 <__alt_data_end+0xf8016db4>
10017080:	008007c4 	movi	r2,31
10017084:	11003c16 	blt	r2,r4,10017178 <__adddf3+0x5e4>
10017088:	00800804 	movi	r2,32
1001708c:	1105c83a 	sub	r2,r2,r4
10017090:	488e983a 	sll	r7,r9,r2
10017094:	310ad83a 	srl	r5,r6,r4
10017098:	3084983a 	sll	r2,r6,r2
1001709c:	4912d83a 	srl	r9,r9,r4
100170a0:	394ab03a 	or	r5,r7,r5
100170a4:	1004c03a 	cmpne	r2,r2,zero
100170a8:	288ab03a 	or	r5,r5,r2
100170ac:	003f5306 	br	10016dfc <__alt_data_end+0xf8016dfc>
100170b0:	4448b03a 	or	r4,r8,r17
100170b4:	20003e26 	beq	r4,zero,100171b0 <__adddf3+0x61c>
100170b8:	00c6303a 	nor	r3,zero,r3
100170bc:	18003a1e 	bne	r3,zero,100171a8 <__adddf3+0x614>
100170c0:	3463c83a 	sub	r17,r6,r17
100170c4:	4a07c83a 	sub	r3,r9,r8
100170c8:	344d803a 	cmpltu	r6,r6,r17
100170cc:	1991c83a 	sub	r8,r3,r6
100170d0:	1021883a 	mov	r16,r2
100170d4:	3825883a 	mov	r18,r7
100170d8:	003f0a06 	br	10016d04 <__alt_data_end+0xf8016d04>
100170dc:	2023883a 	mov	r17,r4
100170e0:	003f0d06 	br	10016d18 <__alt_data_end+0xf8016d18>
100170e4:	0081ffc4 	movi	r2,2047
100170e8:	80bf3f1e 	bne	r16,r2,10016de8 <__alt_data_end+0xf8016de8>
100170ec:	003ec806 	br	10016c10 <__alt_data_end+0xf8016c10>
100170f0:	0005883a 	mov	r2,zero
100170f4:	003fb106 	br	10016fbc <__alt_data_end+0xf8016fbc>
100170f8:	0007883a 	mov	r3,zero
100170fc:	003fbc06 	br	10016ff0 <__alt_data_end+0xf8016ff0>
10017100:	4444b03a 	or	r2,r8,r17
10017104:	8000871e 	bne	r16,zero,10017324 <__adddf3+0x790>
10017108:	1000ba26 	beq	r2,zero,100173f4 <__adddf3+0x860>
1001710c:	4984b03a 	or	r2,r9,r6
10017110:	103ebf26 	beq	r2,zero,10016c10 <__alt_data_end+0xf8016c10>
10017114:	8985883a 	add	r2,r17,r6
10017118:	4247883a 	add	r3,r8,r9
1001711c:	1451803a 	cmpltu	r8,r2,r17
10017120:	40d1883a 	add	r8,r8,r3
10017124:	40c0202c 	andhi	r3,r8,128
10017128:	1023883a 	mov	r17,r2
1001712c:	183f1a26 	beq	r3,zero,10016d98 <__alt_data_end+0xf8016d98>
10017130:	00bfe034 	movhi	r2,65408
10017134:	10bfffc4 	addi	r2,r2,-1
10017138:	2021883a 	mov	r16,r4
1001713c:	4090703a 	and	r8,r8,r2
10017140:	003eb306 	br	10016c10 <__alt_data_end+0xf8016c10>
10017144:	4444b03a 	or	r2,r8,r17
10017148:	8000291e 	bne	r16,zero,100171f0 <__adddf3+0x65c>
1001714c:	10004b1e 	bne	r2,zero,1001727c <__adddf3+0x6e8>
10017150:	4990b03a 	or	r8,r9,r6
10017154:	40008b26 	beq	r8,zero,10017384 <__adddf3+0x7f0>
10017158:	4811883a 	mov	r8,r9
1001715c:	3023883a 	mov	r17,r6
10017160:	3825883a 	mov	r18,r7
10017164:	003eaa06 	br	10016c10 <__alt_data_end+0xf8016c10>
10017168:	1021883a 	mov	r16,r2
1001716c:	0011883a 	mov	r8,zero
10017170:	0005883a 	mov	r2,zero
10017174:	003f0f06 	br	10016db4 <__alt_data_end+0xf8016db4>
10017178:	217ff804 	addi	r5,r4,-32
1001717c:	00800804 	movi	r2,32
10017180:	494ad83a 	srl	r5,r9,r5
10017184:	20807d26 	beq	r4,r2,1001737c <__adddf3+0x7e8>
10017188:	00801004 	movi	r2,64
1001718c:	1109c83a 	sub	r4,r2,r4
10017190:	4912983a 	sll	r9,r9,r4
10017194:	498cb03a 	or	r6,r9,r6
10017198:	300cc03a 	cmpne	r6,r6,zero
1001719c:	298ab03a 	or	r5,r5,r6
100171a0:	0013883a 	mov	r9,zero
100171a4:	003f1506 	br	10016dfc <__alt_data_end+0xf8016dfc>
100171a8:	0101ffc4 	movi	r4,2047
100171ac:	113f9a1e 	bne	r2,r4,10017018 <__alt_data_end+0xf8017018>
100171b0:	4811883a 	mov	r8,r9
100171b4:	3023883a 	mov	r17,r6
100171b8:	1021883a 	mov	r16,r2
100171bc:	3825883a 	mov	r18,r7
100171c0:	003e9306 	br	10016c10 <__alt_data_end+0xf8016c10>
100171c4:	8000161e 	bne	r16,zero,10017220 <__adddf3+0x68c>
100171c8:	444ab03a 	or	r5,r8,r17
100171cc:	28005126 	beq	r5,zero,10017314 <__adddf3+0x780>
100171d0:	0108303a 	nor	r4,zero,r4
100171d4:	20004d1e 	bne	r4,zero,1001730c <__adddf3+0x778>
100171d8:	89a3883a 	add	r17,r17,r6
100171dc:	4253883a 	add	r9,r8,r9
100171e0:	898d803a 	cmpltu	r6,r17,r6
100171e4:	3251883a 	add	r8,r6,r9
100171e8:	1021883a 	mov	r16,r2
100171ec:	003f0806 	br	10016e10 <__alt_data_end+0xf8016e10>
100171f0:	1000301e 	bne	r2,zero,100172b4 <__adddf3+0x720>
100171f4:	4984b03a 	or	r2,r9,r6
100171f8:	10007126 	beq	r2,zero,100173c0 <__adddf3+0x82c>
100171fc:	4811883a 	mov	r8,r9
10017200:	3023883a 	mov	r17,r6
10017204:	3825883a 	mov	r18,r7
10017208:	0401ffc4 	movi	r16,2047
1001720c:	003e8006 	br	10016c10 <__alt_data_end+0xf8016c10>
10017210:	4462b03a 	or	r17,r8,r17
10017214:	8822c03a 	cmpne	r17,r17,zero
10017218:	0007883a 	mov	r3,zero
1001721c:	003f8b06 	br	1001704c <__alt_data_end+0xf801704c>
10017220:	0141ffc4 	movi	r5,2047
10017224:	11403b26 	beq	r2,r5,10017314 <__adddf3+0x780>
10017228:	0109c83a 	sub	r4,zero,r4
1001722c:	42002034 	orhi	r8,r8,128
10017230:	01400e04 	movi	r5,56
10017234:	29006716 	blt	r5,r4,100173d4 <__adddf3+0x840>
10017238:	014007c4 	movi	r5,31
1001723c:	29007016 	blt	r5,r4,10017400 <__adddf3+0x86c>
10017240:	01400804 	movi	r5,32
10017244:	290bc83a 	sub	r5,r5,r4
10017248:	4154983a 	sll	r10,r8,r5
1001724c:	890ed83a 	srl	r7,r17,r4
10017250:	894a983a 	sll	r5,r17,r5
10017254:	4108d83a 	srl	r4,r8,r4
10017258:	51e2b03a 	or	r17,r10,r7
1001725c:	280ac03a 	cmpne	r5,r5,zero
10017260:	8962b03a 	or	r17,r17,r5
10017264:	89a3883a 	add	r17,r17,r6
10017268:	2253883a 	add	r9,r4,r9
1001726c:	898d803a 	cmpltu	r6,r17,r6
10017270:	3251883a 	add	r8,r6,r9
10017274:	1021883a 	mov	r16,r2
10017278:	003ee506 	br	10016e10 <__alt_data_end+0xf8016e10>
1001727c:	4984b03a 	or	r2,r9,r6
10017280:	103e6326 	beq	r2,zero,10016c10 <__alt_data_end+0xf8016c10>
10017284:	8987c83a 	sub	r3,r17,r6
10017288:	88c9803a 	cmpltu	r4,r17,r3
1001728c:	4245c83a 	sub	r2,r8,r9
10017290:	1105c83a 	sub	r2,r2,r4
10017294:	1100202c 	andhi	r4,r2,128
10017298:	203ebb26 	beq	r4,zero,10016d88 <__alt_data_end+0xf8016d88>
1001729c:	3463c83a 	sub	r17,r6,r17
100172a0:	4a07c83a 	sub	r3,r9,r8
100172a4:	344d803a 	cmpltu	r6,r6,r17
100172a8:	1991c83a 	sub	r8,r3,r6
100172ac:	3825883a 	mov	r18,r7
100172b0:	003e5706 	br	10016c10 <__alt_data_end+0xf8016c10>
100172b4:	4984b03a 	or	r2,r9,r6
100172b8:	10002e26 	beq	r2,zero,10017374 <__adddf3+0x7e0>
100172bc:	4004d0fa 	srli	r2,r8,3
100172c0:	8822d0fa 	srli	r17,r17,3
100172c4:	4010977a 	slli	r8,r8,29
100172c8:	10c0022c 	andhi	r3,r2,8
100172cc:	4462b03a 	or	r17,r8,r17
100172d0:	18000826 	beq	r3,zero,100172f4 <__adddf3+0x760>
100172d4:	4808d0fa 	srli	r4,r9,3
100172d8:	20c0022c 	andhi	r3,r4,8
100172dc:	1800051e 	bne	r3,zero,100172f4 <__adddf3+0x760>
100172e0:	300cd0fa 	srli	r6,r6,3
100172e4:	4806977a 	slli	r3,r9,29
100172e8:	2005883a 	mov	r2,r4
100172ec:	3825883a 	mov	r18,r7
100172f0:	19a2b03a 	or	r17,r3,r6
100172f4:	8810d77a 	srli	r8,r17,29
100172f8:	100490fa 	slli	r2,r2,3
100172fc:	882290fa 	slli	r17,r17,3
10017300:	0401ffc4 	movi	r16,2047
10017304:	4090b03a 	or	r8,r8,r2
10017308:	003e4106 	br	10016c10 <__alt_data_end+0xf8016c10>
1001730c:	0141ffc4 	movi	r5,2047
10017310:	117fc71e 	bne	r2,r5,10017230 <__alt_data_end+0xf8017230>
10017314:	4811883a 	mov	r8,r9
10017318:	3023883a 	mov	r17,r6
1001731c:	1021883a 	mov	r16,r2
10017320:	003e3b06 	br	10016c10 <__alt_data_end+0xf8016c10>
10017324:	10002f26 	beq	r2,zero,100173e4 <__adddf3+0x850>
10017328:	4984b03a 	or	r2,r9,r6
1001732c:	10001126 	beq	r2,zero,10017374 <__adddf3+0x7e0>
10017330:	4004d0fa 	srli	r2,r8,3
10017334:	8822d0fa 	srli	r17,r17,3
10017338:	4010977a 	slli	r8,r8,29
1001733c:	10c0022c 	andhi	r3,r2,8
10017340:	4462b03a 	or	r17,r8,r17
10017344:	183feb26 	beq	r3,zero,100172f4 <__alt_data_end+0xf80172f4>
10017348:	4808d0fa 	srli	r4,r9,3
1001734c:	20c0022c 	andhi	r3,r4,8
10017350:	183fe81e 	bne	r3,zero,100172f4 <__alt_data_end+0xf80172f4>
10017354:	300cd0fa 	srli	r6,r6,3
10017358:	4806977a 	slli	r3,r9,29
1001735c:	2005883a 	mov	r2,r4
10017360:	19a2b03a 	or	r17,r3,r6
10017364:	003fe306 	br	100172f4 <__alt_data_end+0xf80172f4>
10017368:	0011883a 	mov	r8,zero
1001736c:	0005883a 	mov	r2,zero
10017370:	003e3f06 	br	10016c70 <__alt_data_end+0xf8016c70>
10017374:	0401ffc4 	movi	r16,2047
10017378:	003e2506 	br	10016c10 <__alt_data_end+0xf8016c10>
1001737c:	0013883a 	mov	r9,zero
10017380:	003f8406 	br	10017194 <__alt_data_end+0xf8017194>
10017384:	0005883a 	mov	r2,zero
10017388:	0007883a 	mov	r3,zero
1001738c:	003e8906 	br	10016db4 <__alt_data_end+0xf8016db4>
10017390:	197ff804 	addi	r5,r3,-32
10017394:	01000804 	movi	r4,32
10017398:	414ad83a 	srl	r5,r8,r5
1001739c:	19002426 	beq	r3,r4,10017430 <__adddf3+0x89c>
100173a0:	01001004 	movi	r4,64
100173a4:	20c7c83a 	sub	r3,r4,r3
100173a8:	40c6983a 	sll	r3,r8,r3
100173ac:	1c46b03a 	or	r3,r3,r17
100173b0:	1806c03a 	cmpne	r3,r3,zero
100173b4:	28e2b03a 	or	r17,r5,r3
100173b8:	0007883a 	mov	r3,zero
100173bc:	003f2306 	br	1001704c <__alt_data_end+0xf801704c>
100173c0:	0007883a 	mov	r3,zero
100173c4:	5811883a 	mov	r8,r11
100173c8:	00bfffc4 	movi	r2,-1
100173cc:	0401ffc4 	movi	r16,2047
100173d0:	003e7806 	br	10016db4 <__alt_data_end+0xf8016db4>
100173d4:	4462b03a 	or	r17,r8,r17
100173d8:	8822c03a 	cmpne	r17,r17,zero
100173dc:	0009883a 	mov	r4,zero
100173e0:	003fa006 	br	10017264 <__alt_data_end+0xf8017264>
100173e4:	4811883a 	mov	r8,r9
100173e8:	3023883a 	mov	r17,r6
100173ec:	0401ffc4 	movi	r16,2047
100173f0:	003e0706 	br	10016c10 <__alt_data_end+0xf8016c10>
100173f4:	4811883a 	mov	r8,r9
100173f8:	3023883a 	mov	r17,r6
100173fc:	003e0406 	br	10016c10 <__alt_data_end+0xf8016c10>
10017400:	21fff804 	addi	r7,r4,-32
10017404:	01400804 	movi	r5,32
10017408:	41ced83a 	srl	r7,r8,r7
1001740c:	21400a26 	beq	r4,r5,10017438 <__adddf3+0x8a4>
10017410:	01401004 	movi	r5,64
10017414:	2909c83a 	sub	r4,r5,r4
10017418:	4108983a 	sll	r4,r8,r4
1001741c:	2448b03a 	or	r4,r4,r17
10017420:	2008c03a 	cmpne	r4,r4,zero
10017424:	3922b03a 	or	r17,r7,r4
10017428:	0009883a 	mov	r4,zero
1001742c:	003f8d06 	br	10017264 <__alt_data_end+0xf8017264>
10017430:	0007883a 	mov	r3,zero
10017434:	003fdd06 	br	100173ac <__alt_data_end+0xf80173ac>
10017438:	0009883a 	mov	r4,zero
1001743c:	003ff706 	br	1001741c <__alt_data_end+0xf801741c>

10017440 <__divdf3>:
10017440:	defff004 	addi	sp,sp,-64
10017444:	dc800815 	stw	r18,32(sp)
10017448:	2824d53a 	srli	r18,r5,20
1001744c:	dd800c15 	stw	r22,48(sp)
10017450:	282cd7fa 	srli	r22,r5,31
10017454:	dc000615 	stw	r16,24(sp)
10017458:	04000434 	movhi	r16,16
1001745c:	843fffc4 	addi	r16,r16,-1
10017460:	dfc00f15 	stw	ra,60(sp)
10017464:	df000e15 	stw	fp,56(sp)
10017468:	ddc00d15 	stw	r23,52(sp)
1001746c:	dd400b15 	stw	r21,44(sp)
10017470:	dd000a15 	stw	r20,40(sp)
10017474:	dcc00915 	stw	r19,36(sp)
10017478:	dc400715 	stw	r17,28(sp)
1001747c:	9481ffcc 	andi	r18,r18,2047
10017480:	2c20703a 	and	r16,r5,r16
10017484:	b2003fcc 	andi	r8,r22,255
10017488:	90006126 	beq	r18,zero,10017610 <__divdf3+0x1d0>
1001748c:	0081ffc4 	movi	r2,2047
10017490:	202b883a 	mov	r21,r4
10017494:	90803726 	beq	r18,r2,10017574 <__divdf3+0x134>
10017498:	80800434 	orhi	r2,r16,16
1001749c:	100490fa 	slli	r2,r2,3
100174a0:	2020d77a 	srli	r16,r4,29
100174a4:	202a90fa 	slli	r21,r4,3
100174a8:	94bf0044 	addi	r18,r18,-1023
100174ac:	80a0b03a 	or	r16,r16,r2
100174b0:	0013883a 	mov	r9,zero
100174b4:	000b883a 	mov	r5,zero
100174b8:	3806d53a 	srli	r3,r7,20
100174bc:	382ed7fa 	srli	r23,r7,31
100174c0:	04400434 	movhi	r17,16
100174c4:	8c7fffc4 	addi	r17,r17,-1
100174c8:	18c1ffcc 	andi	r3,r3,2047
100174cc:	3029883a 	mov	r20,r6
100174d0:	3c62703a 	and	r17,r7,r17
100174d4:	bf003fcc 	andi	fp,r23,255
100174d8:	18006e26 	beq	r3,zero,10017694 <__divdf3+0x254>
100174dc:	0081ffc4 	movi	r2,2047
100174e0:	18806626 	beq	r3,r2,1001767c <__divdf3+0x23c>
100174e4:	88800434 	orhi	r2,r17,16
100174e8:	100490fa 	slli	r2,r2,3
100174ec:	3022d77a 	srli	r17,r6,29
100174f0:	302890fa 	slli	r20,r6,3
100174f4:	18ff0044 	addi	r3,r3,-1023
100174f8:	88a2b03a 	or	r17,r17,r2
100174fc:	000f883a 	mov	r7,zero
10017500:	b5e6f03a 	xor	r19,r22,r23
10017504:	3a4cb03a 	or	r6,r7,r9
10017508:	008003c4 	movi	r2,15
1001750c:	9809883a 	mov	r4,r19
10017510:	90c7c83a 	sub	r3,r18,r3
10017514:	9cc03fcc 	andi	r19,r19,255
10017518:	11809636 	bltu	r2,r6,10017774 <__divdf3+0x334>
1001751c:	300c90ba 	slli	r6,r6,2
10017520:	00840074 	movhi	r2,4097
10017524:	109d4d04 	addi	r2,r2,30004
10017528:	308d883a 	add	r6,r6,r2
1001752c:	30800017 	ldw	r2,0(r6)
10017530:	1000683a 	jmp	r2
10017534:	10017774 	orhi	zero,r2,1501
10017538:	100175ac 	andhi	zero,r2,1494
1001753c:	10017764 	muli	zero,r2,1501
10017540:	100175a0 	cmpeqi	zero,r2,1494
10017544:	10017764 	muli	zero,r2,1501
10017548:	10017738 	rdprs	zero,r2,1500
1001754c:	10017764 	muli	zero,r2,1501
10017550:	100175a0 	cmpeqi	zero,r2,1494
10017554:	100175ac 	andhi	zero,r2,1494
10017558:	100175ac 	andhi	zero,r2,1494
1001755c:	10017738 	rdprs	zero,r2,1500
10017560:	100175a0 	cmpeqi	zero,r2,1494
10017564:	10017590 	cmplti	zero,r2,1494
10017568:	10017590 	cmplti	zero,r2,1494
1001756c:	10017590 	cmplti	zero,r2,1494
10017570:	10017afc 	xorhi	zero,r2,1515
10017574:	2404b03a 	or	r2,r4,r16
10017578:	10006c1e 	bne	r2,zero,1001772c <__divdf3+0x2ec>
1001757c:	02400204 	movi	r9,8
10017580:	0021883a 	mov	r16,zero
10017584:	002b883a 	mov	r21,zero
10017588:	01400084 	movi	r5,2
1001758c:	003fca06 	br	100174b8 <__alt_data_end+0xf80174b8>
10017590:	8023883a 	mov	r17,r16
10017594:	a829883a 	mov	r20,r21
10017598:	4039883a 	mov	fp,r8
1001759c:	280f883a 	mov	r7,r5
100175a0:	00800084 	movi	r2,2
100175a4:	3881601e 	bne	r7,r2,10017b28 <__divdf3+0x6e8>
100175a8:	e027883a 	mov	r19,fp
100175ac:	9900004c 	andi	r4,r19,1
100175b0:	0081ffc4 	movi	r2,2047
100175b4:	0021883a 	mov	r16,zero
100175b8:	002b883a 	mov	r21,zero
100175bc:	1004953a 	slli	r2,r2,20
100175c0:	20c03fcc 	andi	r3,r4,255
100175c4:	01400434 	movhi	r5,16
100175c8:	297fffc4 	addi	r5,r5,-1
100175cc:	180697fa 	slli	r3,r3,31
100175d0:	8160703a 	and	r16,r16,r5
100175d4:	80a0b03a 	or	r16,r16,r2
100175d8:	80c6b03a 	or	r3,r16,r3
100175dc:	a805883a 	mov	r2,r21
100175e0:	dfc00f17 	ldw	ra,60(sp)
100175e4:	df000e17 	ldw	fp,56(sp)
100175e8:	ddc00d17 	ldw	r23,52(sp)
100175ec:	dd800c17 	ldw	r22,48(sp)
100175f0:	dd400b17 	ldw	r21,44(sp)
100175f4:	dd000a17 	ldw	r20,40(sp)
100175f8:	dcc00917 	ldw	r19,36(sp)
100175fc:	dc800817 	ldw	r18,32(sp)
10017600:	dc400717 	ldw	r17,28(sp)
10017604:	dc000617 	ldw	r16,24(sp)
10017608:	dec01004 	addi	sp,sp,64
1001760c:	f800283a 	ret
10017610:	2404b03a 	or	r2,r4,r16
10017614:	2023883a 	mov	r17,r4
10017618:	10003f26 	beq	r2,zero,10017718 <__divdf3+0x2d8>
1001761c:	80015e26 	beq	r16,zero,10017b98 <__divdf3+0x758>
10017620:	8009883a 	mov	r4,r16
10017624:	d9800215 	stw	r6,8(sp)
10017628:	d9c00515 	stw	r7,20(sp)
1001762c:	da000415 	stw	r8,16(sp)
10017630:	001957c0 	call	1001957c <__clzsi2>
10017634:	d9800217 	ldw	r6,8(sp)
10017638:	d9c00517 	ldw	r7,20(sp)
1001763c:	da000417 	ldw	r8,16(sp)
10017640:	113ffd44 	addi	r4,r2,-11
10017644:	00c00704 	movi	r3,28
10017648:	19014f16 	blt	r3,r4,10017b88 <__divdf3+0x748>
1001764c:	00c00744 	movi	r3,29
10017650:	157ffe04 	addi	r21,r2,-8
10017654:	1907c83a 	sub	r3,r3,r4
10017658:	8560983a 	sll	r16,r16,r21
1001765c:	88c6d83a 	srl	r3,r17,r3
10017660:	8d6a983a 	sll	r21,r17,r21
10017664:	1c20b03a 	or	r16,r3,r16
10017668:	1080fcc4 	addi	r2,r2,1011
1001766c:	00a5c83a 	sub	r18,zero,r2
10017670:	0013883a 	mov	r9,zero
10017674:	000b883a 	mov	r5,zero
10017678:	003f8f06 	br	100174b8 <__alt_data_end+0xf80174b8>
1001767c:	3444b03a 	or	r2,r6,r17
10017680:	1000231e 	bne	r2,zero,10017710 <__divdf3+0x2d0>
10017684:	0023883a 	mov	r17,zero
10017688:	0029883a 	mov	r20,zero
1001768c:	01c00084 	movi	r7,2
10017690:	003f9b06 	br	10017500 <__alt_data_end+0xf8017500>
10017694:	3444b03a 	or	r2,r6,r17
10017698:	10001926 	beq	r2,zero,10017700 <__divdf3+0x2c0>
1001769c:	88014b26 	beq	r17,zero,10017bcc <__divdf3+0x78c>
100176a0:	8809883a 	mov	r4,r17
100176a4:	d9400115 	stw	r5,4(sp)
100176a8:	d9800215 	stw	r6,8(sp)
100176ac:	da000415 	stw	r8,16(sp)
100176b0:	da400315 	stw	r9,12(sp)
100176b4:	001957c0 	call	1001957c <__clzsi2>
100176b8:	d9400117 	ldw	r5,4(sp)
100176bc:	d9800217 	ldw	r6,8(sp)
100176c0:	da000417 	ldw	r8,16(sp)
100176c4:	da400317 	ldw	r9,12(sp)
100176c8:	113ffd44 	addi	r4,r2,-11
100176cc:	00c00704 	movi	r3,28
100176d0:	19013a16 	blt	r3,r4,10017bbc <__divdf3+0x77c>
100176d4:	00c00744 	movi	r3,29
100176d8:	153ffe04 	addi	r20,r2,-8
100176dc:	1907c83a 	sub	r3,r3,r4
100176e0:	8d22983a 	sll	r17,r17,r20
100176e4:	30c6d83a 	srl	r3,r6,r3
100176e8:	3528983a 	sll	r20,r6,r20
100176ec:	1c62b03a 	or	r17,r3,r17
100176f0:	1080fcc4 	addi	r2,r2,1011
100176f4:	0087c83a 	sub	r3,zero,r2
100176f8:	000f883a 	mov	r7,zero
100176fc:	003f8006 	br	10017500 <__alt_data_end+0xf8017500>
10017700:	0023883a 	mov	r17,zero
10017704:	0029883a 	mov	r20,zero
10017708:	01c00044 	movi	r7,1
1001770c:	003f7c06 	br	10017500 <__alt_data_end+0xf8017500>
10017710:	01c000c4 	movi	r7,3
10017714:	003f7a06 	br	10017500 <__alt_data_end+0xf8017500>
10017718:	02400104 	movi	r9,4
1001771c:	0021883a 	mov	r16,zero
10017720:	002b883a 	mov	r21,zero
10017724:	01400044 	movi	r5,1
10017728:	003f6306 	br	100174b8 <__alt_data_end+0xf80174b8>
1001772c:	02400304 	movi	r9,12
10017730:	014000c4 	movi	r5,3
10017734:	003f6006 	br	100174b8 <__alt_data_end+0xf80174b8>
10017738:	04000434 	movhi	r16,16
1001773c:	0009883a 	mov	r4,zero
10017740:	843fffc4 	addi	r16,r16,-1
10017744:	057fffc4 	movi	r21,-1
10017748:	0081ffc4 	movi	r2,2047
1001774c:	003f9b06 	br	100175bc <__alt_data_end+0xf80175bc>
10017750:	00c00044 	movi	r3,1
10017754:	1887c83a 	sub	r3,r3,r2
10017758:	01000e04 	movi	r4,56
1001775c:	20c1530e 	bge	r4,r3,10017cac <__divdf3+0x86c>
10017760:	9900004c 	andi	r4,r19,1
10017764:	0005883a 	mov	r2,zero
10017768:	0021883a 	mov	r16,zero
1001776c:	002b883a 	mov	r21,zero
10017770:	003f9206 	br	100175bc <__alt_data_end+0xf80175bc>
10017774:	8c012e36 	bltu	r17,r16,10017c30 <__divdf3+0x7f0>
10017778:	84412c26 	beq	r16,r17,10017c2c <__divdf3+0x7ec>
1001777c:	a82f883a 	mov	r23,r21
10017780:	18ffffc4 	addi	r3,r3,-1
10017784:	002b883a 	mov	r21,zero
10017788:	a004d63a 	srli	r2,r20,24
1001778c:	8822923a 	slli	r17,r17,8
10017790:	a028923a 	slli	r20,r20,8
10017794:	8009883a 	mov	r4,r16
10017798:	88acb03a 	or	r22,r17,r2
1001779c:	dd000015 	stw	r20,0(sp)
100177a0:	b028d43a 	srli	r20,r22,16
100177a4:	d8c00215 	stw	r3,8(sp)
100177a8:	b4bfffcc 	andi	r18,r22,65535
100177ac:	a00b883a 	mov	r5,r20
100177b0:	000337c0 	call	1000337c <__udivsi3>
100177b4:	100b883a 	mov	r5,r2
100177b8:	9009883a 	mov	r4,r18
100177bc:	1023883a 	mov	r17,r2
100177c0:	00034380 	call	10003438 <__mulsi3>
100177c4:	8009883a 	mov	r4,r16
100177c8:	a00b883a 	mov	r5,r20
100177cc:	1039883a 	mov	fp,r2
100177d0:	00033e00 	call	100033e0 <__umodsi3>
100177d4:	1004943a 	slli	r2,r2,16
100177d8:	b808d43a 	srli	r4,r23,16
100177dc:	d8c00217 	ldw	r3,8(sp)
100177e0:	2084b03a 	or	r2,r4,r2
100177e4:	1700062e 	bgeu	r2,fp,10017800 <__divdf3+0x3c0>
100177e8:	1585883a 	add	r2,r2,r22
100177ec:	893fffc4 	addi	r4,r17,-1
100177f0:	15811d36 	bltu	r2,r22,10017c68 <__divdf3+0x828>
100177f4:	17011c2e 	bgeu	r2,fp,10017c68 <__divdf3+0x828>
100177f8:	8c7fff84 	addi	r17,r17,-2
100177fc:	1585883a 	add	r2,r2,r22
10017800:	1739c83a 	sub	fp,r2,fp
10017804:	a00b883a 	mov	r5,r20
10017808:	e009883a 	mov	r4,fp
1001780c:	d8c00215 	stw	r3,8(sp)
10017810:	000337c0 	call	1000337c <__udivsi3>
10017814:	100b883a 	mov	r5,r2
10017818:	9009883a 	mov	r4,r18
1001781c:	1021883a 	mov	r16,r2
10017820:	00034380 	call	10003438 <__mulsi3>
10017824:	a00b883a 	mov	r5,r20
10017828:	e009883a 	mov	r4,fp
1001782c:	d8800415 	stw	r2,16(sp)
10017830:	00033e00 	call	100033e0 <__umodsi3>
10017834:	1004943a 	slli	r2,r2,16
10017838:	da000417 	ldw	r8,16(sp)
1001783c:	bdffffcc 	andi	r23,r23,65535
10017840:	b884b03a 	or	r2,r23,r2
10017844:	d8c00217 	ldw	r3,8(sp)
10017848:	1200062e 	bgeu	r2,r8,10017864 <__divdf3+0x424>
1001784c:	1585883a 	add	r2,r2,r22
10017850:	813fffc4 	addi	r4,r16,-1
10017854:	15810236 	bltu	r2,r22,10017c60 <__divdf3+0x820>
10017858:	1201012e 	bgeu	r2,r8,10017c60 <__divdf3+0x820>
1001785c:	843fff84 	addi	r16,r16,-2
10017860:	1585883a 	add	r2,r2,r22
10017864:	8822943a 	slli	r17,r17,16
10017868:	d9800017 	ldw	r6,0(sp)
1001786c:	1211c83a 	sub	r8,r2,r8
10017870:	8c22b03a 	or	r17,r17,r16
10017874:	373fffcc 	andi	fp,r6,65535
10017878:	8abfffcc 	andi	r10,r17,65535
1001787c:	8820d43a 	srli	r16,r17,16
10017880:	5009883a 	mov	r4,r10
10017884:	e00b883a 	mov	r5,fp
10017888:	302ed43a 	srli	r23,r6,16
1001788c:	d8c00215 	stw	r3,8(sp)
10017890:	da000415 	stw	r8,16(sp)
10017894:	da800115 	stw	r10,4(sp)
10017898:	00034380 	call	10003438 <__mulsi3>
1001789c:	800b883a 	mov	r5,r16
100178a0:	e009883a 	mov	r4,fp
100178a4:	d8800515 	stw	r2,20(sp)
100178a8:	00034380 	call	10003438 <__mulsi3>
100178ac:	8009883a 	mov	r4,r16
100178b0:	b80b883a 	mov	r5,r23
100178b4:	d8800315 	stw	r2,12(sp)
100178b8:	00034380 	call	10003438 <__mulsi3>
100178bc:	da800117 	ldw	r10,4(sp)
100178c0:	b80b883a 	mov	r5,r23
100178c4:	1021883a 	mov	r16,r2
100178c8:	5009883a 	mov	r4,r10
100178cc:	00034380 	call	10003438 <__mulsi3>
100178d0:	d9c00517 	ldw	r7,20(sp)
100178d4:	da400317 	ldw	r9,12(sp)
100178d8:	d8c00217 	ldw	r3,8(sp)
100178dc:	3808d43a 	srli	r4,r7,16
100178e0:	1245883a 	add	r2,r2,r9
100178e4:	da000417 	ldw	r8,16(sp)
100178e8:	2085883a 	add	r2,r4,r2
100178ec:	1240022e 	bgeu	r2,r9,100178f8 <__divdf3+0x4b8>
100178f0:	01000074 	movhi	r4,1
100178f4:	8121883a 	add	r16,r16,r4
100178f8:	1008d43a 	srli	r4,r2,16
100178fc:	1004943a 	slli	r2,r2,16
10017900:	39ffffcc 	andi	r7,r7,65535
10017904:	2409883a 	add	r4,r4,r16
10017908:	11c5883a 	add	r2,r2,r7
1001790c:	4100bb36 	bltu	r8,r4,10017bfc <__divdf3+0x7bc>
10017910:	4100d726 	beq	r8,r4,10017c70 <__divdf3+0x830>
10017914:	4109c83a 	sub	r4,r8,r4
10017918:	a8a1c83a 	sub	r16,r21,r2
1001791c:	ac2b803a 	cmpltu	r21,r21,r16
10017920:	256bc83a 	sub	r21,r4,r21
10017924:	b540d926 	beq	r22,r21,10017c8c <__divdf3+0x84c>
10017928:	a00b883a 	mov	r5,r20
1001792c:	a809883a 	mov	r4,r21
10017930:	d8c00215 	stw	r3,8(sp)
10017934:	000337c0 	call	1000337c <__udivsi3>
10017938:	100b883a 	mov	r5,r2
1001793c:	9009883a 	mov	r4,r18
10017940:	d8800515 	stw	r2,20(sp)
10017944:	00034380 	call	10003438 <__mulsi3>
10017948:	a809883a 	mov	r4,r21
1001794c:	a00b883a 	mov	r5,r20
10017950:	d8800415 	stw	r2,16(sp)
10017954:	00033e00 	call	100033e0 <__umodsi3>
10017958:	1004943a 	slli	r2,r2,16
1001795c:	8008d43a 	srli	r4,r16,16
10017960:	da000417 	ldw	r8,16(sp)
10017964:	d8c00217 	ldw	r3,8(sp)
10017968:	2084b03a 	or	r2,r4,r2
1001796c:	d9c00517 	ldw	r7,20(sp)
10017970:	1200062e 	bgeu	r2,r8,1001798c <__divdf3+0x54c>
10017974:	1585883a 	add	r2,r2,r22
10017978:	393fffc4 	addi	r4,r7,-1
1001797c:	1580c536 	bltu	r2,r22,10017c94 <__divdf3+0x854>
10017980:	1200c42e 	bgeu	r2,r8,10017c94 <__divdf3+0x854>
10017984:	39ffff84 	addi	r7,r7,-2
10017988:	1585883a 	add	r2,r2,r22
1001798c:	122bc83a 	sub	r21,r2,r8
10017990:	a00b883a 	mov	r5,r20
10017994:	a809883a 	mov	r4,r21
10017998:	d8c00215 	stw	r3,8(sp)
1001799c:	d9c00515 	stw	r7,20(sp)
100179a0:	000337c0 	call	1000337c <__udivsi3>
100179a4:	9009883a 	mov	r4,r18
100179a8:	100b883a 	mov	r5,r2
100179ac:	d8800415 	stw	r2,16(sp)
100179b0:	00034380 	call	10003438 <__mulsi3>
100179b4:	a809883a 	mov	r4,r21
100179b8:	a00b883a 	mov	r5,r20
100179bc:	1025883a 	mov	r18,r2
100179c0:	00033e00 	call	100033e0 <__umodsi3>
100179c4:	1004943a 	slli	r2,r2,16
100179c8:	813fffcc 	andi	r4,r16,65535
100179cc:	d8c00217 	ldw	r3,8(sp)
100179d0:	20a0b03a 	or	r16,r4,r2
100179d4:	d9c00517 	ldw	r7,20(sp)
100179d8:	da000417 	ldw	r8,16(sp)
100179dc:	8480062e 	bgeu	r16,r18,100179f8 <__divdf3+0x5b8>
100179e0:	85a1883a 	add	r16,r16,r22
100179e4:	40bfffc4 	addi	r2,r8,-1
100179e8:	8580ac36 	bltu	r16,r22,10017c9c <__divdf3+0x85c>
100179ec:	8480ab2e 	bgeu	r16,r18,10017c9c <__divdf3+0x85c>
100179f0:	423fff84 	addi	r8,r8,-2
100179f4:	85a1883a 	add	r16,r16,r22
100179f8:	3804943a 	slli	r2,r7,16
100179fc:	84a1c83a 	sub	r16,r16,r18
10017a00:	e009883a 	mov	r4,fp
10017a04:	1228b03a 	or	r20,r2,r8
10017a08:	a1ffffcc 	andi	r7,r20,65535
10017a0c:	a024d43a 	srli	r18,r20,16
10017a10:	380b883a 	mov	r5,r7
10017a14:	d8c00215 	stw	r3,8(sp)
10017a18:	d9c00515 	stw	r7,20(sp)
10017a1c:	00034380 	call	10003438 <__mulsi3>
10017a20:	900b883a 	mov	r5,r18
10017a24:	e009883a 	mov	r4,fp
10017a28:	102b883a 	mov	r21,r2
10017a2c:	00034380 	call	10003438 <__mulsi3>
10017a30:	900b883a 	mov	r5,r18
10017a34:	b809883a 	mov	r4,r23
10017a38:	1039883a 	mov	fp,r2
10017a3c:	00034380 	call	10003438 <__mulsi3>
10017a40:	d9c00517 	ldw	r7,20(sp)
10017a44:	b80b883a 	mov	r5,r23
10017a48:	1025883a 	mov	r18,r2
10017a4c:	3809883a 	mov	r4,r7
10017a50:	00034380 	call	10003438 <__mulsi3>
10017a54:	a808d43a 	srli	r4,r21,16
10017a58:	1705883a 	add	r2,r2,fp
10017a5c:	d8c00217 	ldw	r3,8(sp)
10017a60:	2085883a 	add	r2,r4,r2
10017a64:	1700022e 	bgeu	r2,fp,10017a70 <__divdf3+0x630>
10017a68:	01000074 	movhi	r4,1
10017a6c:	9125883a 	add	r18,r18,r4
10017a70:	1008d43a 	srli	r4,r2,16
10017a74:	1004943a 	slli	r2,r2,16
10017a78:	ad7fffcc 	andi	r21,r21,65535
10017a7c:	2489883a 	add	r4,r4,r18
10017a80:	1545883a 	add	r2,r2,r21
10017a84:	81003836 	bltu	r16,r4,10017b68 <__divdf3+0x728>
10017a88:	81003626 	beq	r16,r4,10017b64 <__divdf3+0x724>
10017a8c:	a5000054 	ori	r20,r20,1
10017a90:	1880ffc4 	addi	r2,r3,1023
10017a94:	00bf2e0e 	bge	zero,r2,10017750 <__alt_data_end+0xf8017750>
10017a98:	a10001cc 	andi	r4,r20,7
10017a9c:	20000726 	beq	r4,zero,10017abc <__divdf3+0x67c>
10017aa0:	a10003cc 	andi	r4,r20,15
10017aa4:	01400104 	movi	r5,4
10017aa8:	21400426 	beq	r4,r5,10017abc <__divdf3+0x67c>
10017aac:	a149883a 	add	r4,r20,r5
10017ab0:	2529803a 	cmpltu	r20,r4,r20
10017ab4:	8d23883a 	add	r17,r17,r20
10017ab8:	2029883a 	mov	r20,r4
10017abc:	8900402c 	andhi	r4,r17,256
10017ac0:	20000426 	beq	r4,zero,10017ad4 <__divdf3+0x694>
10017ac4:	18810004 	addi	r2,r3,1024
10017ac8:	00ffc034 	movhi	r3,65280
10017acc:	18ffffc4 	addi	r3,r3,-1
10017ad0:	88e2703a 	and	r17,r17,r3
10017ad4:	00c1ff84 	movi	r3,2046
10017ad8:	18beb416 	blt	r3,r2,100175ac <__alt_data_end+0xf80175ac>
10017adc:	a028d0fa 	srli	r20,r20,3
10017ae0:	882a977a 	slli	r21,r17,29
10017ae4:	8820927a 	slli	r16,r17,9
10017ae8:	1081ffcc 	andi	r2,r2,2047
10017aec:	ad2ab03a 	or	r21,r21,r20
10017af0:	8020d33a 	srli	r16,r16,12
10017af4:	9900004c 	andi	r4,r19,1
10017af8:	003eb006 	br	100175bc <__alt_data_end+0xf80175bc>
10017afc:	8080022c 	andhi	r2,r16,8
10017b00:	10001226 	beq	r2,zero,10017b4c <__divdf3+0x70c>
10017b04:	8880022c 	andhi	r2,r17,8
10017b08:	1000101e 	bne	r2,zero,10017b4c <__divdf3+0x70c>
10017b0c:	00800434 	movhi	r2,16
10017b10:	8c000234 	orhi	r16,r17,8
10017b14:	10bfffc4 	addi	r2,r2,-1
10017b18:	b809883a 	mov	r4,r23
10017b1c:	80a0703a 	and	r16,r16,r2
10017b20:	a02b883a 	mov	r21,r20
10017b24:	003f0806 	br	10017748 <__alt_data_end+0xf8017748>
10017b28:	008000c4 	movi	r2,3
10017b2c:	3880b126 	beq	r7,r2,10017df4 <__divdf3+0x9b4>
10017b30:	00800044 	movi	r2,1
10017b34:	38805b1e 	bne	r7,r2,10017ca4 <__divdf3+0x864>
10017b38:	e009883a 	mov	r4,fp
10017b3c:	0005883a 	mov	r2,zero
10017b40:	0021883a 	mov	r16,zero
10017b44:	002b883a 	mov	r21,zero
10017b48:	003e9c06 	br	100175bc <__alt_data_end+0xf80175bc>
10017b4c:	00800434 	movhi	r2,16
10017b50:	84000234 	orhi	r16,r16,8
10017b54:	10bfffc4 	addi	r2,r2,-1
10017b58:	b009883a 	mov	r4,r22
10017b5c:	80a0703a 	and	r16,r16,r2
10017b60:	003ef906 	br	10017748 <__alt_data_end+0xf8017748>
10017b64:	103fca26 	beq	r2,zero,10017a90 <__alt_data_end+0xf8017a90>
10017b68:	b421883a 	add	r16,r22,r16
10017b6c:	a17fffc4 	addi	r5,r20,-1
10017b70:	8580422e 	bgeu	r16,r22,10017c7c <__divdf3+0x83c>
10017b74:	2829883a 	mov	r20,r5
10017b78:	813fc41e 	bne	r16,r4,10017a8c <__alt_data_end+0xf8017a8c>
10017b7c:	d9800017 	ldw	r6,0(sp)
10017b80:	30bfc21e 	bne	r6,r2,10017a8c <__alt_data_end+0xf8017a8c>
10017b84:	003fc206 	br	10017a90 <__alt_data_end+0xf8017a90>
10017b88:	143ff604 	addi	r16,r2,-40
10017b8c:	8c20983a 	sll	r16,r17,r16
10017b90:	002b883a 	mov	r21,zero
10017b94:	003eb406 	br	10017668 <__alt_data_end+0xf8017668>
10017b98:	d9800215 	stw	r6,8(sp)
10017b9c:	d9c00515 	stw	r7,20(sp)
10017ba0:	da000415 	stw	r8,16(sp)
10017ba4:	001957c0 	call	1001957c <__clzsi2>
10017ba8:	10800804 	addi	r2,r2,32
10017bac:	da000417 	ldw	r8,16(sp)
10017bb0:	d9c00517 	ldw	r7,20(sp)
10017bb4:	d9800217 	ldw	r6,8(sp)
10017bb8:	003ea106 	br	10017640 <__alt_data_end+0xf8017640>
10017bbc:	147ff604 	addi	r17,r2,-40
10017bc0:	3462983a 	sll	r17,r6,r17
10017bc4:	0029883a 	mov	r20,zero
10017bc8:	003ec906 	br	100176f0 <__alt_data_end+0xf80176f0>
10017bcc:	3009883a 	mov	r4,r6
10017bd0:	d9400115 	stw	r5,4(sp)
10017bd4:	d9800215 	stw	r6,8(sp)
10017bd8:	da000415 	stw	r8,16(sp)
10017bdc:	da400315 	stw	r9,12(sp)
10017be0:	001957c0 	call	1001957c <__clzsi2>
10017be4:	10800804 	addi	r2,r2,32
10017be8:	da400317 	ldw	r9,12(sp)
10017bec:	da000417 	ldw	r8,16(sp)
10017bf0:	d9800217 	ldw	r6,8(sp)
10017bf4:	d9400117 	ldw	r5,4(sp)
10017bf8:	003eb306 	br	100176c8 <__alt_data_end+0xf80176c8>
10017bfc:	d9800017 	ldw	r6,0(sp)
10017c00:	a9ab883a 	add	r21,r21,r6
10017c04:	a98b803a 	cmpltu	r5,r21,r6
10017c08:	2d8b883a 	add	r5,r5,r22
10017c0c:	2a11883a 	add	r8,r5,r8
10017c10:	897fffc4 	addi	r5,r17,-1
10017c14:	b2000c2e 	bgeu	r22,r8,10017c48 <__divdf3+0x808>
10017c18:	41003f36 	bltu	r8,r4,10017d18 <__divdf3+0x8d8>
10017c1c:	22006c26 	beq	r4,r8,10017dd0 <__divdf3+0x990>
10017c20:	4109c83a 	sub	r4,r8,r4
10017c24:	2823883a 	mov	r17,r5
10017c28:	003f3b06 	br	10017918 <__alt_data_end+0xf8017918>
10017c2c:	ad3ed336 	bltu	r21,r20,1001777c <__alt_data_end+0xf801777c>
10017c30:	a804d07a 	srli	r2,r21,1
10017c34:	802e97fa 	slli	r23,r16,31
10017c38:	a82a97fa 	slli	r21,r21,31
10017c3c:	8020d07a 	srli	r16,r16,1
10017c40:	b8aeb03a 	or	r23,r23,r2
10017c44:	003ed006 	br	10017788 <__alt_data_end+0xf8017788>
10017c48:	b23ff51e 	bne	r22,r8,10017c20 <__alt_data_end+0xf8017c20>
10017c4c:	d9800017 	ldw	r6,0(sp)
10017c50:	a9bff12e 	bgeu	r21,r6,10017c18 <__alt_data_end+0xf8017c18>
10017c54:	b109c83a 	sub	r4,r22,r4
10017c58:	2823883a 	mov	r17,r5
10017c5c:	003f2e06 	br	10017918 <__alt_data_end+0xf8017918>
10017c60:	2021883a 	mov	r16,r4
10017c64:	003eff06 	br	10017864 <__alt_data_end+0xf8017864>
10017c68:	2023883a 	mov	r17,r4
10017c6c:	003ee406 	br	10017800 <__alt_data_end+0xf8017800>
10017c70:	a8bfe236 	bltu	r21,r2,10017bfc <__alt_data_end+0xf8017bfc>
10017c74:	0009883a 	mov	r4,zero
10017c78:	003f2706 	br	10017918 <__alt_data_end+0xf8017918>
10017c7c:	81002d36 	bltu	r16,r4,10017d34 <__divdf3+0x8f4>
10017c80:	24005626 	beq	r4,r16,10017ddc <__divdf3+0x99c>
10017c84:	2829883a 	mov	r20,r5
10017c88:	003f8006 	br	10017a8c <__alt_data_end+0xf8017a8c>
10017c8c:	053fffc4 	movi	r20,-1
10017c90:	003f7f06 	br	10017a90 <__alt_data_end+0xf8017a90>
10017c94:	200f883a 	mov	r7,r4
10017c98:	003f3c06 	br	1001798c <__alt_data_end+0xf801798c>
10017c9c:	1011883a 	mov	r8,r2
10017ca0:	003f5506 	br	100179f8 <__alt_data_end+0xf80179f8>
10017ca4:	e027883a 	mov	r19,fp
10017ca8:	003f7906 	br	10017a90 <__alt_data_end+0xf8017a90>
10017cac:	010007c4 	movi	r4,31
10017cb0:	20c02816 	blt	r4,r3,10017d54 <__divdf3+0x914>
10017cb4:	00800804 	movi	r2,32
10017cb8:	10c5c83a 	sub	r2,r2,r3
10017cbc:	888a983a 	sll	r5,r17,r2
10017cc0:	a0c8d83a 	srl	r4,r20,r3
10017cc4:	a084983a 	sll	r2,r20,r2
10017cc8:	88e2d83a 	srl	r17,r17,r3
10017ccc:	2906b03a 	or	r3,r5,r4
10017cd0:	1004c03a 	cmpne	r2,r2,zero
10017cd4:	1886b03a 	or	r3,r3,r2
10017cd8:	188001cc 	andi	r2,r3,7
10017cdc:	10000726 	beq	r2,zero,10017cfc <__divdf3+0x8bc>
10017ce0:	188003cc 	andi	r2,r3,15
10017ce4:	01000104 	movi	r4,4
10017ce8:	11000426 	beq	r2,r4,10017cfc <__divdf3+0x8bc>
10017cec:	1805883a 	mov	r2,r3
10017cf0:	10c00104 	addi	r3,r2,4
10017cf4:	1885803a 	cmpltu	r2,r3,r2
10017cf8:	88a3883a 	add	r17,r17,r2
10017cfc:	8880202c 	andhi	r2,r17,128
10017d00:	10002926 	beq	r2,zero,10017da8 <__divdf3+0x968>
10017d04:	9900004c 	andi	r4,r19,1
10017d08:	00800044 	movi	r2,1
10017d0c:	0021883a 	mov	r16,zero
10017d10:	002b883a 	mov	r21,zero
10017d14:	003e2906 	br	100175bc <__alt_data_end+0xf80175bc>
10017d18:	d9800017 	ldw	r6,0(sp)
10017d1c:	8c7fff84 	addi	r17,r17,-2
10017d20:	a9ab883a 	add	r21,r21,r6
10017d24:	a98b803a 	cmpltu	r5,r21,r6
10017d28:	2d8b883a 	add	r5,r5,r22
10017d2c:	2a11883a 	add	r8,r5,r8
10017d30:	003ef806 	br	10017914 <__alt_data_end+0xf8017914>
10017d34:	d9800017 	ldw	r6,0(sp)
10017d38:	318f883a 	add	r7,r6,r6
10017d3c:	398b803a 	cmpltu	r5,r7,r6
10017d40:	2d8d883a 	add	r6,r5,r22
10017d44:	81a1883a 	add	r16,r16,r6
10017d48:	a17fff84 	addi	r5,r20,-2
10017d4c:	d9c00015 	stw	r7,0(sp)
10017d50:	003f8806 	br	10017b74 <__alt_data_end+0xf8017b74>
10017d54:	013ff844 	movi	r4,-31
10017d58:	2085c83a 	sub	r2,r4,r2
10017d5c:	8888d83a 	srl	r4,r17,r2
10017d60:	00800804 	movi	r2,32
10017d64:	18802126 	beq	r3,r2,10017dec <__divdf3+0x9ac>
10017d68:	04001004 	movi	r16,64
10017d6c:	80c7c83a 	sub	r3,r16,r3
10017d70:	88e0983a 	sll	r16,r17,r3
10017d74:	8504b03a 	or	r2,r16,r20
10017d78:	1004c03a 	cmpne	r2,r2,zero
10017d7c:	2084b03a 	or	r2,r4,r2
10017d80:	144001cc 	andi	r17,r2,7
10017d84:	88000d1e 	bne	r17,zero,10017dbc <__divdf3+0x97c>
10017d88:	0021883a 	mov	r16,zero
10017d8c:	102ad0fa 	srli	r21,r2,3
10017d90:	9900004c 	andi	r4,r19,1
10017d94:	0005883a 	mov	r2,zero
10017d98:	ac6ab03a 	or	r21,r21,r17
10017d9c:	003e0706 	br	100175bc <__alt_data_end+0xf80175bc>
10017da0:	1007883a 	mov	r3,r2
10017da4:	0023883a 	mov	r17,zero
10017da8:	8820927a 	slli	r16,r17,9
10017dac:	1805883a 	mov	r2,r3
10017db0:	8822977a 	slli	r17,r17,29
10017db4:	8020d33a 	srli	r16,r16,12
10017db8:	003ff406 	br	10017d8c <__alt_data_end+0xf8017d8c>
10017dbc:	10c003cc 	andi	r3,r2,15
10017dc0:	01000104 	movi	r4,4
10017dc4:	193ff626 	beq	r3,r4,10017da0 <__alt_data_end+0xf8017da0>
10017dc8:	0023883a 	mov	r17,zero
10017dcc:	003fc806 	br	10017cf0 <__alt_data_end+0xf8017cf0>
10017dd0:	a8bfd136 	bltu	r21,r2,10017d18 <__alt_data_end+0xf8017d18>
10017dd4:	2823883a 	mov	r17,r5
10017dd8:	003fa606 	br	10017c74 <__alt_data_end+0xf8017c74>
10017ddc:	d9800017 	ldw	r6,0(sp)
10017de0:	30bfd436 	bltu	r6,r2,10017d34 <__alt_data_end+0xf8017d34>
10017de4:	2829883a 	mov	r20,r5
10017de8:	003f6406 	br	10017b7c <__alt_data_end+0xf8017b7c>
10017dec:	0021883a 	mov	r16,zero
10017df0:	003fe006 	br	10017d74 <__alt_data_end+0xf8017d74>
10017df4:	00800434 	movhi	r2,16
10017df8:	8c000234 	orhi	r16,r17,8
10017dfc:	10bfffc4 	addi	r2,r2,-1
10017e00:	e009883a 	mov	r4,fp
10017e04:	80a0703a 	and	r16,r16,r2
10017e08:	a02b883a 	mov	r21,r20
10017e0c:	003e4e06 	br	10017748 <__alt_data_end+0xf8017748>

10017e10 <__eqdf2>:
10017e10:	2804d53a 	srli	r2,r5,20
10017e14:	3806d53a 	srli	r3,r7,20
10017e18:	02000434 	movhi	r8,16
10017e1c:	423fffc4 	addi	r8,r8,-1
10017e20:	1081ffcc 	andi	r2,r2,2047
10017e24:	0281ffc4 	movi	r10,2047
10017e28:	2a12703a 	and	r9,r5,r8
10017e2c:	18c1ffcc 	andi	r3,r3,2047
10017e30:	3a10703a 	and	r8,r7,r8
10017e34:	280ad7fa 	srli	r5,r5,31
10017e38:	380ed7fa 	srli	r7,r7,31
10017e3c:	12801026 	beq	r2,r10,10017e80 <__eqdf2+0x70>
10017e40:	0281ffc4 	movi	r10,2047
10017e44:	1a800a26 	beq	r3,r10,10017e70 <__eqdf2+0x60>
10017e48:	10c00226 	beq	r2,r3,10017e54 <__eqdf2+0x44>
10017e4c:	00800044 	movi	r2,1
10017e50:	f800283a 	ret
10017e54:	4a3ffd1e 	bne	r9,r8,10017e4c <__alt_data_end+0xf8017e4c>
10017e58:	21bffc1e 	bne	r4,r6,10017e4c <__alt_data_end+0xf8017e4c>
10017e5c:	29c00c26 	beq	r5,r7,10017e90 <__eqdf2+0x80>
10017e60:	103ffa1e 	bne	r2,zero,10017e4c <__alt_data_end+0xf8017e4c>
10017e64:	2244b03a 	or	r2,r4,r9
10017e68:	1004c03a 	cmpne	r2,r2,zero
10017e6c:	f800283a 	ret
10017e70:	3214b03a 	or	r10,r6,r8
10017e74:	503ff426 	beq	r10,zero,10017e48 <__alt_data_end+0xf8017e48>
10017e78:	00800044 	movi	r2,1
10017e7c:	f800283a 	ret
10017e80:	2254b03a 	or	r10,r4,r9
10017e84:	503fee26 	beq	r10,zero,10017e40 <__alt_data_end+0xf8017e40>
10017e88:	00800044 	movi	r2,1
10017e8c:	f800283a 	ret
10017e90:	0005883a 	mov	r2,zero
10017e94:	f800283a 	ret

10017e98 <__gedf2>:
10017e98:	2804d53a 	srli	r2,r5,20
10017e9c:	3806d53a 	srli	r3,r7,20
10017ea0:	02000434 	movhi	r8,16
10017ea4:	423fffc4 	addi	r8,r8,-1
10017ea8:	1081ffcc 	andi	r2,r2,2047
10017eac:	0241ffc4 	movi	r9,2047
10017eb0:	2a14703a 	and	r10,r5,r8
10017eb4:	18c1ffcc 	andi	r3,r3,2047
10017eb8:	3a10703a 	and	r8,r7,r8
10017ebc:	280ad7fa 	srli	r5,r5,31
10017ec0:	380ed7fa 	srli	r7,r7,31
10017ec4:	12401d26 	beq	r2,r9,10017f3c <__gedf2+0xa4>
10017ec8:	0241ffc4 	movi	r9,2047
10017ecc:	1a401226 	beq	r3,r9,10017f18 <__gedf2+0x80>
10017ed0:	1000081e 	bne	r2,zero,10017ef4 <__gedf2+0x5c>
10017ed4:	2296b03a 	or	r11,r4,r10
10017ed8:	5813003a 	cmpeq	r9,r11,zero
10017edc:	1800091e 	bne	r3,zero,10017f04 <__gedf2+0x6c>
10017ee0:	3218b03a 	or	r12,r6,r8
10017ee4:	6000071e 	bne	r12,zero,10017f04 <__gedf2+0x6c>
10017ee8:	0005883a 	mov	r2,zero
10017eec:	5800101e 	bne	r11,zero,10017f30 <__gedf2+0x98>
10017ef0:	f800283a 	ret
10017ef4:	18000c1e 	bne	r3,zero,10017f28 <__gedf2+0x90>
10017ef8:	3212b03a 	or	r9,r6,r8
10017efc:	48000c26 	beq	r9,zero,10017f30 <__gedf2+0x98>
10017f00:	0013883a 	mov	r9,zero
10017f04:	39c03fcc 	andi	r7,r7,255
10017f08:	48000826 	beq	r9,zero,10017f2c <__gedf2+0x94>
10017f0c:	38000926 	beq	r7,zero,10017f34 <__gedf2+0x9c>
10017f10:	00800044 	movi	r2,1
10017f14:	f800283a 	ret
10017f18:	3212b03a 	or	r9,r6,r8
10017f1c:	483fec26 	beq	r9,zero,10017ed0 <__alt_data_end+0xf8017ed0>
10017f20:	00bfff84 	movi	r2,-2
10017f24:	f800283a 	ret
10017f28:	39c03fcc 	andi	r7,r7,255
10017f2c:	29c00626 	beq	r5,r7,10017f48 <__gedf2+0xb0>
10017f30:	283ff726 	beq	r5,zero,10017f10 <__alt_data_end+0xf8017f10>
10017f34:	00bfffc4 	movi	r2,-1
10017f38:	f800283a 	ret
10017f3c:	2292b03a 	or	r9,r4,r10
10017f40:	483fe126 	beq	r9,zero,10017ec8 <__alt_data_end+0xf8017ec8>
10017f44:	003ff606 	br	10017f20 <__alt_data_end+0xf8017f20>
10017f48:	18bff916 	blt	r3,r2,10017f30 <__alt_data_end+0xf8017f30>
10017f4c:	10c00316 	blt	r2,r3,10017f5c <__gedf2+0xc4>
10017f50:	42bff736 	bltu	r8,r10,10017f30 <__alt_data_end+0xf8017f30>
10017f54:	52000326 	beq	r10,r8,10017f64 <__gedf2+0xcc>
10017f58:	5200042e 	bgeu	r10,r8,10017f6c <__gedf2+0xd4>
10017f5c:	283fec1e 	bne	r5,zero,10017f10 <__alt_data_end+0xf8017f10>
10017f60:	003ff406 	br	10017f34 <__alt_data_end+0xf8017f34>
10017f64:	313ff236 	bltu	r6,r4,10017f30 <__alt_data_end+0xf8017f30>
10017f68:	21bffc36 	bltu	r4,r6,10017f5c <__alt_data_end+0xf8017f5c>
10017f6c:	0005883a 	mov	r2,zero
10017f70:	f800283a 	ret

10017f74 <__ledf2>:
10017f74:	2804d53a 	srli	r2,r5,20
10017f78:	3810d53a 	srli	r8,r7,20
10017f7c:	00c00434 	movhi	r3,16
10017f80:	18ffffc4 	addi	r3,r3,-1
10017f84:	1081ffcc 	andi	r2,r2,2047
10017f88:	0241ffc4 	movi	r9,2047
10017f8c:	28d4703a 	and	r10,r5,r3
10017f90:	4201ffcc 	andi	r8,r8,2047
10017f94:	38c6703a 	and	r3,r7,r3
10017f98:	280ad7fa 	srli	r5,r5,31
10017f9c:	380ed7fa 	srli	r7,r7,31
10017fa0:	12401f26 	beq	r2,r9,10018020 <__ledf2+0xac>
10017fa4:	0241ffc4 	movi	r9,2047
10017fa8:	42401426 	beq	r8,r9,10017ffc <__ledf2+0x88>
10017fac:	1000091e 	bne	r2,zero,10017fd4 <__ledf2+0x60>
10017fb0:	2296b03a 	or	r11,r4,r10
10017fb4:	5813003a 	cmpeq	r9,r11,zero
10017fb8:	29403fcc 	andi	r5,r5,255
10017fbc:	40000a1e 	bne	r8,zero,10017fe8 <__ledf2+0x74>
10017fc0:	30d8b03a 	or	r12,r6,r3
10017fc4:	6000081e 	bne	r12,zero,10017fe8 <__ledf2+0x74>
10017fc8:	0005883a 	mov	r2,zero
10017fcc:	5800111e 	bne	r11,zero,10018014 <__ledf2+0xa0>
10017fd0:	f800283a 	ret
10017fd4:	29403fcc 	andi	r5,r5,255
10017fd8:	40000c1e 	bne	r8,zero,1001800c <__ledf2+0x98>
10017fdc:	30d2b03a 	or	r9,r6,r3
10017fe0:	48000c26 	beq	r9,zero,10018014 <__ledf2+0xa0>
10017fe4:	0013883a 	mov	r9,zero
10017fe8:	39c03fcc 	andi	r7,r7,255
10017fec:	48000826 	beq	r9,zero,10018010 <__ledf2+0x9c>
10017ff0:	38001126 	beq	r7,zero,10018038 <__ledf2+0xc4>
10017ff4:	00800044 	movi	r2,1
10017ff8:	f800283a 	ret
10017ffc:	30d2b03a 	or	r9,r6,r3
10018000:	483fea26 	beq	r9,zero,10017fac <__alt_data_end+0xf8017fac>
10018004:	00800084 	movi	r2,2
10018008:	f800283a 	ret
1001800c:	39c03fcc 	andi	r7,r7,255
10018010:	39400726 	beq	r7,r5,10018030 <__ledf2+0xbc>
10018014:	2800081e 	bne	r5,zero,10018038 <__ledf2+0xc4>
10018018:	00800044 	movi	r2,1
1001801c:	f800283a 	ret
10018020:	2292b03a 	or	r9,r4,r10
10018024:	483fdf26 	beq	r9,zero,10017fa4 <__alt_data_end+0xf8017fa4>
10018028:	00800084 	movi	r2,2
1001802c:	f800283a 	ret
10018030:	4080030e 	bge	r8,r2,10018040 <__ledf2+0xcc>
10018034:	383fef26 	beq	r7,zero,10017ff4 <__alt_data_end+0xf8017ff4>
10018038:	00bfffc4 	movi	r2,-1
1001803c:	f800283a 	ret
10018040:	123feb16 	blt	r2,r8,10017ff0 <__alt_data_end+0xf8017ff0>
10018044:	1abff336 	bltu	r3,r10,10018014 <__alt_data_end+0xf8018014>
10018048:	50c00326 	beq	r10,r3,10018058 <__ledf2+0xe4>
1001804c:	50c0042e 	bgeu	r10,r3,10018060 <__ledf2+0xec>
10018050:	283fe81e 	bne	r5,zero,10017ff4 <__alt_data_end+0xf8017ff4>
10018054:	003ff806 	br	10018038 <__alt_data_end+0xf8018038>
10018058:	313fee36 	bltu	r6,r4,10018014 <__alt_data_end+0xf8018014>
1001805c:	21bffc36 	bltu	r4,r6,10018050 <__alt_data_end+0xf8018050>
10018060:	0005883a 	mov	r2,zero
10018064:	f800283a 	ret

10018068 <__muldf3>:
10018068:	deffee04 	addi	sp,sp,-72
1001806c:	dd000c15 	stw	r20,48(sp)
10018070:	2828d53a 	srli	r20,r5,20
10018074:	ddc00f15 	stw	r23,60(sp)
10018078:	282ed7fa 	srli	r23,r5,31
1001807c:	dc000815 	stw	r16,32(sp)
10018080:	04000434 	movhi	r16,16
10018084:	dcc00b15 	stw	r19,44(sp)
10018088:	843fffc4 	addi	r16,r16,-1
1001808c:	dfc01115 	stw	ra,68(sp)
10018090:	df001015 	stw	fp,64(sp)
10018094:	dd800e15 	stw	r22,56(sp)
10018098:	dd400d15 	stw	r21,52(sp)
1001809c:	dc800a15 	stw	r18,40(sp)
100180a0:	dc400915 	stw	r17,36(sp)
100180a4:	a501ffcc 	andi	r20,r20,2047
100180a8:	2c20703a 	and	r16,r5,r16
100180ac:	b827883a 	mov	r19,r23
100180b0:	ba403fcc 	andi	r9,r23,255
100180b4:	a0006026 	beq	r20,zero,10018238 <__muldf3+0x1d0>
100180b8:	0081ffc4 	movi	r2,2047
100180bc:	202d883a 	mov	r22,r4
100180c0:	a0803626 	beq	r20,r2,1001819c <__muldf3+0x134>
100180c4:	84000434 	orhi	r16,r16,16
100180c8:	200ad77a 	srli	r5,r4,29
100180cc:	800490fa 	slli	r2,r16,3
100180d0:	202c90fa 	slli	r22,r4,3
100180d4:	a53f0044 	addi	r20,r20,-1023
100180d8:	28a0b03a 	or	r16,r5,r2
100180dc:	002b883a 	mov	r21,zero
100180e0:	000b883a 	mov	r5,zero
100180e4:	3804d53a 	srli	r2,r7,20
100180e8:	3838d7fa 	srli	fp,r7,31
100180ec:	04400434 	movhi	r17,16
100180f0:	8c7fffc4 	addi	r17,r17,-1
100180f4:	1081ffcc 	andi	r2,r2,2047
100180f8:	3025883a 	mov	r18,r6
100180fc:	3c62703a 	and	r17,r7,r17
10018100:	e2803fcc 	andi	r10,fp,255
10018104:	10006d26 	beq	r2,zero,100182bc <__muldf3+0x254>
10018108:	00c1ffc4 	movi	r3,2047
1001810c:	10c06526 	beq	r2,r3,100182a4 <__muldf3+0x23c>
10018110:	8c400434 	orhi	r17,r17,16
10018114:	300ed77a 	srli	r7,r6,29
10018118:	880690fa 	slli	r3,r17,3
1001811c:	302490fa 	slli	r18,r6,3
10018120:	10bf0044 	addi	r2,r2,-1023
10018124:	38e2b03a 	or	r17,r7,r3
10018128:	000f883a 	mov	r7,zero
1001812c:	a087883a 	add	r3,r20,r2
10018130:	010003c4 	movi	r4,15
10018134:	3d44b03a 	or	r2,r7,r21
10018138:	e5ccf03a 	xor	r6,fp,r23
1001813c:	1a000044 	addi	r8,r3,1
10018140:	20809b36 	bltu	r4,r2,100183b0 <__muldf3+0x348>
10018144:	100490ba 	slli	r2,r2,2
10018148:	010400b4 	movhi	r4,4098
1001814c:	21205704 	addi	r4,r4,-32420
10018150:	1105883a 	add	r2,r2,r4
10018154:	10800017 	ldw	r2,0(r2)
10018158:	1000683a 	jmp	r2
1001815c:	100183b0 	cmpltui	zero,r2,1550
10018160:	100181bc 	xorhi	zero,r2,1542
10018164:	100181bc 	xorhi	zero,r2,1542
10018168:	100181b8 	rdprs	zero,r2,1542
1001816c:	1001838c 	andi	zero,r2,1550
10018170:	1001838c 	andi	zero,r2,1550
10018174:	10018374 	orhi	zero,r2,1549
10018178:	100181b8 	rdprs	zero,r2,1542
1001817c:	1001838c 	andi	zero,r2,1550
10018180:	10018374 	orhi	zero,r2,1549
10018184:	1001838c 	andi	zero,r2,1550
10018188:	100181b8 	rdprs	zero,r2,1542
1001818c:	1001839c 	xori	zero,r2,1550
10018190:	1001839c 	xori	zero,r2,1550
10018194:	1001839c 	xori	zero,r2,1550
10018198:	100186fc 	xorhi	zero,r2,1563
1001819c:	2404b03a 	or	r2,r4,r16
100181a0:	1000711e 	bne	r2,zero,10018368 <__muldf3+0x300>
100181a4:	05400204 	movi	r21,8
100181a8:	0021883a 	mov	r16,zero
100181ac:	002d883a 	mov	r22,zero
100181b0:	01400084 	movi	r5,2
100181b4:	003fcb06 	br	100180e4 <__alt_data_end+0xf80180e4>
100181b8:	500d883a 	mov	r6,r10
100181bc:	00800084 	movi	r2,2
100181c0:	38805926 	beq	r7,r2,10018328 <__muldf3+0x2c0>
100181c4:	008000c4 	movi	r2,3
100181c8:	3881bb26 	beq	r7,r2,100188b8 <__muldf3+0x850>
100181cc:	00800044 	movi	r2,1
100181d0:	3881961e 	bne	r7,r2,1001882c <__muldf3+0x7c4>
100181d4:	3027883a 	mov	r19,r6
100181d8:	0005883a 	mov	r2,zero
100181dc:	0021883a 	mov	r16,zero
100181e0:	002d883a 	mov	r22,zero
100181e4:	1004953a 	slli	r2,r2,20
100181e8:	98c03fcc 	andi	r3,r19,255
100181ec:	04400434 	movhi	r17,16
100181f0:	8c7fffc4 	addi	r17,r17,-1
100181f4:	180697fa 	slli	r3,r3,31
100181f8:	8460703a 	and	r16,r16,r17
100181fc:	80a0b03a 	or	r16,r16,r2
10018200:	80c6b03a 	or	r3,r16,r3
10018204:	b005883a 	mov	r2,r22
10018208:	dfc01117 	ldw	ra,68(sp)
1001820c:	df001017 	ldw	fp,64(sp)
10018210:	ddc00f17 	ldw	r23,60(sp)
10018214:	dd800e17 	ldw	r22,56(sp)
10018218:	dd400d17 	ldw	r21,52(sp)
1001821c:	dd000c17 	ldw	r20,48(sp)
10018220:	dcc00b17 	ldw	r19,44(sp)
10018224:	dc800a17 	ldw	r18,40(sp)
10018228:	dc400917 	ldw	r17,36(sp)
1001822c:	dc000817 	ldw	r16,32(sp)
10018230:	dec01204 	addi	sp,sp,72
10018234:	f800283a 	ret
10018238:	2404b03a 	or	r2,r4,r16
1001823c:	202b883a 	mov	r21,r4
10018240:	10004426 	beq	r2,zero,10018354 <__muldf3+0x2ec>
10018244:	80015126 	beq	r16,zero,1001878c <__muldf3+0x724>
10018248:	8009883a 	mov	r4,r16
1001824c:	d9800715 	stw	r6,28(sp)
10018250:	d9c00215 	stw	r7,8(sp)
10018254:	da400415 	stw	r9,16(sp)
10018258:	001957c0 	call	1001957c <__clzsi2>
1001825c:	d9800717 	ldw	r6,28(sp)
10018260:	d9c00217 	ldw	r7,8(sp)
10018264:	da400417 	ldw	r9,16(sp)
10018268:	113ffd44 	addi	r4,r2,-11
1001826c:	00c00704 	movi	r3,28
10018270:	19014216 	blt	r3,r4,1001877c <__muldf3+0x714>
10018274:	00c00744 	movi	r3,29
10018278:	15bffe04 	addi	r22,r2,-8
1001827c:	1907c83a 	sub	r3,r3,r4
10018280:	85a0983a 	sll	r16,r16,r22
10018284:	a8c6d83a 	srl	r3,r21,r3
10018288:	adac983a 	sll	r22,r21,r22
1001828c:	1c20b03a 	or	r16,r3,r16
10018290:	1080fcc4 	addi	r2,r2,1011
10018294:	00a9c83a 	sub	r20,zero,r2
10018298:	002b883a 	mov	r21,zero
1001829c:	000b883a 	mov	r5,zero
100182a0:	003f9006 	br	100180e4 <__alt_data_end+0xf80180e4>
100182a4:	3446b03a 	or	r3,r6,r17
100182a8:	1800281e 	bne	r3,zero,1001834c <__muldf3+0x2e4>
100182ac:	0023883a 	mov	r17,zero
100182b0:	0025883a 	mov	r18,zero
100182b4:	01c00084 	movi	r7,2
100182b8:	003f9c06 	br	1001812c <__alt_data_end+0xf801812c>
100182bc:	3446b03a 	or	r3,r6,r17
100182c0:	18001e26 	beq	r3,zero,1001833c <__muldf3+0x2d4>
100182c4:	88012126 	beq	r17,zero,1001874c <__muldf3+0x6e4>
100182c8:	8809883a 	mov	r4,r17
100182cc:	d9400215 	stw	r5,8(sp)
100182d0:	d9800715 	stw	r6,28(sp)
100182d4:	da400415 	stw	r9,16(sp)
100182d8:	da800315 	stw	r10,12(sp)
100182dc:	001957c0 	call	1001957c <__clzsi2>
100182e0:	d9400217 	ldw	r5,8(sp)
100182e4:	d9800717 	ldw	r6,28(sp)
100182e8:	da400417 	ldw	r9,16(sp)
100182ec:	da800317 	ldw	r10,12(sp)
100182f0:	113ffd44 	addi	r4,r2,-11
100182f4:	00c00704 	movi	r3,28
100182f8:	19011016 	blt	r3,r4,1001873c <__muldf3+0x6d4>
100182fc:	00c00744 	movi	r3,29
10018300:	14bffe04 	addi	r18,r2,-8
10018304:	1907c83a 	sub	r3,r3,r4
10018308:	8ca2983a 	sll	r17,r17,r18
1001830c:	30c6d83a 	srl	r3,r6,r3
10018310:	34a4983a 	sll	r18,r6,r18
10018314:	1c62b03a 	or	r17,r3,r17
10018318:	1080fcc4 	addi	r2,r2,1011
1001831c:	0085c83a 	sub	r2,zero,r2
10018320:	000f883a 	mov	r7,zero
10018324:	003f8106 	br	1001812c <__alt_data_end+0xf801812c>
10018328:	3027883a 	mov	r19,r6
1001832c:	0081ffc4 	movi	r2,2047
10018330:	0021883a 	mov	r16,zero
10018334:	002d883a 	mov	r22,zero
10018338:	003faa06 	br	100181e4 <__alt_data_end+0xf80181e4>
1001833c:	0023883a 	mov	r17,zero
10018340:	0025883a 	mov	r18,zero
10018344:	01c00044 	movi	r7,1
10018348:	003f7806 	br	1001812c <__alt_data_end+0xf801812c>
1001834c:	01c000c4 	movi	r7,3
10018350:	003f7606 	br	1001812c <__alt_data_end+0xf801812c>
10018354:	05400104 	movi	r21,4
10018358:	0021883a 	mov	r16,zero
1001835c:	002d883a 	mov	r22,zero
10018360:	01400044 	movi	r5,1
10018364:	003f5f06 	br	100180e4 <__alt_data_end+0xf80180e4>
10018368:	05400304 	movi	r21,12
1001836c:	014000c4 	movi	r5,3
10018370:	003f5c06 	br	100180e4 <__alt_data_end+0xf80180e4>
10018374:	04000434 	movhi	r16,16
10018378:	0027883a 	mov	r19,zero
1001837c:	843fffc4 	addi	r16,r16,-1
10018380:	05bfffc4 	movi	r22,-1
10018384:	0081ffc4 	movi	r2,2047
10018388:	003f9606 	br	100181e4 <__alt_data_end+0xf80181e4>
1001838c:	8023883a 	mov	r17,r16
10018390:	b025883a 	mov	r18,r22
10018394:	280f883a 	mov	r7,r5
10018398:	003f8806 	br	100181bc <__alt_data_end+0xf80181bc>
1001839c:	8023883a 	mov	r17,r16
100183a0:	b025883a 	mov	r18,r22
100183a4:	480d883a 	mov	r6,r9
100183a8:	280f883a 	mov	r7,r5
100183ac:	003f8306 	br	100181bc <__alt_data_end+0xf80181bc>
100183b0:	b026d43a 	srli	r19,r22,16
100183b4:	902ed43a 	srli	r23,r18,16
100183b8:	b5bfffcc 	andi	r22,r22,65535
100183bc:	94bfffcc 	andi	r18,r18,65535
100183c0:	b00b883a 	mov	r5,r22
100183c4:	9009883a 	mov	r4,r18
100183c8:	d8c00515 	stw	r3,20(sp)
100183cc:	d9800715 	stw	r6,28(sp)
100183d0:	da000615 	stw	r8,24(sp)
100183d4:	00034380 	call	10003438 <__mulsi3>
100183d8:	980b883a 	mov	r5,r19
100183dc:	9009883a 	mov	r4,r18
100183e0:	1029883a 	mov	r20,r2
100183e4:	00034380 	call	10003438 <__mulsi3>
100183e8:	b80b883a 	mov	r5,r23
100183ec:	9809883a 	mov	r4,r19
100183f0:	102b883a 	mov	r21,r2
100183f4:	00034380 	call	10003438 <__mulsi3>
100183f8:	b809883a 	mov	r4,r23
100183fc:	b00b883a 	mov	r5,r22
10018400:	1039883a 	mov	fp,r2
10018404:	00034380 	call	10003438 <__mulsi3>
10018408:	a008d43a 	srli	r4,r20,16
1001840c:	1545883a 	add	r2,r2,r21
10018410:	d8c00517 	ldw	r3,20(sp)
10018414:	2085883a 	add	r2,r4,r2
10018418:	d9800717 	ldw	r6,28(sp)
1001841c:	da000617 	ldw	r8,24(sp)
10018420:	1540022e 	bgeu	r2,r21,1001842c <__muldf3+0x3c4>
10018424:	01000074 	movhi	r4,1
10018428:	e139883a 	add	fp,fp,r4
1001842c:	100e943a 	slli	r7,r2,16
10018430:	1004d43a 	srli	r2,r2,16
10018434:	882ad43a 	srli	r21,r17,16
10018438:	a53fffcc 	andi	r20,r20,65535
1001843c:	8c7fffcc 	andi	r17,r17,65535
10018440:	3d29883a 	add	r20,r7,r20
10018444:	b00b883a 	mov	r5,r22
10018448:	8809883a 	mov	r4,r17
1001844c:	d8c00515 	stw	r3,20(sp)
10018450:	d9800715 	stw	r6,28(sp)
10018454:	da000615 	stw	r8,24(sp)
10018458:	dd000115 	stw	r20,4(sp)
1001845c:	d8800015 	stw	r2,0(sp)
10018460:	00034380 	call	10003438 <__mulsi3>
10018464:	980b883a 	mov	r5,r19
10018468:	8809883a 	mov	r4,r17
1001846c:	d8800215 	stw	r2,8(sp)
10018470:	00034380 	call	10003438 <__mulsi3>
10018474:	9809883a 	mov	r4,r19
10018478:	a80b883a 	mov	r5,r21
1001847c:	1029883a 	mov	r20,r2
10018480:	00034380 	call	10003438 <__mulsi3>
10018484:	b00b883a 	mov	r5,r22
10018488:	a809883a 	mov	r4,r21
1001848c:	d8800415 	stw	r2,16(sp)
10018490:	00034380 	call	10003438 <__mulsi3>
10018494:	d9c00217 	ldw	r7,8(sp)
10018498:	1505883a 	add	r2,r2,r20
1001849c:	d8c00517 	ldw	r3,20(sp)
100184a0:	3826d43a 	srli	r19,r7,16
100184a4:	d9800717 	ldw	r6,28(sp)
100184a8:	da000617 	ldw	r8,24(sp)
100184ac:	9885883a 	add	r2,r19,r2
100184b0:	da400417 	ldw	r9,16(sp)
100184b4:	1500022e 	bgeu	r2,r20,100184c0 <__muldf3+0x458>
100184b8:	01000074 	movhi	r4,1
100184bc:	4913883a 	add	r9,r9,r4
100184c0:	1028d43a 	srli	r20,r2,16
100184c4:	1004943a 	slli	r2,r2,16
100184c8:	802cd43a 	srli	r22,r16,16
100184cc:	843fffcc 	andi	r16,r16,65535
100184d0:	3cffffcc 	andi	r19,r7,65535
100184d4:	9009883a 	mov	r4,r18
100184d8:	800b883a 	mov	r5,r16
100184dc:	a269883a 	add	r20,r20,r9
100184e0:	d8c00515 	stw	r3,20(sp)
100184e4:	d9800715 	stw	r6,28(sp)
100184e8:	da000615 	stw	r8,24(sp)
100184ec:	14e7883a 	add	r19,r2,r19
100184f0:	00034380 	call	10003438 <__mulsi3>
100184f4:	9009883a 	mov	r4,r18
100184f8:	b00b883a 	mov	r5,r22
100184fc:	d8800315 	stw	r2,12(sp)
10018500:	00034380 	call	10003438 <__mulsi3>
10018504:	b809883a 	mov	r4,r23
10018508:	b00b883a 	mov	r5,r22
1001850c:	d8800215 	stw	r2,8(sp)
10018510:	00034380 	call	10003438 <__mulsi3>
10018514:	b80b883a 	mov	r5,r23
10018518:	8009883a 	mov	r4,r16
1001851c:	d8800415 	stw	r2,16(sp)
10018520:	00034380 	call	10003438 <__mulsi3>
10018524:	da800317 	ldw	r10,12(sp)
10018528:	d9c00217 	ldw	r7,8(sp)
1001852c:	d9000017 	ldw	r4,0(sp)
10018530:	502ed43a 	srli	r23,r10,16
10018534:	11c5883a 	add	r2,r2,r7
10018538:	24e5883a 	add	r18,r4,r19
1001853c:	b885883a 	add	r2,r23,r2
10018540:	d8c00517 	ldw	r3,20(sp)
10018544:	d9800717 	ldw	r6,28(sp)
10018548:	da000617 	ldw	r8,24(sp)
1001854c:	da400417 	ldw	r9,16(sp)
10018550:	11c0022e 	bgeu	r2,r7,1001855c <__muldf3+0x4f4>
10018554:	01000074 	movhi	r4,1
10018558:	4913883a 	add	r9,r9,r4
1001855c:	100ed43a 	srli	r7,r2,16
10018560:	1004943a 	slli	r2,r2,16
10018564:	55ffffcc 	andi	r23,r10,65535
10018568:	3a53883a 	add	r9,r7,r9
1001856c:	8809883a 	mov	r4,r17
10018570:	800b883a 	mov	r5,r16
10018574:	d8c00515 	stw	r3,20(sp)
10018578:	d9800715 	stw	r6,28(sp)
1001857c:	da000615 	stw	r8,24(sp)
10018580:	da400415 	stw	r9,16(sp)
10018584:	15ef883a 	add	r23,r2,r23
10018588:	00034380 	call	10003438 <__mulsi3>
1001858c:	8809883a 	mov	r4,r17
10018590:	b00b883a 	mov	r5,r22
10018594:	d8800215 	stw	r2,8(sp)
10018598:	00034380 	call	10003438 <__mulsi3>
1001859c:	b00b883a 	mov	r5,r22
100185a0:	a809883a 	mov	r4,r21
100185a4:	d8800315 	stw	r2,12(sp)
100185a8:	00034380 	call	10003438 <__mulsi3>
100185ac:	8009883a 	mov	r4,r16
100185b0:	a80b883a 	mov	r5,r21
100185b4:	1023883a 	mov	r17,r2
100185b8:	00034380 	call	10003438 <__mulsi3>
100185bc:	d9c00217 	ldw	r7,8(sp)
100185c0:	da800317 	ldw	r10,12(sp)
100185c4:	d8c00517 	ldw	r3,20(sp)
100185c8:	3808d43a 	srli	r4,r7,16
100185cc:	1285883a 	add	r2,r2,r10
100185d0:	d9800717 	ldw	r6,28(sp)
100185d4:	2085883a 	add	r2,r4,r2
100185d8:	da000617 	ldw	r8,24(sp)
100185dc:	da400417 	ldw	r9,16(sp)
100185e0:	1280022e 	bgeu	r2,r10,100185ec <__muldf3+0x584>
100185e4:	01000074 	movhi	r4,1
100185e8:	8923883a 	add	r17,r17,r4
100185ec:	1008943a 	slli	r4,r2,16
100185f0:	39ffffcc 	andi	r7,r7,65535
100185f4:	e4b9883a 	add	fp,fp,r18
100185f8:	21cf883a 	add	r7,r4,r7
100185fc:	e4e7803a 	cmpltu	r19,fp,r19
10018600:	3d0f883a 	add	r7,r7,r20
10018604:	bf39883a 	add	fp,r23,fp
10018608:	99c9883a 	add	r4,r19,r7
1001860c:	e5ef803a 	cmpltu	r23,fp,r23
10018610:	490b883a 	add	r5,r9,r4
10018614:	1004d43a 	srli	r2,r2,16
10018618:	b965883a 	add	r18,r23,r5
1001861c:	24c9803a 	cmpltu	r4,r4,r19
10018620:	3d29803a 	cmpltu	r20,r7,r20
10018624:	a128b03a 	or	r20,r20,r4
10018628:	95ef803a 	cmpltu	r23,r18,r23
1001862c:	2a53803a 	cmpltu	r9,r5,r9
10018630:	a0a9883a 	add	r20,r20,r2
10018634:	4deeb03a 	or	r23,r9,r23
10018638:	a5ef883a 	add	r23,r20,r23
1001863c:	bc63883a 	add	r17,r23,r17
10018640:	e004927a 	slli	r2,fp,9
10018644:	d9000117 	ldw	r4,4(sp)
10018648:	882e927a 	slli	r23,r17,9
1001864c:	9022d5fa 	srli	r17,r18,23
10018650:	e038d5fa 	srli	fp,fp,23
10018654:	1104b03a 	or	r2,r2,r4
10018658:	9024927a 	slli	r18,r18,9
1001865c:	1004c03a 	cmpne	r2,r2,zero
10018660:	bc62b03a 	or	r17,r23,r17
10018664:	1738b03a 	or	fp,r2,fp
10018668:	8880402c 	andhi	r2,r17,256
1001866c:	e4a4b03a 	or	r18,fp,r18
10018670:	10000726 	beq	r2,zero,10018690 <__muldf3+0x628>
10018674:	9006d07a 	srli	r3,r18,1
10018678:	880497fa 	slli	r2,r17,31
1001867c:	9480004c 	andi	r18,r18,1
10018680:	8822d07a 	srli	r17,r17,1
10018684:	1ca4b03a 	or	r18,r3,r18
10018688:	14a4b03a 	or	r18,r2,r18
1001868c:	4007883a 	mov	r3,r8
10018690:	1880ffc4 	addi	r2,r3,1023
10018694:	0080460e 	bge	zero,r2,100187b0 <__muldf3+0x748>
10018698:	910001cc 	andi	r4,r18,7
1001869c:	20000726 	beq	r4,zero,100186bc <__muldf3+0x654>
100186a0:	910003cc 	andi	r4,r18,15
100186a4:	01400104 	movi	r5,4
100186a8:	21400426 	beq	r4,r5,100186bc <__muldf3+0x654>
100186ac:	9149883a 	add	r4,r18,r5
100186b0:	24a5803a 	cmpltu	r18,r4,r18
100186b4:	8ca3883a 	add	r17,r17,r18
100186b8:	2025883a 	mov	r18,r4
100186bc:	8900402c 	andhi	r4,r17,256
100186c0:	20000426 	beq	r4,zero,100186d4 <__muldf3+0x66c>
100186c4:	18810004 	addi	r2,r3,1024
100186c8:	00ffc034 	movhi	r3,65280
100186cc:	18ffffc4 	addi	r3,r3,-1
100186d0:	88e2703a 	and	r17,r17,r3
100186d4:	00c1ff84 	movi	r3,2046
100186d8:	18bf1316 	blt	r3,r2,10018328 <__alt_data_end+0xf8018328>
100186dc:	882c977a 	slli	r22,r17,29
100186e0:	9024d0fa 	srli	r18,r18,3
100186e4:	8822927a 	slli	r17,r17,9
100186e8:	1081ffcc 	andi	r2,r2,2047
100186ec:	b4acb03a 	or	r22,r22,r18
100186f0:	8820d33a 	srli	r16,r17,12
100186f4:	3027883a 	mov	r19,r6
100186f8:	003eba06 	br	100181e4 <__alt_data_end+0xf80181e4>
100186fc:	8080022c 	andhi	r2,r16,8
10018700:	10000926 	beq	r2,zero,10018728 <__muldf3+0x6c0>
10018704:	8880022c 	andhi	r2,r17,8
10018708:	1000071e 	bne	r2,zero,10018728 <__muldf3+0x6c0>
1001870c:	00800434 	movhi	r2,16
10018710:	8c000234 	orhi	r16,r17,8
10018714:	10bfffc4 	addi	r2,r2,-1
10018718:	e027883a 	mov	r19,fp
1001871c:	80a0703a 	and	r16,r16,r2
10018720:	902d883a 	mov	r22,r18
10018724:	003f1706 	br	10018384 <__alt_data_end+0xf8018384>
10018728:	00800434 	movhi	r2,16
1001872c:	84000234 	orhi	r16,r16,8
10018730:	10bfffc4 	addi	r2,r2,-1
10018734:	80a0703a 	and	r16,r16,r2
10018738:	003f1206 	br	10018384 <__alt_data_end+0xf8018384>
1001873c:	147ff604 	addi	r17,r2,-40
10018740:	3462983a 	sll	r17,r6,r17
10018744:	0025883a 	mov	r18,zero
10018748:	003ef306 	br	10018318 <__alt_data_end+0xf8018318>
1001874c:	3009883a 	mov	r4,r6
10018750:	d9400215 	stw	r5,8(sp)
10018754:	d9800715 	stw	r6,28(sp)
10018758:	da400415 	stw	r9,16(sp)
1001875c:	da800315 	stw	r10,12(sp)
10018760:	001957c0 	call	1001957c <__clzsi2>
10018764:	10800804 	addi	r2,r2,32
10018768:	da800317 	ldw	r10,12(sp)
1001876c:	da400417 	ldw	r9,16(sp)
10018770:	d9800717 	ldw	r6,28(sp)
10018774:	d9400217 	ldw	r5,8(sp)
10018778:	003edd06 	br	100182f0 <__alt_data_end+0xf80182f0>
1001877c:	143ff604 	addi	r16,r2,-40
10018780:	ac20983a 	sll	r16,r21,r16
10018784:	002d883a 	mov	r22,zero
10018788:	003ec106 	br	10018290 <__alt_data_end+0xf8018290>
1001878c:	d9800715 	stw	r6,28(sp)
10018790:	d9c00215 	stw	r7,8(sp)
10018794:	da400415 	stw	r9,16(sp)
10018798:	001957c0 	call	1001957c <__clzsi2>
1001879c:	10800804 	addi	r2,r2,32
100187a0:	da400417 	ldw	r9,16(sp)
100187a4:	d9c00217 	ldw	r7,8(sp)
100187a8:	d9800717 	ldw	r6,28(sp)
100187ac:	003eae06 	br	10018268 <__alt_data_end+0xf8018268>
100187b0:	00c00044 	movi	r3,1
100187b4:	1887c83a 	sub	r3,r3,r2
100187b8:	01000e04 	movi	r4,56
100187bc:	20fe8516 	blt	r4,r3,100181d4 <__alt_data_end+0xf80181d4>
100187c0:	010007c4 	movi	r4,31
100187c4:	20c01b16 	blt	r4,r3,10018834 <__muldf3+0x7cc>
100187c8:	00800804 	movi	r2,32
100187cc:	10c5c83a 	sub	r2,r2,r3
100187d0:	888a983a 	sll	r5,r17,r2
100187d4:	90c8d83a 	srl	r4,r18,r3
100187d8:	9084983a 	sll	r2,r18,r2
100187dc:	88e2d83a 	srl	r17,r17,r3
100187e0:	2906b03a 	or	r3,r5,r4
100187e4:	1004c03a 	cmpne	r2,r2,zero
100187e8:	1886b03a 	or	r3,r3,r2
100187ec:	188001cc 	andi	r2,r3,7
100187f0:	10000726 	beq	r2,zero,10018810 <__muldf3+0x7a8>
100187f4:	188003cc 	andi	r2,r3,15
100187f8:	01000104 	movi	r4,4
100187fc:	11000426 	beq	r2,r4,10018810 <__muldf3+0x7a8>
10018800:	1805883a 	mov	r2,r3
10018804:	10c00104 	addi	r3,r2,4
10018808:	1885803a 	cmpltu	r2,r3,r2
1001880c:	88a3883a 	add	r17,r17,r2
10018810:	8880202c 	andhi	r2,r17,128
10018814:	10001c26 	beq	r2,zero,10018888 <__muldf3+0x820>
10018818:	3027883a 	mov	r19,r6
1001881c:	00800044 	movi	r2,1
10018820:	0021883a 	mov	r16,zero
10018824:	002d883a 	mov	r22,zero
10018828:	003e6e06 	br	100181e4 <__alt_data_end+0xf80181e4>
1001882c:	4007883a 	mov	r3,r8
10018830:	003f9706 	br	10018690 <__alt_data_end+0xf8018690>
10018834:	017ff844 	movi	r5,-31
10018838:	2885c83a 	sub	r2,r5,r2
1001883c:	888ad83a 	srl	r5,r17,r2
10018840:	00800804 	movi	r2,32
10018844:	18801a26 	beq	r3,r2,100188b0 <__muldf3+0x848>
10018848:	01001004 	movi	r4,64
1001884c:	20c7c83a 	sub	r3,r4,r3
10018850:	88e2983a 	sll	r17,r17,r3
10018854:	8ca4b03a 	or	r18,r17,r18
10018858:	9004c03a 	cmpne	r2,r18,zero
1001885c:	2884b03a 	or	r2,r5,r2
10018860:	144001cc 	andi	r17,r2,7
10018864:	88000d1e 	bne	r17,zero,1001889c <__muldf3+0x834>
10018868:	0021883a 	mov	r16,zero
1001886c:	102cd0fa 	srli	r22,r2,3
10018870:	3027883a 	mov	r19,r6
10018874:	0005883a 	mov	r2,zero
10018878:	b46cb03a 	or	r22,r22,r17
1001887c:	003e5906 	br	100181e4 <__alt_data_end+0xf80181e4>
10018880:	1007883a 	mov	r3,r2
10018884:	0023883a 	mov	r17,zero
10018888:	8820927a 	slli	r16,r17,9
1001888c:	1805883a 	mov	r2,r3
10018890:	8822977a 	slli	r17,r17,29
10018894:	8020d33a 	srli	r16,r16,12
10018898:	003ff406 	br	1001886c <__alt_data_end+0xf801886c>
1001889c:	10c003cc 	andi	r3,r2,15
100188a0:	01000104 	movi	r4,4
100188a4:	193ff626 	beq	r3,r4,10018880 <__alt_data_end+0xf8018880>
100188a8:	0023883a 	mov	r17,zero
100188ac:	003fd506 	br	10018804 <__alt_data_end+0xf8018804>
100188b0:	0023883a 	mov	r17,zero
100188b4:	003fe706 	br	10018854 <__alt_data_end+0xf8018854>
100188b8:	00800434 	movhi	r2,16
100188bc:	8c000234 	orhi	r16,r17,8
100188c0:	10bfffc4 	addi	r2,r2,-1
100188c4:	3027883a 	mov	r19,r6
100188c8:	80a0703a 	and	r16,r16,r2
100188cc:	902d883a 	mov	r22,r18
100188d0:	003eac06 	br	10018384 <__alt_data_end+0xf8018384>

100188d4 <__subdf3>:
100188d4:	02000434 	movhi	r8,16
100188d8:	423fffc4 	addi	r8,r8,-1
100188dc:	defffb04 	addi	sp,sp,-20
100188e0:	2a14703a 	and	r10,r5,r8
100188e4:	3812d53a 	srli	r9,r7,20
100188e8:	3a10703a 	and	r8,r7,r8
100188ec:	2006d77a 	srli	r3,r4,29
100188f0:	3004d77a 	srli	r2,r6,29
100188f4:	dc000015 	stw	r16,0(sp)
100188f8:	501490fa 	slli	r10,r10,3
100188fc:	2820d53a 	srli	r16,r5,20
10018900:	401090fa 	slli	r8,r8,3
10018904:	dc800215 	stw	r18,8(sp)
10018908:	dc400115 	stw	r17,4(sp)
1001890c:	dfc00415 	stw	ra,16(sp)
10018910:	202290fa 	slli	r17,r4,3
10018914:	dcc00315 	stw	r19,12(sp)
10018918:	4a41ffcc 	andi	r9,r9,2047
1001891c:	0101ffc4 	movi	r4,2047
10018920:	2824d7fa 	srli	r18,r5,31
10018924:	8401ffcc 	andi	r16,r16,2047
10018928:	50c6b03a 	or	r3,r10,r3
1001892c:	380ed7fa 	srli	r7,r7,31
10018930:	408ab03a 	or	r5,r8,r2
10018934:	300c90fa 	slli	r6,r6,3
10018938:	49009626 	beq	r9,r4,10018b94 <__subdf3+0x2c0>
1001893c:	39c0005c 	xori	r7,r7,1
10018940:	8245c83a 	sub	r2,r16,r9
10018944:	3c807426 	beq	r7,r18,10018b18 <__subdf3+0x244>
10018948:	0080af0e 	bge	zero,r2,10018c08 <__subdf3+0x334>
1001894c:	48002a1e 	bne	r9,zero,100189f8 <__subdf3+0x124>
10018950:	2988b03a 	or	r4,r5,r6
10018954:	20009a1e 	bne	r4,zero,10018bc0 <__subdf3+0x2ec>
10018958:	888001cc 	andi	r2,r17,7
1001895c:	10000726 	beq	r2,zero,1001897c <__subdf3+0xa8>
10018960:	888003cc 	andi	r2,r17,15
10018964:	01000104 	movi	r4,4
10018968:	11000426 	beq	r2,r4,1001897c <__subdf3+0xa8>
1001896c:	890b883a 	add	r5,r17,r4
10018970:	2c63803a 	cmpltu	r17,r5,r17
10018974:	1c47883a 	add	r3,r3,r17
10018978:	2823883a 	mov	r17,r5
1001897c:	1880202c 	andhi	r2,r3,128
10018980:	10005926 	beq	r2,zero,10018ae8 <__subdf3+0x214>
10018984:	84000044 	addi	r16,r16,1
10018988:	0081ffc4 	movi	r2,2047
1001898c:	8080be26 	beq	r16,r2,10018c88 <__subdf3+0x3b4>
10018990:	017fe034 	movhi	r5,65408
10018994:	297fffc4 	addi	r5,r5,-1
10018998:	1946703a 	and	r3,r3,r5
1001899c:	1804977a 	slli	r2,r3,29
100189a0:	1806927a 	slli	r3,r3,9
100189a4:	8822d0fa 	srli	r17,r17,3
100189a8:	8401ffcc 	andi	r16,r16,2047
100189ac:	180ad33a 	srli	r5,r3,12
100189b0:	9100004c 	andi	r4,r18,1
100189b4:	1444b03a 	or	r2,r2,r17
100189b8:	80c1ffcc 	andi	r3,r16,2047
100189bc:	1820953a 	slli	r16,r3,20
100189c0:	20c03fcc 	andi	r3,r4,255
100189c4:	180897fa 	slli	r4,r3,31
100189c8:	00c00434 	movhi	r3,16
100189cc:	18ffffc4 	addi	r3,r3,-1
100189d0:	28c6703a 	and	r3,r5,r3
100189d4:	1c06b03a 	or	r3,r3,r16
100189d8:	1906b03a 	or	r3,r3,r4
100189dc:	dfc00417 	ldw	ra,16(sp)
100189e0:	dcc00317 	ldw	r19,12(sp)
100189e4:	dc800217 	ldw	r18,8(sp)
100189e8:	dc400117 	ldw	r17,4(sp)
100189ec:	dc000017 	ldw	r16,0(sp)
100189f0:	dec00504 	addi	sp,sp,20
100189f4:	f800283a 	ret
100189f8:	0101ffc4 	movi	r4,2047
100189fc:	813fd626 	beq	r16,r4,10018958 <__alt_data_end+0xf8018958>
10018a00:	29402034 	orhi	r5,r5,128
10018a04:	01000e04 	movi	r4,56
10018a08:	2080a316 	blt	r4,r2,10018c98 <__subdf3+0x3c4>
10018a0c:	010007c4 	movi	r4,31
10018a10:	2080c616 	blt	r4,r2,10018d2c <__subdf3+0x458>
10018a14:	01000804 	movi	r4,32
10018a18:	2089c83a 	sub	r4,r4,r2
10018a1c:	2910983a 	sll	r8,r5,r4
10018a20:	308ed83a 	srl	r7,r6,r2
10018a24:	3108983a 	sll	r4,r6,r4
10018a28:	2884d83a 	srl	r2,r5,r2
10018a2c:	41ccb03a 	or	r6,r8,r7
10018a30:	2008c03a 	cmpne	r4,r4,zero
10018a34:	310cb03a 	or	r6,r6,r4
10018a38:	898dc83a 	sub	r6,r17,r6
10018a3c:	89a3803a 	cmpltu	r17,r17,r6
10018a40:	1887c83a 	sub	r3,r3,r2
10018a44:	1c47c83a 	sub	r3,r3,r17
10018a48:	3023883a 	mov	r17,r6
10018a4c:	1880202c 	andhi	r2,r3,128
10018a50:	10002326 	beq	r2,zero,10018ae0 <__subdf3+0x20c>
10018a54:	04c02034 	movhi	r19,128
10018a58:	9cffffc4 	addi	r19,r19,-1
10018a5c:	1ce6703a 	and	r19,r3,r19
10018a60:	98007a26 	beq	r19,zero,10018c4c <__subdf3+0x378>
10018a64:	9809883a 	mov	r4,r19
10018a68:	001957c0 	call	1001957c <__clzsi2>
10018a6c:	113ffe04 	addi	r4,r2,-8
10018a70:	00c007c4 	movi	r3,31
10018a74:	19007b16 	blt	r3,r4,10018c64 <__subdf3+0x390>
10018a78:	00800804 	movi	r2,32
10018a7c:	1105c83a 	sub	r2,r2,r4
10018a80:	8884d83a 	srl	r2,r17,r2
10018a84:	9906983a 	sll	r3,r19,r4
10018a88:	8922983a 	sll	r17,r17,r4
10018a8c:	10c4b03a 	or	r2,r2,r3
10018a90:	24007816 	blt	r4,r16,10018c74 <__subdf3+0x3a0>
10018a94:	2421c83a 	sub	r16,r4,r16
10018a98:	80c00044 	addi	r3,r16,1
10018a9c:	010007c4 	movi	r4,31
10018aa0:	20c09516 	blt	r4,r3,10018cf8 <__subdf3+0x424>
10018aa4:	01400804 	movi	r5,32
10018aa8:	28cbc83a 	sub	r5,r5,r3
10018aac:	88c8d83a 	srl	r4,r17,r3
10018ab0:	8962983a 	sll	r17,r17,r5
10018ab4:	114a983a 	sll	r5,r2,r5
10018ab8:	10c6d83a 	srl	r3,r2,r3
10018abc:	8804c03a 	cmpne	r2,r17,zero
10018ac0:	290ab03a 	or	r5,r5,r4
10018ac4:	28a2b03a 	or	r17,r5,r2
10018ac8:	0021883a 	mov	r16,zero
10018acc:	003fa206 	br	10018958 <__alt_data_end+0xf8018958>
10018ad0:	2090b03a 	or	r8,r4,r2
10018ad4:	40018e26 	beq	r8,zero,10019110 <__subdf3+0x83c>
10018ad8:	1007883a 	mov	r3,r2
10018adc:	2023883a 	mov	r17,r4
10018ae0:	888001cc 	andi	r2,r17,7
10018ae4:	103f9e1e 	bne	r2,zero,10018960 <__alt_data_end+0xf8018960>
10018ae8:	1804977a 	slli	r2,r3,29
10018aec:	8822d0fa 	srli	r17,r17,3
10018af0:	1810d0fa 	srli	r8,r3,3
10018af4:	9100004c 	andi	r4,r18,1
10018af8:	1444b03a 	or	r2,r2,r17
10018afc:	00c1ffc4 	movi	r3,2047
10018b00:	80c02826 	beq	r16,r3,10018ba4 <__subdf3+0x2d0>
10018b04:	01400434 	movhi	r5,16
10018b08:	297fffc4 	addi	r5,r5,-1
10018b0c:	80e0703a 	and	r16,r16,r3
10018b10:	414a703a 	and	r5,r8,r5
10018b14:	003fa806 	br	100189b8 <__alt_data_end+0xf80189b8>
10018b18:	0080630e 	bge	zero,r2,10018ca8 <__subdf3+0x3d4>
10018b1c:	48003026 	beq	r9,zero,10018be0 <__subdf3+0x30c>
10018b20:	0101ffc4 	movi	r4,2047
10018b24:	813f8c26 	beq	r16,r4,10018958 <__alt_data_end+0xf8018958>
10018b28:	29402034 	orhi	r5,r5,128
10018b2c:	01000e04 	movi	r4,56
10018b30:	2080a90e 	bge	r4,r2,10018dd8 <__subdf3+0x504>
10018b34:	298cb03a 	or	r6,r5,r6
10018b38:	3012c03a 	cmpne	r9,r6,zero
10018b3c:	0005883a 	mov	r2,zero
10018b40:	4c53883a 	add	r9,r9,r17
10018b44:	4c63803a 	cmpltu	r17,r9,r17
10018b48:	10c7883a 	add	r3,r2,r3
10018b4c:	88c7883a 	add	r3,r17,r3
10018b50:	4823883a 	mov	r17,r9
10018b54:	1880202c 	andhi	r2,r3,128
10018b58:	1000d026 	beq	r2,zero,10018e9c <__subdf3+0x5c8>
10018b5c:	84000044 	addi	r16,r16,1
10018b60:	0081ffc4 	movi	r2,2047
10018b64:	8080fe26 	beq	r16,r2,10018f60 <__subdf3+0x68c>
10018b68:	00bfe034 	movhi	r2,65408
10018b6c:	10bfffc4 	addi	r2,r2,-1
10018b70:	1886703a 	and	r3,r3,r2
10018b74:	880ad07a 	srli	r5,r17,1
10018b78:	180497fa 	slli	r2,r3,31
10018b7c:	8900004c 	andi	r4,r17,1
10018b80:	2922b03a 	or	r17,r5,r4
10018b84:	1806d07a 	srli	r3,r3,1
10018b88:	1462b03a 	or	r17,r2,r17
10018b8c:	3825883a 	mov	r18,r7
10018b90:	003f7106 	br	10018958 <__alt_data_end+0xf8018958>
10018b94:	2984b03a 	or	r2,r5,r6
10018b98:	103f6826 	beq	r2,zero,1001893c <__alt_data_end+0xf801893c>
10018b9c:	39c03fcc 	andi	r7,r7,255
10018ba0:	003f6706 	br	10018940 <__alt_data_end+0xf8018940>
10018ba4:	4086b03a 	or	r3,r8,r2
10018ba8:	18015226 	beq	r3,zero,100190f4 <__subdf3+0x820>
10018bac:	00c00434 	movhi	r3,16
10018bb0:	41400234 	orhi	r5,r8,8
10018bb4:	18ffffc4 	addi	r3,r3,-1
10018bb8:	28ca703a 	and	r5,r5,r3
10018bbc:	003f7e06 	br	100189b8 <__alt_data_end+0xf80189b8>
10018bc0:	10bfffc4 	addi	r2,r2,-1
10018bc4:	1000491e 	bne	r2,zero,10018cec <__subdf3+0x418>
10018bc8:	898fc83a 	sub	r7,r17,r6
10018bcc:	89e3803a 	cmpltu	r17,r17,r7
10018bd0:	1947c83a 	sub	r3,r3,r5
10018bd4:	1c47c83a 	sub	r3,r3,r17
10018bd8:	3823883a 	mov	r17,r7
10018bdc:	003f9b06 	br	10018a4c <__alt_data_end+0xf8018a4c>
10018be0:	2988b03a 	or	r4,r5,r6
10018be4:	203f5c26 	beq	r4,zero,10018958 <__alt_data_end+0xf8018958>
10018be8:	10bfffc4 	addi	r2,r2,-1
10018bec:	1000931e 	bne	r2,zero,10018e3c <__subdf3+0x568>
10018bf0:	898d883a 	add	r6,r17,r6
10018bf4:	3463803a 	cmpltu	r17,r6,r17
10018bf8:	1947883a 	add	r3,r3,r5
10018bfc:	88c7883a 	add	r3,r17,r3
10018c00:	3023883a 	mov	r17,r6
10018c04:	003fd306 	br	10018b54 <__alt_data_end+0xf8018b54>
10018c08:	1000541e 	bne	r2,zero,10018d5c <__subdf3+0x488>
10018c0c:	80800044 	addi	r2,r16,1
10018c10:	1081ffcc 	andi	r2,r2,2047
10018c14:	01000044 	movi	r4,1
10018c18:	2080a20e 	bge	r4,r2,10018ea4 <__subdf3+0x5d0>
10018c1c:	8989c83a 	sub	r4,r17,r6
10018c20:	8905803a 	cmpltu	r2,r17,r4
10018c24:	1967c83a 	sub	r19,r3,r5
10018c28:	98a7c83a 	sub	r19,r19,r2
10018c2c:	9880202c 	andhi	r2,r19,128
10018c30:	10006326 	beq	r2,zero,10018dc0 <__subdf3+0x4ec>
10018c34:	3463c83a 	sub	r17,r6,r17
10018c38:	28c7c83a 	sub	r3,r5,r3
10018c3c:	344d803a 	cmpltu	r6,r6,r17
10018c40:	19a7c83a 	sub	r19,r3,r6
10018c44:	3825883a 	mov	r18,r7
10018c48:	983f861e 	bne	r19,zero,10018a64 <__alt_data_end+0xf8018a64>
10018c4c:	8809883a 	mov	r4,r17
10018c50:	001957c0 	call	1001957c <__clzsi2>
10018c54:	10800804 	addi	r2,r2,32
10018c58:	113ffe04 	addi	r4,r2,-8
10018c5c:	00c007c4 	movi	r3,31
10018c60:	193f850e 	bge	r3,r4,10018a78 <__alt_data_end+0xf8018a78>
10018c64:	10bff604 	addi	r2,r2,-40
10018c68:	8884983a 	sll	r2,r17,r2
10018c6c:	0023883a 	mov	r17,zero
10018c70:	243f880e 	bge	r4,r16,10018a94 <__alt_data_end+0xf8018a94>
10018c74:	00ffe034 	movhi	r3,65408
10018c78:	18ffffc4 	addi	r3,r3,-1
10018c7c:	8121c83a 	sub	r16,r16,r4
10018c80:	10c6703a 	and	r3,r2,r3
10018c84:	003f3406 	br	10018958 <__alt_data_end+0xf8018958>
10018c88:	9100004c 	andi	r4,r18,1
10018c8c:	000b883a 	mov	r5,zero
10018c90:	0005883a 	mov	r2,zero
10018c94:	003f4806 	br	100189b8 <__alt_data_end+0xf80189b8>
10018c98:	298cb03a 	or	r6,r5,r6
10018c9c:	300cc03a 	cmpne	r6,r6,zero
10018ca0:	0005883a 	mov	r2,zero
10018ca4:	003f6406 	br	10018a38 <__alt_data_end+0xf8018a38>
10018ca8:	10009a1e 	bne	r2,zero,10018f14 <__subdf3+0x640>
10018cac:	82400044 	addi	r9,r16,1
10018cb0:	4881ffcc 	andi	r2,r9,2047
10018cb4:	02800044 	movi	r10,1
10018cb8:	5080670e 	bge	r10,r2,10018e58 <__subdf3+0x584>
10018cbc:	0081ffc4 	movi	r2,2047
10018cc0:	4880af26 	beq	r9,r2,10018f80 <__subdf3+0x6ac>
10018cc4:	898d883a 	add	r6,r17,r6
10018cc8:	1945883a 	add	r2,r3,r5
10018ccc:	3447803a 	cmpltu	r3,r6,r17
10018cd0:	1887883a 	add	r3,r3,r2
10018cd4:	182297fa 	slli	r17,r3,31
10018cd8:	300cd07a 	srli	r6,r6,1
10018cdc:	1806d07a 	srli	r3,r3,1
10018ce0:	4821883a 	mov	r16,r9
10018ce4:	89a2b03a 	or	r17,r17,r6
10018ce8:	003f1b06 	br	10018958 <__alt_data_end+0xf8018958>
10018cec:	0101ffc4 	movi	r4,2047
10018cf0:	813f441e 	bne	r16,r4,10018a04 <__alt_data_end+0xf8018a04>
10018cf4:	003f1806 	br	10018958 <__alt_data_end+0xf8018958>
10018cf8:	843ff844 	addi	r16,r16,-31
10018cfc:	01400804 	movi	r5,32
10018d00:	1408d83a 	srl	r4,r2,r16
10018d04:	19405026 	beq	r3,r5,10018e48 <__subdf3+0x574>
10018d08:	01401004 	movi	r5,64
10018d0c:	28c7c83a 	sub	r3,r5,r3
10018d10:	10c4983a 	sll	r2,r2,r3
10018d14:	88a2b03a 	or	r17,r17,r2
10018d18:	8822c03a 	cmpne	r17,r17,zero
10018d1c:	2462b03a 	or	r17,r4,r17
10018d20:	0007883a 	mov	r3,zero
10018d24:	0021883a 	mov	r16,zero
10018d28:	003f6d06 	br	10018ae0 <__alt_data_end+0xf8018ae0>
10018d2c:	11fff804 	addi	r7,r2,-32
10018d30:	01000804 	movi	r4,32
10018d34:	29ced83a 	srl	r7,r5,r7
10018d38:	11004526 	beq	r2,r4,10018e50 <__subdf3+0x57c>
10018d3c:	01001004 	movi	r4,64
10018d40:	2089c83a 	sub	r4,r4,r2
10018d44:	2904983a 	sll	r2,r5,r4
10018d48:	118cb03a 	or	r6,r2,r6
10018d4c:	300cc03a 	cmpne	r6,r6,zero
10018d50:	398cb03a 	or	r6,r7,r6
10018d54:	0005883a 	mov	r2,zero
10018d58:	003f3706 	br	10018a38 <__alt_data_end+0xf8018a38>
10018d5c:	80002a26 	beq	r16,zero,10018e08 <__subdf3+0x534>
10018d60:	0101ffc4 	movi	r4,2047
10018d64:	49006626 	beq	r9,r4,10018f00 <__subdf3+0x62c>
10018d68:	0085c83a 	sub	r2,zero,r2
10018d6c:	18c02034 	orhi	r3,r3,128
10018d70:	01000e04 	movi	r4,56
10018d74:	20807e16 	blt	r4,r2,10018f70 <__subdf3+0x69c>
10018d78:	010007c4 	movi	r4,31
10018d7c:	2080e716 	blt	r4,r2,1001911c <__subdf3+0x848>
10018d80:	01000804 	movi	r4,32
10018d84:	2089c83a 	sub	r4,r4,r2
10018d88:	1914983a 	sll	r10,r3,r4
10018d8c:	8890d83a 	srl	r8,r17,r2
10018d90:	8908983a 	sll	r4,r17,r4
10018d94:	1884d83a 	srl	r2,r3,r2
10018d98:	5222b03a 	or	r17,r10,r8
10018d9c:	2006c03a 	cmpne	r3,r4,zero
10018da0:	88e2b03a 	or	r17,r17,r3
10018da4:	3463c83a 	sub	r17,r6,r17
10018da8:	2885c83a 	sub	r2,r5,r2
10018dac:	344d803a 	cmpltu	r6,r6,r17
10018db0:	1187c83a 	sub	r3,r2,r6
10018db4:	4821883a 	mov	r16,r9
10018db8:	3825883a 	mov	r18,r7
10018dbc:	003f2306 	br	10018a4c <__alt_data_end+0xf8018a4c>
10018dc0:	24d0b03a 	or	r8,r4,r19
10018dc4:	40001b1e 	bne	r8,zero,10018e34 <__subdf3+0x560>
10018dc8:	0005883a 	mov	r2,zero
10018dcc:	0009883a 	mov	r4,zero
10018dd0:	0021883a 	mov	r16,zero
10018dd4:	003f4906 	br	10018afc <__alt_data_end+0xf8018afc>
10018dd8:	010007c4 	movi	r4,31
10018ddc:	20803a16 	blt	r4,r2,10018ec8 <__subdf3+0x5f4>
10018de0:	01000804 	movi	r4,32
10018de4:	2089c83a 	sub	r4,r4,r2
10018de8:	2912983a 	sll	r9,r5,r4
10018dec:	3090d83a 	srl	r8,r6,r2
10018df0:	3108983a 	sll	r4,r6,r4
10018df4:	2884d83a 	srl	r2,r5,r2
10018df8:	4a12b03a 	or	r9,r9,r8
10018dfc:	2008c03a 	cmpne	r4,r4,zero
10018e00:	4912b03a 	or	r9,r9,r4
10018e04:	003f4e06 	br	10018b40 <__alt_data_end+0xf8018b40>
10018e08:	1c48b03a 	or	r4,r3,r17
10018e0c:	20003c26 	beq	r4,zero,10018f00 <__subdf3+0x62c>
10018e10:	0084303a 	nor	r2,zero,r2
10018e14:	1000381e 	bne	r2,zero,10018ef8 <__subdf3+0x624>
10018e18:	3463c83a 	sub	r17,r6,r17
10018e1c:	28c5c83a 	sub	r2,r5,r3
10018e20:	344d803a 	cmpltu	r6,r6,r17
10018e24:	1187c83a 	sub	r3,r2,r6
10018e28:	4821883a 	mov	r16,r9
10018e2c:	3825883a 	mov	r18,r7
10018e30:	003f0606 	br	10018a4c <__alt_data_end+0xf8018a4c>
10018e34:	2023883a 	mov	r17,r4
10018e38:	003f0906 	br	10018a60 <__alt_data_end+0xf8018a60>
10018e3c:	0101ffc4 	movi	r4,2047
10018e40:	813f3a1e 	bne	r16,r4,10018b2c <__alt_data_end+0xf8018b2c>
10018e44:	003ec406 	br	10018958 <__alt_data_end+0xf8018958>
10018e48:	0005883a 	mov	r2,zero
10018e4c:	003fb106 	br	10018d14 <__alt_data_end+0xf8018d14>
10018e50:	0005883a 	mov	r2,zero
10018e54:	003fbc06 	br	10018d48 <__alt_data_end+0xf8018d48>
10018e58:	1c44b03a 	or	r2,r3,r17
10018e5c:	80008e1e 	bne	r16,zero,10019098 <__subdf3+0x7c4>
10018e60:	1000c826 	beq	r2,zero,10019184 <__subdf3+0x8b0>
10018e64:	2984b03a 	or	r2,r5,r6
10018e68:	103ebb26 	beq	r2,zero,10018958 <__alt_data_end+0xf8018958>
10018e6c:	8989883a 	add	r4,r17,r6
10018e70:	1945883a 	add	r2,r3,r5
10018e74:	2447803a 	cmpltu	r3,r4,r17
10018e78:	1887883a 	add	r3,r3,r2
10018e7c:	1880202c 	andhi	r2,r3,128
10018e80:	2023883a 	mov	r17,r4
10018e84:	103f1626 	beq	r2,zero,10018ae0 <__alt_data_end+0xf8018ae0>
10018e88:	00bfe034 	movhi	r2,65408
10018e8c:	10bfffc4 	addi	r2,r2,-1
10018e90:	5021883a 	mov	r16,r10
10018e94:	1886703a 	and	r3,r3,r2
10018e98:	003eaf06 	br	10018958 <__alt_data_end+0xf8018958>
10018e9c:	3825883a 	mov	r18,r7
10018ea0:	003f0f06 	br	10018ae0 <__alt_data_end+0xf8018ae0>
10018ea4:	1c44b03a 	or	r2,r3,r17
10018ea8:	8000251e 	bne	r16,zero,10018f40 <__subdf3+0x66c>
10018eac:	1000661e 	bne	r2,zero,10019048 <__subdf3+0x774>
10018eb0:	2990b03a 	or	r8,r5,r6
10018eb4:	40009626 	beq	r8,zero,10019110 <__subdf3+0x83c>
10018eb8:	2807883a 	mov	r3,r5
10018ebc:	3023883a 	mov	r17,r6
10018ec0:	3825883a 	mov	r18,r7
10018ec4:	003ea406 	br	10018958 <__alt_data_end+0xf8018958>
10018ec8:	127ff804 	addi	r9,r2,-32
10018ecc:	01000804 	movi	r4,32
10018ed0:	2a52d83a 	srl	r9,r5,r9
10018ed4:	11008c26 	beq	r2,r4,10019108 <__subdf3+0x834>
10018ed8:	01001004 	movi	r4,64
10018edc:	2085c83a 	sub	r2,r4,r2
10018ee0:	2884983a 	sll	r2,r5,r2
10018ee4:	118cb03a 	or	r6,r2,r6
10018ee8:	300cc03a 	cmpne	r6,r6,zero
10018eec:	4992b03a 	or	r9,r9,r6
10018ef0:	0005883a 	mov	r2,zero
10018ef4:	003f1206 	br	10018b40 <__alt_data_end+0xf8018b40>
10018ef8:	0101ffc4 	movi	r4,2047
10018efc:	493f9c1e 	bne	r9,r4,10018d70 <__alt_data_end+0xf8018d70>
10018f00:	2807883a 	mov	r3,r5
10018f04:	3023883a 	mov	r17,r6
10018f08:	4821883a 	mov	r16,r9
10018f0c:	3825883a 	mov	r18,r7
10018f10:	003e9106 	br	10018958 <__alt_data_end+0xf8018958>
10018f14:	80001f1e 	bne	r16,zero,10018f94 <__subdf3+0x6c0>
10018f18:	1c48b03a 	or	r4,r3,r17
10018f1c:	20005a26 	beq	r4,zero,10019088 <__subdf3+0x7b4>
10018f20:	0084303a 	nor	r2,zero,r2
10018f24:	1000561e 	bne	r2,zero,10019080 <__subdf3+0x7ac>
10018f28:	89a3883a 	add	r17,r17,r6
10018f2c:	1945883a 	add	r2,r3,r5
10018f30:	898d803a 	cmpltu	r6,r17,r6
10018f34:	3087883a 	add	r3,r6,r2
10018f38:	4821883a 	mov	r16,r9
10018f3c:	003f0506 	br	10018b54 <__alt_data_end+0xf8018b54>
10018f40:	10002b1e 	bne	r2,zero,10018ff0 <__subdf3+0x71c>
10018f44:	2984b03a 	or	r2,r5,r6
10018f48:	10008026 	beq	r2,zero,1001914c <__subdf3+0x878>
10018f4c:	2807883a 	mov	r3,r5
10018f50:	3023883a 	mov	r17,r6
10018f54:	3825883a 	mov	r18,r7
10018f58:	0401ffc4 	movi	r16,2047
10018f5c:	003e7e06 	br	10018958 <__alt_data_end+0xf8018958>
10018f60:	3809883a 	mov	r4,r7
10018f64:	0011883a 	mov	r8,zero
10018f68:	0005883a 	mov	r2,zero
10018f6c:	003ee306 	br	10018afc <__alt_data_end+0xf8018afc>
10018f70:	1c62b03a 	or	r17,r3,r17
10018f74:	8822c03a 	cmpne	r17,r17,zero
10018f78:	0005883a 	mov	r2,zero
10018f7c:	003f8906 	br	10018da4 <__alt_data_end+0xf8018da4>
10018f80:	3809883a 	mov	r4,r7
10018f84:	4821883a 	mov	r16,r9
10018f88:	0011883a 	mov	r8,zero
10018f8c:	0005883a 	mov	r2,zero
10018f90:	003eda06 	br	10018afc <__alt_data_end+0xf8018afc>
10018f94:	0101ffc4 	movi	r4,2047
10018f98:	49003b26 	beq	r9,r4,10019088 <__subdf3+0x7b4>
10018f9c:	0085c83a 	sub	r2,zero,r2
10018fa0:	18c02034 	orhi	r3,r3,128
10018fa4:	01000e04 	movi	r4,56
10018fa8:	20806e16 	blt	r4,r2,10019164 <__subdf3+0x890>
10018fac:	010007c4 	movi	r4,31
10018fb0:	20807716 	blt	r4,r2,10019190 <__subdf3+0x8bc>
10018fb4:	01000804 	movi	r4,32
10018fb8:	2089c83a 	sub	r4,r4,r2
10018fbc:	1914983a 	sll	r10,r3,r4
10018fc0:	8890d83a 	srl	r8,r17,r2
10018fc4:	8908983a 	sll	r4,r17,r4
10018fc8:	1884d83a 	srl	r2,r3,r2
10018fcc:	5222b03a 	or	r17,r10,r8
10018fd0:	2006c03a 	cmpne	r3,r4,zero
10018fd4:	88e2b03a 	or	r17,r17,r3
10018fd8:	89a3883a 	add	r17,r17,r6
10018fdc:	1145883a 	add	r2,r2,r5
10018fe0:	898d803a 	cmpltu	r6,r17,r6
10018fe4:	3087883a 	add	r3,r6,r2
10018fe8:	4821883a 	mov	r16,r9
10018fec:	003ed906 	br	10018b54 <__alt_data_end+0xf8018b54>
10018ff0:	2984b03a 	or	r2,r5,r6
10018ff4:	10004226 	beq	r2,zero,10019100 <__subdf3+0x82c>
10018ff8:	1808d0fa 	srli	r4,r3,3
10018ffc:	8822d0fa 	srli	r17,r17,3
10019000:	1806977a 	slli	r3,r3,29
10019004:	2080022c 	andhi	r2,r4,8
10019008:	1c62b03a 	or	r17,r3,r17
1001900c:	10000826 	beq	r2,zero,10019030 <__subdf3+0x75c>
10019010:	2812d0fa 	srli	r9,r5,3
10019014:	4880022c 	andhi	r2,r9,8
10019018:	1000051e 	bne	r2,zero,10019030 <__subdf3+0x75c>
1001901c:	300cd0fa 	srli	r6,r6,3
10019020:	2804977a 	slli	r2,r5,29
10019024:	4809883a 	mov	r4,r9
10019028:	3825883a 	mov	r18,r7
1001902c:	11a2b03a 	or	r17,r2,r6
10019030:	8806d77a 	srli	r3,r17,29
10019034:	200890fa 	slli	r4,r4,3
10019038:	882290fa 	slli	r17,r17,3
1001903c:	0401ffc4 	movi	r16,2047
10019040:	1906b03a 	or	r3,r3,r4
10019044:	003e4406 	br	10018958 <__alt_data_end+0xf8018958>
10019048:	2984b03a 	or	r2,r5,r6
1001904c:	103e4226 	beq	r2,zero,10018958 <__alt_data_end+0xf8018958>
10019050:	8989c83a 	sub	r4,r17,r6
10019054:	8911803a 	cmpltu	r8,r17,r4
10019058:	1945c83a 	sub	r2,r3,r5
1001905c:	1205c83a 	sub	r2,r2,r8
10019060:	1200202c 	andhi	r8,r2,128
10019064:	403e9a26 	beq	r8,zero,10018ad0 <__alt_data_end+0xf8018ad0>
10019068:	3463c83a 	sub	r17,r6,r17
1001906c:	28c5c83a 	sub	r2,r5,r3
10019070:	344d803a 	cmpltu	r6,r6,r17
10019074:	1187c83a 	sub	r3,r2,r6
10019078:	3825883a 	mov	r18,r7
1001907c:	003e3606 	br	10018958 <__alt_data_end+0xf8018958>
10019080:	0101ffc4 	movi	r4,2047
10019084:	493fc71e 	bne	r9,r4,10018fa4 <__alt_data_end+0xf8018fa4>
10019088:	2807883a 	mov	r3,r5
1001908c:	3023883a 	mov	r17,r6
10019090:	4821883a 	mov	r16,r9
10019094:	003e3006 	br	10018958 <__alt_data_end+0xf8018958>
10019098:	10003626 	beq	r2,zero,10019174 <__subdf3+0x8a0>
1001909c:	2984b03a 	or	r2,r5,r6
100190a0:	10001726 	beq	r2,zero,10019100 <__subdf3+0x82c>
100190a4:	1808d0fa 	srli	r4,r3,3
100190a8:	8822d0fa 	srli	r17,r17,3
100190ac:	1806977a 	slli	r3,r3,29
100190b0:	2080022c 	andhi	r2,r4,8
100190b4:	1c62b03a 	or	r17,r3,r17
100190b8:	10000726 	beq	r2,zero,100190d8 <__subdf3+0x804>
100190bc:	2812d0fa 	srli	r9,r5,3
100190c0:	4880022c 	andhi	r2,r9,8
100190c4:	1000041e 	bne	r2,zero,100190d8 <__subdf3+0x804>
100190c8:	300cd0fa 	srli	r6,r6,3
100190cc:	2804977a 	slli	r2,r5,29
100190d0:	4809883a 	mov	r4,r9
100190d4:	11a2b03a 	or	r17,r2,r6
100190d8:	8806d77a 	srli	r3,r17,29
100190dc:	200890fa 	slli	r4,r4,3
100190e0:	882290fa 	slli	r17,r17,3
100190e4:	3825883a 	mov	r18,r7
100190e8:	1906b03a 	or	r3,r3,r4
100190ec:	0401ffc4 	movi	r16,2047
100190f0:	003e1906 	br	10018958 <__alt_data_end+0xf8018958>
100190f4:	000b883a 	mov	r5,zero
100190f8:	0005883a 	mov	r2,zero
100190fc:	003e2e06 	br	100189b8 <__alt_data_end+0xf80189b8>
10019100:	0401ffc4 	movi	r16,2047
10019104:	003e1406 	br	10018958 <__alt_data_end+0xf8018958>
10019108:	0005883a 	mov	r2,zero
1001910c:	003f7506 	br	10018ee4 <__alt_data_end+0xf8018ee4>
10019110:	0005883a 	mov	r2,zero
10019114:	0009883a 	mov	r4,zero
10019118:	003e7806 	br	10018afc <__alt_data_end+0xf8018afc>
1001911c:	123ff804 	addi	r8,r2,-32
10019120:	01000804 	movi	r4,32
10019124:	1a10d83a 	srl	r8,r3,r8
10019128:	11002526 	beq	r2,r4,100191c0 <__subdf3+0x8ec>
1001912c:	01001004 	movi	r4,64
10019130:	2085c83a 	sub	r2,r4,r2
10019134:	1884983a 	sll	r2,r3,r2
10019138:	1444b03a 	or	r2,r2,r17
1001913c:	1004c03a 	cmpne	r2,r2,zero
10019140:	40a2b03a 	or	r17,r8,r2
10019144:	0005883a 	mov	r2,zero
10019148:	003f1606 	br	10018da4 <__alt_data_end+0xf8018da4>
1001914c:	02000434 	movhi	r8,16
10019150:	0009883a 	mov	r4,zero
10019154:	423fffc4 	addi	r8,r8,-1
10019158:	00bfffc4 	movi	r2,-1
1001915c:	0401ffc4 	movi	r16,2047
10019160:	003e6606 	br	10018afc <__alt_data_end+0xf8018afc>
10019164:	1c62b03a 	or	r17,r3,r17
10019168:	8822c03a 	cmpne	r17,r17,zero
1001916c:	0005883a 	mov	r2,zero
10019170:	003f9906 	br	10018fd8 <__alt_data_end+0xf8018fd8>
10019174:	2807883a 	mov	r3,r5
10019178:	3023883a 	mov	r17,r6
1001917c:	0401ffc4 	movi	r16,2047
10019180:	003df506 	br	10018958 <__alt_data_end+0xf8018958>
10019184:	2807883a 	mov	r3,r5
10019188:	3023883a 	mov	r17,r6
1001918c:	003df206 	br	10018958 <__alt_data_end+0xf8018958>
10019190:	123ff804 	addi	r8,r2,-32
10019194:	01000804 	movi	r4,32
10019198:	1a10d83a 	srl	r8,r3,r8
1001919c:	11000a26 	beq	r2,r4,100191c8 <__subdf3+0x8f4>
100191a0:	01001004 	movi	r4,64
100191a4:	2085c83a 	sub	r2,r4,r2
100191a8:	1884983a 	sll	r2,r3,r2
100191ac:	1444b03a 	or	r2,r2,r17
100191b0:	1004c03a 	cmpne	r2,r2,zero
100191b4:	40a2b03a 	or	r17,r8,r2
100191b8:	0005883a 	mov	r2,zero
100191bc:	003f8606 	br	10018fd8 <__alt_data_end+0xf8018fd8>
100191c0:	0005883a 	mov	r2,zero
100191c4:	003fdc06 	br	10019138 <__alt_data_end+0xf8019138>
100191c8:	0005883a 	mov	r2,zero
100191cc:	003ff706 	br	100191ac <__alt_data_end+0xf80191ac>

100191d0 <__fixdfsi>:
100191d0:	280cd53a 	srli	r6,r5,20
100191d4:	00c00434 	movhi	r3,16
100191d8:	18ffffc4 	addi	r3,r3,-1
100191dc:	3181ffcc 	andi	r6,r6,2047
100191e0:	01c0ff84 	movi	r7,1022
100191e4:	28c6703a 	and	r3,r5,r3
100191e8:	280ad7fa 	srli	r5,r5,31
100191ec:	3980120e 	bge	r7,r6,10019238 <__fixdfsi+0x68>
100191f0:	00810744 	movi	r2,1053
100191f4:	11800c16 	blt	r2,r6,10019228 <__fixdfsi+0x58>
100191f8:	00810cc4 	movi	r2,1075
100191fc:	1185c83a 	sub	r2,r2,r6
10019200:	01c007c4 	movi	r7,31
10019204:	18c00434 	orhi	r3,r3,16
10019208:	38800d16 	blt	r7,r2,10019240 <__fixdfsi+0x70>
1001920c:	31befb44 	addi	r6,r6,-1043
10019210:	2084d83a 	srl	r2,r4,r2
10019214:	1986983a 	sll	r3,r3,r6
10019218:	1884b03a 	or	r2,r3,r2
1001921c:	28000726 	beq	r5,zero,1001923c <__fixdfsi+0x6c>
10019220:	0085c83a 	sub	r2,zero,r2
10019224:	f800283a 	ret
10019228:	00a00034 	movhi	r2,32768
1001922c:	10bfffc4 	addi	r2,r2,-1
10019230:	2885883a 	add	r2,r5,r2
10019234:	f800283a 	ret
10019238:	0005883a 	mov	r2,zero
1001923c:	f800283a 	ret
10019240:	008104c4 	movi	r2,1043
10019244:	1185c83a 	sub	r2,r2,r6
10019248:	1884d83a 	srl	r2,r3,r2
1001924c:	003ff306 	br	1001921c <__alt_data_end+0xf801921c>

10019250 <__floatsidf>:
10019250:	defffd04 	addi	sp,sp,-12
10019254:	dfc00215 	stw	ra,8(sp)
10019258:	dc400115 	stw	r17,4(sp)
1001925c:	dc000015 	stw	r16,0(sp)
10019260:	20002b26 	beq	r4,zero,10019310 <__floatsidf+0xc0>
10019264:	2023883a 	mov	r17,r4
10019268:	2020d7fa 	srli	r16,r4,31
1001926c:	20002d16 	blt	r4,zero,10019324 <__floatsidf+0xd4>
10019270:	8809883a 	mov	r4,r17
10019274:	001957c0 	call	1001957c <__clzsi2>
10019278:	01410784 	movi	r5,1054
1001927c:	288bc83a 	sub	r5,r5,r2
10019280:	01010cc4 	movi	r4,1075
10019284:	2149c83a 	sub	r4,r4,r5
10019288:	00c007c4 	movi	r3,31
1001928c:	1900160e 	bge	r3,r4,100192e8 <__floatsidf+0x98>
10019290:	00c104c4 	movi	r3,1043
10019294:	1947c83a 	sub	r3,r3,r5
10019298:	88c6983a 	sll	r3,r17,r3
1001929c:	00800434 	movhi	r2,16
100192a0:	10bfffc4 	addi	r2,r2,-1
100192a4:	1886703a 	and	r3,r3,r2
100192a8:	2941ffcc 	andi	r5,r5,2047
100192ac:	800d883a 	mov	r6,r16
100192b0:	0005883a 	mov	r2,zero
100192b4:	280a953a 	slli	r5,r5,20
100192b8:	31803fcc 	andi	r6,r6,255
100192bc:	01000434 	movhi	r4,16
100192c0:	300c97fa 	slli	r6,r6,31
100192c4:	213fffc4 	addi	r4,r4,-1
100192c8:	1906703a 	and	r3,r3,r4
100192cc:	1946b03a 	or	r3,r3,r5
100192d0:	1986b03a 	or	r3,r3,r6
100192d4:	dfc00217 	ldw	ra,8(sp)
100192d8:	dc400117 	ldw	r17,4(sp)
100192dc:	dc000017 	ldw	r16,0(sp)
100192e0:	dec00304 	addi	sp,sp,12
100192e4:	f800283a 	ret
100192e8:	00c002c4 	movi	r3,11
100192ec:	1887c83a 	sub	r3,r3,r2
100192f0:	88c6d83a 	srl	r3,r17,r3
100192f4:	8904983a 	sll	r2,r17,r4
100192f8:	01000434 	movhi	r4,16
100192fc:	213fffc4 	addi	r4,r4,-1
10019300:	2941ffcc 	andi	r5,r5,2047
10019304:	1906703a 	and	r3,r3,r4
10019308:	800d883a 	mov	r6,r16
1001930c:	003fe906 	br	100192b4 <__alt_data_end+0xf80192b4>
10019310:	000d883a 	mov	r6,zero
10019314:	000b883a 	mov	r5,zero
10019318:	0007883a 	mov	r3,zero
1001931c:	0005883a 	mov	r2,zero
10019320:	003fe406 	br	100192b4 <__alt_data_end+0xf80192b4>
10019324:	0123c83a 	sub	r17,zero,r4
10019328:	003fd106 	br	10019270 <__alt_data_end+0xf8019270>

1001932c <__floatunsidf>:
1001932c:	defffe04 	addi	sp,sp,-8
10019330:	dc000015 	stw	r16,0(sp)
10019334:	dfc00115 	stw	ra,4(sp)
10019338:	2021883a 	mov	r16,r4
1001933c:	20002226 	beq	r4,zero,100193c8 <__floatunsidf+0x9c>
10019340:	001957c0 	call	1001957c <__clzsi2>
10019344:	01010784 	movi	r4,1054
10019348:	2089c83a 	sub	r4,r4,r2
1001934c:	01810cc4 	movi	r6,1075
10019350:	310dc83a 	sub	r6,r6,r4
10019354:	00c007c4 	movi	r3,31
10019358:	1980120e 	bge	r3,r6,100193a4 <__floatunsidf+0x78>
1001935c:	00c104c4 	movi	r3,1043
10019360:	1907c83a 	sub	r3,r3,r4
10019364:	80ca983a 	sll	r5,r16,r3
10019368:	00800434 	movhi	r2,16
1001936c:	10bfffc4 	addi	r2,r2,-1
10019370:	2101ffcc 	andi	r4,r4,2047
10019374:	0021883a 	mov	r16,zero
10019378:	288a703a 	and	r5,r5,r2
1001937c:	2008953a 	slli	r4,r4,20
10019380:	00c00434 	movhi	r3,16
10019384:	18ffffc4 	addi	r3,r3,-1
10019388:	28c6703a 	and	r3,r5,r3
1001938c:	8005883a 	mov	r2,r16
10019390:	1906b03a 	or	r3,r3,r4
10019394:	dfc00117 	ldw	ra,4(sp)
10019398:	dc000017 	ldw	r16,0(sp)
1001939c:	dec00204 	addi	sp,sp,8
100193a0:	f800283a 	ret
100193a4:	00c002c4 	movi	r3,11
100193a8:	188bc83a 	sub	r5,r3,r2
100193ac:	814ad83a 	srl	r5,r16,r5
100193b0:	00c00434 	movhi	r3,16
100193b4:	18ffffc4 	addi	r3,r3,-1
100193b8:	81a0983a 	sll	r16,r16,r6
100193bc:	2101ffcc 	andi	r4,r4,2047
100193c0:	28ca703a 	and	r5,r5,r3
100193c4:	003fed06 	br	1001937c <__alt_data_end+0xf801937c>
100193c8:	0009883a 	mov	r4,zero
100193cc:	000b883a 	mov	r5,zero
100193d0:	003fea06 	br	1001937c <__alt_data_end+0xf801937c>

100193d4 <__truncdfsf2>:
100193d4:	2810d53a 	srli	r8,r5,20
100193d8:	01c00434 	movhi	r7,16
100193dc:	39ffffc4 	addi	r7,r7,-1
100193e0:	29ce703a 	and	r7,r5,r7
100193e4:	4201ffcc 	andi	r8,r8,2047
100193e8:	380e90fa 	slli	r7,r7,3
100193ec:	200cd77a 	srli	r6,r4,29
100193f0:	42400044 	addi	r9,r8,1
100193f4:	4a41ffcc 	andi	r9,r9,2047
100193f8:	00c00044 	movi	r3,1
100193fc:	280ad7fa 	srli	r5,r5,31
10019400:	31ceb03a 	or	r7,r6,r7
10019404:	200490fa 	slli	r2,r4,3
10019408:	1a40230e 	bge	r3,r9,10019498 <__truncdfsf2+0xc4>
1001940c:	40ff2004 	addi	r3,r8,-896
10019410:	01803f84 	movi	r6,254
10019414:	30c01516 	blt	r6,r3,1001946c <__truncdfsf2+0x98>
10019418:	00c0380e 	bge	zero,r3,100194fc <__truncdfsf2+0x128>
1001941c:	200c91ba 	slli	r6,r4,6
10019420:	380e90fa 	slli	r7,r7,3
10019424:	1004d77a 	srli	r2,r2,29
10019428:	300cc03a 	cmpne	r6,r6,zero
1001942c:	31ccb03a 	or	r6,r6,r7
10019430:	308cb03a 	or	r6,r6,r2
10019434:	308001cc 	andi	r2,r6,7
10019438:	10000426 	beq	r2,zero,1001944c <__truncdfsf2+0x78>
1001943c:	308003cc 	andi	r2,r6,15
10019440:	01000104 	movi	r4,4
10019444:	11000126 	beq	r2,r4,1001944c <__truncdfsf2+0x78>
10019448:	31800104 	addi	r6,r6,4
1001944c:	3081002c 	andhi	r2,r6,1024
10019450:	10001626 	beq	r2,zero,100194ac <__truncdfsf2+0xd8>
10019454:	18c00044 	addi	r3,r3,1
10019458:	00803fc4 	movi	r2,255
1001945c:	18800326 	beq	r3,r2,1001946c <__truncdfsf2+0x98>
10019460:	300c91ba 	slli	r6,r6,6
10019464:	300cd27a 	srli	r6,r6,9
10019468:	00000206 	br	10019474 <__truncdfsf2+0xa0>
1001946c:	00ffffc4 	movi	r3,-1
10019470:	000d883a 	mov	r6,zero
10019474:	18c03fcc 	andi	r3,r3,255
10019478:	180895fa 	slli	r4,r3,23
1001947c:	00c02034 	movhi	r3,128
10019480:	280a97fa 	slli	r5,r5,31
10019484:	18ffffc4 	addi	r3,r3,-1
10019488:	30c6703a 	and	r3,r6,r3
1001948c:	1906b03a 	or	r3,r3,r4
10019490:	1944b03a 	or	r2,r3,r5
10019494:	f800283a 	ret
10019498:	40000b1e 	bne	r8,zero,100194c8 <__truncdfsf2+0xf4>
1001949c:	388cb03a 	or	r6,r7,r2
100194a0:	0007883a 	mov	r3,zero
100194a4:	30000426 	beq	r6,zero,100194b8 <__truncdfsf2+0xe4>
100194a8:	01800144 	movi	r6,5
100194ac:	00803fc4 	movi	r2,255
100194b0:	300cd0fa 	srli	r6,r6,3
100194b4:	18800a26 	beq	r3,r2,100194e0 <__truncdfsf2+0x10c>
100194b8:	00802034 	movhi	r2,128
100194bc:	10bfffc4 	addi	r2,r2,-1
100194c0:	308c703a 	and	r6,r6,r2
100194c4:	003feb06 	br	10019474 <__alt_data_end+0xf8019474>
100194c8:	3888b03a 	or	r4,r7,r2
100194cc:	203fe726 	beq	r4,zero,1001946c <__alt_data_end+0xf801946c>
100194d0:	380c90fa 	slli	r6,r7,3
100194d4:	00c03fc4 	movi	r3,255
100194d8:	31808034 	orhi	r6,r6,512
100194dc:	003fd506 	br	10019434 <__alt_data_end+0xf8019434>
100194e0:	303fe226 	beq	r6,zero,1001946c <__alt_data_end+0xf801946c>
100194e4:	00802034 	movhi	r2,128
100194e8:	31801034 	orhi	r6,r6,64
100194ec:	10bfffc4 	addi	r2,r2,-1
100194f0:	00ffffc4 	movi	r3,-1
100194f4:	308c703a 	and	r6,r6,r2
100194f8:	003fde06 	br	10019474 <__alt_data_end+0xf8019474>
100194fc:	013ffa44 	movi	r4,-23
10019500:	19000e16 	blt	r3,r4,1001953c <__truncdfsf2+0x168>
10019504:	01000784 	movi	r4,30
10019508:	20c9c83a 	sub	r4,r4,r3
1001950c:	018007c4 	movi	r6,31
10019510:	39c02034 	orhi	r7,r7,128
10019514:	31000b16 	blt	r6,r4,10019544 <__truncdfsf2+0x170>
10019518:	423f2084 	addi	r8,r8,-894
1001951c:	120c983a 	sll	r6,r2,r8
10019520:	3a0e983a 	sll	r7,r7,r8
10019524:	1104d83a 	srl	r2,r2,r4
10019528:	300cc03a 	cmpne	r6,r6,zero
1001952c:	31ceb03a 	or	r7,r6,r7
10019530:	388cb03a 	or	r6,r7,r2
10019534:	0007883a 	mov	r3,zero
10019538:	003fbe06 	br	10019434 <__alt_data_end+0xf8019434>
1001953c:	0007883a 	mov	r3,zero
10019540:	003fd906 	br	100194a8 <__alt_data_end+0xf80194a8>
10019544:	01bfff84 	movi	r6,-2
10019548:	30cdc83a 	sub	r6,r6,r3
1001954c:	00c00804 	movi	r3,32
10019550:	398cd83a 	srl	r6,r7,r6
10019554:	20c00726 	beq	r4,r3,10019574 <__truncdfsf2+0x1a0>
10019558:	423f2884 	addi	r8,r8,-862
1001955c:	3a0e983a 	sll	r7,r7,r8
10019560:	3884b03a 	or	r2,r7,r2
10019564:	1004c03a 	cmpne	r2,r2,zero
10019568:	118cb03a 	or	r6,r2,r6
1001956c:	0007883a 	mov	r3,zero
10019570:	003fb006 	br	10019434 <__alt_data_end+0xf8019434>
10019574:	000f883a 	mov	r7,zero
10019578:	003ff906 	br	10019560 <__alt_data_end+0xf8019560>

1001957c <__clzsi2>:
1001957c:	00bfffd4 	movui	r2,65535
10019580:	11000536 	bltu	r2,r4,10019598 <__clzsi2+0x1c>
10019584:	00803fc4 	movi	r2,255
10019588:	11000f36 	bltu	r2,r4,100195c8 <__clzsi2+0x4c>
1001958c:	00800804 	movi	r2,32
10019590:	0007883a 	mov	r3,zero
10019594:	00000506 	br	100195ac <__clzsi2+0x30>
10019598:	00804034 	movhi	r2,256
1001959c:	10bfffc4 	addi	r2,r2,-1
100195a0:	11000c2e 	bgeu	r2,r4,100195d4 <__clzsi2+0x58>
100195a4:	00800204 	movi	r2,8
100195a8:	00c00604 	movi	r3,24
100195ac:	20c8d83a 	srl	r4,r4,r3
100195b0:	00c400b4 	movhi	r3,4098
100195b4:	18f32804 	addi	r3,r3,-13152
100195b8:	1909883a 	add	r4,r3,r4
100195bc:	20c00003 	ldbu	r3,0(r4)
100195c0:	10c5c83a 	sub	r2,r2,r3
100195c4:	f800283a 	ret
100195c8:	00800604 	movi	r2,24
100195cc:	00c00204 	movi	r3,8
100195d0:	003ff606 	br	100195ac <__alt_data_end+0xf80195ac>
100195d4:	00800404 	movi	r2,16
100195d8:	1007883a 	mov	r3,r2
100195dc:	003ff306 	br	100195ac <__alt_data_end+0xf80195ac>

100195e0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
100195e0:	defffe04 	addi	sp,sp,-8
100195e4:	dfc00115 	stw	ra,4(sp)
100195e8:	df000015 	stw	fp,0(sp)
100195ec:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
100195f0:	d0a00e17 	ldw	r2,-32712(gp)
100195f4:	10000326 	beq	r2,zero,10019604 <alt_get_errno+0x24>
100195f8:	d0a00e17 	ldw	r2,-32712(gp)
100195fc:	103ee83a 	callr	r2
10019600:	00000106 	br	10019608 <alt_get_errno+0x28>
10019604:	d0a6d504 	addi	r2,gp,-25772
}
10019608:	e037883a 	mov	sp,fp
1001960c:	dfc00117 	ldw	ra,4(sp)
10019610:	df000017 	ldw	fp,0(sp)
10019614:	dec00204 	addi	sp,sp,8
10019618:	f800283a 	ret

1001961c <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
1001961c:	defffb04 	addi	sp,sp,-20
10019620:	dfc00415 	stw	ra,16(sp)
10019624:	df000315 	stw	fp,12(sp)
10019628:	df000304 	addi	fp,sp,12
1001962c:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
10019630:	e0bfff17 	ldw	r2,-4(fp)
10019634:	10000816 	blt	r2,zero,10019658 <close+0x3c>
10019638:	01400304 	movi	r5,12
1001963c:	e13fff17 	ldw	r4,-4(fp)
10019640:	00034380 	call	10003438 <__mulsi3>
10019644:	1007883a 	mov	r3,r2
10019648:	008400b4 	movhi	r2,4098
1001964c:	10b5a804 	addi	r2,r2,-10592
10019650:	1885883a 	add	r2,r3,r2
10019654:	00000106 	br	1001965c <close+0x40>
10019658:	0005883a 	mov	r2,zero
1001965c:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
10019660:	e0bffd17 	ldw	r2,-12(fp)
10019664:	10001926 	beq	r2,zero,100196cc <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
10019668:	e0bffd17 	ldw	r2,-12(fp)
1001966c:	10800017 	ldw	r2,0(r2)
10019670:	10800417 	ldw	r2,16(r2)
10019674:	10000626 	beq	r2,zero,10019690 <close+0x74>
10019678:	e0bffd17 	ldw	r2,-12(fp)
1001967c:	10800017 	ldw	r2,0(r2)
10019680:	10800417 	ldw	r2,16(r2)
10019684:	e13ffd17 	ldw	r4,-12(fp)
10019688:	103ee83a 	callr	r2
1001968c:	00000106 	br	10019694 <close+0x78>
10019690:	0005883a 	mov	r2,zero
10019694:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
10019698:	e13fff17 	ldw	r4,-4(fp)
1001969c:	0019d040 	call	10019d04 <alt_release_fd>
    if (rval < 0)
100196a0:	e0bffe17 	ldw	r2,-8(fp)
100196a4:	1000070e 	bge	r2,zero,100196c4 <close+0xa8>
    {
      ALT_ERRNO = -rval;
100196a8:	00195e00 	call	100195e0 <alt_get_errno>
100196ac:	1007883a 	mov	r3,r2
100196b0:	e0bffe17 	ldw	r2,-8(fp)
100196b4:	0085c83a 	sub	r2,zero,r2
100196b8:	18800015 	stw	r2,0(r3)
      return -1;
100196bc:	00bfffc4 	movi	r2,-1
100196c0:	00000706 	br	100196e0 <close+0xc4>
    }
    return 0;
100196c4:	0005883a 	mov	r2,zero
100196c8:	00000506 	br	100196e0 <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
100196cc:	00195e00 	call	100195e0 <alt_get_errno>
100196d0:	1007883a 	mov	r3,r2
100196d4:	00801444 	movi	r2,81
100196d8:	18800015 	stw	r2,0(r3)
    return -1;
100196dc:	00bfffc4 	movi	r2,-1
  }
}
100196e0:	e037883a 	mov	sp,fp
100196e4:	dfc00117 	ldw	ra,4(sp)
100196e8:	df000017 	ldw	fp,0(sp)
100196ec:	dec00204 	addi	sp,sp,8
100196f0:	f800283a 	ret

100196f4 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
100196f4:	defffc04 	addi	sp,sp,-16
100196f8:	df000315 	stw	fp,12(sp)
100196fc:	df000304 	addi	fp,sp,12
10019700:	e13ffd15 	stw	r4,-12(fp)
10019704:	e17ffe15 	stw	r5,-8(fp)
10019708:	e1bfff15 	stw	r6,-4(fp)
  return len;
1001970c:	e0bfff17 	ldw	r2,-4(fp)
}
10019710:	e037883a 	mov	sp,fp
10019714:	df000017 	ldw	fp,0(sp)
10019718:	dec00104 	addi	sp,sp,4
1001971c:	f800283a 	ret

10019720 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
10019720:	defffe04 	addi	sp,sp,-8
10019724:	dfc00115 	stw	ra,4(sp)
10019728:	df000015 	stw	fp,0(sp)
1001972c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10019730:	d0a00e17 	ldw	r2,-32712(gp)
10019734:	10000326 	beq	r2,zero,10019744 <alt_get_errno+0x24>
10019738:	d0a00e17 	ldw	r2,-32712(gp)
1001973c:	103ee83a 	callr	r2
10019740:	00000106 	br	10019748 <alt_get_errno+0x28>
10019744:	d0a6d504 	addi	r2,gp,-25772
}
10019748:	e037883a 	mov	sp,fp
1001974c:	dfc00117 	ldw	ra,4(sp)
10019750:	df000017 	ldw	fp,0(sp)
10019754:	dec00204 	addi	sp,sp,8
10019758:	f800283a 	ret

1001975c <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
1001975c:	defffb04 	addi	sp,sp,-20
10019760:	dfc00415 	stw	ra,16(sp)
10019764:	df000315 	stw	fp,12(sp)
10019768:	df000304 	addi	fp,sp,12
1001976c:	e13ffe15 	stw	r4,-8(fp)
10019770:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
10019774:	e0bffe17 	ldw	r2,-8(fp)
10019778:	10000816 	blt	r2,zero,1001979c <fstat+0x40>
1001977c:	01400304 	movi	r5,12
10019780:	e13ffe17 	ldw	r4,-8(fp)
10019784:	00034380 	call	10003438 <__mulsi3>
10019788:	1007883a 	mov	r3,r2
1001978c:	008400b4 	movhi	r2,4098
10019790:	10b5a804 	addi	r2,r2,-10592
10019794:	1885883a 	add	r2,r3,r2
10019798:	00000106 	br	100197a0 <fstat+0x44>
1001979c:	0005883a 	mov	r2,zero
100197a0:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
100197a4:	e0bffd17 	ldw	r2,-12(fp)
100197a8:	10001026 	beq	r2,zero,100197ec <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
100197ac:	e0bffd17 	ldw	r2,-12(fp)
100197b0:	10800017 	ldw	r2,0(r2)
100197b4:	10800817 	ldw	r2,32(r2)
100197b8:	10000726 	beq	r2,zero,100197d8 <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
100197bc:	e0bffd17 	ldw	r2,-12(fp)
100197c0:	10800017 	ldw	r2,0(r2)
100197c4:	10800817 	ldw	r2,32(r2)
100197c8:	e17fff17 	ldw	r5,-4(fp)
100197cc:	e13ffd17 	ldw	r4,-12(fp)
100197d0:	103ee83a 	callr	r2
100197d4:	00000a06 	br	10019800 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
100197d8:	e0bfff17 	ldw	r2,-4(fp)
100197dc:	00c80004 	movi	r3,8192
100197e0:	10c00115 	stw	r3,4(r2)
      return 0;
100197e4:	0005883a 	mov	r2,zero
100197e8:	00000506 	br	10019800 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
100197ec:	00197200 	call	10019720 <alt_get_errno>
100197f0:	1007883a 	mov	r3,r2
100197f4:	00801444 	movi	r2,81
100197f8:	18800015 	stw	r2,0(r3)
    return -1;
100197fc:	00bfffc4 	movi	r2,-1
  }
}
10019800:	e037883a 	mov	sp,fp
10019804:	dfc00117 	ldw	ra,4(sp)
10019808:	df000017 	ldw	fp,0(sp)
1001980c:	dec00204 	addi	sp,sp,8
10019810:	f800283a 	ret

10019814 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
10019814:	defffe04 	addi	sp,sp,-8
10019818:	dfc00115 	stw	ra,4(sp)
1001981c:	df000015 	stw	fp,0(sp)
10019820:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10019824:	d0a00e17 	ldw	r2,-32712(gp)
10019828:	10000326 	beq	r2,zero,10019838 <alt_get_errno+0x24>
1001982c:	d0a00e17 	ldw	r2,-32712(gp)
10019830:	103ee83a 	callr	r2
10019834:	00000106 	br	1001983c <alt_get_errno+0x28>
10019838:	d0a6d504 	addi	r2,gp,-25772
}
1001983c:	e037883a 	mov	sp,fp
10019840:	dfc00117 	ldw	ra,4(sp)
10019844:	df000017 	ldw	fp,0(sp)
10019848:	dec00204 	addi	sp,sp,8
1001984c:	f800283a 	ret

10019850 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
10019850:	deffed04 	addi	sp,sp,-76
10019854:	dfc01215 	stw	ra,72(sp)
10019858:	df001115 	stw	fp,68(sp)
1001985c:	df001104 	addi	fp,sp,68
10019860:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
10019864:	e0bfff17 	ldw	r2,-4(fp)
10019868:	10000816 	blt	r2,zero,1001988c <isatty+0x3c>
1001986c:	01400304 	movi	r5,12
10019870:	e13fff17 	ldw	r4,-4(fp)
10019874:	00034380 	call	10003438 <__mulsi3>
10019878:	1007883a 	mov	r3,r2
1001987c:	008400b4 	movhi	r2,4098
10019880:	10b5a804 	addi	r2,r2,-10592
10019884:	1885883a 	add	r2,r3,r2
10019888:	00000106 	br	10019890 <isatty+0x40>
1001988c:	0005883a 	mov	r2,zero
10019890:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
10019894:	e0bfef17 	ldw	r2,-68(fp)
10019898:	10000e26 	beq	r2,zero,100198d4 <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
1001989c:	e0bfef17 	ldw	r2,-68(fp)
100198a0:	10800017 	ldw	r2,0(r2)
100198a4:	10800817 	ldw	r2,32(r2)
100198a8:	1000021e 	bne	r2,zero,100198b4 <isatty+0x64>
    {
      return 1;
100198ac:	00800044 	movi	r2,1
100198b0:	00000d06 	br	100198e8 <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
100198b4:	e0bff004 	addi	r2,fp,-64
100198b8:	100b883a 	mov	r5,r2
100198bc:	e13fff17 	ldw	r4,-4(fp)
100198c0:	001975c0 	call	1001975c <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
100198c4:	e0bff117 	ldw	r2,-60(fp)
100198c8:	10880020 	cmpeqi	r2,r2,8192
100198cc:	10803fcc 	andi	r2,r2,255
100198d0:	00000506 	br	100198e8 <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
100198d4:	00198140 	call	10019814 <alt_get_errno>
100198d8:	1007883a 	mov	r3,r2
100198dc:	00801444 	movi	r2,81
100198e0:	18800015 	stw	r2,0(r3)
    return 0;
100198e4:	0005883a 	mov	r2,zero
  }
}
100198e8:	e037883a 	mov	sp,fp
100198ec:	dfc00117 	ldw	ra,4(sp)
100198f0:	df000017 	ldw	fp,0(sp)
100198f4:	dec00204 	addi	sp,sp,8
100198f8:	f800283a 	ret

100198fc <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
100198fc:	defffc04 	addi	sp,sp,-16
10019900:	df000315 	stw	fp,12(sp)
10019904:	df000304 	addi	fp,sp,12
10019908:	e13ffd15 	stw	r4,-12(fp)
1001990c:	e17ffe15 	stw	r5,-8(fp)
10019910:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
10019914:	e0fffe17 	ldw	r3,-8(fp)
10019918:	e0bffd17 	ldw	r2,-12(fp)
1001991c:	18800c26 	beq	r3,r2,10019950 <alt_load_section+0x54>
  {
    while( to != end )
10019920:	00000806 	br	10019944 <alt_load_section+0x48>
    {
      *to++ = *from++;
10019924:	e0bffe17 	ldw	r2,-8(fp)
10019928:	10c00104 	addi	r3,r2,4
1001992c:	e0fffe15 	stw	r3,-8(fp)
10019930:	e0fffd17 	ldw	r3,-12(fp)
10019934:	19000104 	addi	r4,r3,4
10019938:	e13ffd15 	stw	r4,-12(fp)
1001993c:	18c00017 	ldw	r3,0(r3)
10019940:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
10019944:	e0fffe17 	ldw	r3,-8(fp)
10019948:	e0bfff17 	ldw	r2,-4(fp)
1001994c:	18bff51e 	bne	r3,r2,10019924 <__alt_data_end+0xf8019924>
    {
      *to++ = *from++;
    }
  }
}
10019950:	0001883a 	nop
10019954:	e037883a 	mov	sp,fp
10019958:	df000017 	ldw	fp,0(sp)
1001995c:	dec00104 	addi	sp,sp,4
10019960:	f800283a 	ret

10019964 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
10019964:	defffe04 	addi	sp,sp,-8
10019968:	dfc00115 	stw	ra,4(sp)
1001996c:	df000015 	stw	fp,0(sp)
10019970:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
10019974:	018400b4 	movhi	r6,4098
10019978:	31ba3304 	addi	r6,r6,-5940
1001997c:	014400b4 	movhi	r5,4098
10019980:	29737504 	addi	r5,r5,-12844
10019984:	010400b4 	movhi	r4,4098
10019988:	213a3304 	addi	r4,r4,-5940
1001998c:	00198fc0 	call	100198fc <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
10019990:	01840034 	movhi	r6,4096
10019994:	31808c04 	addi	r6,r6,560
10019998:	01440034 	movhi	r5,4096
1001999c:	29400804 	addi	r5,r5,32
100199a0:	01040034 	movhi	r4,4096
100199a4:	21000804 	addi	r4,r4,32
100199a8:	00198fc0 	call	100198fc <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
100199ac:	018400b4 	movhi	r6,4098
100199b0:	31b37504 	addi	r6,r6,-12844
100199b4:	014400b4 	movhi	r5,4098
100199b8:	296fc204 	addi	r5,r5,-16632
100199bc:	010400b4 	movhi	r4,4098
100199c0:	212fc204 	addi	r4,r4,-16632
100199c4:	00198fc0 	call	100198fc <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
100199c8:	001ae500 	call	1001ae50 <alt_dcache_flush_all>
  alt_icache_flush_all();
100199cc:	001b0100 	call	1001b010 <alt_icache_flush_all>
}
100199d0:	0001883a 	nop
100199d4:	e037883a 	mov	sp,fp
100199d8:	dfc00117 	ldw	ra,4(sp)
100199dc:	df000017 	ldw	fp,0(sp)
100199e0:	dec00204 	addi	sp,sp,8
100199e4:	f800283a 	ret

100199e8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
100199e8:	defffe04 	addi	sp,sp,-8
100199ec:	dfc00115 	stw	ra,4(sp)
100199f0:	df000015 	stw	fp,0(sp)
100199f4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
100199f8:	d0a00e17 	ldw	r2,-32712(gp)
100199fc:	10000326 	beq	r2,zero,10019a0c <alt_get_errno+0x24>
10019a00:	d0a00e17 	ldw	r2,-32712(gp)
10019a04:	103ee83a 	callr	r2
10019a08:	00000106 	br	10019a10 <alt_get_errno+0x28>
10019a0c:	d0a6d504 	addi	r2,gp,-25772
}
10019a10:	e037883a 	mov	sp,fp
10019a14:	dfc00117 	ldw	ra,4(sp)
10019a18:	df000017 	ldw	fp,0(sp)
10019a1c:	dec00204 	addi	sp,sp,8
10019a20:	f800283a 	ret

10019a24 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
10019a24:	defff904 	addi	sp,sp,-28
10019a28:	dfc00615 	stw	ra,24(sp)
10019a2c:	df000515 	stw	fp,20(sp)
10019a30:	df000504 	addi	fp,sp,20
10019a34:	e13ffd15 	stw	r4,-12(fp)
10019a38:	e17ffe15 	stw	r5,-8(fp)
10019a3c:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
10019a40:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
10019a44:	e0bffd17 	ldw	r2,-12(fp)
10019a48:	10000816 	blt	r2,zero,10019a6c <lseek+0x48>
10019a4c:	01400304 	movi	r5,12
10019a50:	e13ffd17 	ldw	r4,-12(fp)
10019a54:	00034380 	call	10003438 <__mulsi3>
10019a58:	1007883a 	mov	r3,r2
10019a5c:	008400b4 	movhi	r2,4098
10019a60:	10b5a804 	addi	r2,r2,-10592
10019a64:	1885883a 	add	r2,r3,r2
10019a68:	00000106 	br	10019a70 <lseek+0x4c>
10019a6c:	0005883a 	mov	r2,zero
10019a70:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
10019a74:	e0bffc17 	ldw	r2,-16(fp)
10019a78:	10001026 	beq	r2,zero,10019abc <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
10019a7c:	e0bffc17 	ldw	r2,-16(fp)
10019a80:	10800017 	ldw	r2,0(r2)
10019a84:	10800717 	ldw	r2,28(r2)
10019a88:	10000926 	beq	r2,zero,10019ab0 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
10019a8c:	e0bffc17 	ldw	r2,-16(fp)
10019a90:	10800017 	ldw	r2,0(r2)
10019a94:	10800717 	ldw	r2,28(r2)
10019a98:	e1bfff17 	ldw	r6,-4(fp)
10019a9c:	e17ffe17 	ldw	r5,-8(fp)
10019aa0:	e13ffc17 	ldw	r4,-16(fp)
10019aa4:	103ee83a 	callr	r2
10019aa8:	e0bffb15 	stw	r2,-20(fp)
10019aac:	00000506 	br	10019ac4 <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
10019ab0:	00bfde84 	movi	r2,-134
10019ab4:	e0bffb15 	stw	r2,-20(fp)
10019ab8:	00000206 	br	10019ac4 <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
10019abc:	00bfebc4 	movi	r2,-81
10019ac0:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
10019ac4:	e0bffb17 	ldw	r2,-20(fp)
10019ac8:	1000070e 	bge	r2,zero,10019ae8 <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
10019acc:	00199e80 	call	100199e8 <alt_get_errno>
10019ad0:	1007883a 	mov	r3,r2
10019ad4:	e0bffb17 	ldw	r2,-20(fp)
10019ad8:	0085c83a 	sub	r2,zero,r2
10019adc:	18800015 	stw	r2,0(r3)
    rc = -1;
10019ae0:	00bfffc4 	movi	r2,-1
10019ae4:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
10019ae8:	e0bffb17 	ldw	r2,-20(fp)
}
10019aec:	e037883a 	mov	sp,fp
10019af0:	dfc00117 	ldw	ra,4(sp)
10019af4:	df000017 	ldw	fp,0(sp)
10019af8:	dec00204 	addi	sp,sp,8
10019afc:	f800283a 	ret

10019b00 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
10019b00:	defffd04 	addi	sp,sp,-12
10019b04:	dfc00215 	stw	ra,8(sp)
10019b08:	df000115 	stw	fp,4(sp)
10019b0c:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
10019b10:	0009883a 	mov	r4,zero
10019b14:	0019fd80 	call	10019fd8 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
10019b18:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
10019b1c:	001a0100 	call	1001a010 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
10019b20:	018400b4 	movhi	r6,4098
10019b24:	31b36b04 	addi	r6,r6,-12884
10019b28:	014400b4 	movhi	r5,4098
10019b2c:	29736b04 	addi	r5,r5,-12884
10019b30:	010400b4 	movhi	r4,4098
10019b34:	21336b04 	addi	r4,r4,-12884
10019b38:	001b3b40 	call	1001b3b4 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
10019b3c:	001af500 	call	1001af50 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
10019b40:	010400b4 	movhi	r4,4098
10019b44:	212bec04 	addi	r4,r4,-20560
10019b48:	001bb740 	call	1001bb74 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
10019b4c:	d0a6d917 	ldw	r2,-25756(gp)
10019b50:	d0e6da17 	ldw	r3,-25752(gp)
10019b54:	d126db17 	ldw	r4,-25748(gp)
10019b58:	200d883a 	mov	r6,r4
10019b5c:	180b883a 	mov	r5,r3
10019b60:	1009883a 	mov	r4,r2
10019b64:	00012780 	call	10001278 <main>
10019b68:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
10019b6c:	01000044 	movi	r4,1
10019b70:	001961c0 	call	1001961c <close>
  exit (result);
10019b74:	e13fff17 	ldw	r4,-4(fp)
10019b78:	001bb880 	call	1001bb88 <exit>

10019b7c <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
10019b7c:	defffe04 	addi	sp,sp,-8
10019b80:	df000115 	stw	fp,4(sp)
10019b84:	df000104 	addi	fp,sp,4
10019b88:	e13fff15 	stw	r4,-4(fp)
}
10019b8c:	0001883a 	nop
10019b90:	e037883a 	mov	sp,fp
10019b94:	df000017 	ldw	fp,0(sp)
10019b98:	dec00104 	addi	sp,sp,4
10019b9c:	f800283a 	ret

10019ba0 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
10019ba0:	defffe04 	addi	sp,sp,-8
10019ba4:	df000115 	stw	fp,4(sp)
10019ba8:	df000104 	addi	fp,sp,4
10019bac:	e13fff15 	stw	r4,-4(fp)
}
10019bb0:	0001883a 	nop
10019bb4:	e037883a 	mov	sp,fp
10019bb8:	df000017 	ldw	fp,0(sp)
10019bbc:	dec00104 	addi	sp,sp,4
10019bc0:	f800283a 	ret

10019bc4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
10019bc4:	defffe04 	addi	sp,sp,-8
10019bc8:	dfc00115 	stw	ra,4(sp)
10019bcc:	df000015 	stw	fp,0(sp)
10019bd0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10019bd4:	d0a00e17 	ldw	r2,-32712(gp)
10019bd8:	10000326 	beq	r2,zero,10019be8 <alt_get_errno+0x24>
10019bdc:	d0a00e17 	ldw	r2,-32712(gp)
10019be0:	103ee83a 	callr	r2
10019be4:	00000106 	br	10019bec <alt_get_errno+0x28>
10019be8:	d0a6d504 	addi	r2,gp,-25772
}
10019bec:	e037883a 	mov	sp,fp
10019bf0:	dfc00117 	ldw	ra,4(sp)
10019bf4:	df000017 	ldw	fp,0(sp)
10019bf8:	dec00204 	addi	sp,sp,8
10019bfc:	f800283a 	ret

10019c00 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
10019c00:	defff904 	addi	sp,sp,-28
10019c04:	dfc00615 	stw	ra,24(sp)
10019c08:	df000515 	stw	fp,20(sp)
10019c0c:	df000504 	addi	fp,sp,20
10019c10:	e13ffd15 	stw	r4,-12(fp)
10019c14:	e17ffe15 	stw	r5,-8(fp)
10019c18:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
10019c1c:	e0bffd17 	ldw	r2,-12(fp)
10019c20:	10000816 	blt	r2,zero,10019c44 <read+0x44>
10019c24:	01400304 	movi	r5,12
10019c28:	e13ffd17 	ldw	r4,-12(fp)
10019c2c:	00034380 	call	10003438 <__mulsi3>
10019c30:	1007883a 	mov	r3,r2
10019c34:	008400b4 	movhi	r2,4098
10019c38:	10b5a804 	addi	r2,r2,-10592
10019c3c:	1885883a 	add	r2,r3,r2
10019c40:	00000106 	br	10019c48 <read+0x48>
10019c44:	0005883a 	mov	r2,zero
10019c48:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
10019c4c:	e0bffb17 	ldw	r2,-20(fp)
10019c50:	10002226 	beq	r2,zero,10019cdc <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
10019c54:	e0bffb17 	ldw	r2,-20(fp)
10019c58:	10800217 	ldw	r2,8(r2)
10019c5c:	108000cc 	andi	r2,r2,3
10019c60:	10800060 	cmpeqi	r2,r2,1
10019c64:	1000181e 	bne	r2,zero,10019cc8 <read+0xc8>
        (fd->dev->read))
10019c68:	e0bffb17 	ldw	r2,-20(fp)
10019c6c:	10800017 	ldw	r2,0(r2)
10019c70:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
10019c74:	10001426 	beq	r2,zero,10019cc8 <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
10019c78:	e0bffb17 	ldw	r2,-20(fp)
10019c7c:	10800017 	ldw	r2,0(r2)
10019c80:	10800517 	ldw	r2,20(r2)
10019c84:	e0ffff17 	ldw	r3,-4(fp)
10019c88:	180d883a 	mov	r6,r3
10019c8c:	e17ffe17 	ldw	r5,-8(fp)
10019c90:	e13ffb17 	ldw	r4,-20(fp)
10019c94:	103ee83a 	callr	r2
10019c98:	e0bffc15 	stw	r2,-16(fp)
10019c9c:	e0bffc17 	ldw	r2,-16(fp)
10019ca0:	1000070e 	bge	r2,zero,10019cc0 <read+0xc0>
        {
          ALT_ERRNO = -rval;
10019ca4:	0019bc40 	call	10019bc4 <alt_get_errno>
10019ca8:	1007883a 	mov	r3,r2
10019cac:	e0bffc17 	ldw	r2,-16(fp)
10019cb0:	0085c83a 	sub	r2,zero,r2
10019cb4:	18800015 	stw	r2,0(r3)
          return -1;
10019cb8:	00bfffc4 	movi	r2,-1
10019cbc:	00000c06 	br	10019cf0 <read+0xf0>
        }
        return rval;
10019cc0:	e0bffc17 	ldw	r2,-16(fp)
10019cc4:	00000a06 	br	10019cf0 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
10019cc8:	0019bc40 	call	10019bc4 <alt_get_errno>
10019ccc:	1007883a 	mov	r3,r2
10019cd0:	00800344 	movi	r2,13
10019cd4:	18800015 	stw	r2,0(r3)
10019cd8:	00000406 	br	10019cec <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
10019cdc:	0019bc40 	call	10019bc4 <alt_get_errno>
10019ce0:	1007883a 	mov	r3,r2
10019ce4:	00801444 	movi	r2,81
10019ce8:	18800015 	stw	r2,0(r3)
  }
  return -1;
10019cec:	00bfffc4 	movi	r2,-1
}
10019cf0:	e037883a 	mov	sp,fp
10019cf4:	dfc00117 	ldw	ra,4(sp)
10019cf8:	df000017 	ldw	fp,0(sp)
10019cfc:	dec00204 	addi	sp,sp,8
10019d00:	f800283a 	ret

10019d04 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
10019d04:	defffc04 	addi	sp,sp,-16
10019d08:	dfc00315 	stw	ra,12(sp)
10019d0c:	df000215 	stw	fp,8(sp)
10019d10:	dc000115 	stw	r16,4(sp)
10019d14:	df000204 	addi	fp,sp,8
10019d18:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
10019d1c:	e0bffe17 	ldw	r2,-8(fp)
10019d20:	108000d0 	cmplti	r2,r2,3
10019d24:	1000111e 	bne	r2,zero,10019d6c <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
10019d28:	040400b4 	movhi	r16,4098
10019d2c:	8435a804 	addi	r16,r16,-10592
10019d30:	e0bffe17 	ldw	r2,-8(fp)
10019d34:	01400304 	movi	r5,12
10019d38:	1009883a 	mov	r4,r2
10019d3c:	00034380 	call	10003438 <__mulsi3>
10019d40:	8085883a 	add	r2,r16,r2
10019d44:	10800204 	addi	r2,r2,8
10019d48:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
10019d4c:	040400b4 	movhi	r16,4098
10019d50:	8435a804 	addi	r16,r16,-10592
10019d54:	e0bffe17 	ldw	r2,-8(fp)
10019d58:	01400304 	movi	r5,12
10019d5c:	1009883a 	mov	r4,r2
10019d60:	00034380 	call	10003438 <__mulsi3>
10019d64:	8085883a 	add	r2,r16,r2
10019d68:	10000015 	stw	zero,0(r2)
  }
}
10019d6c:	0001883a 	nop
10019d70:	e6ffff04 	addi	sp,fp,-4
10019d74:	dfc00217 	ldw	ra,8(sp)
10019d78:	df000117 	ldw	fp,4(sp)
10019d7c:	dc000017 	ldw	r16,0(sp)
10019d80:	dec00304 	addi	sp,sp,12
10019d84:	f800283a 	ret

10019d88 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
10019d88:	defff904 	addi	sp,sp,-28
10019d8c:	df000615 	stw	fp,24(sp)
10019d90:	df000604 	addi	fp,sp,24
10019d94:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
10019d98:	0005303a 	rdctl	r2,status
10019d9c:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10019da0:	e0fffe17 	ldw	r3,-8(fp)
10019da4:	00bfff84 	movi	r2,-2
10019da8:	1884703a 	and	r2,r3,r2
10019dac:	1001703a 	wrctl	status,r2
  
  return context;
10019db0:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
10019db4:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
10019db8:	d0a00f17 	ldw	r2,-32708(gp)
10019dbc:	10c000c4 	addi	r3,r2,3
10019dc0:	00bfff04 	movi	r2,-4
10019dc4:	1884703a 	and	r2,r3,r2
10019dc8:	d0a00f15 	stw	r2,-32708(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
10019dcc:	d0e00f17 	ldw	r3,-32708(gp)
10019dd0:	e0bfff17 	ldw	r2,-4(fp)
10019dd4:	1887883a 	add	r3,r3,r2
10019dd8:	00860034 	movhi	r2,6144
10019ddc:	10800004 	addi	r2,r2,0
10019de0:	10c0062e 	bgeu	r2,r3,10019dfc <sbrk+0x74>
10019de4:	e0bffb17 	ldw	r2,-20(fp)
10019de8:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
10019dec:	e0bffa17 	ldw	r2,-24(fp)
10019df0:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
10019df4:	00bfffc4 	movi	r2,-1
10019df8:	00000b06 	br	10019e28 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
10019dfc:	d0a00f17 	ldw	r2,-32708(gp)
10019e00:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
10019e04:	d0e00f17 	ldw	r3,-32708(gp)
10019e08:	e0bfff17 	ldw	r2,-4(fp)
10019e0c:	1885883a 	add	r2,r3,r2
10019e10:	d0a00f15 	stw	r2,-32708(gp)
10019e14:	e0bffb17 	ldw	r2,-20(fp)
10019e18:	e0bffc15 	stw	r2,-16(fp)
10019e1c:	e0bffc17 	ldw	r2,-16(fp)
10019e20:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
10019e24:	e0bffd17 	ldw	r2,-12(fp)
} 
10019e28:	e037883a 	mov	sp,fp
10019e2c:	df000017 	ldw	fp,0(sp)
10019e30:	dec00104 	addi	sp,sp,4
10019e34:	f800283a 	ret

10019e38 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
10019e38:	defffd04 	addi	sp,sp,-12
10019e3c:	dfc00215 	stw	ra,8(sp)
10019e40:	df000115 	stw	fp,4(sp)
10019e44:	df000104 	addi	fp,sp,4
10019e48:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
10019e4c:	e13fff17 	ldw	r4,-4(fp)
10019e50:	001acf80 	call	1001acf8 <alt_busy_sleep>
}
10019e54:	e037883a 	mov	sp,fp
10019e58:	dfc00117 	ldw	ra,4(sp)
10019e5c:	df000017 	ldw	fp,0(sp)
10019e60:	dec00204 	addi	sp,sp,8
10019e64:	f800283a 	ret

10019e68 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
10019e68:	defffe04 	addi	sp,sp,-8
10019e6c:	dfc00115 	stw	ra,4(sp)
10019e70:	df000015 	stw	fp,0(sp)
10019e74:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10019e78:	d0a00e17 	ldw	r2,-32712(gp)
10019e7c:	10000326 	beq	r2,zero,10019e8c <alt_get_errno+0x24>
10019e80:	d0a00e17 	ldw	r2,-32712(gp)
10019e84:	103ee83a 	callr	r2
10019e88:	00000106 	br	10019e90 <alt_get_errno+0x28>
10019e8c:	d0a6d504 	addi	r2,gp,-25772
}
10019e90:	e037883a 	mov	sp,fp
10019e94:	dfc00117 	ldw	ra,4(sp)
10019e98:	df000017 	ldw	fp,0(sp)
10019e9c:	dec00204 	addi	sp,sp,8
10019ea0:	f800283a 	ret

10019ea4 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
10019ea4:	defff904 	addi	sp,sp,-28
10019ea8:	dfc00615 	stw	ra,24(sp)
10019eac:	df000515 	stw	fp,20(sp)
10019eb0:	df000504 	addi	fp,sp,20
10019eb4:	e13ffd15 	stw	r4,-12(fp)
10019eb8:	e17ffe15 	stw	r5,-8(fp)
10019ebc:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
10019ec0:	e0bffd17 	ldw	r2,-12(fp)
10019ec4:	10000816 	blt	r2,zero,10019ee8 <write+0x44>
10019ec8:	01400304 	movi	r5,12
10019ecc:	e13ffd17 	ldw	r4,-12(fp)
10019ed0:	00034380 	call	10003438 <__mulsi3>
10019ed4:	1007883a 	mov	r3,r2
10019ed8:	008400b4 	movhi	r2,4098
10019edc:	10b5a804 	addi	r2,r2,-10592
10019ee0:	1885883a 	add	r2,r3,r2
10019ee4:	00000106 	br	10019eec <write+0x48>
10019ee8:	0005883a 	mov	r2,zero
10019eec:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
10019ef0:	e0bffb17 	ldw	r2,-20(fp)
10019ef4:	10002126 	beq	r2,zero,10019f7c <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
10019ef8:	e0bffb17 	ldw	r2,-20(fp)
10019efc:	10800217 	ldw	r2,8(r2)
10019f00:	108000cc 	andi	r2,r2,3
10019f04:	10001826 	beq	r2,zero,10019f68 <write+0xc4>
10019f08:	e0bffb17 	ldw	r2,-20(fp)
10019f0c:	10800017 	ldw	r2,0(r2)
10019f10:	10800617 	ldw	r2,24(r2)
10019f14:	10001426 	beq	r2,zero,10019f68 <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
10019f18:	e0bffb17 	ldw	r2,-20(fp)
10019f1c:	10800017 	ldw	r2,0(r2)
10019f20:	10800617 	ldw	r2,24(r2)
10019f24:	e0ffff17 	ldw	r3,-4(fp)
10019f28:	180d883a 	mov	r6,r3
10019f2c:	e17ffe17 	ldw	r5,-8(fp)
10019f30:	e13ffb17 	ldw	r4,-20(fp)
10019f34:	103ee83a 	callr	r2
10019f38:	e0bffc15 	stw	r2,-16(fp)
10019f3c:	e0bffc17 	ldw	r2,-16(fp)
10019f40:	1000070e 	bge	r2,zero,10019f60 <write+0xbc>
      {
        ALT_ERRNO = -rval;
10019f44:	0019e680 	call	10019e68 <alt_get_errno>
10019f48:	1007883a 	mov	r3,r2
10019f4c:	e0bffc17 	ldw	r2,-16(fp)
10019f50:	0085c83a 	sub	r2,zero,r2
10019f54:	18800015 	stw	r2,0(r3)
        return -1;
10019f58:	00bfffc4 	movi	r2,-1
10019f5c:	00000c06 	br	10019f90 <write+0xec>
      }
      return rval;
10019f60:	e0bffc17 	ldw	r2,-16(fp)
10019f64:	00000a06 	br	10019f90 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
10019f68:	0019e680 	call	10019e68 <alt_get_errno>
10019f6c:	1007883a 	mov	r3,r2
10019f70:	00800344 	movi	r2,13
10019f74:	18800015 	stw	r2,0(r3)
10019f78:	00000406 	br	10019f8c <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
10019f7c:	0019e680 	call	10019e68 <alt_get_errno>
10019f80:	1007883a 	mov	r3,r2
10019f84:	00801444 	movi	r2,81
10019f88:	18800015 	stw	r2,0(r3)
  }
  return -1;
10019f8c:	00bfffc4 	movi	r2,-1
}
10019f90:	e037883a 	mov	sp,fp
10019f94:	dfc00117 	ldw	ra,4(sp)
10019f98:	df000017 	ldw	fp,0(sp)
10019f9c:	dec00204 	addi	sp,sp,8
10019fa0:	f800283a 	ret

10019fa4 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
10019fa4:	defffd04 	addi	sp,sp,-12
10019fa8:	dfc00215 	stw	ra,8(sp)
10019fac:	df000115 	stw	fp,4(sp)
10019fb0:	df000104 	addi	fp,sp,4
10019fb4:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
10019fb8:	d1600b04 	addi	r5,gp,-32724
10019fbc:	e13fff17 	ldw	r4,-4(fp)
10019fc0:	001aeac0 	call	1001aeac <alt_dev_llist_insert>
}
10019fc4:	e037883a 	mov	sp,fp
10019fc8:	dfc00117 	ldw	ra,4(sp)
10019fcc:	df000017 	ldw	fp,0(sp)
10019fd0:	dec00204 	addi	sp,sp,8
10019fd4:	f800283a 	ret

10019fd8 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
10019fd8:	defffd04 	addi	sp,sp,-12
10019fdc:	dfc00215 	stw	ra,8(sp)
10019fe0:	df000115 	stw	fp,4(sp)
10019fe4:	df000104 	addi	fp,sp,4
10019fe8:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
10019fec:	001b8580 	call	1001b858 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
10019ff0:	00800044 	movi	r2,1
10019ff4:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
10019ff8:	0001883a 	nop
10019ffc:	e037883a 	mov	sp,fp
1001a000:	dfc00117 	ldw	ra,4(sp)
1001a004:	df000017 	ldw	fp,0(sp)
1001a008:	dec00204 	addi	sp,sp,8
1001a00c:	f800283a 	ret

1001a010 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
1001a010:	defffe04 	addi	sp,sp,-8
1001a014:	dfc00115 	stw	ra,4(sp)
1001a018:	df000015 	stw	fp,0(sp)
1001a01c:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER, TIMER);
1001a020:	01c0fa04 	movi	r7,1000
1001a024:	01800044 	movi	r6,1
1001a028:	000b883a 	mov	r5,zero
1001a02c:	01003804 	movi	r4,224
1001a030:	001ab500 	call	1001ab50 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
1001a034:	000d883a 	mov	r6,zero
1001a038:	000b883a 	mov	r5,zero
1001a03c:	010400b4 	movhi	r4,4098
1001a040:	21361204 	addi	r4,r4,-10168
1001a044:	001a1d40 	call	1001a1d4 <altera_avalon_jtag_uart_init>
1001a048:	010400b4 	movhi	r4,4098
1001a04c:	21360804 	addi	r4,r4,-10208
1001a050:	0019fa40 	call	10019fa4 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
1001a054:	0001883a 	nop
}
1001a058:	0001883a 	nop
1001a05c:	e037883a 	mov	sp,fp
1001a060:	dfc00117 	ldw	ra,4(sp)
1001a064:	df000017 	ldw	fp,0(sp)
1001a068:	dec00204 	addi	sp,sp,8
1001a06c:	f800283a 	ret

1001a070 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
1001a070:	defffa04 	addi	sp,sp,-24
1001a074:	dfc00515 	stw	ra,20(sp)
1001a078:	df000415 	stw	fp,16(sp)
1001a07c:	df000404 	addi	fp,sp,16
1001a080:	e13ffd15 	stw	r4,-12(fp)
1001a084:	e17ffe15 	stw	r5,-8(fp)
1001a088:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1001a08c:	e0bffd17 	ldw	r2,-12(fp)
1001a090:	10800017 	ldw	r2,0(r2)
1001a094:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
1001a098:	e0bffc17 	ldw	r2,-16(fp)
1001a09c:	10c00a04 	addi	r3,r2,40
1001a0a0:	e0bffd17 	ldw	r2,-12(fp)
1001a0a4:	10800217 	ldw	r2,8(r2)
1001a0a8:	100f883a 	mov	r7,r2
1001a0ac:	e1bfff17 	ldw	r6,-4(fp)
1001a0b0:	e17ffe17 	ldw	r5,-8(fp)
1001a0b4:	1809883a 	mov	r4,r3
1001a0b8:	001a6980 	call	1001a698 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
1001a0bc:	e037883a 	mov	sp,fp
1001a0c0:	dfc00117 	ldw	ra,4(sp)
1001a0c4:	df000017 	ldw	fp,0(sp)
1001a0c8:	dec00204 	addi	sp,sp,8
1001a0cc:	f800283a 	ret

1001a0d0 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
1001a0d0:	defffa04 	addi	sp,sp,-24
1001a0d4:	dfc00515 	stw	ra,20(sp)
1001a0d8:	df000415 	stw	fp,16(sp)
1001a0dc:	df000404 	addi	fp,sp,16
1001a0e0:	e13ffd15 	stw	r4,-12(fp)
1001a0e4:	e17ffe15 	stw	r5,-8(fp)
1001a0e8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1001a0ec:	e0bffd17 	ldw	r2,-12(fp)
1001a0f0:	10800017 	ldw	r2,0(r2)
1001a0f4:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
1001a0f8:	e0bffc17 	ldw	r2,-16(fp)
1001a0fc:	10c00a04 	addi	r3,r2,40
1001a100:	e0bffd17 	ldw	r2,-12(fp)
1001a104:	10800217 	ldw	r2,8(r2)
1001a108:	100f883a 	mov	r7,r2
1001a10c:	e1bfff17 	ldw	r6,-4(fp)
1001a110:	e17ffe17 	ldw	r5,-8(fp)
1001a114:	1809883a 	mov	r4,r3
1001a118:	001a8b40 	call	1001a8b4 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
1001a11c:	e037883a 	mov	sp,fp
1001a120:	dfc00117 	ldw	ra,4(sp)
1001a124:	df000017 	ldw	fp,0(sp)
1001a128:	dec00204 	addi	sp,sp,8
1001a12c:	f800283a 	ret

1001a130 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
1001a130:	defffc04 	addi	sp,sp,-16
1001a134:	dfc00315 	stw	ra,12(sp)
1001a138:	df000215 	stw	fp,8(sp)
1001a13c:	df000204 	addi	fp,sp,8
1001a140:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1001a144:	e0bfff17 	ldw	r2,-4(fp)
1001a148:	10800017 	ldw	r2,0(r2)
1001a14c:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
1001a150:	e0bffe17 	ldw	r2,-8(fp)
1001a154:	10c00a04 	addi	r3,r2,40
1001a158:	e0bfff17 	ldw	r2,-4(fp)
1001a15c:	10800217 	ldw	r2,8(r2)
1001a160:	100b883a 	mov	r5,r2
1001a164:	1809883a 	mov	r4,r3
1001a168:	001a5400 	call	1001a540 <altera_avalon_jtag_uart_close>
}
1001a16c:	e037883a 	mov	sp,fp
1001a170:	dfc00117 	ldw	ra,4(sp)
1001a174:	df000017 	ldw	fp,0(sp)
1001a178:	dec00204 	addi	sp,sp,8
1001a17c:	f800283a 	ret

1001a180 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
1001a180:	defffa04 	addi	sp,sp,-24
1001a184:	dfc00515 	stw	ra,20(sp)
1001a188:	df000415 	stw	fp,16(sp)
1001a18c:	df000404 	addi	fp,sp,16
1001a190:	e13ffd15 	stw	r4,-12(fp)
1001a194:	e17ffe15 	stw	r5,-8(fp)
1001a198:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
1001a19c:	e0bffd17 	ldw	r2,-12(fp)
1001a1a0:	10800017 	ldw	r2,0(r2)
1001a1a4:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
1001a1a8:	e0bffc17 	ldw	r2,-16(fp)
1001a1ac:	10800a04 	addi	r2,r2,40
1001a1b0:	e1bfff17 	ldw	r6,-4(fp)
1001a1b4:	e17ffe17 	ldw	r5,-8(fp)
1001a1b8:	1009883a 	mov	r4,r2
1001a1bc:	001a5a80 	call	1001a5a8 <altera_avalon_jtag_uart_ioctl>
}
1001a1c0:	e037883a 	mov	sp,fp
1001a1c4:	dfc00117 	ldw	ra,4(sp)
1001a1c8:	df000017 	ldw	fp,0(sp)
1001a1cc:	dec00204 	addi	sp,sp,8
1001a1d0:	f800283a 	ret

1001a1d4 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
1001a1d4:	defffa04 	addi	sp,sp,-24
1001a1d8:	dfc00515 	stw	ra,20(sp)
1001a1dc:	df000415 	stw	fp,16(sp)
1001a1e0:	df000404 	addi	fp,sp,16
1001a1e4:	e13ffd15 	stw	r4,-12(fp)
1001a1e8:	e17ffe15 	stw	r5,-8(fp)
1001a1ec:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
1001a1f0:	e0bffd17 	ldw	r2,-12(fp)
1001a1f4:	00c00044 	movi	r3,1
1001a1f8:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
1001a1fc:	e0bffd17 	ldw	r2,-12(fp)
1001a200:	10800017 	ldw	r2,0(r2)
1001a204:	10800104 	addi	r2,r2,4
1001a208:	1007883a 	mov	r3,r2
1001a20c:	e0bffd17 	ldw	r2,-12(fp)
1001a210:	10800817 	ldw	r2,32(r2)
1001a214:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
1001a218:	e0bffe17 	ldw	r2,-8(fp)
1001a21c:	e0ffff17 	ldw	r3,-4(fp)
1001a220:	d8000015 	stw	zero,0(sp)
1001a224:	e1fffd17 	ldw	r7,-12(fp)
1001a228:	018400b4 	movhi	r6,4098
1001a22c:	31a8a504 	addi	r6,r6,-23916
1001a230:	180b883a 	mov	r5,r3
1001a234:	1009883a 	mov	r4,r2
1001a238:	001b0300 	call	1001b030 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
1001a23c:	e0bffd17 	ldw	r2,-12(fp)
1001a240:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
1001a244:	e0bffd17 	ldw	r2,-12(fp)
1001a248:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
1001a24c:	d0e6dd17 	ldw	r3,-25740(gp)
1001a250:	e1fffd17 	ldw	r7,-12(fp)
1001a254:	018400b4 	movhi	r6,4098
1001a258:	31a92804 	addi	r6,r6,-23392
1001a25c:	180b883a 	mov	r5,r3
1001a260:	1009883a 	mov	r4,r2
1001a264:	001abcc0 	call	1001abcc <alt_alarm_start>
1001a268:	1000040e 	bge	r2,zero,1001a27c <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
1001a26c:	e0fffd17 	ldw	r3,-12(fp)
1001a270:	00a00034 	movhi	r2,32768
1001a274:	10bfffc4 	addi	r2,r2,-1
1001a278:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
1001a27c:	0001883a 	nop
1001a280:	e037883a 	mov	sp,fp
1001a284:	dfc00117 	ldw	ra,4(sp)
1001a288:	df000017 	ldw	fp,0(sp)
1001a28c:	dec00204 	addi	sp,sp,8
1001a290:	f800283a 	ret

1001a294 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
1001a294:	defff804 	addi	sp,sp,-32
1001a298:	df000715 	stw	fp,28(sp)
1001a29c:	df000704 	addi	fp,sp,28
1001a2a0:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
1001a2a4:	e0bfff17 	ldw	r2,-4(fp)
1001a2a8:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
1001a2ac:	e0bffb17 	ldw	r2,-20(fp)
1001a2b0:	10800017 	ldw	r2,0(r2)
1001a2b4:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
1001a2b8:	e0bffc17 	ldw	r2,-16(fp)
1001a2bc:	10800104 	addi	r2,r2,4
1001a2c0:	10800037 	ldwio	r2,0(r2)
1001a2c4:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
1001a2c8:	e0bffd17 	ldw	r2,-12(fp)
1001a2cc:	1080c00c 	andi	r2,r2,768
1001a2d0:	10006d26 	beq	r2,zero,1001a488 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
1001a2d4:	e0bffd17 	ldw	r2,-12(fp)
1001a2d8:	1080400c 	andi	r2,r2,256
1001a2dc:	10003526 	beq	r2,zero,1001a3b4 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
1001a2e0:	00800074 	movhi	r2,1
1001a2e4:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1001a2e8:	e0bffb17 	ldw	r2,-20(fp)
1001a2ec:	10800a17 	ldw	r2,40(r2)
1001a2f0:	10800044 	addi	r2,r2,1
1001a2f4:	1081ffcc 	andi	r2,r2,2047
1001a2f8:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
1001a2fc:	e0bffb17 	ldw	r2,-20(fp)
1001a300:	10c00b17 	ldw	r3,44(r2)
1001a304:	e0bffe17 	ldw	r2,-8(fp)
1001a308:	18801526 	beq	r3,r2,1001a360 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
1001a30c:	e0bffc17 	ldw	r2,-16(fp)
1001a310:	10800037 	ldwio	r2,0(r2)
1001a314:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
1001a318:	e0bff917 	ldw	r2,-28(fp)
1001a31c:	10a0000c 	andi	r2,r2,32768
1001a320:	10001126 	beq	r2,zero,1001a368 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
1001a324:	e0bffb17 	ldw	r2,-20(fp)
1001a328:	10800a17 	ldw	r2,40(r2)
1001a32c:	e0fff917 	ldw	r3,-28(fp)
1001a330:	1809883a 	mov	r4,r3
1001a334:	e0fffb17 	ldw	r3,-20(fp)
1001a338:	1885883a 	add	r2,r3,r2
1001a33c:	10800e04 	addi	r2,r2,56
1001a340:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1001a344:	e0bffb17 	ldw	r2,-20(fp)
1001a348:	10800a17 	ldw	r2,40(r2)
1001a34c:	10800044 	addi	r2,r2,1
1001a350:	10c1ffcc 	andi	r3,r2,2047
1001a354:	e0bffb17 	ldw	r2,-20(fp)
1001a358:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
1001a35c:	003fe206 	br	1001a2e8 <__alt_data_end+0xf801a2e8>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
1001a360:	0001883a 	nop
1001a364:	00000106 	br	1001a36c <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
1001a368:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
1001a36c:	e0bff917 	ldw	r2,-28(fp)
1001a370:	10bfffec 	andhi	r2,r2,65535
1001a374:	10000f26 	beq	r2,zero,1001a3b4 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
1001a378:	e0bffb17 	ldw	r2,-20(fp)
1001a37c:	10c00817 	ldw	r3,32(r2)
1001a380:	00bfff84 	movi	r2,-2
1001a384:	1886703a 	and	r3,r3,r2
1001a388:	e0bffb17 	ldw	r2,-20(fp)
1001a38c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
1001a390:	e0bffc17 	ldw	r2,-16(fp)
1001a394:	10800104 	addi	r2,r2,4
1001a398:	1007883a 	mov	r3,r2
1001a39c:	e0bffb17 	ldw	r2,-20(fp)
1001a3a0:	10800817 	ldw	r2,32(r2)
1001a3a4:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
1001a3a8:	e0bffc17 	ldw	r2,-16(fp)
1001a3ac:	10800104 	addi	r2,r2,4
1001a3b0:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
1001a3b4:	e0bffd17 	ldw	r2,-12(fp)
1001a3b8:	1080800c 	andi	r2,r2,512
1001a3bc:	103fbe26 	beq	r2,zero,1001a2b8 <__alt_data_end+0xf801a2b8>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
1001a3c0:	e0bffd17 	ldw	r2,-12(fp)
1001a3c4:	1004d43a 	srli	r2,r2,16
1001a3c8:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
1001a3cc:	00001406 	br	1001a420 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
1001a3d0:	e0bffc17 	ldw	r2,-16(fp)
1001a3d4:	e0fffb17 	ldw	r3,-20(fp)
1001a3d8:	18c00d17 	ldw	r3,52(r3)
1001a3dc:	e13ffb17 	ldw	r4,-20(fp)
1001a3e0:	20c7883a 	add	r3,r4,r3
1001a3e4:	18c20e04 	addi	r3,r3,2104
1001a3e8:	18c00003 	ldbu	r3,0(r3)
1001a3ec:	18c03fcc 	andi	r3,r3,255
1001a3f0:	18c0201c 	xori	r3,r3,128
1001a3f4:	18ffe004 	addi	r3,r3,-128
1001a3f8:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1001a3fc:	e0bffb17 	ldw	r2,-20(fp)
1001a400:	10800d17 	ldw	r2,52(r2)
1001a404:	10800044 	addi	r2,r2,1
1001a408:	10c1ffcc 	andi	r3,r2,2047
1001a40c:	e0bffb17 	ldw	r2,-20(fp)
1001a410:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
1001a414:	e0bffa17 	ldw	r2,-24(fp)
1001a418:	10bfffc4 	addi	r2,r2,-1
1001a41c:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
1001a420:	e0bffa17 	ldw	r2,-24(fp)
1001a424:	10000526 	beq	r2,zero,1001a43c <altera_avalon_jtag_uart_irq+0x1a8>
1001a428:	e0bffb17 	ldw	r2,-20(fp)
1001a42c:	10c00d17 	ldw	r3,52(r2)
1001a430:	e0bffb17 	ldw	r2,-20(fp)
1001a434:	10800c17 	ldw	r2,48(r2)
1001a438:	18bfe51e 	bne	r3,r2,1001a3d0 <__alt_data_end+0xf801a3d0>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
1001a43c:	e0bffa17 	ldw	r2,-24(fp)
1001a440:	103f9d26 	beq	r2,zero,1001a2b8 <__alt_data_end+0xf801a2b8>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
1001a444:	e0bffb17 	ldw	r2,-20(fp)
1001a448:	10c00817 	ldw	r3,32(r2)
1001a44c:	00bfff44 	movi	r2,-3
1001a450:	1886703a 	and	r3,r3,r2
1001a454:	e0bffb17 	ldw	r2,-20(fp)
1001a458:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1001a45c:	e0bffb17 	ldw	r2,-20(fp)
1001a460:	10800017 	ldw	r2,0(r2)
1001a464:	10800104 	addi	r2,r2,4
1001a468:	1007883a 	mov	r3,r2
1001a46c:	e0bffb17 	ldw	r2,-20(fp)
1001a470:	10800817 	ldw	r2,32(r2)
1001a474:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
1001a478:	e0bffc17 	ldw	r2,-16(fp)
1001a47c:	10800104 	addi	r2,r2,4
1001a480:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
1001a484:	003f8c06 	br	1001a2b8 <__alt_data_end+0xf801a2b8>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
1001a488:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
1001a48c:	0001883a 	nop
1001a490:	e037883a 	mov	sp,fp
1001a494:	df000017 	ldw	fp,0(sp)
1001a498:	dec00104 	addi	sp,sp,4
1001a49c:	f800283a 	ret

1001a4a0 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
1001a4a0:	defff804 	addi	sp,sp,-32
1001a4a4:	df000715 	stw	fp,28(sp)
1001a4a8:	df000704 	addi	fp,sp,28
1001a4ac:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
1001a4b0:	e0bffb17 	ldw	r2,-20(fp)
1001a4b4:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
1001a4b8:	e0bff917 	ldw	r2,-28(fp)
1001a4bc:	10800017 	ldw	r2,0(r2)
1001a4c0:	10800104 	addi	r2,r2,4
1001a4c4:	10800037 	ldwio	r2,0(r2)
1001a4c8:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
1001a4cc:	e0bffa17 	ldw	r2,-24(fp)
1001a4d0:	1081000c 	andi	r2,r2,1024
1001a4d4:	10000b26 	beq	r2,zero,1001a504 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
1001a4d8:	e0bff917 	ldw	r2,-28(fp)
1001a4dc:	10800017 	ldw	r2,0(r2)
1001a4e0:	10800104 	addi	r2,r2,4
1001a4e4:	1007883a 	mov	r3,r2
1001a4e8:	e0bff917 	ldw	r2,-28(fp)
1001a4ec:	10800817 	ldw	r2,32(r2)
1001a4f0:	10810014 	ori	r2,r2,1024
1001a4f4:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
1001a4f8:	e0bff917 	ldw	r2,-28(fp)
1001a4fc:	10000915 	stw	zero,36(r2)
1001a500:	00000a06 	br	1001a52c <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
1001a504:	e0bff917 	ldw	r2,-28(fp)
1001a508:	10c00917 	ldw	r3,36(r2)
1001a50c:	00a00034 	movhi	r2,32768
1001a510:	10bfff04 	addi	r2,r2,-4
1001a514:	10c00536 	bltu	r2,r3,1001a52c <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
1001a518:	e0bff917 	ldw	r2,-28(fp)
1001a51c:	10800917 	ldw	r2,36(r2)
1001a520:	10c00044 	addi	r3,r2,1
1001a524:	e0bff917 	ldw	r2,-28(fp)
1001a528:	10c00915 	stw	r3,36(r2)
1001a52c:	d0a6dd17 	ldw	r2,-25740(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
1001a530:	e037883a 	mov	sp,fp
1001a534:	df000017 	ldw	fp,0(sp)
1001a538:	dec00104 	addi	sp,sp,4
1001a53c:	f800283a 	ret

1001a540 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
1001a540:	defffd04 	addi	sp,sp,-12
1001a544:	df000215 	stw	fp,8(sp)
1001a548:	df000204 	addi	fp,sp,8
1001a54c:	e13ffe15 	stw	r4,-8(fp)
1001a550:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
1001a554:	00000506 	br	1001a56c <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
1001a558:	e0bfff17 	ldw	r2,-4(fp)
1001a55c:	1090000c 	andi	r2,r2,16384
1001a560:	10000226 	beq	r2,zero,1001a56c <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
1001a564:	00bffd44 	movi	r2,-11
1001a568:	00000b06 	br	1001a598 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
1001a56c:	e0bffe17 	ldw	r2,-8(fp)
1001a570:	10c00d17 	ldw	r3,52(r2)
1001a574:	e0bffe17 	ldw	r2,-8(fp)
1001a578:	10800c17 	ldw	r2,48(r2)
1001a57c:	18800526 	beq	r3,r2,1001a594 <altera_avalon_jtag_uart_close+0x54>
1001a580:	e0bffe17 	ldw	r2,-8(fp)
1001a584:	10c00917 	ldw	r3,36(r2)
1001a588:	e0bffe17 	ldw	r2,-8(fp)
1001a58c:	10800117 	ldw	r2,4(r2)
1001a590:	18bff136 	bltu	r3,r2,1001a558 <__alt_data_end+0xf801a558>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
1001a594:	0005883a 	mov	r2,zero
}
1001a598:	e037883a 	mov	sp,fp
1001a59c:	df000017 	ldw	fp,0(sp)
1001a5a0:	dec00104 	addi	sp,sp,4
1001a5a4:	f800283a 	ret

1001a5a8 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
1001a5a8:	defffa04 	addi	sp,sp,-24
1001a5ac:	df000515 	stw	fp,20(sp)
1001a5b0:	df000504 	addi	fp,sp,20
1001a5b4:	e13ffd15 	stw	r4,-12(fp)
1001a5b8:	e17ffe15 	stw	r5,-8(fp)
1001a5bc:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
1001a5c0:	00bff9c4 	movi	r2,-25
1001a5c4:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
1001a5c8:	e0bffe17 	ldw	r2,-8(fp)
1001a5cc:	10da8060 	cmpeqi	r3,r2,27137
1001a5d0:	1800031e 	bne	r3,zero,1001a5e0 <altera_avalon_jtag_uart_ioctl+0x38>
1001a5d4:	109a80a0 	cmpeqi	r2,r2,27138
1001a5d8:	1000181e 	bne	r2,zero,1001a63c <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
1001a5dc:	00002906 	br	1001a684 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
1001a5e0:	e0bffd17 	ldw	r2,-12(fp)
1001a5e4:	10c00117 	ldw	r3,4(r2)
1001a5e8:	00a00034 	movhi	r2,32768
1001a5ec:	10bfffc4 	addi	r2,r2,-1
1001a5f0:	18802126 	beq	r3,r2,1001a678 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
1001a5f4:	e0bfff17 	ldw	r2,-4(fp)
1001a5f8:	10800017 	ldw	r2,0(r2)
1001a5fc:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
1001a600:	e0bffc17 	ldw	r2,-16(fp)
1001a604:	10800090 	cmplti	r2,r2,2
1001a608:	1000061e 	bne	r2,zero,1001a624 <altera_avalon_jtag_uart_ioctl+0x7c>
1001a60c:	e0fffc17 	ldw	r3,-16(fp)
1001a610:	00a00034 	movhi	r2,32768
1001a614:	10bfffc4 	addi	r2,r2,-1
1001a618:	18800226 	beq	r3,r2,1001a624 <altera_avalon_jtag_uart_ioctl+0x7c>
1001a61c:	e0bffc17 	ldw	r2,-16(fp)
1001a620:	00000206 	br	1001a62c <altera_avalon_jtag_uart_ioctl+0x84>
1001a624:	00a00034 	movhi	r2,32768
1001a628:	10bfff84 	addi	r2,r2,-2
1001a62c:	e0fffd17 	ldw	r3,-12(fp)
1001a630:	18800115 	stw	r2,4(r3)
      rc = 0;
1001a634:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
1001a638:	00000f06 	br	1001a678 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
1001a63c:	e0bffd17 	ldw	r2,-12(fp)
1001a640:	10c00117 	ldw	r3,4(r2)
1001a644:	00a00034 	movhi	r2,32768
1001a648:	10bfffc4 	addi	r2,r2,-1
1001a64c:	18800c26 	beq	r3,r2,1001a680 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
1001a650:	e0bffd17 	ldw	r2,-12(fp)
1001a654:	10c00917 	ldw	r3,36(r2)
1001a658:	e0bffd17 	ldw	r2,-12(fp)
1001a65c:	10800117 	ldw	r2,4(r2)
1001a660:	1885803a 	cmpltu	r2,r3,r2
1001a664:	10c03fcc 	andi	r3,r2,255
1001a668:	e0bfff17 	ldw	r2,-4(fp)
1001a66c:	10c00015 	stw	r3,0(r2)
      rc = 0;
1001a670:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
1001a674:	00000206 	br	1001a680 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
1001a678:	0001883a 	nop
1001a67c:	00000106 	br	1001a684 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
1001a680:	0001883a 	nop

  default:
    break;
  }

  return rc;
1001a684:	e0bffb17 	ldw	r2,-20(fp)
}
1001a688:	e037883a 	mov	sp,fp
1001a68c:	df000017 	ldw	fp,0(sp)
1001a690:	dec00104 	addi	sp,sp,4
1001a694:	f800283a 	ret

1001a698 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
1001a698:	defff304 	addi	sp,sp,-52
1001a69c:	dfc00c15 	stw	ra,48(sp)
1001a6a0:	df000b15 	stw	fp,44(sp)
1001a6a4:	df000b04 	addi	fp,sp,44
1001a6a8:	e13ffc15 	stw	r4,-16(fp)
1001a6ac:	e17ffd15 	stw	r5,-12(fp)
1001a6b0:	e1bffe15 	stw	r6,-8(fp)
1001a6b4:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
1001a6b8:	e0bffd17 	ldw	r2,-12(fp)
1001a6bc:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
1001a6c0:	00004706 	br	1001a7e0 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
1001a6c4:	e0bffc17 	ldw	r2,-16(fp)
1001a6c8:	10800a17 	ldw	r2,40(r2)
1001a6cc:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
1001a6d0:	e0bffc17 	ldw	r2,-16(fp)
1001a6d4:	10800b17 	ldw	r2,44(r2)
1001a6d8:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
1001a6dc:	e0fff717 	ldw	r3,-36(fp)
1001a6e0:	e0bff817 	ldw	r2,-32(fp)
1001a6e4:	18800536 	bltu	r3,r2,1001a6fc <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
1001a6e8:	e0fff717 	ldw	r3,-36(fp)
1001a6ec:	e0bff817 	ldw	r2,-32(fp)
1001a6f0:	1885c83a 	sub	r2,r3,r2
1001a6f4:	e0bff615 	stw	r2,-40(fp)
1001a6f8:	00000406 	br	1001a70c <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
1001a6fc:	00c20004 	movi	r3,2048
1001a700:	e0bff817 	ldw	r2,-32(fp)
1001a704:	1885c83a 	sub	r2,r3,r2
1001a708:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
1001a70c:	e0bff617 	ldw	r2,-40(fp)
1001a710:	10001e26 	beq	r2,zero,1001a78c <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
1001a714:	e0fffe17 	ldw	r3,-8(fp)
1001a718:	e0bff617 	ldw	r2,-40(fp)
1001a71c:	1880022e 	bgeu	r3,r2,1001a728 <altera_avalon_jtag_uart_read+0x90>
        n = space;
1001a720:	e0bffe17 	ldw	r2,-8(fp)
1001a724:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
1001a728:	e0bffc17 	ldw	r2,-16(fp)
1001a72c:	10c00e04 	addi	r3,r2,56
1001a730:	e0bff817 	ldw	r2,-32(fp)
1001a734:	1885883a 	add	r2,r3,r2
1001a738:	e1bff617 	ldw	r6,-40(fp)
1001a73c:	100b883a 	mov	r5,r2
1001a740:	e13ff517 	ldw	r4,-44(fp)
1001a744:	000b0f80 	call	1000b0f8 <memcpy>
      ptr   += n;
1001a748:	e0fff517 	ldw	r3,-44(fp)
1001a74c:	e0bff617 	ldw	r2,-40(fp)
1001a750:	1885883a 	add	r2,r3,r2
1001a754:	e0bff515 	stw	r2,-44(fp)
      space -= n;
1001a758:	e0fffe17 	ldw	r3,-8(fp)
1001a75c:	e0bff617 	ldw	r2,-40(fp)
1001a760:	1885c83a 	sub	r2,r3,r2
1001a764:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1001a768:	e0fff817 	ldw	r3,-32(fp)
1001a76c:	e0bff617 	ldw	r2,-40(fp)
1001a770:	1885883a 	add	r2,r3,r2
1001a774:	10c1ffcc 	andi	r3,r2,2047
1001a778:	e0bffc17 	ldw	r2,-16(fp)
1001a77c:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
1001a780:	e0bffe17 	ldw	r2,-8(fp)
1001a784:	00bfcf16 	blt	zero,r2,1001a6c4 <__alt_data_end+0xf801a6c4>
1001a788:	00000106 	br	1001a790 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
1001a78c:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
1001a790:	e0fff517 	ldw	r3,-44(fp)
1001a794:	e0bffd17 	ldw	r2,-12(fp)
1001a798:	1880141e 	bne	r3,r2,1001a7ec <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
1001a79c:	e0bfff17 	ldw	r2,-4(fp)
1001a7a0:	1090000c 	andi	r2,r2,16384
1001a7a4:	1000131e 	bne	r2,zero,1001a7f4 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
1001a7a8:	0001883a 	nop
1001a7ac:	e0bffc17 	ldw	r2,-16(fp)
1001a7b0:	10c00a17 	ldw	r3,40(r2)
1001a7b4:	e0bff717 	ldw	r2,-36(fp)
1001a7b8:	1880051e 	bne	r3,r2,1001a7d0 <altera_avalon_jtag_uart_read+0x138>
1001a7bc:	e0bffc17 	ldw	r2,-16(fp)
1001a7c0:	10c00917 	ldw	r3,36(r2)
1001a7c4:	e0bffc17 	ldw	r2,-16(fp)
1001a7c8:	10800117 	ldw	r2,4(r2)
1001a7cc:	18bff736 	bltu	r3,r2,1001a7ac <__alt_data_end+0xf801a7ac>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
1001a7d0:	e0bffc17 	ldw	r2,-16(fp)
1001a7d4:	10c00a17 	ldw	r3,40(r2)
1001a7d8:	e0bff717 	ldw	r2,-36(fp)
1001a7dc:	18800726 	beq	r3,r2,1001a7fc <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
1001a7e0:	e0bffe17 	ldw	r2,-8(fp)
1001a7e4:	00bfb716 	blt	zero,r2,1001a6c4 <__alt_data_end+0xf801a6c4>
1001a7e8:	00000506 	br	1001a800 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
1001a7ec:	0001883a 	nop
1001a7f0:	00000306 	br	1001a800 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
1001a7f4:	0001883a 	nop
1001a7f8:	00000106 	br	1001a800 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
1001a7fc:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
1001a800:	e0fff517 	ldw	r3,-44(fp)
1001a804:	e0bffd17 	ldw	r2,-12(fp)
1001a808:	18801826 	beq	r3,r2,1001a86c <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1001a80c:	0005303a 	rdctl	r2,status
1001a810:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1001a814:	e0fffb17 	ldw	r3,-20(fp)
1001a818:	00bfff84 	movi	r2,-2
1001a81c:	1884703a 	and	r2,r3,r2
1001a820:	1001703a 	wrctl	status,r2
  
  return context;
1001a824:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
1001a828:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
1001a82c:	e0bffc17 	ldw	r2,-16(fp)
1001a830:	10800817 	ldw	r2,32(r2)
1001a834:	10c00054 	ori	r3,r2,1
1001a838:	e0bffc17 	ldw	r2,-16(fp)
1001a83c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1001a840:	e0bffc17 	ldw	r2,-16(fp)
1001a844:	10800017 	ldw	r2,0(r2)
1001a848:	10800104 	addi	r2,r2,4
1001a84c:	1007883a 	mov	r3,r2
1001a850:	e0bffc17 	ldw	r2,-16(fp)
1001a854:	10800817 	ldw	r2,32(r2)
1001a858:	18800035 	stwio	r2,0(r3)
1001a85c:	e0bffa17 	ldw	r2,-24(fp)
1001a860:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1001a864:	e0bff917 	ldw	r2,-28(fp)
1001a868:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
1001a86c:	e0fff517 	ldw	r3,-44(fp)
1001a870:	e0bffd17 	ldw	r2,-12(fp)
1001a874:	18800426 	beq	r3,r2,1001a888 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
1001a878:	e0fff517 	ldw	r3,-44(fp)
1001a87c:	e0bffd17 	ldw	r2,-12(fp)
1001a880:	1885c83a 	sub	r2,r3,r2
1001a884:	00000606 	br	1001a8a0 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
1001a888:	e0bfff17 	ldw	r2,-4(fp)
1001a88c:	1090000c 	andi	r2,r2,16384
1001a890:	10000226 	beq	r2,zero,1001a89c <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
1001a894:	00bffd44 	movi	r2,-11
1001a898:	00000106 	br	1001a8a0 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
1001a89c:	00bffec4 	movi	r2,-5
}
1001a8a0:	e037883a 	mov	sp,fp
1001a8a4:	dfc00117 	ldw	ra,4(sp)
1001a8a8:	df000017 	ldw	fp,0(sp)
1001a8ac:	dec00204 	addi	sp,sp,8
1001a8b0:	f800283a 	ret

1001a8b4 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
1001a8b4:	defff304 	addi	sp,sp,-52
1001a8b8:	dfc00c15 	stw	ra,48(sp)
1001a8bc:	df000b15 	stw	fp,44(sp)
1001a8c0:	df000b04 	addi	fp,sp,44
1001a8c4:	e13ffc15 	stw	r4,-16(fp)
1001a8c8:	e17ffd15 	stw	r5,-12(fp)
1001a8cc:	e1bffe15 	stw	r6,-8(fp)
1001a8d0:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
1001a8d4:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
1001a8d8:	e0bffd17 	ldw	r2,-12(fp)
1001a8dc:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
1001a8e0:	00003706 	br	1001a9c0 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
1001a8e4:	e0bffc17 	ldw	r2,-16(fp)
1001a8e8:	10800c17 	ldw	r2,48(r2)
1001a8ec:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
1001a8f0:	e0bffc17 	ldw	r2,-16(fp)
1001a8f4:	10800d17 	ldw	r2,52(r2)
1001a8f8:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
1001a8fc:	e0fff917 	ldw	r3,-28(fp)
1001a900:	e0bff517 	ldw	r2,-44(fp)
1001a904:	1880062e 	bgeu	r3,r2,1001a920 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
1001a908:	e0fff517 	ldw	r3,-44(fp)
1001a90c:	e0bff917 	ldw	r2,-28(fp)
1001a910:	1885c83a 	sub	r2,r3,r2
1001a914:	10bfffc4 	addi	r2,r2,-1
1001a918:	e0bff615 	stw	r2,-40(fp)
1001a91c:	00000b06 	br	1001a94c <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
1001a920:	e0bff517 	ldw	r2,-44(fp)
1001a924:	10000526 	beq	r2,zero,1001a93c <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
1001a928:	00c20004 	movi	r3,2048
1001a92c:	e0bff917 	ldw	r2,-28(fp)
1001a930:	1885c83a 	sub	r2,r3,r2
1001a934:	e0bff615 	stw	r2,-40(fp)
1001a938:	00000406 	br	1001a94c <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
1001a93c:	00c1ffc4 	movi	r3,2047
1001a940:	e0bff917 	ldw	r2,-28(fp)
1001a944:	1885c83a 	sub	r2,r3,r2
1001a948:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
1001a94c:	e0bff617 	ldw	r2,-40(fp)
1001a950:	10001e26 	beq	r2,zero,1001a9cc <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
1001a954:	e0fffe17 	ldw	r3,-8(fp)
1001a958:	e0bff617 	ldw	r2,-40(fp)
1001a95c:	1880022e 	bgeu	r3,r2,1001a968 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
1001a960:	e0bffe17 	ldw	r2,-8(fp)
1001a964:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
1001a968:	e0bffc17 	ldw	r2,-16(fp)
1001a96c:	10c20e04 	addi	r3,r2,2104
1001a970:	e0bff917 	ldw	r2,-28(fp)
1001a974:	1885883a 	add	r2,r3,r2
1001a978:	e1bff617 	ldw	r6,-40(fp)
1001a97c:	e17ffd17 	ldw	r5,-12(fp)
1001a980:	1009883a 	mov	r4,r2
1001a984:	000b0f80 	call	1000b0f8 <memcpy>
      ptr   += n;
1001a988:	e0fffd17 	ldw	r3,-12(fp)
1001a98c:	e0bff617 	ldw	r2,-40(fp)
1001a990:	1885883a 	add	r2,r3,r2
1001a994:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
1001a998:	e0fffe17 	ldw	r3,-8(fp)
1001a99c:	e0bff617 	ldw	r2,-40(fp)
1001a9a0:	1885c83a 	sub	r2,r3,r2
1001a9a4:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1001a9a8:	e0fff917 	ldw	r3,-28(fp)
1001a9ac:	e0bff617 	ldw	r2,-40(fp)
1001a9b0:	1885883a 	add	r2,r3,r2
1001a9b4:	10c1ffcc 	andi	r3,r2,2047
1001a9b8:	e0bffc17 	ldw	r2,-16(fp)
1001a9bc:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
1001a9c0:	e0bffe17 	ldw	r2,-8(fp)
1001a9c4:	00bfc716 	blt	zero,r2,1001a8e4 <__alt_data_end+0xf801a8e4>
1001a9c8:	00000106 	br	1001a9d0 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
1001a9cc:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1001a9d0:	0005303a 	rdctl	r2,status
1001a9d4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1001a9d8:	e0fffb17 	ldw	r3,-20(fp)
1001a9dc:	00bfff84 	movi	r2,-2
1001a9e0:	1884703a 	and	r2,r3,r2
1001a9e4:	1001703a 	wrctl	status,r2
  
  return context;
1001a9e8:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
1001a9ec:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
1001a9f0:	e0bffc17 	ldw	r2,-16(fp)
1001a9f4:	10800817 	ldw	r2,32(r2)
1001a9f8:	10c00094 	ori	r3,r2,2
1001a9fc:	e0bffc17 	ldw	r2,-16(fp)
1001aa00:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1001aa04:	e0bffc17 	ldw	r2,-16(fp)
1001aa08:	10800017 	ldw	r2,0(r2)
1001aa0c:	10800104 	addi	r2,r2,4
1001aa10:	1007883a 	mov	r3,r2
1001aa14:	e0bffc17 	ldw	r2,-16(fp)
1001aa18:	10800817 	ldw	r2,32(r2)
1001aa1c:	18800035 	stwio	r2,0(r3)
1001aa20:	e0bffa17 	ldw	r2,-24(fp)
1001aa24:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1001aa28:	e0bff817 	ldw	r2,-32(fp)
1001aa2c:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
1001aa30:	e0bffe17 	ldw	r2,-8(fp)
1001aa34:	0080100e 	bge	zero,r2,1001aa78 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
1001aa38:	e0bfff17 	ldw	r2,-4(fp)
1001aa3c:	1090000c 	andi	r2,r2,16384
1001aa40:	1000101e 	bne	r2,zero,1001aa84 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
1001aa44:	0001883a 	nop
1001aa48:	e0bffc17 	ldw	r2,-16(fp)
1001aa4c:	10c00d17 	ldw	r3,52(r2)
1001aa50:	e0bff517 	ldw	r2,-44(fp)
1001aa54:	1880051e 	bne	r3,r2,1001aa6c <altera_avalon_jtag_uart_write+0x1b8>
1001aa58:	e0bffc17 	ldw	r2,-16(fp)
1001aa5c:	10c00917 	ldw	r3,36(r2)
1001aa60:	e0bffc17 	ldw	r2,-16(fp)
1001aa64:	10800117 	ldw	r2,4(r2)
1001aa68:	18bff736 	bltu	r3,r2,1001aa48 <__alt_data_end+0xf801aa48>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
1001aa6c:	e0bffc17 	ldw	r2,-16(fp)
1001aa70:	10800917 	ldw	r2,36(r2)
1001aa74:	1000051e 	bne	r2,zero,1001aa8c <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
1001aa78:	e0bffe17 	ldw	r2,-8(fp)
1001aa7c:	00bfd016 	blt	zero,r2,1001a9c0 <__alt_data_end+0xf801a9c0>
1001aa80:	00000306 	br	1001aa90 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
1001aa84:	0001883a 	nop
1001aa88:	00000106 	br	1001aa90 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
1001aa8c:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
1001aa90:	e0fffd17 	ldw	r3,-12(fp)
1001aa94:	e0bff717 	ldw	r2,-36(fp)
1001aa98:	18800426 	beq	r3,r2,1001aaac <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
1001aa9c:	e0fffd17 	ldw	r3,-12(fp)
1001aaa0:	e0bff717 	ldw	r2,-36(fp)
1001aaa4:	1885c83a 	sub	r2,r3,r2
1001aaa8:	00000606 	br	1001aac4 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
1001aaac:	e0bfff17 	ldw	r2,-4(fp)
1001aab0:	1090000c 	andi	r2,r2,16384
1001aab4:	10000226 	beq	r2,zero,1001aac0 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
1001aab8:	00bffd44 	movi	r2,-11
1001aabc:	00000106 	br	1001aac4 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
1001aac0:	00bffec4 	movi	r2,-5
}
1001aac4:	e037883a 	mov	sp,fp
1001aac8:	dfc00117 	ldw	ra,4(sp)
1001aacc:	df000017 	ldw	fp,0(sp)
1001aad0:	dec00204 	addi	sp,sp,8
1001aad4:	f800283a 	ret

1001aad8 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
1001aad8:	defffa04 	addi	sp,sp,-24
1001aadc:	dfc00515 	stw	ra,20(sp)
1001aae0:	df000415 	stw	fp,16(sp)
1001aae4:	df000404 	addi	fp,sp,16
1001aae8:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
1001aaec:	0007883a 	mov	r3,zero
1001aaf0:	e0bfff17 	ldw	r2,-4(fp)
1001aaf4:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
1001aaf8:	e0bfff17 	ldw	r2,-4(fp)
1001aafc:	10800104 	addi	r2,r2,4
1001ab00:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1001ab04:	0005303a 	rdctl	r2,status
1001ab08:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1001ab0c:	e0fffd17 	ldw	r3,-12(fp)
1001ab10:	00bfff84 	movi	r2,-2
1001ab14:	1884703a 	and	r2,r3,r2
1001ab18:	1001703a 	wrctl	status,r2
  
  return context;
1001ab1c:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
1001ab20:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
1001ab24:	001b7500 	call	1001b750 <alt_tick>
1001ab28:	e0bffc17 	ldw	r2,-16(fp)
1001ab2c:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1001ab30:	e0bffe17 	ldw	r2,-8(fp)
1001ab34:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
1001ab38:	0001883a 	nop
1001ab3c:	e037883a 	mov	sp,fp
1001ab40:	dfc00117 	ldw	ra,4(sp)
1001ab44:	df000017 	ldw	fp,0(sp)
1001ab48:	dec00204 	addi	sp,sp,8
1001ab4c:	f800283a 	ret

1001ab50 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
1001ab50:	defff804 	addi	sp,sp,-32
1001ab54:	dfc00715 	stw	ra,28(sp)
1001ab58:	df000615 	stw	fp,24(sp)
1001ab5c:	df000604 	addi	fp,sp,24
1001ab60:	e13ffc15 	stw	r4,-16(fp)
1001ab64:	e17ffd15 	stw	r5,-12(fp)
1001ab68:	e1bffe15 	stw	r6,-8(fp)
1001ab6c:	e1ffff15 	stw	r7,-4(fp)
1001ab70:	e0bfff17 	ldw	r2,-4(fp)
1001ab74:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
1001ab78:	d0a6dd17 	ldw	r2,-25740(gp)
1001ab7c:	1000021e 	bne	r2,zero,1001ab88 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
1001ab80:	e0bffb17 	ldw	r2,-20(fp)
1001ab84:	d0a6dd15 	stw	r2,-25740(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
1001ab88:	e0bffc17 	ldw	r2,-16(fp)
1001ab8c:	10800104 	addi	r2,r2,4
1001ab90:	00c001c4 	movi	r3,7
1001ab94:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
1001ab98:	d8000015 	stw	zero,0(sp)
1001ab9c:	e1fffc17 	ldw	r7,-16(fp)
1001aba0:	018400b4 	movhi	r6,4098
1001aba4:	31aab604 	addi	r6,r6,-21800
1001aba8:	e17ffe17 	ldw	r5,-8(fp)
1001abac:	e13ffd17 	ldw	r4,-12(fp)
1001abb0:	001b0300 	call	1001b030 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
1001abb4:	0001883a 	nop
1001abb8:	e037883a 	mov	sp,fp
1001abbc:	dfc00117 	ldw	ra,4(sp)
1001abc0:	df000017 	ldw	fp,0(sp)
1001abc4:	dec00204 	addi	sp,sp,8
1001abc8:	f800283a 	ret

1001abcc <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
1001abcc:	defff504 	addi	sp,sp,-44
1001abd0:	df000a15 	stw	fp,40(sp)
1001abd4:	df000a04 	addi	fp,sp,40
1001abd8:	e13ffc15 	stw	r4,-16(fp)
1001abdc:	e17ffd15 	stw	r5,-12(fp)
1001abe0:	e1bffe15 	stw	r6,-8(fp)
1001abe4:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
1001abe8:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
1001abec:	d0a6dd17 	ldw	r2,-25740(gp)
  
  if (alt_ticks_per_second ())
1001abf0:	10003c26 	beq	r2,zero,1001ace4 <alt_alarm_start+0x118>
  {
    if (alarm)
1001abf4:	e0bffc17 	ldw	r2,-16(fp)
1001abf8:	10003826 	beq	r2,zero,1001acdc <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
1001abfc:	e0bffc17 	ldw	r2,-16(fp)
1001ac00:	e0fffe17 	ldw	r3,-8(fp)
1001ac04:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
1001ac08:	e0bffc17 	ldw	r2,-16(fp)
1001ac0c:	e0ffff17 	ldw	r3,-4(fp)
1001ac10:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1001ac14:	0005303a 	rdctl	r2,status
1001ac18:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1001ac1c:	e0fff917 	ldw	r3,-28(fp)
1001ac20:	00bfff84 	movi	r2,-2
1001ac24:	1884703a 	and	r2,r3,r2
1001ac28:	1001703a 	wrctl	status,r2
  
  return context;
1001ac2c:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
1001ac30:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
1001ac34:	d0a6de17 	ldw	r2,-25736(gp)
      
      current_nticks = alt_nticks();
1001ac38:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
1001ac3c:	e0fffd17 	ldw	r3,-12(fp)
1001ac40:	e0bff617 	ldw	r2,-40(fp)
1001ac44:	1885883a 	add	r2,r3,r2
1001ac48:	10c00044 	addi	r3,r2,1
1001ac4c:	e0bffc17 	ldw	r2,-16(fp)
1001ac50:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
1001ac54:	e0bffc17 	ldw	r2,-16(fp)
1001ac58:	10c00217 	ldw	r3,8(r2)
1001ac5c:	e0bff617 	ldw	r2,-40(fp)
1001ac60:	1880042e 	bgeu	r3,r2,1001ac74 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
1001ac64:	e0bffc17 	ldw	r2,-16(fp)
1001ac68:	00c00044 	movi	r3,1
1001ac6c:	10c00405 	stb	r3,16(r2)
1001ac70:	00000206 	br	1001ac7c <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
1001ac74:	e0bffc17 	ldw	r2,-16(fp)
1001ac78:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
1001ac7c:	e0bffc17 	ldw	r2,-16(fp)
1001ac80:	d0e01104 	addi	r3,gp,-32700
1001ac84:	e0fffa15 	stw	r3,-24(fp)
1001ac88:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
1001ac8c:	e0bffb17 	ldw	r2,-20(fp)
1001ac90:	e0fffa17 	ldw	r3,-24(fp)
1001ac94:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
1001ac98:	e0bffa17 	ldw	r2,-24(fp)
1001ac9c:	10c00017 	ldw	r3,0(r2)
1001aca0:	e0bffb17 	ldw	r2,-20(fp)
1001aca4:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
1001aca8:	e0bffa17 	ldw	r2,-24(fp)
1001acac:	10800017 	ldw	r2,0(r2)
1001acb0:	e0fffb17 	ldw	r3,-20(fp)
1001acb4:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
1001acb8:	e0bffa17 	ldw	r2,-24(fp)
1001acbc:	e0fffb17 	ldw	r3,-20(fp)
1001acc0:	10c00015 	stw	r3,0(r2)
1001acc4:	e0bff817 	ldw	r2,-32(fp)
1001acc8:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1001accc:	e0bff717 	ldw	r2,-36(fp)
1001acd0:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
1001acd4:	0005883a 	mov	r2,zero
1001acd8:	00000306 	br	1001ace8 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
1001acdc:	00bffa84 	movi	r2,-22
1001ace0:	00000106 	br	1001ace8 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
1001ace4:	00bfde84 	movi	r2,-134
  }
}
1001ace8:	e037883a 	mov	sp,fp
1001acec:	df000017 	ldw	fp,0(sp)
1001acf0:	dec00104 	addi	sp,sp,4
1001acf4:	f800283a 	ret

1001acf8 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
1001acf8:	defffa04 	addi	sp,sp,-24
1001acfc:	dfc00515 	stw	ra,20(sp)
1001ad00:	df000415 	stw	fp,16(sp)
1001ad04:	df000404 	addi	fp,sp,16
1001ad08:	e13fff15 	stw	r4,-4(fp)
  int big_loops;
  alt_u32 cycles_per_loop;
  
  if (!strcmp(NIOS2_CPU_IMPLEMENTATION,"tiny"))
  {
    cycles_per_loop = 9;
1001ad0c:	00800244 	movi	r2,9
1001ad10:	e0bffd15 	stw	r2,-12(fp)
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
1001ad14:	014003f4 	movhi	r5,15
1001ad18:	29509004 	addi	r5,r5,16960
1001ad1c:	e13ffd17 	ldw	r4,-12(fp)
1001ad20:	00034380 	call	10003438 <__mulsi3>
1001ad24:	100b883a 	mov	r5,r2
1001ad28:	0100bef4 	movhi	r4,763
1001ad2c:	213c2004 	addi	r4,r4,-3968
1001ad30:	000337c0 	call	1000337c <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
1001ad34:	100b883a 	mov	r5,r2
1001ad38:	01200034 	movhi	r4,32768
1001ad3c:	213fffc4 	addi	r4,r4,-1
1001ad40:	000337c0 	call	1000337c <__udivsi3>
1001ad44:	100b883a 	mov	r5,r2
1001ad48:	e13fff17 	ldw	r4,-4(fp)
1001ad4c:	000337c0 	call	1000337c <__udivsi3>
1001ad50:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
1001ad54:	e0bffe17 	ldw	r2,-8(fp)
1001ad58:	10002a26 	beq	r2,zero,1001ae04 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
1001ad5c:	e03ffc15 	stw	zero,-16(fp)
1001ad60:	00001706 	br	1001adc0 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
1001ad64:	00a00034 	movhi	r2,32768
1001ad68:	10bfffc4 	addi	r2,r2,-1
1001ad6c:	10bfffc4 	addi	r2,r2,-1
1001ad70:	103ffe1e 	bne	r2,zero,1001ad6c <__alt_data_end+0xf801ad6c>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
1001ad74:	014003f4 	movhi	r5,15
1001ad78:	29509004 	addi	r5,r5,16960
1001ad7c:	e13ffd17 	ldw	r4,-12(fp)
1001ad80:	00034380 	call	10003438 <__mulsi3>
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
1001ad84:	100b883a 	mov	r5,r2
1001ad88:	0100bef4 	movhi	r4,763
1001ad8c:	213c2004 	addi	r4,r4,-3968
1001ad90:	000337c0 	call	1000337c <__udivsi3>
1001ad94:	100b883a 	mov	r5,r2
1001ad98:	01200034 	movhi	r4,32768
1001ad9c:	213fffc4 	addi	r4,r4,-1
1001ada0:	000337c0 	call	1000337c <__udivsi3>
1001ada4:	1007883a 	mov	r3,r2
1001ada8:	e0bfff17 	ldw	r2,-4(fp)
1001adac:	10c5c83a 	sub	r2,r2,r3
1001adb0:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
1001adb4:	e0bffc17 	ldw	r2,-16(fp)
1001adb8:	10800044 	addi	r2,r2,1
1001adbc:	e0bffc15 	stw	r2,-16(fp)
1001adc0:	e0fffc17 	ldw	r3,-16(fp)
1001adc4:	e0bffe17 	ldw	r2,-8(fp)
1001adc8:	18bfe616 	blt	r3,r2,1001ad64 <__alt_data_end+0xf801ad64>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
1001adcc:	014003f4 	movhi	r5,15
1001add0:	29509004 	addi	r5,r5,16960
1001add4:	e13ffd17 	ldw	r4,-12(fp)
1001add8:	00034380 	call	10003438 <__mulsi3>
1001addc:	100b883a 	mov	r5,r2
1001ade0:	0100bef4 	movhi	r4,763
1001ade4:	213c2004 	addi	r4,r4,-3968
1001ade8:	000337c0 	call	1000337c <__udivsi3>
1001adec:	e17fff17 	ldw	r5,-4(fp)
1001adf0:	1009883a 	mov	r4,r2
1001adf4:	00034380 	call	10003438 <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
1001adf8:	10bfffc4 	addi	r2,r2,-1
1001adfc:	103ffe1e 	bne	r2,zero,1001adf8 <__alt_data_end+0xf801adf8>
1001ae00:	00000d06 	br	1001ae38 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
1001ae04:	014003f4 	movhi	r5,15
1001ae08:	29509004 	addi	r5,r5,16960
1001ae0c:	e13ffd17 	ldw	r4,-12(fp)
1001ae10:	00034380 	call	10003438 <__mulsi3>
1001ae14:	100b883a 	mov	r5,r2
1001ae18:	0100bef4 	movhi	r4,763
1001ae1c:	213c2004 	addi	r4,r4,-3968
1001ae20:	000337c0 	call	1000337c <__udivsi3>
1001ae24:	e17fff17 	ldw	r5,-4(fp)
1001ae28:	1009883a 	mov	r4,r2
1001ae2c:	00034380 	call	10003438 <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
1001ae30:	10bfffc4 	addi	r2,r2,-1
1001ae34:	00bffe16 	blt	zero,r2,1001ae30 <__alt_data_end+0xf801ae30>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
1001ae38:	0005883a 	mov	r2,zero
}
1001ae3c:	e037883a 	mov	sp,fp
1001ae40:	dfc00117 	ldw	ra,4(sp)
1001ae44:	df000017 	ldw	fp,0(sp)
1001ae48:	dec00204 	addi	sp,sp,8
1001ae4c:	f800283a 	ret

1001ae50 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
1001ae50:	deffff04 	addi	sp,sp,-4
1001ae54:	df000015 	stw	fp,0(sp)
1001ae58:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
1001ae5c:	0001883a 	nop
1001ae60:	e037883a 	mov	sp,fp
1001ae64:	df000017 	ldw	fp,0(sp)
1001ae68:	dec00104 	addi	sp,sp,4
1001ae6c:	f800283a 	ret

1001ae70 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1001ae70:	defffe04 	addi	sp,sp,-8
1001ae74:	dfc00115 	stw	ra,4(sp)
1001ae78:	df000015 	stw	fp,0(sp)
1001ae7c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1001ae80:	d0a00e17 	ldw	r2,-32712(gp)
1001ae84:	10000326 	beq	r2,zero,1001ae94 <alt_get_errno+0x24>
1001ae88:	d0a00e17 	ldw	r2,-32712(gp)
1001ae8c:	103ee83a 	callr	r2
1001ae90:	00000106 	br	1001ae98 <alt_get_errno+0x28>
1001ae94:	d0a6d504 	addi	r2,gp,-25772
}
1001ae98:	e037883a 	mov	sp,fp
1001ae9c:	dfc00117 	ldw	ra,4(sp)
1001aea0:	df000017 	ldw	fp,0(sp)
1001aea4:	dec00204 	addi	sp,sp,8
1001aea8:	f800283a 	ret

1001aeac <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
1001aeac:	defffa04 	addi	sp,sp,-24
1001aeb0:	dfc00515 	stw	ra,20(sp)
1001aeb4:	df000415 	stw	fp,16(sp)
1001aeb8:	df000404 	addi	fp,sp,16
1001aebc:	e13ffe15 	stw	r4,-8(fp)
1001aec0:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
1001aec4:	e0bffe17 	ldw	r2,-8(fp)
1001aec8:	10000326 	beq	r2,zero,1001aed8 <alt_dev_llist_insert+0x2c>
1001aecc:	e0bffe17 	ldw	r2,-8(fp)
1001aed0:	10800217 	ldw	r2,8(r2)
1001aed4:	1000061e 	bne	r2,zero,1001aef0 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
1001aed8:	001ae700 	call	1001ae70 <alt_get_errno>
1001aedc:	1007883a 	mov	r3,r2
1001aee0:	00800584 	movi	r2,22
1001aee4:	18800015 	stw	r2,0(r3)
    return -EINVAL;
1001aee8:	00bffa84 	movi	r2,-22
1001aeec:	00001306 	br	1001af3c <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
1001aef0:	e0bffe17 	ldw	r2,-8(fp)
1001aef4:	e0ffff17 	ldw	r3,-4(fp)
1001aef8:	e0fffc15 	stw	r3,-16(fp)
1001aefc:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
1001af00:	e0bffd17 	ldw	r2,-12(fp)
1001af04:	e0fffc17 	ldw	r3,-16(fp)
1001af08:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
1001af0c:	e0bffc17 	ldw	r2,-16(fp)
1001af10:	10c00017 	ldw	r3,0(r2)
1001af14:	e0bffd17 	ldw	r2,-12(fp)
1001af18:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
1001af1c:	e0bffc17 	ldw	r2,-16(fp)
1001af20:	10800017 	ldw	r2,0(r2)
1001af24:	e0fffd17 	ldw	r3,-12(fp)
1001af28:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
1001af2c:	e0bffc17 	ldw	r2,-16(fp)
1001af30:	e0fffd17 	ldw	r3,-12(fp)
1001af34:	10c00015 	stw	r3,0(r2)

  return 0;  
1001af38:	0005883a 	mov	r2,zero
}
1001af3c:	e037883a 	mov	sp,fp
1001af40:	dfc00117 	ldw	ra,4(sp)
1001af44:	df000017 	ldw	fp,0(sp)
1001af48:	dec00204 	addi	sp,sp,8
1001af4c:	f800283a 	ret

1001af50 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
1001af50:	defffd04 	addi	sp,sp,-12
1001af54:	dfc00215 	stw	ra,8(sp)
1001af58:	df000115 	stw	fp,4(sp)
1001af5c:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
1001af60:	008400b4 	movhi	r2,4098
1001af64:	10afc104 	addi	r2,r2,-16636
1001af68:	e0bfff15 	stw	r2,-4(fp)
1001af6c:	00000606 	br	1001af88 <_do_ctors+0x38>
        (*ctor) (); 
1001af70:	e0bfff17 	ldw	r2,-4(fp)
1001af74:	10800017 	ldw	r2,0(r2)
1001af78:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
1001af7c:	e0bfff17 	ldw	r2,-4(fp)
1001af80:	10bfff04 	addi	r2,r2,-4
1001af84:	e0bfff15 	stw	r2,-4(fp)
1001af88:	e0ffff17 	ldw	r3,-4(fp)
1001af8c:	008400b4 	movhi	r2,4098
1001af90:	10afc204 	addi	r2,r2,-16632
1001af94:	18bff62e 	bgeu	r3,r2,1001af70 <__alt_data_end+0xf801af70>
        (*ctor) (); 
}
1001af98:	0001883a 	nop
1001af9c:	e037883a 	mov	sp,fp
1001afa0:	dfc00117 	ldw	ra,4(sp)
1001afa4:	df000017 	ldw	fp,0(sp)
1001afa8:	dec00204 	addi	sp,sp,8
1001afac:	f800283a 	ret

1001afb0 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
1001afb0:	defffd04 	addi	sp,sp,-12
1001afb4:	dfc00215 	stw	ra,8(sp)
1001afb8:	df000115 	stw	fp,4(sp)
1001afbc:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
1001afc0:	008400b4 	movhi	r2,4098
1001afc4:	10afc104 	addi	r2,r2,-16636
1001afc8:	e0bfff15 	stw	r2,-4(fp)
1001afcc:	00000606 	br	1001afe8 <_do_dtors+0x38>
        (*dtor) (); 
1001afd0:	e0bfff17 	ldw	r2,-4(fp)
1001afd4:	10800017 	ldw	r2,0(r2)
1001afd8:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
1001afdc:	e0bfff17 	ldw	r2,-4(fp)
1001afe0:	10bfff04 	addi	r2,r2,-4
1001afe4:	e0bfff15 	stw	r2,-4(fp)
1001afe8:	e0ffff17 	ldw	r3,-4(fp)
1001afec:	008400b4 	movhi	r2,4098
1001aff0:	10afc204 	addi	r2,r2,-16632
1001aff4:	18bff62e 	bgeu	r3,r2,1001afd0 <__alt_data_end+0xf801afd0>
        (*dtor) (); 
}
1001aff8:	0001883a 	nop
1001affc:	e037883a 	mov	sp,fp
1001b000:	dfc00117 	ldw	ra,4(sp)
1001b004:	df000017 	ldw	fp,0(sp)
1001b008:	dec00204 	addi	sp,sp,8
1001b00c:	f800283a 	ret

1001b010 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
1001b010:	deffff04 	addi	sp,sp,-4
1001b014:	df000015 	stw	fp,0(sp)
1001b018:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
1001b01c:	0001883a 	nop
1001b020:	e037883a 	mov	sp,fp
1001b024:	df000017 	ldw	fp,0(sp)
1001b028:	dec00104 	addi	sp,sp,4
1001b02c:	f800283a 	ret

1001b030 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
1001b030:	defff904 	addi	sp,sp,-28
1001b034:	dfc00615 	stw	ra,24(sp)
1001b038:	df000515 	stw	fp,20(sp)
1001b03c:	df000504 	addi	fp,sp,20
1001b040:	e13ffc15 	stw	r4,-16(fp)
1001b044:	e17ffd15 	stw	r5,-12(fp)
1001b048:	e1bffe15 	stw	r6,-8(fp)
1001b04c:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
1001b050:	e0800217 	ldw	r2,8(fp)
1001b054:	d8800015 	stw	r2,0(sp)
1001b058:	e1ffff17 	ldw	r7,-4(fp)
1001b05c:	e1bffe17 	ldw	r6,-8(fp)
1001b060:	e17ffd17 	ldw	r5,-12(fp)
1001b064:	e13ffc17 	ldw	r4,-16(fp)
1001b068:	001b1e00 	call	1001b1e0 <alt_iic_isr_register>
}  
1001b06c:	e037883a 	mov	sp,fp
1001b070:	dfc00117 	ldw	ra,4(sp)
1001b074:	df000017 	ldw	fp,0(sp)
1001b078:	dec00204 	addi	sp,sp,8
1001b07c:	f800283a 	ret

1001b080 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
1001b080:	defff904 	addi	sp,sp,-28
1001b084:	df000615 	stw	fp,24(sp)
1001b088:	df000604 	addi	fp,sp,24
1001b08c:	e13ffe15 	stw	r4,-8(fp)
1001b090:	e17fff15 	stw	r5,-4(fp)
1001b094:	e0bfff17 	ldw	r2,-4(fp)
1001b098:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1001b09c:	0005303a 	rdctl	r2,status
1001b0a0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1001b0a4:	e0fffb17 	ldw	r3,-20(fp)
1001b0a8:	00bfff84 	movi	r2,-2
1001b0ac:	1884703a 	and	r2,r3,r2
1001b0b0:	1001703a 	wrctl	status,r2
  
  return context;
1001b0b4:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
1001b0b8:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
1001b0bc:	00c00044 	movi	r3,1
1001b0c0:	e0bffa17 	ldw	r2,-24(fp)
1001b0c4:	1884983a 	sll	r2,r3,r2
1001b0c8:	1007883a 	mov	r3,r2
1001b0cc:	d0a6dc17 	ldw	r2,-25744(gp)
1001b0d0:	1884b03a 	or	r2,r3,r2
1001b0d4:	d0a6dc15 	stw	r2,-25744(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
1001b0d8:	d0a6dc17 	ldw	r2,-25744(gp)
1001b0dc:	100170fa 	wrctl	ienable,r2
1001b0e0:	e0bffc17 	ldw	r2,-16(fp)
1001b0e4:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1001b0e8:	e0bffd17 	ldw	r2,-12(fp)
1001b0ec:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
1001b0f0:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
1001b0f4:	0001883a 	nop
}
1001b0f8:	e037883a 	mov	sp,fp
1001b0fc:	df000017 	ldw	fp,0(sp)
1001b100:	dec00104 	addi	sp,sp,4
1001b104:	f800283a 	ret

1001b108 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
1001b108:	defff904 	addi	sp,sp,-28
1001b10c:	df000615 	stw	fp,24(sp)
1001b110:	df000604 	addi	fp,sp,24
1001b114:	e13ffe15 	stw	r4,-8(fp)
1001b118:	e17fff15 	stw	r5,-4(fp)
1001b11c:	e0bfff17 	ldw	r2,-4(fp)
1001b120:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1001b124:	0005303a 	rdctl	r2,status
1001b128:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1001b12c:	e0fffb17 	ldw	r3,-20(fp)
1001b130:	00bfff84 	movi	r2,-2
1001b134:	1884703a 	and	r2,r3,r2
1001b138:	1001703a 	wrctl	status,r2
  
  return context;
1001b13c:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
1001b140:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
1001b144:	00c00044 	movi	r3,1
1001b148:	e0bffa17 	ldw	r2,-24(fp)
1001b14c:	1884983a 	sll	r2,r3,r2
1001b150:	0084303a 	nor	r2,zero,r2
1001b154:	1007883a 	mov	r3,r2
1001b158:	d0a6dc17 	ldw	r2,-25744(gp)
1001b15c:	1884703a 	and	r2,r3,r2
1001b160:	d0a6dc15 	stw	r2,-25744(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
1001b164:	d0a6dc17 	ldw	r2,-25744(gp)
1001b168:	100170fa 	wrctl	ienable,r2
1001b16c:	e0bffc17 	ldw	r2,-16(fp)
1001b170:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1001b174:	e0bffd17 	ldw	r2,-12(fp)
1001b178:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
1001b17c:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
1001b180:	0001883a 	nop
}
1001b184:	e037883a 	mov	sp,fp
1001b188:	df000017 	ldw	fp,0(sp)
1001b18c:	dec00104 	addi	sp,sp,4
1001b190:	f800283a 	ret

1001b194 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
1001b194:	defffc04 	addi	sp,sp,-16
1001b198:	df000315 	stw	fp,12(sp)
1001b19c:	df000304 	addi	fp,sp,12
1001b1a0:	e13ffe15 	stw	r4,-8(fp)
1001b1a4:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
1001b1a8:	000530fa 	rdctl	r2,ienable
1001b1ac:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
1001b1b0:	00c00044 	movi	r3,1
1001b1b4:	e0bfff17 	ldw	r2,-4(fp)
1001b1b8:	1884983a 	sll	r2,r3,r2
1001b1bc:	1007883a 	mov	r3,r2
1001b1c0:	e0bffd17 	ldw	r2,-12(fp)
1001b1c4:	1884703a 	and	r2,r3,r2
1001b1c8:	1004c03a 	cmpne	r2,r2,zero
1001b1cc:	10803fcc 	andi	r2,r2,255
}
1001b1d0:	e037883a 	mov	sp,fp
1001b1d4:	df000017 	ldw	fp,0(sp)
1001b1d8:	dec00104 	addi	sp,sp,4
1001b1dc:	f800283a 	ret

1001b1e0 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
1001b1e0:	defff504 	addi	sp,sp,-44
1001b1e4:	dfc00a15 	stw	ra,40(sp)
1001b1e8:	df000915 	stw	fp,36(sp)
1001b1ec:	df000904 	addi	fp,sp,36
1001b1f0:	e13ffc15 	stw	r4,-16(fp)
1001b1f4:	e17ffd15 	stw	r5,-12(fp)
1001b1f8:	e1bffe15 	stw	r6,-8(fp)
1001b1fc:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
1001b200:	00bffa84 	movi	r2,-22
1001b204:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
1001b208:	e0bffd17 	ldw	r2,-12(fp)
1001b20c:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
1001b210:	e0bff817 	ldw	r2,-32(fp)
1001b214:	10800808 	cmpgei	r2,r2,32
1001b218:	1000271e 	bne	r2,zero,1001b2b8 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1001b21c:	0005303a 	rdctl	r2,status
1001b220:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1001b224:	e0fffb17 	ldw	r3,-20(fp)
1001b228:	00bfff84 	movi	r2,-2
1001b22c:	1884703a 	and	r2,r3,r2
1001b230:	1001703a 	wrctl	status,r2
  
  return context;
1001b234:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
1001b238:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
1001b23c:	008400b4 	movhi	r2,4098
1001b240:	10811104 	addi	r2,r2,1092
1001b244:	e0fff817 	ldw	r3,-32(fp)
1001b248:	180690fa 	slli	r3,r3,3
1001b24c:	10c5883a 	add	r2,r2,r3
1001b250:	e0fffe17 	ldw	r3,-8(fp)
1001b254:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
1001b258:	008400b4 	movhi	r2,4098
1001b25c:	10811104 	addi	r2,r2,1092
1001b260:	e0fff817 	ldw	r3,-32(fp)
1001b264:	180690fa 	slli	r3,r3,3
1001b268:	10c5883a 	add	r2,r2,r3
1001b26c:	10800104 	addi	r2,r2,4
1001b270:	e0ffff17 	ldw	r3,-4(fp)
1001b274:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
1001b278:	e0bffe17 	ldw	r2,-8(fp)
1001b27c:	10000526 	beq	r2,zero,1001b294 <alt_iic_isr_register+0xb4>
1001b280:	e0bff817 	ldw	r2,-32(fp)
1001b284:	100b883a 	mov	r5,r2
1001b288:	e13ffc17 	ldw	r4,-16(fp)
1001b28c:	001b0800 	call	1001b080 <alt_ic_irq_enable>
1001b290:	00000406 	br	1001b2a4 <alt_iic_isr_register+0xc4>
1001b294:	e0bff817 	ldw	r2,-32(fp)
1001b298:	100b883a 	mov	r5,r2
1001b29c:	e13ffc17 	ldw	r4,-16(fp)
1001b2a0:	001b1080 	call	1001b108 <alt_ic_irq_disable>
1001b2a4:	e0bff715 	stw	r2,-36(fp)
1001b2a8:	e0bffa17 	ldw	r2,-24(fp)
1001b2ac:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1001b2b0:	e0bff917 	ldw	r2,-28(fp)
1001b2b4:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
1001b2b8:	e0bff717 	ldw	r2,-36(fp)
}
1001b2bc:	e037883a 	mov	sp,fp
1001b2c0:	dfc00117 	ldw	ra,4(sp)
1001b2c4:	df000017 	ldw	fp,0(sp)
1001b2c8:	dec00204 	addi	sp,sp,8
1001b2cc:	f800283a 	ret

1001b2d0 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
1001b2d0:	defff804 	addi	sp,sp,-32
1001b2d4:	dfc00715 	stw	ra,28(sp)
1001b2d8:	df000615 	stw	fp,24(sp)
1001b2dc:	dc000515 	stw	r16,20(sp)
1001b2e0:	df000604 	addi	fp,sp,24
1001b2e4:	e13ffb15 	stw	r4,-20(fp)
1001b2e8:	e17ffc15 	stw	r5,-16(fp)
1001b2ec:	e1bffd15 	stw	r6,-12(fp)
1001b2f0:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
1001b2f4:	e1bffe17 	ldw	r6,-8(fp)
1001b2f8:	e17ffd17 	ldw	r5,-12(fp)
1001b2fc:	e13ffc17 	ldw	r4,-16(fp)
1001b300:	001b5580 	call	1001b558 <open>
1001b304:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
1001b308:	e0bffa17 	ldw	r2,-24(fp)
1001b30c:	10002216 	blt	r2,zero,1001b398 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
1001b310:	040400b4 	movhi	r16,4098
1001b314:	8435a804 	addi	r16,r16,-10592
1001b318:	e0bffa17 	ldw	r2,-24(fp)
1001b31c:	01400304 	movi	r5,12
1001b320:	1009883a 	mov	r4,r2
1001b324:	00034380 	call	10003438 <__mulsi3>
1001b328:	8085883a 	add	r2,r16,r2
1001b32c:	10c00017 	ldw	r3,0(r2)
1001b330:	e0bffb17 	ldw	r2,-20(fp)
1001b334:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
1001b338:	040400b4 	movhi	r16,4098
1001b33c:	8435a804 	addi	r16,r16,-10592
1001b340:	e0bffa17 	ldw	r2,-24(fp)
1001b344:	01400304 	movi	r5,12
1001b348:	1009883a 	mov	r4,r2
1001b34c:	00034380 	call	10003438 <__mulsi3>
1001b350:	8085883a 	add	r2,r16,r2
1001b354:	10800104 	addi	r2,r2,4
1001b358:	10c00017 	ldw	r3,0(r2)
1001b35c:	e0bffb17 	ldw	r2,-20(fp)
1001b360:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
1001b364:	040400b4 	movhi	r16,4098
1001b368:	8435a804 	addi	r16,r16,-10592
1001b36c:	e0bffa17 	ldw	r2,-24(fp)
1001b370:	01400304 	movi	r5,12
1001b374:	1009883a 	mov	r4,r2
1001b378:	00034380 	call	10003438 <__mulsi3>
1001b37c:	8085883a 	add	r2,r16,r2
1001b380:	10800204 	addi	r2,r2,8
1001b384:	10c00017 	ldw	r3,0(r2)
1001b388:	e0bffb17 	ldw	r2,-20(fp)
1001b38c:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
1001b390:	e13ffa17 	ldw	r4,-24(fp)
1001b394:	0019d040 	call	10019d04 <alt_release_fd>
  }
} 
1001b398:	0001883a 	nop
1001b39c:	e6ffff04 	addi	sp,fp,-4
1001b3a0:	dfc00217 	ldw	ra,8(sp)
1001b3a4:	df000117 	ldw	fp,4(sp)
1001b3a8:	dc000017 	ldw	r16,0(sp)
1001b3ac:	dec00304 	addi	sp,sp,12
1001b3b0:	f800283a 	ret

1001b3b4 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
1001b3b4:	defffb04 	addi	sp,sp,-20
1001b3b8:	dfc00415 	stw	ra,16(sp)
1001b3bc:	df000315 	stw	fp,12(sp)
1001b3c0:	df000304 	addi	fp,sp,12
1001b3c4:	e13ffd15 	stw	r4,-12(fp)
1001b3c8:	e17ffe15 	stw	r5,-8(fp)
1001b3cc:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
1001b3d0:	01c07fc4 	movi	r7,511
1001b3d4:	01800044 	movi	r6,1
1001b3d8:	e17ffd17 	ldw	r5,-12(fp)
1001b3dc:	010400b4 	movhi	r4,4098
1001b3e0:	2135ab04 	addi	r4,r4,-10580
1001b3e4:	001b2d00 	call	1001b2d0 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
1001b3e8:	01c07fc4 	movi	r7,511
1001b3ec:	000d883a 	mov	r6,zero
1001b3f0:	e17ffe17 	ldw	r5,-8(fp)
1001b3f4:	010400b4 	movhi	r4,4098
1001b3f8:	2135a804 	addi	r4,r4,-10592
1001b3fc:	001b2d00 	call	1001b2d0 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
1001b400:	01c07fc4 	movi	r7,511
1001b404:	01800044 	movi	r6,1
1001b408:	e17fff17 	ldw	r5,-4(fp)
1001b40c:	010400b4 	movhi	r4,4098
1001b410:	2135ae04 	addi	r4,r4,-10568
1001b414:	001b2d00 	call	1001b2d0 <alt_open_fd>
}  
1001b418:	0001883a 	nop
1001b41c:	e037883a 	mov	sp,fp
1001b420:	dfc00117 	ldw	ra,4(sp)
1001b424:	df000017 	ldw	fp,0(sp)
1001b428:	dec00204 	addi	sp,sp,8
1001b42c:	f800283a 	ret

1001b430 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1001b430:	defffe04 	addi	sp,sp,-8
1001b434:	dfc00115 	stw	ra,4(sp)
1001b438:	df000015 	stw	fp,0(sp)
1001b43c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1001b440:	d0a00e17 	ldw	r2,-32712(gp)
1001b444:	10000326 	beq	r2,zero,1001b454 <alt_get_errno+0x24>
1001b448:	d0a00e17 	ldw	r2,-32712(gp)
1001b44c:	103ee83a 	callr	r2
1001b450:	00000106 	br	1001b458 <alt_get_errno+0x28>
1001b454:	d0a6d504 	addi	r2,gp,-25772
}
1001b458:	e037883a 	mov	sp,fp
1001b45c:	dfc00117 	ldw	ra,4(sp)
1001b460:	df000017 	ldw	fp,0(sp)
1001b464:	dec00204 	addi	sp,sp,8
1001b468:	f800283a 	ret

1001b46c <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
1001b46c:	defffb04 	addi	sp,sp,-20
1001b470:	dfc00415 	stw	ra,16(sp)
1001b474:	df000315 	stw	fp,12(sp)
1001b478:	dc000215 	stw	r16,8(sp)
1001b47c:	df000304 	addi	fp,sp,12
1001b480:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
1001b484:	e0bffe17 	ldw	r2,-8(fp)
1001b488:	10800217 	ldw	r2,8(r2)
1001b48c:	10d00034 	orhi	r3,r2,16384
1001b490:	e0bffe17 	ldw	r2,-8(fp)
1001b494:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
1001b498:	e03ffd15 	stw	zero,-12(fp)
1001b49c:	00002306 	br	1001b52c <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
1001b4a0:	040400b4 	movhi	r16,4098
1001b4a4:	8435a804 	addi	r16,r16,-10592
1001b4a8:	e0bffd17 	ldw	r2,-12(fp)
1001b4ac:	01400304 	movi	r5,12
1001b4b0:	1009883a 	mov	r4,r2
1001b4b4:	00034380 	call	10003438 <__mulsi3>
1001b4b8:	8085883a 	add	r2,r16,r2
1001b4bc:	10c00017 	ldw	r3,0(r2)
1001b4c0:	e0bffe17 	ldw	r2,-8(fp)
1001b4c4:	10800017 	ldw	r2,0(r2)
1001b4c8:	1880151e 	bne	r3,r2,1001b520 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
1001b4cc:	040400b4 	movhi	r16,4098
1001b4d0:	8435a804 	addi	r16,r16,-10592
1001b4d4:	e0bffd17 	ldw	r2,-12(fp)
1001b4d8:	01400304 	movi	r5,12
1001b4dc:	1009883a 	mov	r4,r2
1001b4e0:	00034380 	call	10003438 <__mulsi3>
1001b4e4:	8085883a 	add	r2,r16,r2
1001b4e8:	10800204 	addi	r2,r2,8
1001b4ec:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
1001b4f0:	10000b0e 	bge	r2,zero,1001b520 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
1001b4f4:	01400304 	movi	r5,12
1001b4f8:	e13ffd17 	ldw	r4,-12(fp)
1001b4fc:	00034380 	call	10003438 <__mulsi3>
1001b500:	1007883a 	mov	r3,r2
1001b504:	008400b4 	movhi	r2,4098
1001b508:	10b5a804 	addi	r2,r2,-10592
1001b50c:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
1001b510:	e0bffe17 	ldw	r2,-8(fp)
1001b514:	18800226 	beq	r3,r2,1001b520 <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
1001b518:	00bffcc4 	movi	r2,-13
1001b51c:	00000806 	br	1001b540 <alt_file_locked+0xd4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
1001b520:	e0bffd17 	ldw	r2,-12(fp)
1001b524:	10800044 	addi	r2,r2,1
1001b528:	e0bffd15 	stw	r2,-12(fp)
1001b52c:	d0a00d17 	ldw	r2,-32716(gp)
1001b530:	1007883a 	mov	r3,r2
1001b534:	e0bffd17 	ldw	r2,-12(fp)
1001b538:	18bfd92e 	bgeu	r3,r2,1001b4a0 <__alt_data_end+0xf801b4a0>
    }
  }
  
  /* The device is not locked */
 
  return 0;
1001b53c:	0005883a 	mov	r2,zero
}
1001b540:	e6ffff04 	addi	sp,fp,-4
1001b544:	dfc00217 	ldw	ra,8(sp)
1001b548:	df000117 	ldw	fp,4(sp)
1001b54c:	dc000017 	ldw	r16,0(sp)
1001b550:	dec00304 	addi	sp,sp,12
1001b554:	f800283a 	ret

1001b558 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
1001b558:	defff604 	addi	sp,sp,-40
1001b55c:	dfc00915 	stw	ra,36(sp)
1001b560:	df000815 	stw	fp,32(sp)
1001b564:	df000804 	addi	fp,sp,32
1001b568:	e13ffd15 	stw	r4,-12(fp)
1001b56c:	e17ffe15 	stw	r5,-8(fp)
1001b570:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
1001b574:	00bfffc4 	movi	r2,-1
1001b578:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
1001b57c:	00bffb44 	movi	r2,-19
1001b580:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
1001b584:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
1001b588:	d1600b04 	addi	r5,gp,-32724
1001b58c:	e13ffd17 	ldw	r4,-12(fp)
1001b590:	001b87c0 	call	1001b87c <alt_find_dev>
1001b594:	e0bff815 	stw	r2,-32(fp)
1001b598:	e0bff817 	ldw	r2,-32(fp)
1001b59c:	1000051e 	bne	r2,zero,1001b5b4 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
1001b5a0:	e13ffd17 	ldw	r4,-12(fp)
1001b5a4:	001b90c0 	call	1001b90c <alt_find_file>
1001b5a8:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
1001b5ac:	00800044 	movi	r2,1
1001b5b0:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
1001b5b4:	e0bff817 	ldw	r2,-32(fp)
1001b5b8:	10002b26 	beq	r2,zero,1001b668 <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
1001b5bc:	e13ff817 	ldw	r4,-32(fp)
1001b5c0:	001ba140 	call	1001ba14 <alt_get_fd>
1001b5c4:	e0bff915 	stw	r2,-28(fp)
1001b5c8:	e0bff917 	ldw	r2,-28(fp)
1001b5cc:	1000030e 	bge	r2,zero,1001b5dc <open+0x84>
    {
      status = index;
1001b5d0:	e0bff917 	ldw	r2,-28(fp)
1001b5d4:	e0bffa15 	stw	r2,-24(fp)
1001b5d8:	00002506 	br	1001b670 <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
1001b5dc:	01400304 	movi	r5,12
1001b5e0:	e13ff917 	ldw	r4,-28(fp)
1001b5e4:	00034380 	call	10003438 <__mulsi3>
1001b5e8:	1007883a 	mov	r3,r2
1001b5ec:	008400b4 	movhi	r2,4098
1001b5f0:	10b5a804 	addi	r2,r2,-10592
1001b5f4:	1885883a 	add	r2,r3,r2
1001b5f8:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
1001b5fc:	e0fffe17 	ldw	r3,-8(fp)
1001b600:	00900034 	movhi	r2,16384
1001b604:	10bfffc4 	addi	r2,r2,-1
1001b608:	1886703a 	and	r3,r3,r2
1001b60c:	e0bffc17 	ldw	r2,-16(fp)
1001b610:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
1001b614:	e0bffb17 	ldw	r2,-20(fp)
1001b618:	1000051e 	bne	r2,zero,1001b630 <open+0xd8>
1001b61c:	e13ffc17 	ldw	r4,-16(fp)
1001b620:	001b46c0 	call	1001b46c <alt_file_locked>
1001b624:	e0bffa15 	stw	r2,-24(fp)
1001b628:	e0bffa17 	ldw	r2,-24(fp)
1001b62c:	10001016 	blt	r2,zero,1001b670 <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
1001b630:	e0bff817 	ldw	r2,-32(fp)
1001b634:	10800317 	ldw	r2,12(r2)
1001b638:	10000826 	beq	r2,zero,1001b65c <open+0x104>
1001b63c:	e0bff817 	ldw	r2,-32(fp)
1001b640:	10800317 	ldw	r2,12(r2)
1001b644:	e1ffff17 	ldw	r7,-4(fp)
1001b648:	e1bffe17 	ldw	r6,-8(fp)
1001b64c:	e17ffd17 	ldw	r5,-12(fp)
1001b650:	e13ffc17 	ldw	r4,-16(fp)
1001b654:	103ee83a 	callr	r2
1001b658:	00000106 	br	1001b660 <open+0x108>
1001b65c:	0005883a 	mov	r2,zero
1001b660:	e0bffa15 	stw	r2,-24(fp)
1001b664:	00000206 	br	1001b670 <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
1001b668:	00bffb44 	movi	r2,-19
1001b66c:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
1001b670:	e0bffa17 	ldw	r2,-24(fp)
1001b674:	1000090e 	bge	r2,zero,1001b69c <open+0x144>
  {
    alt_release_fd (index);  
1001b678:	e13ff917 	ldw	r4,-28(fp)
1001b67c:	0019d040 	call	10019d04 <alt_release_fd>
    ALT_ERRNO = -status;
1001b680:	001b4300 	call	1001b430 <alt_get_errno>
1001b684:	1007883a 	mov	r3,r2
1001b688:	e0bffa17 	ldw	r2,-24(fp)
1001b68c:	0085c83a 	sub	r2,zero,r2
1001b690:	18800015 	stw	r2,0(r3)
    return -1;
1001b694:	00bfffc4 	movi	r2,-1
1001b698:	00000106 	br	1001b6a0 <open+0x148>
  }
  
  /* return the reference upon success */

  return index;
1001b69c:	e0bff917 	ldw	r2,-28(fp)
}
1001b6a0:	e037883a 	mov	sp,fp
1001b6a4:	dfc00117 	ldw	ra,4(sp)
1001b6a8:	df000017 	ldw	fp,0(sp)
1001b6ac:	dec00204 	addi	sp,sp,8
1001b6b0:	f800283a 	ret

1001b6b4 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
1001b6b4:	defffa04 	addi	sp,sp,-24
1001b6b8:	df000515 	stw	fp,20(sp)
1001b6bc:	df000504 	addi	fp,sp,20
1001b6c0:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1001b6c4:	0005303a 	rdctl	r2,status
1001b6c8:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1001b6cc:	e0fffc17 	ldw	r3,-16(fp)
1001b6d0:	00bfff84 	movi	r2,-2
1001b6d4:	1884703a 	and	r2,r3,r2
1001b6d8:	1001703a 	wrctl	status,r2
  
  return context;
1001b6dc:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
1001b6e0:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
1001b6e4:	e0bfff17 	ldw	r2,-4(fp)
1001b6e8:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
1001b6ec:	e0bffd17 	ldw	r2,-12(fp)
1001b6f0:	10800017 	ldw	r2,0(r2)
1001b6f4:	e0fffd17 	ldw	r3,-12(fp)
1001b6f8:	18c00117 	ldw	r3,4(r3)
1001b6fc:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
1001b700:	e0bffd17 	ldw	r2,-12(fp)
1001b704:	10800117 	ldw	r2,4(r2)
1001b708:	e0fffd17 	ldw	r3,-12(fp)
1001b70c:	18c00017 	ldw	r3,0(r3)
1001b710:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
1001b714:	e0bffd17 	ldw	r2,-12(fp)
1001b718:	e0fffd17 	ldw	r3,-12(fp)
1001b71c:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
1001b720:	e0bffd17 	ldw	r2,-12(fp)
1001b724:	e0fffd17 	ldw	r3,-12(fp)
1001b728:	10c00015 	stw	r3,0(r2)
1001b72c:	e0bffb17 	ldw	r2,-20(fp)
1001b730:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1001b734:	e0bffe17 	ldw	r2,-8(fp)
1001b738:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
1001b73c:	0001883a 	nop
1001b740:	e037883a 	mov	sp,fp
1001b744:	df000017 	ldw	fp,0(sp)
1001b748:	dec00104 	addi	sp,sp,4
1001b74c:	f800283a 	ret

1001b750 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
1001b750:	defffb04 	addi	sp,sp,-20
1001b754:	dfc00415 	stw	ra,16(sp)
1001b758:	df000315 	stw	fp,12(sp)
1001b75c:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
1001b760:	d0a01117 	ldw	r2,-32700(gp)
1001b764:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
1001b768:	d0a6de17 	ldw	r2,-25736(gp)
1001b76c:	10800044 	addi	r2,r2,1
1001b770:	d0a6de15 	stw	r2,-25736(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
1001b774:	00002e06 	br	1001b830 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
1001b778:	e0bffd17 	ldw	r2,-12(fp)
1001b77c:	10800017 	ldw	r2,0(r2)
1001b780:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
1001b784:	e0bffd17 	ldw	r2,-12(fp)
1001b788:	10800403 	ldbu	r2,16(r2)
1001b78c:	10803fcc 	andi	r2,r2,255
1001b790:	10000426 	beq	r2,zero,1001b7a4 <alt_tick+0x54>
1001b794:	d0a6de17 	ldw	r2,-25736(gp)
1001b798:	1000021e 	bne	r2,zero,1001b7a4 <alt_tick+0x54>
    {
      alarm->rollover = 0;
1001b79c:	e0bffd17 	ldw	r2,-12(fp)
1001b7a0:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
1001b7a4:	e0bffd17 	ldw	r2,-12(fp)
1001b7a8:	10800217 	ldw	r2,8(r2)
1001b7ac:	d0e6de17 	ldw	r3,-25736(gp)
1001b7b0:	18801d36 	bltu	r3,r2,1001b828 <alt_tick+0xd8>
1001b7b4:	e0bffd17 	ldw	r2,-12(fp)
1001b7b8:	10800403 	ldbu	r2,16(r2)
1001b7bc:	10803fcc 	andi	r2,r2,255
1001b7c0:	1000191e 	bne	r2,zero,1001b828 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
1001b7c4:	e0bffd17 	ldw	r2,-12(fp)
1001b7c8:	10800317 	ldw	r2,12(r2)
1001b7cc:	e0fffd17 	ldw	r3,-12(fp)
1001b7d0:	18c00517 	ldw	r3,20(r3)
1001b7d4:	1809883a 	mov	r4,r3
1001b7d8:	103ee83a 	callr	r2
1001b7dc:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
1001b7e0:	e0bfff17 	ldw	r2,-4(fp)
1001b7e4:	1000031e 	bne	r2,zero,1001b7f4 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
1001b7e8:	e13ffd17 	ldw	r4,-12(fp)
1001b7ec:	001b6b40 	call	1001b6b4 <alt_alarm_stop>
1001b7f0:	00000d06 	br	1001b828 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
1001b7f4:	e0bffd17 	ldw	r2,-12(fp)
1001b7f8:	10c00217 	ldw	r3,8(r2)
1001b7fc:	e0bfff17 	ldw	r2,-4(fp)
1001b800:	1887883a 	add	r3,r3,r2
1001b804:	e0bffd17 	ldw	r2,-12(fp)
1001b808:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
1001b80c:	e0bffd17 	ldw	r2,-12(fp)
1001b810:	10c00217 	ldw	r3,8(r2)
1001b814:	d0a6de17 	ldw	r2,-25736(gp)
1001b818:	1880032e 	bgeu	r3,r2,1001b828 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
1001b81c:	e0bffd17 	ldw	r2,-12(fp)
1001b820:	00c00044 	movi	r3,1
1001b824:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
1001b828:	e0bffe17 	ldw	r2,-8(fp)
1001b82c:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
1001b830:	e0fffd17 	ldw	r3,-12(fp)
1001b834:	d0a01104 	addi	r2,gp,-32700
1001b838:	18bfcf1e 	bne	r3,r2,1001b778 <__alt_data_end+0xf801b778>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
1001b83c:	0001883a 	nop
}
1001b840:	0001883a 	nop
1001b844:	e037883a 	mov	sp,fp
1001b848:	dfc00117 	ldw	ra,4(sp)
1001b84c:	df000017 	ldw	fp,0(sp)
1001b850:	dec00204 	addi	sp,sp,8
1001b854:	f800283a 	ret

1001b858 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
1001b858:	deffff04 	addi	sp,sp,-4
1001b85c:	df000015 	stw	fp,0(sp)
1001b860:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
1001b864:	000170fa 	wrctl	ienable,zero
}
1001b868:	0001883a 	nop
1001b86c:	e037883a 	mov	sp,fp
1001b870:	df000017 	ldw	fp,0(sp)
1001b874:	dec00104 	addi	sp,sp,4
1001b878:	f800283a 	ret

1001b87c <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
1001b87c:	defffa04 	addi	sp,sp,-24
1001b880:	dfc00515 	stw	ra,20(sp)
1001b884:	df000415 	stw	fp,16(sp)
1001b888:	df000404 	addi	fp,sp,16
1001b88c:	e13ffe15 	stw	r4,-8(fp)
1001b890:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
1001b894:	e0bfff17 	ldw	r2,-4(fp)
1001b898:	10800017 	ldw	r2,0(r2)
1001b89c:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
1001b8a0:	e13ffe17 	ldw	r4,-8(fp)
1001b8a4:	0003f300 	call	10003f30 <strlen>
1001b8a8:	10800044 	addi	r2,r2,1
1001b8ac:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
1001b8b0:	00000d06 	br	1001b8e8 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
1001b8b4:	e0bffc17 	ldw	r2,-16(fp)
1001b8b8:	10800217 	ldw	r2,8(r2)
1001b8bc:	e0fffd17 	ldw	r3,-12(fp)
1001b8c0:	180d883a 	mov	r6,r3
1001b8c4:	e17ffe17 	ldw	r5,-8(fp)
1001b8c8:	1009883a 	mov	r4,r2
1001b8cc:	001bbc00 	call	1001bbc0 <memcmp>
1001b8d0:	1000021e 	bne	r2,zero,1001b8dc <alt_find_dev+0x60>
    {
      /* match found */

      return next;
1001b8d4:	e0bffc17 	ldw	r2,-16(fp)
1001b8d8:	00000706 	br	1001b8f8 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
1001b8dc:	e0bffc17 	ldw	r2,-16(fp)
1001b8e0:	10800017 	ldw	r2,0(r2)
1001b8e4:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
1001b8e8:	e0fffc17 	ldw	r3,-16(fp)
1001b8ec:	e0bfff17 	ldw	r2,-4(fp)
1001b8f0:	18bff01e 	bne	r3,r2,1001b8b4 <__alt_data_end+0xf801b8b4>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
1001b8f4:	0005883a 	mov	r2,zero
}
1001b8f8:	e037883a 	mov	sp,fp
1001b8fc:	dfc00117 	ldw	ra,4(sp)
1001b900:	df000017 	ldw	fp,0(sp)
1001b904:	dec00204 	addi	sp,sp,8
1001b908:	f800283a 	ret

1001b90c <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
1001b90c:	defffb04 	addi	sp,sp,-20
1001b910:	dfc00415 	stw	ra,16(sp)
1001b914:	df000315 	stw	fp,12(sp)
1001b918:	df000304 	addi	fp,sp,12
1001b91c:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
1001b920:	d0a00917 	ldw	r2,-32732(gp)
1001b924:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
1001b928:	00003106 	br	1001b9f0 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
1001b92c:	e0bffd17 	ldw	r2,-12(fp)
1001b930:	10800217 	ldw	r2,8(r2)
1001b934:	1009883a 	mov	r4,r2
1001b938:	0003f300 	call	10003f30 <strlen>
1001b93c:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
1001b940:	e0bffd17 	ldw	r2,-12(fp)
1001b944:	10c00217 	ldw	r3,8(r2)
1001b948:	e0bffe17 	ldw	r2,-8(fp)
1001b94c:	10bfffc4 	addi	r2,r2,-1
1001b950:	1885883a 	add	r2,r3,r2
1001b954:	10800003 	ldbu	r2,0(r2)
1001b958:	10803fcc 	andi	r2,r2,255
1001b95c:	1080201c 	xori	r2,r2,128
1001b960:	10bfe004 	addi	r2,r2,-128
1001b964:	10800bd8 	cmpnei	r2,r2,47
1001b968:	1000031e 	bne	r2,zero,1001b978 <alt_find_file+0x6c>
    {
      len -= 1;
1001b96c:	e0bffe17 	ldw	r2,-8(fp)
1001b970:	10bfffc4 	addi	r2,r2,-1
1001b974:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
1001b978:	e0bffe17 	ldw	r2,-8(fp)
1001b97c:	e0ffff17 	ldw	r3,-4(fp)
1001b980:	1885883a 	add	r2,r3,r2
1001b984:	10800003 	ldbu	r2,0(r2)
1001b988:	10803fcc 	andi	r2,r2,255
1001b98c:	1080201c 	xori	r2,r2,128
1001b990:	10bfe004 	addi	r2,r2,-128
1001b994:	10800be0 	cmpeqi	r2,r2,47
1001b998:	1000081e 	bne	r2,zero,1001b9bc <alt_find_file+0xb0>
1001b99c:	e0bffe17 	ldw	r2,-8(fp)
1001b9a0:	e0ffff17 	ldw	r3,-4(fp)
1001b9a4:	1885883a 	add	r2,r3,r2
1001b9a8:	10800003 	ldbu	r2,0(r2)
1001b9ac:	10803fcc 	andi	r2,r2,255
1001b9b0:	1080201c 	xori	r2,r2,128
1001b9b4:	10bfe004 	addi	r2,r2,-128
1001b9b8:	10000a1e 	bne	r2,zero,1001b9e4 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
1001b9bc:	e0bffd17 	ldw	r2,-12(fp)
1001b9c0:	10800217 	ldw	r2,8(r2)
1001b9c4:	e0fffe17 	ldw	r3,-8(fp)
1001b9c8:	180d883a 	mov	r6,r3
1001b9cc:	e17fff17 	ldw	r5,-4(fp)
1001b9d0:	1009883a 	mov	r4,r2
1001b9d4:	001bbc00 	call	1001bbc0 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
1001b9d8:	1000021e 	bne	r2,zero,1001b9e4 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
1001b9dc:	e0bffd17 	ldw	r2,-12(fp)
1001b9e0:	00000706 	br	1001ba00 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
1001b9e4:	e0bffd17 	ldw	r2,-12(fp)
1001b9e8:	10800017 	ldw	r2,0(r2)
1001b9ec:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
1001b9f0:	e0fffd17 	ldw	r3,-12(fp)
1001b9f4:	d0a00904 	addi	r2,gp,-32732
1001b9f8:	18bfcc1e 	bne	r3,r2,1001b92c <__alt_data_end+0xf801b92c>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
1001b9fc:	0005883a 	mov	r2,zero
}
1001ba00:	e037883a 	mov	sp,fp
1001ba04:	dfc00117 	ldw	ra,4(sp)
1001ba08:	df000017 	ldw	fp,0(sp)
1001ba0c:	dec00204 	addi	sp,sp,8
1001ba10:	f800283a 	ret

1001ba14 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
1001ba14:	defffa04 	addi	sp,sp,-24
1001ba18:	dfc00515 	stw	ra,20(sp)
1001ba1c:	df000415 	stw	fp,16(sp)
1001ba20:	dc000315 	stw	r16,12(sp)
1001ba24:	df000404 	addi	fp,sp,16
1001ba28:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
1001ba2c:	00bffa04 	movi	r2,-24
1001ba30:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
1001ba34:	e03ffc15 	stw	zero,-16(fp)
1001ba38:	00001d06 	br	1001bab0 <alt_get_fd+0x9c>
  {
    if (!alt_fd_list[i].dev)
1001ba3c:	040400b4 	movhi	r16,4098
1001ba40:	8435a804 	addi	r16,r16,-10592
1001ba44:	e0bffc17 	ldw	r2,-16(fp)
1001ba48:	01400304 	movi	r5,12
1001ba4c:	1009883a 	mov	r4,r2
1001ba50:	00034380 	call	10003438 <__mulsi3>
1001ba54:	8085883a 	add	r2,r16,r2
1001ba58:	10800017 	ldw	r2,0(r2)
1001ba5c:	1000111e 	bne	r2,zero,1001baa4 <alt_get_fd+0x90>
    {
      alt_fd_list[i].dev = dev;
1001ba60:	040400b4 	movhi	r16,4098
1001ba64:	8435a804 	addi	r16,r16,-10592
1001ba68:	e0bffc17 	ldw	r2,-16(fp)
1001ba6c:	01400304 	movi	r5,12
1001ba70:	1009883a 	mov	r4,r2
1001ba74:	00034380 	call	10003438 <__mulsi3>
1001ba78:	8085883a 	add	r2,r16,r2
1001ba7c:	e0fffe17 	ldw	r3,-8(fp)
1001ba80:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
1001ba84:	d0e00d17 	ldw	r3,-32716(gp)
1001ba88:	e0bffc17 	ldw	r2,-16(fp)
1001ba8c:	1880020e 	bge	r3,r2,1001ba98 <alt_get_fd+0x84>
      {
        alt_max_fd = i;
1001ba90:	e0bffc17 	ldw	r2,-16(fp)
1001ba94:	d0a00d15 	stw	r2,-32716(gp)
      }
      rc = i;
1001ba98:	e0bffc17 	ldw	r2,-16(fp)
1001ba9c:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
1001baa0:	00000606 	br	1001babc <alt_get_fd+0xa8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
1001baa4:	e0bffc17 	ldw	r2,-16(fp)
1001baa8:	10800044 	addi	r2,r2,1
1001baac:	e0bffc15 	stw	r2,-16(fp)
1001bab0:	e0bffc17 	ldw	r2,-16(fp)
1001bab4:	10800810 	cmplti	r2,r2,32
1001bab8:	103fe01e 	bne	r2,zero,1001ba3c <__alt_data_end+0xf801ba3c>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
1001babc:	e0bffd17 	ldw	r2,-12(fp)
}
1001bac0:	e6ffff04 	addi	sp,fp,-4
1001bac4:	dfc00217 	ldw	ra,8(sp)
1001bac8:	df000117 	ldw	fp,4(sp)
1001bacc:	dc000017 	ldw	r16,0(sp)
1001bad0:	dec00304 	addi	sp,sp,12
1001bad4:	f800283a 	ret

1001bad8 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
1001bad8:	defffe04 	addi	sp,sp,-8
1001badc:	df000115 	stw	fp,4(sp)
1001bae0:	df000104 	addi	fp,sp,4
1001bae4:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
1001bae8:	e0bfff17 	ldw	r2,-4(fp)
1001baec:	10bffe84 	addi	r2,r2,-6
1001baf0:	10c00428 	cmpgeui	r3,r2,16
1001baf4:	18001a1e 	bne	r3,zero,1001bb60 <alt_exception_cause_generated_bad_addr+0x88>
1001baf8:	100690ba 	slli	r3,r2,2
1001bafc:	008400b4 	movhi	r2,4098
1001bb00:	10aec404 	addi	r2,r2,-17648
1001bb04:	1885883a 	add	r2,r3,r2
1001bb08:	10800017 	ldw	r2,0(r2)
1001bb0c:	1000683a 	jmp	r2
1001bb10:	1001bb50 	cmplti	zero,r2,1773
1001bb14:	1001bb50 	cmplti	zero,r2,1773
1001bb18:	1001bb60 	cmpeqi	zero,r2,1773
1001bb1c:	1001bb60 	cmpeqi	zero,r2,1773
1001bb20:	1001bb60 	cmpeqi	zero,r2,1773
1001bb24:	1001bb50 	cmplti	zero,r2,1773
1001bb28:	1001bb58 	cmpnei	zero,r2,1773
1001bb2c:	1001bb60 	cmpeqi	zero,r2,1773
1001bb30:	1001bb50 	cmplti	zero,r2,1773
1001bb34:	1001bb50 	cmplti	zero,r2,1773
1001bb38:	1001bb60 	cmpeqi	zero,r2,1773
1001bb3c:	1001bb50 	cmplti	zero,r2,1773
1001bb40:	1001bb58 	cmpnei	zero,r2,1773
1001bb44:	1001bb60 	cmpeqi	zero,r2,1773
1001bb48:	1001bb60 	cmpeqi	zero,r2,1773
1001bb4c:	1001bb50 	cmplti	zero,r2,1773
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
1001bb50:	00800044 	movi	r2,1
1001bb54:	00000306 	br	1001bb64 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
1001bb58:	0005883a 	mov	r2,zero
1001bb5c:	00000106 	br	1001bb64 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
1001bb60:	0005883a 	mov	r2,zero
  }
}
1001bb64:	e037883a 	mov	sp,fp
1001bb68:	df000017 	ldw	fp,0(sp)
1001bb6c:	dec00104 	addi	sp,sp,4
1001bb70:	f800283a 	ret

1001bb74 <atexit>:
1001bb74:	200b883a 	mov	r5,r4
1001bb78:	000f883a 	mov	r7,zero
1001bb7c:	000d883a 	mov	r6,zero
1001bb80:	0009883a 	mov	r4,zero
1001bb84:	001bc3c1 	jmpi	1001bc3c <__register_exitproc>

1001bb88 <exit>:
1001bb88:	defffe04 	addi	sp,sp,-8
1001bb8c:	000b883a 	mov	r5,zero
1001bb90:	dc000015 	stw	r16,0(sp)
1001bb94:	dfc00115 	stw	ra,4(sp)
1001bb98:	2021883a 	mov	r16,r4
1001bb9c:	001bd540 	call	1001bd54 <__call_exitprocs>
1001bba0:	008400b4 	movhi	r2,4098
1001bba4:	10ba2404 	addi	r2,r2,-6000
1001bba8:	11000017 	ldw	r4,0(r2)
1001bbac:	20800f17 	ldw	r2,60(r4)
1001bbb0:	10000126 	beq	r2,zero,1001bbb8 <exit+0x30>
1001bbb4:	103ee83a 	callr	r2
1001bbb8:	8009883a 	mov	r4,r16
1001bbbc:	001bed40 	call	1001bed4 <_exit>

1001bbc0 <memcmp>:
1001bbc0:	01c000c4 	movi	r7,3
1001bbc4:	3980192e 	bgeu	r7,r6,1001bc2c <memcmp+0x6c>
1001bbc8:	2144b03a 	or	r2,r4,r5
1001bbcc:	11c4703a 	and	r2,r2,r7
1001bbd0:	10000f26 	beq	r2,zero,1001bc10 <memcmp+0x50>
1001bbd4:	20800003 	ldbu	r2,0(r4)
1001bbd8:	28c00003 	ldbu	r3,0(r5)
1001bbdc:	10c0151e 	bne	r2,r3,1001bc34 <memcmp+0x74>
1001bbe0:	31bfff84 	addi	r6,r6,-2
1001bbe4:	01ffffc4 	movi	r7,-1
1001bbe8:	00000406 	br	1001bbfc <memcmp+0x3c>
1001bbec:	20800003 	ldbu	r2,0(r4)
1001bbf0:	28c00003 	ldbu	r3,0(r5)
1001bbf4:	31bfffc4 	addi	r6,r6,-1
1001bbf8:	10c00e1e 	bne	r2,r3,1001bc34 <memcmp+0x74>
1001bbfc:	21000044 	addi	r4,r4,1
1001bc00:	29400044 	addi	r5,r5,1
1001bc04:	31fff91e 	bne	r6,r7,1001bbec <__alt_data_end+0xf801bbec>
1001bc08:	0005883a 	mov	r2,zero
1001bc0c:	f800283a 	ret
1001bc10:	20c00017 	ldw	r3,0(r4)
1001bc14:	28800017 	ldw	r2,0(r5)
1001bc18:	18bfee1e 	bne	r3,r2,1001bbd4 <__alt_data_end+0xf801bbd4>
1001bc1c:	31bfff04 	addi	r6,r6,-4
1001bc20:	21000104 	addi	r4,r4,4
1001bc24:	29400104 	addi	r5,r5,4
1001bc28:	39bff936 	bltu	r7,r6,1001bc10 <__alt_data_end+0xf801bc10>
1001bc2c:	303fe91e 	bne	r6,zero,1001bbd4 <__alt_data_end+0xf801bbd4>
1001bc30:	003ff506 	br	1001bc08 <__alt_data_end+0xf801bc08>
1001bc34:	10c5c83a 	sub	r2,r2,r3
1001bc38:	f800283a 	ret

1001bc3c <__register_exitproc>:
1001bc3c:	defffa04 	addi	sp,sp,-24
1001bc40:	dc000315 	stw	r16,12(sp)
1001bc44:	040400b4 	movhi	r16,4098
1001bc48:	843a2404 	addi	r16,r16,-6000
1001bc4c:	80c00017 	ldw	r3,0(r16)
1001bc50:	dc400415 	stw	r17,16(sp)
1001bc54:	dfc00515 	stw	ra,20(sp)
1001bc58:	18805217 	ldw	r2,328(r3)
1001bc5c:	2023883a 	mov	r17,r4
1001bc60:	10003726 	beq	r2,zero,1001bd40 <__register_exitproc+0x104>
1001bc64:	10c00117 	ldw	r3,4(r2)
1001bc68:	010007c4 	movi	r4,31
1001bc6c:	20c00e16 	blt	r4,r3,1001bca8 <__register_exitproc+0x6c>
1001bc70:	1a000044 	addi	r8,r3,1
1001bc74:	8800221e 	bne	r17,zero,1001bd00 <__register_exitproc+0xc4>
1001bc78:	18c00084 	addi	r3,r3,2
1001bc7c:	18c7883a 	add	r3,r3,r3
1001bc80:	18c7883a 	add	r3,r3,r3
1001bc84:	12000115 	stw	r8,4(r2)
1001bc88:	10c7883a 	add	r3,r2,r3
1001bc8c:	19400015 	stw	r5,0(r3)
1001bc90:	0005883a 	mov	r2,zero
1001bc94:	dfc00517 	ldw	ra,20(sp)
1001bc98:	dc400417 	ldw	r17,16(sp)
1001bc9c:	dc000317 	ldw	r16,12(sp)
1001bca0:	dec00604 	addi	sp,sp,24
1001bca4:	f800283a 	ret
1001bca8:	00840034 	movhi	r2,4096
1001bcac:	108d1804 	addi	r2,r2,13408
1001bcb0:	10002626 	beq	r2,zero,1001bd4c <__register_exitproc+0x110>
1001bcb4:	01006404 	movi	r4,400
1001bcb8:	d9400015 	stw	r5,0(sp)
1001bcbc:	d9800115 	stw	r6,4(sp)
1001bcc0:	d9c00215 	stw	r7,8(sp)
1001bcc4:	00034600 	call	10003460 <malloc>
1001bcc8:	d9400017 	ldw	r5,0(sp)
1001bccc:	d9800117 	ldw	r6,4(sp)
1001bcd0:	d9c00217 	ldw	r7,8(sp)
1001bcd4:	10001d26 	beq	r2,zero,1001bd4c <__register_exitproc+0x110>
1001bcd8:	81000017 	ldw	r4,0(r16)
1001bcdc:	10000115 	stw	zero,4(r2)
1001bce0:	02000044 	movi	r8,1
1001bce4:	22405217 	ldw	r9,328(r4)
1001bce8:	0007883a 	mov	r3,zero
1001bcec:	12400015 	stw	r9,0(r2)
1001bcf0:	20805215 	stw	r2,328(r4)
1001bcf4:	10006215 	stw	zero,392(r2)
1001bcf8:	10006315 	stw	zero,396(r2)
1001bcfc:	883fde26 	beq	r17,zero,1001bc78 <__alt_data_end+0xf801bc78>
1001bd00:	18c9883a 	add	r4,r3,r3
1001bd04:	2109883a 	add	r4,r4,r4
1001bd08:	1109883a 	add	r4,r2,r4
1001bd0c:	21802215 	stw	r6,136(r4)
1001bd10:	01800044 	movi	r6,1
1001bd14:	12406217 	ldw	r9,392(r2)
1001bd18:	30cc983a 	sll	r6,r6,r3
1001bd1c:	4992b03a 	or	r9,r9,r6
1001bd20:	12406215 	stw	r9,392(r2)
1001bd24:	21c04215 	stw	r7,264(r4)
1001bd28:	01000084 	movi	r4,2
1001bd2c:	893fd21e 	bne	r17,r4,1001bc78 <__alt_data_end+0xf801bc78>
1001bd30:	11006317 	ldw	r4,396(r2)
1001bd34:	218cb03a 	or	r6,r4,r6
1001bd38:	11806315 	stw	r6,396(r2)
1001bd3c:	003fce06 	br	1001bc78 <__alt_data_end+0xf801bc78>
1001bd40:	18805304 	addi	r2,r3,332
1001bd44:	18805215 	stw	r2,328(r3)
1001bd48:	003fc606 	br	1001bc64 <__alt_data_end+0xf801bc64>
1001bd4c:	00bfffc4 	movi	r2,-1
1001bd50:	003fd006 	br	1001bc94 <__alt_data_end+0xf801bc94>

1001bd54 <__call_exitprocs>:
1001bd54:	defff504 	addi	sp,sp,-44
1001bd58:	df000915 	stw	fp,36(sp)
1001bd5c:	dd400615 	stw	r21,24(sp)
1001bd60:	dc800315 	stw	r18,12(sp)
1001bd64:	dfc00a15 	stw	ra,40(sp)
1001bd68:	ddc00815 	stw	r23,32(sp)
1001bd6c:	dd800715 	stw	r22,28(sp)
1001bd70:	dd000515 	stw	r20,20(sp)
1001bd74:	dcc00415 	stw	r19,16(sp)
1001bd78:	dc400215 	stw	r17,8(sp)
1001bd7c:	dc000115 	stw	r16,4(sp)
1001bd80:	d9000015 	stw	r4,0(sp)
1001bd84:	2839883a 	mov	fp,r5
1001bd88:	04800044 	movi	r18,1
1001bd8c:	057fffc4 	movi	r21,-1
1001bd90:	008400b4 	movhi	r2,4098
1001bd94:	10ba2404 	addi	r2,r2,-6000
1001bd98:	12000017 	ldw	r8,0(r2)
1001bd9c:	45005217 	ldw	r20,328(r8)
1001bda0:	44c05204 	addi	r19,r8,328
1001bda4:	a0001c26 	beq	r20,zero,1001be18 <__call_exitprocs+0xc4>
1001bda8:	a0800117 	ldw	r2,4(r20)
1001bdac:	15ffffc4 	addi	r23,r2,-1
1001bdb0:	b8000d16 	blt	r23,zero,1001bde8 <__call_exitprocs+0x94>
1001bdb4:	14000044 	addi	r16,r2,1
1001bdb8:	8421883a 	add	r16,r16,r16
1001bdbc:	8421883a 	add	r16,r16,r16
1001bdc0:	84402004 	addi	r17,r16,128
1001bdc4:	a463883a 	add	r17,r20,r17
1001bdc8:	a421883a 	add	r16,r20,r16
1001bdcc:	e0001e26 	beq	fp,zero,1001be48 <__call_exitprocs+0xf4>
1001bdd0:	80804017 	ldw	r2,256(r16)
1001bdd4:	e0801c26 	beq	fp,r2,1001be48 <__call_exitprocs+0xf4>
1001bdd8:	bdffffc4 	addi	r23,r23,-1
1001bddc:	843fff04 	addi	r16,r16,-4
1001bde0:	8c7fff04 	addi	r17,r17,-4
1001bde4:	bd7ff91e 	bne	r23,r21,1001bdcc <__alt_data_end+0xf801bdcc>
1001bde8:	00840034 	movhi	r2,4096
1001bdec:	108d1d04 	addi	r2,r2,13428
1001bdf0:	10000926 	beq	r2,zero,1001be18 <__call_exitprocs+0xc4>
1001bdf4:	a0800117 	ldw	r2,4(r20)
1001bdf8:	1000301e 	bne	r2,zero,1001bebc <__call_exitprocs+0x168>
1001bdfc:	a0800017 	ldw	r2,0(r20)
1001be00:	10003226 	beq	r2,zero,1001becc <__call_exitprocs+0x178>
1001be04:	a009883a 	mov	r4,r20
1001be08:	98800015 	stw	r2,0(r19)
1001be0c:	00034740 	call	10003474 <free>
1001be10:	9d000017 	ldw	r20,0(r19)
1001be14:	a03fe41e 	bne	r20,zero,1001bda8 <__alt_data_end+0xf801bda8>
1001be18:	dfc00a17 	ldw	ra,40(sp)
1001be1c:	df000917 	ldw	fp,36(sp)
1001be20:	ddc00817 	ldw	r23,32(sp)
1001be24:	dd800717 	ldw	r22,28(sp)
1001be28:	dd400617 	ldw	r21,24(sp)
1001be2c:	dd000517 	ldw	r20,20(sp)
1001be30:	dcc00417 	ldw	r19,16(sp)
1001be34:	dc800317 	ldw	r18,12(sp)
1001be38:	dc400217 	ldw	r17,8(sp)
1001be3c:	dc000117 	ldw	r16,4(sp)
1001be40:	dec00b04 	addi	sp,sp,44
1001be44:	f800283a 	ret
1001be48:	a0800117 	ldw	r2,4(r20)
1001be4c:	80c00017 	ldw	r3,0(r16)
1001be50:	10bfffc4 	addi	r2,r2,-1
1001be54:	15c01426 	beq	r2,r23,1001bea8 <__call_exitprocs+0x154>
1001be58:	80000015 	stw	zero,0(r16)
1001be5c:	183fde26 	beq	r3,zero,1001bdd8 <__alt_data_end+0xf801bdd8>
1001be60:	95c8983a 	sll	r4,r18,r23
1001be64:	a0806217 	ldw	r2,392(r20)
1001be68:	a5800117 	ldw	r22,4(r20)
1001be6c:	2084703a 	and	r2,r4,r2
1001be70:	10000b26 	beq	r2,zero,1001bea0 <__call_exitprocs+0x14c>
1001be74:	a0806317 	ldw	r2,396(r20)
1001be78:	2088703a 	and	r4,r4,r2
1001be7c:	20000c1e 	bne	r4,zero,1001beb0 <__call_exitprocs+0x15c>
1001be80:	89400017 	ldw	r5,0(r17)
1001be84:	d9000017 	ldw	r4,0(sp)
1001be88:	183ee83a 	callr	r3
1001be8c:	a0800117 	ldw	r2,4(r20)
1001be90:	15bfbf1e 	bne	r2,r22,1001bd90 <__alt_data_end+0xf801bd90>
1001be94:	98800017 	ldw	r2,0(r19)
1001be98:	153fcf26 	beq	r2,r20,1001bdd8 <__alt_data_end+0xf801bdd8>
1001be9c:	003fbc06 	br	1001bd90 <__alt_data_end+0xf801bd90>
1001bea0:	183ee83a 	callr	r3
1001bea4:	003ff906 	br	1001be8c <__alt_data_end+0xf801be8c>
1001bea8:	a5c00115 	stw	r23,4(r20)
1001beac:	003feb06 	br	1001be5c <__alt_data_end+0xf801be5c>
1001beb0:	89000017 	ldw	r4,0(r17)
1001beb4:	183ee83a 	callr	r3
1001beb8:	003ff406 	br	1001be8c <__alt_data_end+0xf801be8c>
1001bebc:	a0800017 	ldw	r2,0(r20)
1001bec0:	a027883a 	mov	r19,r20
1001bec4:	1029883a 	mov	r20,r2
1001bec8:	003fb606 	br	1001bda4 <__alt_data_end+0xf801bda4>
1001becc:	0005883a 	mov	r2,zero
1001bed0:	003ffb06 	br	1001bec0 <__alt_data_end+0xf801bec0>

1001bed4 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
1001bed4:	defffd04 	addi	sp,sp,-12
1001bed8:	df000215 	stw	fp,8(sp)
1001bedc:	df000204 	addi	fp,sp,8
1001bee0:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
1001bee4:	0001883a 	nop
1001bee8:	e0bfff17 	ldw	r2,-4(fp)
1001beec:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
1001bef0:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
1001bef4:	10000226 	beq	r2,zero,1001bf00 <_exit+0x2c>
    ALT_SIM_FAIL();
1001bef8:	002af070 	cmpltui	zero,zero,43969
1001befc:	00000106 	br	1001bf04 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
1001bf00:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
1001bf04:	003fff06 	br	1001bf04 <__alt_data_end+0xf801bf04>
